cset: moving following pidspec: 30162
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.286787578 seconds)
loading group "string"... done (took 0.581910801 seconds)
loading group "linalg"... done (took 7.194391538 seconds)
loading group "parallel"... done (took 0.164179274 seconds)
loading group "find"... done (took 1.115356019 seconds)
loading group "tuple"... done (took 1.975354736 seconds)
loading group "dates"... done (took 1.262522103 seconds)
loading group "micro"... done (took 0.235559026 seconds)
loading group "io"... done (took 0.960644449 seconds)
loading group "scalar"... done (took 38.303348038 seconds)
loading group "sparse"... done (took 12.327877034 seconds)
loading group "broadcast"... done (took 0.966179604 seconds)
loading group "union"... done (took 13.033944246 seconds)
loading group "simd"... done (took 4.400954812 seconds)
loading group "random"... done (took 8.898495536 seconds)
loading group "problem"... done (took 1.964753131 seconds)
loading group "array"... done (took 21.095989021 seconds)
loading group "misc"... done (took 1.915690571 seconds)
loading group "sort"... done (took 3.204115601 seconds)
loading group "collection"... done (took 17.892830114 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537706198 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139662327 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116193683 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137120698 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183477744 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130144304 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14348195 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084109857 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.047980042 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159311341 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138110016 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.474874224 seconds)
done (took 5.05933043 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201722996 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087378849 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096561366 seconds)
  done (took 0.896169708 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065533955 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127261646 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080645191 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068383356 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066223333 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081094388 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068268309 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065895301 seconds)
  done (took 1.275269274 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075447935 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069229358 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085442869 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068564946 seconds)
  done (took 1.017255952 seconds)
done (took 4.183683421 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.891196413 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.234846681 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187258631 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453504699 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150538058 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191559513 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670625661 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327514363 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208987392 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100959484 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103744115 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.379349726 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107053655 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664325171 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075511494 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10503524 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.156722385 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423097397 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08047214 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081706753 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103358369 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140648949 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100477602 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075837161 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168806595 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068042133 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147949855 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095412936 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068026929 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.24281465 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189402102 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684751532 seconds)
  done (took 10.437140035 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101629291 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117363226 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070089896 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141080858 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10262337 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087989835 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071359188 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083823966 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092285334 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.15888488 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114173176 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107296683 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083597129 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070543805 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101637363 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212133909 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108199006 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.0866812 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08845972 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07622593 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121842998 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081224702 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09264031 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078125251 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151365187 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195043991 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113409858 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110850509 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067791976 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080397364 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130760352 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140743198 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065560817 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081667829 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137984675 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109872208 seconds)
  done (took 4.566264421 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.032907738 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159176652 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090683942 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150714978 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084206771 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108909121 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082027578 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098695161 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244245577 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109901733 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.134641058 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084256501 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.480145836 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12682876 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.086812161 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066550224 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084986813 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066719678 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.528840345 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110090843 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135284966 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082671782 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089847721 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069165401 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365178854 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081790402 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066435959 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067395454 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.074341227 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064766963 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143808189 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067125252 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.202061117 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087330067 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087428433 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117467922 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.176124178 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093068957 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.170623674 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0656355 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064669531 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167462271 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089675601 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065306043 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104334577 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103128653 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119015079 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083075377 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068901034 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181125271 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065773451 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097750403 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063117002 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.869791107 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165923833 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090214838 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065259442 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284205107 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083296567 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087090136 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064028864 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.246958387 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.154062938 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068343024 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082314741 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065696348 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066775868 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381906757 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066825915 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.680536417 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070120293 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077309181 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083914044 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066189425 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087573596 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071396907 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099681147 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065937398 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066688958 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08172378 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064732574 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082256436 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084278147 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201937153 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08244135 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066293258 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063643497 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102557249 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109887952 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071727353 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066303711 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115238596 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068498589 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082713816 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101163653 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083193575 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099656113 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069142471 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127864639 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067653545 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.130371692 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067151443 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113139773 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075928312 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112957833 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093005523 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067374221 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15143356 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064197787 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080651782 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066523038 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063888125 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08334602 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067734392 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096463239 seconds)
  done (took 20.812973862 seconds)
done (took 37.565004802 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290746607 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089045751 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.089707258 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073334081 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090199239 seconds)
  done (took 1.429392718 seconds)
done (took 2.196563296 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119363951 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114845135 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062808836 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110940464 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063218285 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115436416 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114187534 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08082141 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115620372 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067869283 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112829408 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065405132 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063902963 seconds)
  done (took 2.003757571 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084351636 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084150255 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084811612 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081133657 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078132235 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081192299 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079515416 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102997842 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078856884 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086524332 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063734726 seconds)
  done (took 1.668695363 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084009351 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083758811 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085657505 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080767872 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07912324 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080959208 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07905951 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100942861 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079608451 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087521098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063454909 seconds)
  done (took 1.669831471 seconds)
done (took 6.098080079 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079603317 seconds)
  done (took 0.839474352 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.69726085 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.701207701 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083366101 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132622634 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.219949066 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153070229 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.445422882 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111165697 seconds)
  done (took 10.476270868 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088603727 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098018105 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068039212 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085046813 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069071797 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084457681 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07087635 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070370155 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086316257 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069550371 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086057076 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070562979 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083788407 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070076869 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070494199 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08251162 seconds)
  done (took 2.08281201 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092460064 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090934541 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089895366 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074956337 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088920081 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07256227 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090210766 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074752523 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087344659 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07158106 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092217654 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073828431 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088740545 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064735183 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091241243 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077105241 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088481089 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076066124 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092515507 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077477608 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093044615 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066535391 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088858163 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075813788 seconds)
  done (took 2.851535827 seconds)
done (took 17.013591497 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132885435 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077370533 seconds)
  done (took 0.976594361 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083151328 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099980892 seconds)
  done (took 0.956459594 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084592906 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081040052 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089811288 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092908113 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065771117 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080398811 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101776044 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065948921 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080656352 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066336148 seconds)
  done (took 1.58197933 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070227349 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093146081 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07007148 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096999781 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073006582 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079731162 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071847672 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083329796 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077633616 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078606369 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070328492 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099502735 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071271285 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10108193 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074372924 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085862319 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087656922 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068479917 seconds)
  done (took 2.226279367 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067830944 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067697234 seconds)
  done (took 0.911698074 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068568195 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065105225 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083486812 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068024079 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080671926 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064105728 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079990819 seconds)
  done (took 1.286314698 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400694948 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107883019 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.240706041 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087276355 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102731847 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259871274 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08260618 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070339209 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087708847 seconds)
  done (took 2.25339386 seconds)
done (took 10.963461036 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080911035 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084224558 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109078534 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41586028 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105496376 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065633407 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131005704 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.22074568 seconds)
done (took 1.987970056 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125915131 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.603308847 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.395333372 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210281475 seconds)
  done (took 1.990233052 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.372295703 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091115389 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073363027 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066204151 seconds)
  done (took 1.387055937 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067279462 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068898356 seconds)
  done (took 0.921179637 seconds)
done (took 5.204056138 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068056175 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065785752 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.099602699 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062845642 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082110083 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063424953 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063360932 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080737693 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065061372 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065416749 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082333273 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068433854 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081791988 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.066231979 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065904718 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078133405 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063899644 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065021136 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079218609 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063063044 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063541975 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081207558 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063439569 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063449913 seconds)
  done (took 2.519987752 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086355104 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083076212 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071548761 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087648267 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07031042 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087849612 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071039322 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066178336 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086629548 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071010172 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085273267 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07007813 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084102612 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069662026 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084361838 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069844285 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087759789 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066421514 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068195293 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085878165 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070654762 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081455813 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069613715 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086932192 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070083587 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085450801 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067392461 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082954913 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071260881 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085873354 seconds)
  done (took 3.112798314 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072087074 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063320234 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080278179 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070000473 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062944129 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080835281 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06282952 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080313965 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06414022 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062972331 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080993866 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062637449 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063283457 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080500406 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064477118 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082817907 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079236224 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063236681 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079576835 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063821246 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066333119 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079302685 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064195814 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079685531 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062848279 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063255404 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079407642 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063577827 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064263153 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079888513 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066335569 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066325785 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079998666 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07043348 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084161478 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06403212 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067307073 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079687482 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064208989 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063161055 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078844019 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063653701 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063220281 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085857102 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063124607 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081853613 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063813852 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06424655 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080403987 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065911816 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079960885 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063259644 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065255131 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081011234 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066993217 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062920697 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080287208 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063957766 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080755151 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063705343 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063601985 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080121584 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065859922 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064242965 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094687564 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069912986 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079450235 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065431048 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064258317 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082113568 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065487638 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077124475 seconds)
  done (took 5.909169381 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118653343 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092107844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083532533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066234345 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079216519 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06552773 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067382664 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08131055 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065304093 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087382103 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063330395 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065048519 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081499396 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075729613 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080662075 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065422006 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086239794 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061807064 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063922228 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084501876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064860477 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084575247 seconds)
  done (took 2.478085715 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.185868402 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088870919 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110058748 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091075091 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084355727 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074974765 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071220272 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087963313 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070823115 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085325415 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068121007 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086806088 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067719576 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084939953 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067623613 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084639592 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070157525 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084281901 seconds)
  done (took 2.357200786 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078942651 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065392891 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104804847 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065656876 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082151256 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068756572 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087945006 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074142571 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084132387 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066343959 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090080464 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068209134 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08486919 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06565229 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068030877 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083222594 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06869092 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082684308 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073768926 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087785675 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070295178 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090457416 seconds)
  done (took 2.504064689 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08212271 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067805213 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10070139 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085485267 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061757063 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064598363 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088884645 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066177738 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08810763 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068119082 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065805853 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080380144 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070344642 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081587084 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070862158 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081917545 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067751325 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065317376 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083858797 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062051473 seconds)
  done (took 2.298644053 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088407392 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084132475 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067255586 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093263151 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067358618 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08380563 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075484561 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084268375 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066819549 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107505522 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06716966 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086150049 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075578901 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089919372 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067044166 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092164238 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074750771 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093312392 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0675876 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083481766 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.218451763 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067245314 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092316325 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068019654 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084168962 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067755935 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066810181 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088216667 seconds)
  done (took 3.168194664 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068030912 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065916048 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081110763 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063551002 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063185156 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080085478 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06343753 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063108969 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082128976 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06322301 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065718969 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081000257 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065985975 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065706923 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0655222 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081539027 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063506199 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063550753 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080353811 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066143001 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065473537 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081965118 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063939963 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079463895 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066663527 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063602984 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080133042 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066235885 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06367862 seconds)
  done (took 2.907736813 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077815812 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090810235 seconds)
  done (took 0.970983111 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065466742 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080473946 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081744143 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069828344 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087873461 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066720816 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091464863 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069800897 seconds)
  done (took 1.413640218 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083489936 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076810302 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084373972 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077637658 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093510032 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08236741 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.152858337 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084053707 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072709307 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081933767 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080150069 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065169464 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089235204 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06655322 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088138595 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072571027 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064062041 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087936491 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068317806 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081673402 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067644247 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091944406 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068845087 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062544739 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084792189 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075313366 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.0937683 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067181246 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086081913 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073234101 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071393295 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077206158 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066520247 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083693388 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064145144 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09223361 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081161974 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085718887 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075407515 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067159745 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091645058 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061798314 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087816427 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072762688 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093323004 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066891383 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066553433 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078232301 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06449884 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08485535 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062218545 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066290287 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07769996 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073137117 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086853478 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076513744 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067535506 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084298423 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068913548 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086284 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073243561 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084585297 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068862164 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066593133 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092562287 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070599784 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091825235 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061216645 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060593675 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081305224 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074979002 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104780983 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071985038 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083941035 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066950181 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081968932 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069675937 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067643416 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088324691 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072586002 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08350465 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072311814 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090137467 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06638358 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068339197 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090411187 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064141282 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085455468 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064547489 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0995034 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065103871 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080930796 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064506918 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07643267 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08653772 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0664764 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08137075 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072968805 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060999923 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08378296 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067048236 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08313881 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076523839 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088078509 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072458178 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092068831 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07403073 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065780941 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086111147 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063042124 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084594781 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065173814 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073065721 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077651928 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068983668 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084001047 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066798671 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091112273 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064535865 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066398648 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089603142 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071483981 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081575019 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062926334 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06909901 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08282166 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069121023 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090767756 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065013634 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060994582 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077860595 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069897407 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082870289 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06989844 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088449852 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068720799 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061181899 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080985662 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071086002 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091660996 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066833524 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066217274 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089063765 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067752655 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082852346 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072476215 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085191897 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065010599 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072023342 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083422172 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062058974 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08659359 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068952926 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064743485 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086764332 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069505746 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085483895 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067481033 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081412625 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071277148 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066958917 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082238736 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066586638 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081884662 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076682087 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067935376 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078401882 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063981809 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089159927 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064485649 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066185615 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.0821744 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06882318 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083373758 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064664053 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065271464 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085478795 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077114026 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087933304 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067440313 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088475915 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076673785 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083088787 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068670323 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066160442 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083674779 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067483466 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09153936 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071745898 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088050964 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068942813 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062569435 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088875227 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072709555 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082408732 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064129454 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064828821 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086566616 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071721602 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087012402 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066978031 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080557077 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067074133 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069347351 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085914432 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066289275 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08219237 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071377324 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082679894 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072935208 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066319462 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092892921 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06953634 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078277494 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069230606 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081426301 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07190504 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061928066 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081883319 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066493022 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083572121 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065802436 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06942505 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077865642 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072851715 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090296427 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066729447 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065787502 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083387006 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073384663 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08424817 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069604916 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069093666 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088782183 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077482295 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082394428 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069731132 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093528583 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066289817 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060488901 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088277253 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065152458 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082122642 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065598028 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064457927 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08588638 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074185522 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089969315 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061295186 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085502551 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065263575 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065359346 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07966923 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070974972 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086531697 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067201373 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072722755 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084265023 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067144224 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086622148 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066680757 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067167508 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085210489 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069145604 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084400645 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068689121 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083003526 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069697831 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065476098 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081985294 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068869262 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065522302 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084014064 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071558278 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083661166 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066567748 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086443218 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067620439 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06810986 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083808756 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066067515 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086903634 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067744662 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066709562 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085930006 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061821355 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091294557 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066731562 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07311145 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083295726 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063387335 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087646912 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068706329 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070179888 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083807908 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066905863 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085006234 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066153173 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086261501 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07313281 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064350941 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094741902 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073951871 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084096621 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069144212 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083984259 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068079267 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065229207 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084261491 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067552523 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06652561 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083765995 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071052769 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086071959 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067247984 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085225296 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066895453 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06686399 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08378425 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061440645 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065212616 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083607917 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066697343 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09389534 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067804076 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083816237 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06532495 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067213011 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082603927 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064066921 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091897285 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075751214 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084942258 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074034583 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082905186 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068001421 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076577177 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078398919 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065203571 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082045361 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064539515 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073443095 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084020087 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0760252 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084006279 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066011139 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063233911 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084465631 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065645389 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060743299 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081938477 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070199867 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083713069 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065336018 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065911448 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087736089 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067962305 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093041717 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065736033 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085269336 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066681369 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063471788 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082712547 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065658844 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086640344 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066993264 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063997408 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081706491 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066335999 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066479065 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085631203 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066366972 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085086882 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074072066 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083681423 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06894334 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069203198 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08217482 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06956075 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08405213 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065909422 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06533309 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086559508 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069648514 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084847372 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075042516 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083545716 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067922776 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066804073 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082472942 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066035088 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065286154 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084097068 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065791213 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085448046 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074261559 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082261564 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069504296 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066055984 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085411102 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073019908 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084973507 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06923283 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091395393 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066894748 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067664146 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091795738 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070659761 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087900681 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068287129 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067244309 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08983328 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065114952 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090199646 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067189155 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084813793 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068462166 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06393454 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084273964 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066392243 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064807503 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090480539 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066773644 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083704857 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065823118 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08222591 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067963228 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069282775 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09263756 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06969653 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087523706 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062122224 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063602721 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085355733 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064664141 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085836088 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069899476 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071470187 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087279206 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067632181 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083601005 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075534999 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08953955 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070127473 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064274664 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088219166 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067027813 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086032823 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067891441 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066665043 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085903275 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070143352 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086150546 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065678491 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07267147 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087442301 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068233476 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085697976 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06730211 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066820751 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079256227 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067854121 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086195782 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071693402 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068217767 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08463041 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076677702 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082935684 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066694367 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087412015 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065943933 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070417399 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081090376 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068153456 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085750148 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067833105 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061637802 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084908903 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064651319 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086768902 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066519563 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062496625 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095447475 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07591706 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08825495 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065811254 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065783177 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080632717 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062722444 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085089783 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067950358 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067492317 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095122825 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065585021 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085325877 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062423928 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066469263 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088289997 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069984933 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082485703 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062650441 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064716111 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088242479 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072085683 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083441435 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066204366 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06897392 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08702381 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064113353 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087915518 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063626242 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087897009 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079122392 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066449767 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085068228 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072086999 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092311167 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06774728 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08026694 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067548805 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068702069 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084804249 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067873601 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08616645 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080847294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087959019 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065418692 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065436642 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087223207 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066227545 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092745743 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067908508 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066874508 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088802266 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067795775 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093475629 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069358924 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091975568 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070011484 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08843889 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065568939 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066600088 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083224385 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065630284 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085806044 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067560359 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070156428 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092228366 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065522924 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096001749 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075362133 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087310682 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063576415 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065071997 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084889472 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062050423 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086204131 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065179316 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064650826 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082893249 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065364152 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085400547 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072613566 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066668307 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085747428 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066575779 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078780784 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068418944 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069190929 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086178205 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063636194 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066314554 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08632602 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070305804 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088492852 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064383671 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086130659 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068320323 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066723273 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080479258 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073006585 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082877451 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070386761 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065324565 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084986515 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067947654 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088453455 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072565627 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067150476 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087823033 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074639766 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087037057 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064102628 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062863908 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090553708 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063915903 seconds)
  done (took 45.887194818 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108832395 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084848795 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063758947 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080924968 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0760125 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082191245 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063721263 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062624029 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082270451 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065600789 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080072774 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062040337 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089840364 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086150035 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092982824 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065983192 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080066839 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062885824 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079842813 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063415527 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089276889 seconds)
  done (took 2.471528218 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077177735 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090019077 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075580501 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097038503 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067707159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090452097 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072640783 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088058914 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094396308 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067659161 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093494877 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071358821 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085313353 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067951669 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085834751 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070703694 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094324464 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068044898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088946644 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072599755 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088897488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072831783 seconds)
  done (took 2.62430742 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068853704 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065397213 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085800601 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061438553 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065456455 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079808064 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069877555 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082890059 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069614442 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064346708 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083454817 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.07319502 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085554443 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06142235 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065858195 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082461519 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132658023 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069632935 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065688341 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086097629 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061450576 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086785112 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061999295 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061431384 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083816957 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06991401 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085043541 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064285366 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065319142 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083217564 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066101627 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082349025 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067820165 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065855837 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083666045 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065301323 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064973044 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084430459 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062084231 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082019343 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066792139 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.0614702 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085268144 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067924857 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063580722 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082757657 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06700381 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083607996 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061299743 seconds)
  done (took 4.456387403 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085858205 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128807224 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08655875 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08889568 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.09954032 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091935898 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070168535 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110440196 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063329716 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083521215 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081566586 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103277187 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08434029 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071169829 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091033345 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066235235 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066523938 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083409483 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068417809 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083870742 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06909605 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090498888 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098014208 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079528505 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087215274 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065399206 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083299211 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070791491 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096978381 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071053401 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089052842 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071465852 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099269313 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070454476 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08367732 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067955121 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099653996 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08334082 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068320982 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063606803 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086456328 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070280647 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091181671 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.0817824 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08471241 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070733622 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084830175 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06315114 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097471917 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067224456 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092848918 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100350154 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070219692 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084425401 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070587293 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099135397 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065761915 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082076242 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06861798 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097320999 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063998889 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088628575 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079538584 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085678559 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073078358 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099033354 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07063284 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087886067 seconds)
  done (took 6.567549993 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076844539 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091735941 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082108442 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101069753 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0929399 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074850917 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092783074 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074300112 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091625374 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077729211 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092589111 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113428531 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070217419 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096175884 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074724662 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093821303 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074344133 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095285199 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074145839 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094850253 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093366691 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083142812 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093780226 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10087374 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105033729 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08925317 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075207843 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092965908 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083646571 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094835244 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104196053 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074058862 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093598779 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10128656 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086280643 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093360596 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06787581 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092929013 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07464504 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092859164 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070210838 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101305507 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074669919 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089005099 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07394415 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093217314 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101879475 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086161329 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097316948 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09722652 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075900123 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102118795 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074043246 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094463421 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100810065 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108914343 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101959249 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101602705 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074649706 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101577953 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101842269 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109004931 seconds)
  done (took 6.41804949 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089916571 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095852342 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098139341 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063443114 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065605116 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090634183 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064868043 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083660844 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076623148 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094908685 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07899591 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089671782 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072557931 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09689798 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089509696 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07365714 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088948619 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070525003 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09282566 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070718837 seconds)
  done (took 2.506214193 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077856542 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104346591 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069024691 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073425168 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091842581 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072728653 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089421677 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071507646 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087532124 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071891199 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097968858 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079497996 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088690018 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074708952 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097445806 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07455026 seconds)
  done (took 2.184757245 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080436744 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099076355 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083066608 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088117839 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06736687 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084481036 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068467053 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063465719 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084652924 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082219212 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088022794 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071205726 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088121528 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067548382 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063845066 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090088774 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064368192 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084696132 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067737658 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10053997 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079612199 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08472597 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068519003 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067499303 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087873416 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071459171 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088077516 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064028592 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085298391 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069260318 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087175442 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076077572 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084977366 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067654489 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066156599 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08391929 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06676267 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08634414 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070788221 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06601163 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084769106 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066780606 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08624035 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067574193 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082015945 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069161772 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063805117 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092903443 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06663861 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086620197 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068423906 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088699095 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069633496 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076569341 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089879043 seconds)
  done (took 5.135604593 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082455847 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069972116 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082804637 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065757701 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089180021 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070708244 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070354507 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089640353 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069459953 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084761538 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069507412 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089044249 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068441113 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070300917 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087518395 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069685593 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081746622 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069155445 seconds)
  done (took 2.247692719 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074600356 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067927971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093728157 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068409977 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086216849 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07100106 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062148047 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08577329 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066936172 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086104993 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068805008 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069204418 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085145488 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070984476 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086805981 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06884671 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069518965 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086322511 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068572322 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0836679 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071060888 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067248331 seconds)
  done (took 2.52819681 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075444061 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093715515 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.165013024 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108743215 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08264592 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.10037886 seconds)
  done (took 1.496453232 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092562787 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100874394 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068189158 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10782102 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076579908 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089400269 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069708094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087820914 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078430446 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10131579 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067987408 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096500609 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096154273 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07716628 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092932668 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074279658 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0874599 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067925404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085356869 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105448438 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06947568 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095520701 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069276052 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086817769 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068473534 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094772533 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07650258 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102121093 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087815292 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076785063 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093017514 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069303359 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095578095 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100092499 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070002805 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095850652 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069429493 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105690234 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073831825 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096315564 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069945878 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093999758 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095949724 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073725067 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095570698 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068516473 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092384116 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067903927 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088755277 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1122151 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073581153 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096811689 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091961526 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077701231 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095845 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112852832 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081595768 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09567104 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092480548 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082459856 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096158494 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073161207 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09604657 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100925095 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074166752 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095975233 seconds)
  done (took 6.58659649 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087111954 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107115694 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06924889 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10035731 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096580343 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069084883 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087223171 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06921695 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086282326 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068404568 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130153872 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069471858 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096785794 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096269669 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068435571 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0870399 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069090465 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095474398 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068060777 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111469347 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088653294 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077105743 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096505447 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095933336 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081829044 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093282335 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068555457 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087982915 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06869073 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08847035 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073308605 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088185149 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096198986 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068115274 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094543916 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068804069 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087683584 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073953883 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087666477 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074072794 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096573189 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106484855 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069112527 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087683357 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081360205 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087402377 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068787612 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089054098 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067785476 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087224319 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080449761 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102415101 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10188633 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095965896 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069190003 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087745595 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069704054 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087225908 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068695402 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092996708 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076114124 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087127016 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113230587 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069803477 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087774243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076928042 seconds)
  done (took 6.474710116 seconds)
done (took 128.007662119 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202927751 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183287696 seconds)
  done (took 1.256341778 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071236598 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096299029 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100489758 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127958204 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086455494 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100370525 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118356842 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079736682 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066424135 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085737276 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067467875 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087959146 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131779607 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067002593 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086016347 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06867249 seconds)
  done (took 2.319645207 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104734265 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196023605 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107849972 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06601028 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099519888 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07827047 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084641378 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076205012 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093822117 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066169352 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07726341 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095286847 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064344129 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096413471 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074515958 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097850376 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065472862 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097413883 seconds)
  done (took 2.522398291 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106374903 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14280101 seconds)
  done (took 1.128298975 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201161124 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122373049 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201110513 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.415608917 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.20505225 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.278527158 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172153276 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.170569139 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157452465 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168263409 seconds)
  done (took 2.967739889 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10176052 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170229101 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311176116 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136591358 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086335875 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114996883 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137692902 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088996968 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101892009 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101357811 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079877194 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098705095 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096129513 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09530627 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074096533 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097111535 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12068911 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075283343 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097249362 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075352918 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116142457 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066920342 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07412381 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094496804 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076149382 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098278392 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065425292 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086011528 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075186695 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093481195 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078019841 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114258623 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097484605 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131331319 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.080325592 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.128746193 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097279194 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071451537 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094319591 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071897641 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097495563 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076365066 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103187967 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075894834 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086294709 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076189937 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085575736 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066391305 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098902269 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076471809 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099427788 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077775598 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129978217 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099079492 seconds)
  done (took 6.199905048 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.756317849 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11187001 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093165154 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.810305597 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091131152 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109082623 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.71954356 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120723764 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209227231 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766757774 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089302406 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096818566 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.176286559 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23200965 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.878310911 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.279920019 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.626621747 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10314634 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108514757 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.130145604 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136385032 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173496174 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147408956 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430476813 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074437946 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091906782 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135551416 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073716243 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157400595 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083483519 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092015838 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153000701 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223690342 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.15294695 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09560238 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069732552 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090148949 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147092796 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215400569 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188843696 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.156634336 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068199731 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090267533 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13816329 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129918335 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067738852 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138691794 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172265595 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.147895863 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072614592 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094591176 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140244457 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137279531 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.139884242 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099577371 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.267297995 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.284249855 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089495485 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097267122 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10295768 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213062907 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103610406 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.1957622 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138213748 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.164994891 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090295101 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.723502632 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.144273732 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090736848 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073804812 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117319667 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092886809 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137011498 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144700661 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.346965639 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.159793839 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072669114 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089314673 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202217817 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082186536 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090411896 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1395358 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074189692 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120424691 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162068712 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140455735 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146106681 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.203366934 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139040999 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156358885 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074517654 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121339034 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074631703 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188734134 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190844714 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.13980522 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.182707859 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.156821234 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141107439 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.145456705 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074087934 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168741771 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096206418 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099994564 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135431994 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.186999775 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121436689 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082488797 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092864927 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138637678 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12388039 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084588808 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137850558 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167639968 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.453452908 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.144513411 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065835018 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10629514 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136344055 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.138109348 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095380258 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.208970172 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12059989 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.14317155 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119461828 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087739916 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118022822 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.138903674 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077036115 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119989728 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135703595 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095904949 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212620109 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.187786806 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076590035 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.190690136 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.159316916 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095006783 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.14781808 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117821613 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144818521 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075720223 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156764802 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075935421 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.748460863 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14223972 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118610188 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072162921 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171999227 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068612611 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1027321 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101811834 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068517486 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.748452568 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084725443 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099836504 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082264867 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094376282 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119209763 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135242784 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073006932 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136231106 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199637151 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094152739 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096294385 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10239585 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.137384034 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09471743 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083070577 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103257032 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082449053 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121242359 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092967835 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082256861 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143775084 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.158861164 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.168770879 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.564884157 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071081819 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102059076 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.176827732 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09039416 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.238210208 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.156131324 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.175230109 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139160141 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100898876 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289699538 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142100517 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171538942 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085256754 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148912124 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088746348 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136422367 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142492018 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068938154 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096902981 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138605559 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14130172 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.16150063 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.909392218 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090263482 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.201656076 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068316303 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.146966158 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095216001 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075053785 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258999215 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069536746 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.164610201 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141512636 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073092639 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101979167 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.746961189 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104134797 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138118049 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073316284 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.191425895 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.140531387 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134155805 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135357682 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096301529 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.136360513 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184831498 seconds)
  done (took 40.035677217 seconds)
done (took 57.306462536 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257978978 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176395124 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241298741 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144050122 seconds)
  done (took 1.796947454 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.146122435 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103786293 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.115216677 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084979348 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10206668 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085941277 seconds)
  done (took 1.541892686 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.411214306 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26961461 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231223743 seconds)
  done (took 1.814694398 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259421771 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210578506 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445442975 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295508383 seconds)
  done (took 2.244880539 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.17338364 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112726771 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066889108 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105107108 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158377279 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254423295 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127678256 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188586649 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081256213 seconds)
  done (took 2.222842264 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19865066 seconds)
done (took 10.72457053 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099659376 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.112060134 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117690862 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.244209031 seconds)
    (5/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.247038769 seconds)
    (6/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.223612881 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.132955102 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081120851 seconds)
    (9/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.235013902 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077466858 seconds)
    (11/309) benchmarking ("sort", Int8, false)...
    done (took 0.172286302 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074805323 seconds)
    (13/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.236707292 seconds)
    (14/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.188996128 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.15604293 seconds)
    (16/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098349255 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071375299 seconds)
    (18/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097047258 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08383312 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118164277 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.172049144 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.191215764 seconds)
    (23/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.209015459 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.205866563 seconds)
    (25/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.144434511 seconds)
    (26/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077195441 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.081303091 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.269827457 seconds)
    (29/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080841509 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097957864 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071129537 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.0726136 seconds)
    (33/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.183735011 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.198720945 seconds)
    (35/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080009653 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185520673 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.168384354 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.131782032 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096533398 seconds)
    (40/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094857304 seconds)
    (41/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.146745067 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093485349 seconds)
    (43/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.130597399 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06569336 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.135827469 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.138085112 seconds)
    (47/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086323957 seconds)
    (48/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073416019 seconds)
    (49/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.149461357 seconds)
    (50/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155136952 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.177731942 seconds)
    (52/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077634689 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.119277385 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095735271 seconds)
    (55/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051320731 seconds)
    (56/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207839905 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079043246 seconds)
    (58/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113028843 seconds)
    (59/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070193475 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093746483 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091188173 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103985719 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064783125 seconds)
    (64/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.073068674 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070161175 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.129202437 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108279701 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.135650866 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.116738559 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068073451 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.151039795 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093299106 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.182901049 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.18458309 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089392434 seconds)
    (76/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.197728563 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051276049 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087290707 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09755567 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091356283 seconds)
    (81/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073530629 seconds)
    (82/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075993903 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08689222 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087391156 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072679817 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070390611 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078431258 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.072817245 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.067049133 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.146394611 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066333189 seconds)
    (92/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153088099 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134666809 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088321044 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092282817 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.11668203 seconds)
    (97/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113356624 seconds)
    (98/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06963908 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091400454 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137870767 seconds)
    (101/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093317621 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06695844 seconds)
    (103/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08797671 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.167717786 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12071368 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 0.125987888 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087576232 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067025394 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092476143 seconds)
    (110/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.168944481 seconds)
    (111/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102016139 seconds)
    (112/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074622239 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052231409 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099332528 seconds)
    (115/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106598265 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094001526 seconds)
    (117/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065495976 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.184647913 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068128178 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.074006673 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.160218464 seconds)
    (122/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.159339653 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053123431 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097927773 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051682372 seconds)
    (126/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077444581 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.110970274 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.157249468 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075222842 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072321446 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.0973373 seconds)
    (132/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.108920819 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097395233 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156070138 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071965767 seconds)
    (136/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.190701224 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073990285 seconds)
    (138/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070082583 seconds)
    (139/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.167902528 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065936447 seconds)
    (141/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072806442 seconds)
    (142/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077194908 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066522543 seconds)
    (144/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.074299795 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073179647 seconds)
    (146/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.170284746 seconds)
    (147/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074654646 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159555215 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157133995 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065854911 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073746327 seconds)
    (152/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095401847 seconds)
    (153/309) benchmarking ("sort", Float32, false)...
    done (took 0.128264947 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095709236 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073377419 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108253173 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145663826 seconds)
    (158/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.126793968 seconds)
    (159/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.134925995 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.201200832 seconds)
    (161/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052848517 seconds)
    (162/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.090256735 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191127289 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06656715 seconds)
    (165/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052280729 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087589517 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067386456 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.165845903 seconds)
    (169/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067725652 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072417626 seconds)
    (171/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094210435 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.10439853 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12569823 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051985776 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051687489 seconds)
    (176/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193177471 seconds)
    (177/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052165053 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.111479142 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.135174455 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073494035 seconds)
    (181/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066980331 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096872064 seconds)
    (183/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077145585 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096924358 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051729637 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.163045425 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08157681 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074633061 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.074623022 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095237574 seconds)
    (191/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113409148 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066430634 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200632029 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066775859 seconds)
    (195/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.076314679 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091916395 seconds)
    (197/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.13403718 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170377346 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160786188 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.285821648 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158483531 seconds)
    (202/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073105029 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110799659 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065012004 seconds)
    (205/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102981693 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052144568 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052026289 seconds)
    (208/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.074556473 seconds)
    (209/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108102107 seconds)
    (210/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06112737 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095174137 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080086956 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093152037 seconds)
    (214/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077430892 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073603809 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094991956 seconds)
    (217/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.161090116 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052282384 seconds)
    (219/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073440621 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.167614928 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052937777 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072862225 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052526523 seconds)
    (224/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072531512 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092800893 seconds)
    (226/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097976474 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.187888498 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091094669 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.118705314 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090589505 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088680265 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064473037 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169171391 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05358433 seconds)
    (235/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051578441 seconds)
    (236/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089680102 seconds)
    (237/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052682828 seconds)
    (238/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.05292189 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091198137 seconds)
    (240/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069893445 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.159766871 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089872768 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076197185 seconds)
    (244/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061194332 seconds)
    (245/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052332699 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064639296 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.073168089 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065808076 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052294933 seconds)
    (250/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.130569807 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065390678 seconds)
    (252/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.120376704 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067126937 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193364455 seconds)
    (255/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05212568 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088451914 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05178252 seconds)
    (258/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053241515 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198309883 seconds)
    (260/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06789811 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07197303 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06694992 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052199615 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087593767 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065980974 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090890995 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.074657056 seconds)
    (268/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055256322 seconds)
    (269/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068636426 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.109144387 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053144717 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093739243 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090625937 seconds)
    (274/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071998786 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075822524 seconds)
    (276/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066416014 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073680882 seconds)
    (278/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08822316 seconds)
    (279/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075845531 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07575037 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051375595 seconds)
    (282/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052849042 seconds)
    (283/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064255156 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087085599 seconds)
    (285/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051383981 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155423066 seconds)
    (287/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05166408 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070913265 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.073323797 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073580736 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063912959 seconds)
    (292/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.07398918 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064861396 seconds)
    (294/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051763954 seconds)
    (295/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.073614542 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074355911 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052902405 seconds)
    (298/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.072030525 seconds)
    (299/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067384044 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071328171 seconds)
    (301/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084000952 seconds)
    (302/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052013952 seconds)
    (303/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082238288 seconds)
    (304/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.082592605 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070803224 seconds)
    (306/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071860808 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.156281457 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065108112 seconds)
    (309/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.074896343 seconds)
  done (took 32.881282671 seconds)
done (took 33.797504194 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082535209 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112647009 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075285958 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114252117 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081561103 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099927506 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072758115 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077664999 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102572029 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081191504 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101286253 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054966638 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096633867 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074982205 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095974059 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092325497 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100758193 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072435515 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073395641 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08650222 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073859659 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086977693 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067029645 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054992492 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099066545 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072026137 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071655291 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.096926413 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065636488 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087075683 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068642292 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072628626 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08756001 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078158555 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092792544 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073580433 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075610668 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097955938 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067118634 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087511765 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073823923 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06531355 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093586935 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073424613 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07046355 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092491284 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074242854 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100730639 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091636486 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089235439 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074028604 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09799886 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076274429 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071565577 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091669335 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073814212 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091973167 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091778182 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096059957 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067990407 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073451304 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096037854 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071413637 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094821715 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07386269 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075705309 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098060843 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070971823 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096800116 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070933993 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066128603 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096611294 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07010163 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065726759 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098184024 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076992693 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086167425 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07177784 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072912776 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093451854 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065240917 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089283103 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068026948 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071773809 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089173757 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055205291 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069816533 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094091785 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.0663263 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074535024 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093576784 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072997982 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08883732 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076715583 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065462747 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092702648 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065965316 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065738317 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089458584 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069451239 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065049354 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090642318 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075613521 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088391354 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072577203 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079847117 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087447733 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071980111 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08597853 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066051141 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081118666 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097592672 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065963899 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090133043 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065486562 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073129121 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086843916 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065974912 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065400229 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087747934 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071797597 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064978288 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090127574 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073136872 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101086088 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065585675 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069144414 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090164002 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066019764 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071199671 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088066946 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066722651 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088853566 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063527738 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068572248 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087435596 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073254233 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067757129 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096004988 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067916533 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096352327 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070399406 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071656768 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092515584 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06510366 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05898052 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090120069 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06859545 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067940311 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08782525 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067930051 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065815944 seconds)
done (took 13.093586564 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06805681 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.166942444 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124217425 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095554831 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109119354 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066497055 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.098706047 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103017186 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090681264 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126032083 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087667138 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107388703 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114352022 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087856641 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066372013 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070002911 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089834788 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088553115 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124469604 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086061947 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.138335324 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087963267 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119425349 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090063741 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111796789 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103190059 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088608459 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070563599 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069143696 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116010508 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107594959 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06994899 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067180105 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121596908 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115945302 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085172917 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087641755 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084821127 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087903671 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066103711 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113050665 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100065586 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10434337 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082509648 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094088382 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068843615 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089009136 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085674275 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112393008 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080400627 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110047648 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133203232 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069035958 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104422992 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065522342 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109246738 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081447434 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090809381 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067339139 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090962392 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065798248 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069216519 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110626111 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114634012 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070331241 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104108266 seconds)
  done (took 7.209471114 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086037167 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115605371 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08429032 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106072937 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066458503 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066876923 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089073099 seconds)
  done (took 1.586927416 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069261929 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088595909 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111814334 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089285472 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.10757434 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08694765 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099254111 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067660519 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106578724 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06830796 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087495825 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126262041 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067902657 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096472946 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090822146 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089337972 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090220919 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089775177 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069699791 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112778096 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069723296 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.109305677 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069154319 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067053136 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103145433 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067339967 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137495981 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071372801 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090407785 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070573831 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065574326 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139229668 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103573586 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077672187 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06646022 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104090346 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081814793 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087419743 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083569802 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093917406 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081692744 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067759177 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090667823 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065454456 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071209106 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100357563 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067965724 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090089791 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070153778 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086862442 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090196745 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080695592 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089207299 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07084872 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068873496 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096096157 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076519464 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090376194 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087142859 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068620914 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106738278 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083967665 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104125953 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083695005 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092555955 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081596814 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104116557 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069868628 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069554382 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093148826 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084018515 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087259122 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069435874 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07782656 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091241211 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090392254 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113102182 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068905257 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099839354 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068243151 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067449769 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090238249 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09090077 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0931145 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068024432 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072077021 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093523458 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06483625 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066244409 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093736577 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065503742 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09022991 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070812897 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067945536 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092490974 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084367003 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067425884 seconds)
  done (took 9.241455584 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070229794 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068410694 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091852874 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067868595 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068393228 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090969722 seconds)
  done (took 1.448275603 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099428782 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091756926 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08188055 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09488813 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106419828 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104728541 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082811744 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105016599 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085217694 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102176934 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082586881 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104877771 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088142307 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096023111 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081578648 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094837111 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082233486 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098890126 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078976422 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096450268 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088772079 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096881567 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073684861 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083031435 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094294018 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072324913 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099722135 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079214426 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101917114 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082958982 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096199764 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071396377 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093828617 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08256176 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104590526 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072291111 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095090218 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071846749 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09932255 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070744469 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105053881 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073741404 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077841783 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094281667 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.104940077 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072371087 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071865964 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100010756 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081614397 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093986076 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071861465 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094701509 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070277609 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094385711 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071928059 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105074596 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071941019 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.104789232 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073690994 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072064493 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093112561 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071111986 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105413817 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070474256 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102958772 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071482856 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094715868 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073332692 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096309009 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072663594 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071554236 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092692463 seconds)
  done (took 7.297349732 seconds)
done (took 27.75273007 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.649915594 seconds)
  done (took 1.632915072 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.760331867 seconds)
  done (took 1.745292804 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.715697255 seconds)
  done (took 15.707874316 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.608501743 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.754822622 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.789672037 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153425254 seconds)
  done (took 3.290686145 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.879805287 seconds)
  done (took 1.891112378 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234623264 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.246578026 seconds)
  done (took 1.472516339 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.736767432 seconds)
  done (took 1.734264875 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.282339566 seconds)
  done (took 2.273386291 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323099249 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180371476 seconds)
  done (took 1.503410111 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.518983534 seconds)
  done (took 1.518454771 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.55110387 seconds)
  done (took 7.555299227 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230581372 seconds)
  done (took 1.244421603 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267538172 seconds)
  done (took 1.270389404 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.140715757 seconds)
  done (took 4.143632124 seconds)
done (took 47.973710876 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078051852 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08211807 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104352487 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078929541 seconds)
  done (took 1.339986442 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079479627 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073348477 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09984922 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07279268 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100998697 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073918701 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.097946719 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077731057 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072159189 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097159642 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072770556 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094726065 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075617981 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097794097 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070541552 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075807449 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098966958 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072631827 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.098962624 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073934546 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070381275 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09781789 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076226982 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094260012 seconds)
  done (took 3.02793273 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078786173 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072898266 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097096108 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072924263 seconds)
  done (took 1.328869428 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078181567 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115296025 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088633966 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100164295 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09274935 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109923814 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069098948 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068906357 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094055882 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076924361 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091471615 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098378779 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109938647 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076926817 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102181022 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066508255 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068683355 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10984782 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077752396 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100593162 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07020452 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079456033 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090705009 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090653446 seconds)
  done (took 3.139698118 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078621581 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126871719 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078511182 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113030362 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091743303 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089077954 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075297724 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114778695 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124849621 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089173344 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070185693 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065981378 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.095936116 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065636196 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07564355 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132800821 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.134815194 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068805892 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.119802133 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065843228 seconds)
  done (took 2.893981734 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075758575 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06926059 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08819778 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068288247 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075802254 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09581642 seconds)
  done (took 1.490898364 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069278332 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06709089 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090166861 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065988554 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071890106 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090096562 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066229007 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067111727 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090199585 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067199329 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066531971 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088404485 seconds)
  done (took 1.912090751 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.4211448 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068192251 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092211 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065808716 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07101944 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090331174 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080006412 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067621362 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114820587 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06692799 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090152655 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068636643 seconds)
  done (took 2.312526439 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260848791 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076719978 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321425148 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168202185 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139861248 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154340645 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105238155 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139439034 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197671739 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137813286 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199654777 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22241284 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132684993 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167422118 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114486876 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1309765 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184301705 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220539488 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129639015 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198753338 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206002611 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155877389 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178722388 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12825186 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134790863 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150126974 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07225262 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105155733 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231420603 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160710334 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200072861 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137853311 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096457542 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229344958 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223591126 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194972927 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161133134 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083888598 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.1563997 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163133627 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254427311 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113272633 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193154633 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132953864 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105250366 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17227301 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144614804 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146564675 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136796832 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114788648 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172474173 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238723883 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.163962139 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11173587 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136370309 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140481535 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142917223 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10455702 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26654462 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192325872 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157249432 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095109993 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124201323 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184750676 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158049 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141668244 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153727125 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117631286 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1666623 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209899052 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144268015 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172249756 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.17817899 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112019115 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144314424 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169415708 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156179069 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227513457 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152587071 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073241667 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151225045 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128899608 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106650191 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144454172 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100299979 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206537424 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124271963 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.137676359 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139834238 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13543837 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135565795 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194195383 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200493804 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129354373 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066131935 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129736371 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149060661 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175120594 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113383094 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134427778 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146915555 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079145497 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18998934 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075223338 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152867533 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103618166 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150727446 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161810577 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100550856 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154420177 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101897339 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127374628 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163358418 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217477436 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115168606 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082921961 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225704494 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154855339 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131316936 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174464928 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213717321 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102029348 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127817769 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205248223 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240748132 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089712584 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221066967 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133552259 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108582184 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088736829 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154810667 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138330339 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.147976846 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107524583 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.15357694 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224195548 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076033621 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121051113 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165820424 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105838549 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081822146 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138552323 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126730603 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120444119 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102023058 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132340634 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193778688 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153549998 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132176048 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152892741 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123645228 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198887026 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114230598 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130340486 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12952021 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070428361 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.16458466 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215264571 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079983975 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223955841 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153842939 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131869876 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146829639 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083400715 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192534559 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078993587 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096116987 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172278939 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136858429 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135911596 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.182162069 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129366169 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.153179345 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150256681 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161304287 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18390338 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.160926442 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132355658 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088343853 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138639979 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151976519 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097850394 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119452994 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083060565 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130380193 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122147329 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084065395 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196183442 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154555903 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126710713 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139273057 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097767238 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203372759 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077812275 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157539125 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.145038546 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120377714 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.209822429 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185116383 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162986819 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124869728 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200204454 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070910415 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099834861 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091805032 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153821487 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108713797 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108376134 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144790456 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179083731 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155488347 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191154559 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112613066 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148099646 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211693423 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071330452 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143088465 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17740314 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175868738 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.129405157 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111654841 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099647957 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199066607 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135401545 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24376526 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143416313 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152724528 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180580691 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129533292 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105642783 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106517094 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190887173 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13234605 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180289891 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124806979 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114213754 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136481264 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081840208 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130179798 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154803067 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147403949 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18676634 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143633277 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161121799 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077091614 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168395816 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150628212 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150286268 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.0647245 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147467106 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220513863 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121062707 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151265908 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183330205 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104376029 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153864268 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23485115 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17587726 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111106432 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136816439 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1491468 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157068766 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147521898 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169105531 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137521411 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163277812 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137341919 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.110992081 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087743226 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124892151 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13276307 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095946624 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.163881615 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144950794 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09565929 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158986995 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137530152 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135903794 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145891747 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125623097 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091786627 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123092852 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234745797 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149625056 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232884529 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127708711 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178357994 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225759148 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075563298 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105601956 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080244173 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193818853 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085293431 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161933468 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123573604 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132385232 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155184131 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171800506 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121375911 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068537838 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135987605 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189265663 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114000074 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12468042 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132439842 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221372042 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103849169 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105946857 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152964737 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132312138 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103656273 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232024038 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.087424664 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099040947 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101050848 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081473916 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157335415 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211305619 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110099726 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.131255304 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143046968 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147947595 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182454172 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10310684 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125275781 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141159138 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20521938 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157374986 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090762608 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139659005 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184057696 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186745396 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132564501 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121981998 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229960126 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185901202 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221696799 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089345818 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14333838 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142547512 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136562833 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197411293 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084048841 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224786517 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109056947 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165476158 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131856122 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119675331 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158899531 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12561017 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089289868 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204605611 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148636425 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099898771 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105261754 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146781182 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151423777 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134336103 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10099815 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168453691 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072629754 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192608719 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201809486 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107618571 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13299464 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096991007 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107599598 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136408753 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131175721 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087423375 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14273771 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230068126 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117948801 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181448303 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197286417 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143231397 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16761093 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127064306 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662904719 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078573664 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212698854 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147991311 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237085131 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125177855 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146632231 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137640475 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151765905 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175456409 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131578499 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205637083 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16224881 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148372842 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105078207 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130679117 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138983498 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091881541 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134410556 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142880625 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145550759 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.128696439 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149351841 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155356298 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108031954 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096291526 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21536653 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145992481 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170801709 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196199381 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085344304 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147183479 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196900907 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081022801 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151128383 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213985459 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13572901 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125480808 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081601949 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132887957 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231431269 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07307612 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219530352 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153127946 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138396201 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141985716 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146232643 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187714747 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135669041 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153400046 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122846455 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14047635 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145528888 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085261608 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105152723 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132495212 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141187015 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100008657 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12894316 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143701001 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184997508 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071692828 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123293707 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131162861 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173061037 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237788731 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116600459 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083805861 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146909239 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139407347 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14307297 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179216381 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082139174 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110420652 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082517646 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.137551522 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137120641 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143397442 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105427598 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137938201 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226258406 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111218232 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223680406 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121960519 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134809434 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069552546 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106207849 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122801385 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098474713 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135623083 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127846812 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230907581 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098568021 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.117361346 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119801919 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074201642 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109890851 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158409408 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138927844 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15088083 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124672104 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063531168 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137220556 seconds)
  done (took 70.949847272 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134059297 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10337622 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117119212 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171590798 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145024198 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2370634 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180171958 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222825042 seconds)
  done (took 2.405922301 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072029215 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116293421 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102053018 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115845959 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089122155 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068174366 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.292701117 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109731651 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066385155 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113118239 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.11764807 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091126125 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.467779683 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065344062 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093799638 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084093279 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067777061 seconds)
  done (took 3.219442877 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.4283043 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630373828 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449161909 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074089979 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.881052579 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105889419 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.390416771 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161864779 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090049616 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.429676243 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.727753554 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.147166986 seconds)
  done (took 17.611181814 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076249593 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069174039 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108923364 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.0829363 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09880745 seconds)
  done (took 1.535314141 seconds)
done (took 114.163247177 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081612633 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.342826662 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052996224 seconds)
  done (took 1.527413409 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.0861449 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084505057 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110592905 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082722924 seconds)
  done (took 1.470985532 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076194765 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076383125 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110368019 seconds)
  done (took 1.369077718 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278225682 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164907399 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087179393 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084886735 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077246336 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10392116 seconds)
  done (took 1.37069702 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074377924 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075220056 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098696969 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075535346 seconds)
  done (took 1.422800161 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077374168 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052278378 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054624475 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081350291 seconds)
  done (took 1.37168412 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090204318 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.10544629 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079986253 seconds)
  done (took 1.378192583 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108597492 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111566889 seconds)
  done (took 1.326205873 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083716397 seconds)
  done (took 1.184676871 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096256417 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.13788702 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154021805 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136315073 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164535809 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.13601012 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.113107285 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087554875 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.102884834 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.113673286 seconds)
  done (took 2.349887087 seconds)
done (took 16.475111593 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078682556 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392268595 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359887619 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116377271 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667744911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355730509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041801888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118565407 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120352451 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094323967 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083776309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674900607 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.965427253 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.34664671 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.952654021 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.316194084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675955058 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067835055 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092535503 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067540395 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.999269619 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093738059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067474421 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067861096 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675800547 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370257434 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094071719 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.316568591 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067522258 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095332338 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354224035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093934976 seconds)
  done (took 15.980569869 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070765045 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.142695286 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072924084 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083354264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096086996 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069633859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097533724 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068980913 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152769691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067223482 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110363924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06738988 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097390235 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068326575 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086134591 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093980362 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068354525 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068065803 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094309583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067842515 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112316592 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067223699 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068148263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094009412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068330651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105061864 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068244529 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068072189 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09405993 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06968682 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096907512 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068415917 seconds)
  done (took 3.829820431 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115720642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151949399 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073157263 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127974298 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111973648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096197908 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.168224298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092218554 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153680047 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068001067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110153481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06756105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127040665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068567283 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113225343 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068432535 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068801276 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093901092 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067846391 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094382279 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086690979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093035665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068473762 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068587976 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094216554 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081083686 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094142369 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068160754 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068447936 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09615109 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071030195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093948445 seconds)
  done (took 4.136821888 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073945787 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074382985 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108338947 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08288619 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095620683 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072845706 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073153073 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095437239 seconds)
  done (took 1.784604708 seconds)
done (took 26.83080273 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08038531 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069612669 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098702148 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080102132 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098944222 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078514187 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067043587 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100365524 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076792931 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07269779 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101881772 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067151427 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09732217 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067710321 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074187181 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094064767 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078797841 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.0973431 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078503971 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079252962 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096225478 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076278802 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100446335 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079395503 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105420426 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079298993 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082692741 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099694861 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068959645 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095865004 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076457095 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083181404 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.094846803 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078918402 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093895133 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067829666 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066917986 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094325096 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079093529 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100384486 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070835957 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099902828 seconds)
  done (took 4.653375952 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090450873 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090280755 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111844213 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064921163 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096815324 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065188696 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.113826522 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063002243 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058660789 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113798389 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055618662 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058715579 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089344977 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054376536 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058511453 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056287825 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088019709 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055940076 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059013087 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085419503 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0577582 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053969642 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086269596 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062951064 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056413823 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087431608 seconds)
  done (took 3.049142244 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076554139 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083404405 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113737904 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127712399 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131500491 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077099366 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10448058 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087273331 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112502921 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067498532 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071538363 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121447116 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087069295 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100930984 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068202501 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113855493 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082291632 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068456267 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100297741 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09001615 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111159627 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077669599 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118909555 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080992578 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067021059 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096549778 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071306529 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107855647 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073545934 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077004649 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09848502 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071409822 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.09613317 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078744535 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071198107 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095524855 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089090911 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103598554 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077109506 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06736125 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09784794 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067848028 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114907706 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111523425 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093553568 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075024504 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074644872 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103011064 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066936574 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111863051 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075897805 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067156631 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.096875647 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06631594 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093386715 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080620765 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068853181 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096499547 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076508522 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.096783372 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079903203 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070991059 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109244952 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066920247 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.1019089 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066267785 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06816248 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093060536 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090613595 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068601574 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.134518044 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068415196 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095560144 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07642509 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101804375 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073883376 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06748104 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109129347 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077520478 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098028084 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076359978 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071180359 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097010233 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087348011 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096360065 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069820506 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068667486 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100794779 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070873973 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095796872 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080762504 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067773892 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097180063 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084373496 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094435001 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068688638 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073685123 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.098960591 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067140842 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106843915 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072675613 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068391558 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103530257 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067463894 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098136117 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077174806 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071656343 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093197807 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.0720892 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101056276 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068236688 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068673713 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097451213 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069149779 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103813662 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074164811 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072396306 seconds)
  done (took 11.242756164 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.202470153 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.183766362 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069851713 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.17746187 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.0752907 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.106758049 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178512648 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095330733 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09596882 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068024012 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068991577 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.13042189 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1240593 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105387659 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105649905 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06689232 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113207564 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.103547503 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.178505322 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174523367 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11447154 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075753894 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070031661 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.096271464 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06954139 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104262201 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084516237 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102531034 seconds)
  done (took 4.278266718 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082847945 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128521668 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073449577 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088150307 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118206786 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068266988 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101068825 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069075728 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107587565 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079119415 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095913071 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073864315 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073728696 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105869509 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068626938 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104853689 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077329198 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068994648 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098066704 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072555456 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104932419 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080047713 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072336973 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.094780973 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072923171 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094438449 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064131035 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.112685267 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067091398 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117417024 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066278699 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073746572 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108671824 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06839804 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095006954 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071258694 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070776812 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099013423 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068870642 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066315585 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095019053 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057722148 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066285372 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107425748 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074415259 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087403146 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073573935 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073128417 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100463864 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065151323 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098243194 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070833722 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070856492 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10491156 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072244691 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073250698 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101513019 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066569011 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102793036 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071008781 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063593907 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094186228 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072878681 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066328325 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10325099 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071596828 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094109212 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071046903 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072864821 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101625245 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070551441 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07057913 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093658902 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069548726 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100130227 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071803739 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07174228 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094368308 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067172209 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068079954 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082896679 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067724848 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053520866 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098908447 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065933808 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066539786 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098622765 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072965396 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108400325 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068681402 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101264738 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068032587 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06638229 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098907657 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063314501 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07090024 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111155784 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112028026 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068344193 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065548984 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110220303 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072271915 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066450739 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084615271 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074743159 seconds)
  done (took 9.798955493 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096921679 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092445843 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097375732 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082779658 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123927467 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093029502 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103551388 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07395135 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069342276 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112151182 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06783333 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103915411 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067552761 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075692086 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12432949 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075001691 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097533403 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077182151 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071441913 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135801396 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082522313 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109620663 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.079530322 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096239345 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072511913 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079893269 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123441728 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078984923 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106104265 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084322111 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079692509 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122846923 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085235857 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099438017 seconds)
  done (took 4.288677282 seconds)
done (took 38.417458132 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.204554111 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.415935303 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.186649003 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.074062977 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.199222519 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.211422161 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.196539447 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.186250394 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.332709188 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.185226143 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.455452806 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.858756691 seconds)
done (took 58.640723373 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.195199401 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.32833419 seconds)
    (2/2) benchmarking "String"...
    done (took 1.467044787 seconds)
  done (took 3.926682118 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.531731026 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.082382065 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.442056089 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188266003 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.198295285 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.492848428 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.769072708 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.9999686 seconds)
  done (took 27.302853396 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.187673582 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.549741534 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.516168187 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.519443094 seconds)
  done (took 17.90340009 seconds)
done (took 58.991333153 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.217165907 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.231033606 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.186253239 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.170675 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.2932154 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.216442152 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.512617304 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.441007371 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.188806221 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.173934518 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.196656551 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.1871865 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.192030903 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.516513629 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.196836327 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.18680967 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.207034609 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.708700889 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.570635197 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.201663744 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.213831883 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.225369909 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.191835131 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.190530955 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.269992094 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.187746762 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.187351447 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.197432066 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.412293909 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.192977094 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.280043466 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.651037927 seconds)
  done (took 191.125837747 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.190554345 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.189265886 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.267313815 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.204877003 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.545140053 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.390239899 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.322820904 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.62868965 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.205122747 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.206917455 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.426818488 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187964515 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.493277666 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.151914289 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.199567216 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.289753779 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.361805907 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.470420464 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.202425586 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.459883252 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.214083205 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.475093937 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.411036353 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.368196139 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.217180844 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.203666708 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.214535913 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.210132372 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.379969297 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.306050681 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.192718608 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.209511435 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.764533408 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.046325151 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.215420763 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.199438312 seconds)
  done (took 149.156341019 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.448732388 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.190843264 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.192133508 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191368249 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.220391868 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.189574436 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.722882003 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.722748217 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.693147547 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.189605583 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.635174614 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.192608709 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249460476 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.393707051 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.190408051 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284680297 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.202425998 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.192015822 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.20829108 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.219440398 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192703708 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193138067 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.72356064 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.206012794 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.201638638 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199300622 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.192122734 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222632646 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.585654855 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.190959593 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192686798 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222495493 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.507671934 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.234394511 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190942095 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.497511722 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.940490197 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299002547 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192795532 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22255321 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.193269858 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.460669854 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191561951 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.1944428 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.19654839 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.779531686 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.194417477 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.724607668 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194757408 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.071689592 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190552345 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193385517 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.193095184 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.375963675 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.673467434 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.195596404 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.193429289 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.195809265 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194165435 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195143716 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225508692 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.331078785 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.291398555 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.194453794 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.197532032 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224468954 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.1946969 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.420643804 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194261873 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.784323015 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.250986041 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.414862496 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.72670979 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193768583 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28765006 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312395842 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.193913949 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.193511477 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194870359 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.193829273 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.299192778 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.194113711 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.585179772 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199309305 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.196544276 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.25400661 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.288170949 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.194052117 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.487928577 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.195572947 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.19574241 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.883448225 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28498996 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.194536904 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.196551109 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194836336 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.587713792 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.727533573 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.363852835 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.19624562 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.348321109 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195974567 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.596712881 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.703888575 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.784887397 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.197939396 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303374989 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197556761 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.199307848 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.196501865 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.224984863 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.196767576 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.256326736 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.195111104 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.595341704 seconds)
  done (took 343.365894493 seconds)
done (took 686.22734517 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.860221015 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.845067687 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.956710976 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.841196807 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.821678551 seconds)
  done (took 10.462661424 seconds)
done (took 11.600853139 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.378446974 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.380209458 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256188073 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.381540448 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226405172 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.397051982 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.355569853 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217236007 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.296110738 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.272204635 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.297142974 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246456294 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223835562 seconds)
  done (took 18.065973011 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.503801805 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.507508424 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260804551 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50661234 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237838326 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503210729 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390318334 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400640289 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385378989 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213439397 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21294395 seconds)
  done (took 16.262197232 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512311394 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.501196903 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266522936 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.513129322 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240213899 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.508421866 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391428011 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.402556563 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.38646712 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213561684 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211013393 seconds)
  done (took 16.286208352 seconds)
done (took 51.753235096 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.205683769 seconds)
  done (took 2.344416992 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.241086441 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.402082697 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.221513222 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.210546289 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.206168534 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.207374382 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.210288304 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.206261849 seconds)
  done (took 11.04718323 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.205530692 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.207020423 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.203484435 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.204531045 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.203820788 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.204301538 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.207186514 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.207333886 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.209173586 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.205377934 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.207239441 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.206675639 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.203836477 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.206871338 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207870778 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.204447714 seconds)
  done (took 20.436312881 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.206127291 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.20594045 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20487073 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.204999557 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.205217391 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.205595348 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.205822554 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206333757 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.207797102 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.206102641 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.207726415 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.204669932 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.205870163 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.205319379 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.205203821 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.205516726 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.206962228 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.206708473 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.209717945 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.204440758 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.205205126 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.206008858 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.205922602 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.207162991 seconds)
  done (took 30.089644082 seconds)
done (took 65.056981388 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.21112675 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.819259668 seconds)
  done (took 9.172153353 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.207873652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.209609443 seconds)
  done (took 3.56461036 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.207281619 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.209319484 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.209646573 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.209014174 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210124497 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.210658688 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.209778062 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.209716567 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.210328329 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.209201695 seconds)
  done (took 13.237486717 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.209521756 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.209713874 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.20813893 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.209656618 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.209793484 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.205498584 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.210167321 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210027493 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210032444 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.206295555 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.210152249 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.206224238 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.21047364 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.207812658 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.210646018 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209541477 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.207263395 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.208118782 seconds)
  done (took 22.903283986 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.210914456 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.209829349 seconds)
  done (took 3.56585479 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.208220049 seconds)
    (2/7) benchmarking "second"...
    done (took 1.208068413 seconds)
    (3/7) benchmarking "month"...
    done (took 1.207863925 seconds)
    (4/7) benchmarking "year"...
    done (took 1.206370309 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.208312548 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.208412978 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.207956568 seconds)
  done (took 9.599107787 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.209513621 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384260101 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.476645976 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.760620721 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21341224 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.214132597 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.049323843 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.214343001 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.217097348 seconds)
  done (took 13.884102324 seconds)
done (took 77.071288453 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.201025147 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.202857047 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.043778869 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.207327381 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.219391123 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.501839935 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.223071893 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.326787072 seconds)
done (took 37.072055412 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.220452265 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.906649705 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.941667359 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.202986951 seconds)
  done (took 11.197984547 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.196402085 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.126523587 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.20186899 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.213466843 seconds)
  done (took 17.886429306 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.81902987 seconds)
    (2/2) benchmarking "read"...
    done (took 1.536686067 seconds)
  done (took 4.502171199 seconds)
done (took 40.951094874 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212415187 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.211854213 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209219277 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.209942922 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.21257987 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.209782625 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.209605694 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.209030113 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.212529883 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.212932542 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21295961 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.213886633 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.21337553 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.21245982 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212172715 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209786206 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210566775 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213176905 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209657918 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210527047 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209322156 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213585841 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.209272197 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210880615 seconds)
  done (took 30.217070979 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.213719374 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.211666969 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212370612 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.21455519 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.210181671 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213096547 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.213435813 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.210759718 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.213956695 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213488762 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211148744 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.212700078 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.214721254 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.21255537 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21446679 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.211499246 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213927522 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211342405 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214197617 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211865364 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.214549299 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211711823 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.212817275 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215288362 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212567588 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211734112 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.216131543 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.212140685 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214634668 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.211356068 seconds)
  done (took 37.536267326 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219441235 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.222973834 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215656832 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215507249 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215818097 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.216667272 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.215262342 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215091921 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.215412863 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214905941 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214821055 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.215726974 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.215538585 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215462903 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.215053918 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.216278969 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.215039695 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215626309 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215780961 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214557331 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.215486363 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217139959 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.215369041 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21628879 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.215924138 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215660531 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.216386446 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.215669475 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.216071348 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.218166885 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.216349828 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.217253762 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.215513824 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.216177171 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216140846 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.217049546 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221404594 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.224774547 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216821516 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216148076 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.215914653 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.21769897 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.215906424 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.216473205 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216354051 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.216684992 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.216412689 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216599647 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.216217852 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216153043 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.216249113 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.216836061 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217713378 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.218182274 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.216374673 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215915086 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.218211076 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216835366 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.217360656 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.2179555 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.216695216 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.217024394 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.219487249 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.216648923 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218383619 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216580343 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216910087 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216771082 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217938333 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.218203492 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.220340613 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.21978864 seconds)
  done (took 88.763216574 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217609863 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216770802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.214504424 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215970798 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21698323 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2195495 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.214728644 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217460821 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215609699 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217942255 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219068238 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215975735 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216903093 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219668512 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218251859 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214505875 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218857396 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215793358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.219657955 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.21951331 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218337144 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215013846 seconds)
  done (took 27.931512934 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219495999 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220323398 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.21620085 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220573826 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21801943 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219578064 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219607826 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221510538 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221356025 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21749067 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217722136 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21979741 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217582537 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218220871 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217177134 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21999733 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219841526 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217618418 seconds)
  done (took 23.096130177 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217905668 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.218246334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219832679 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217731978 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.220973957 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.219842163 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21844853 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21988057 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.221486036 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217237004 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220407494 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220235013 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219326201 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218497673 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22097737 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219251447 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220857705 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217659495 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221272616 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21926802 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217978325 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222869051 seconds)
  done (took 27.984339677 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221940782 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220670876 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219003371 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218745933 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219604194 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220862508 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.22247126 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.218430146 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.221930733 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.220691867 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219548359 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22158257 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220004977 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220212803 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.219935199 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218464443 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221743017 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220369299 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222834761 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218715982 seconds)
  done (took 25.562774255 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222762098 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221854653 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222967155 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223695958 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22291909 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221995147 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222375441 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223051544 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223770534 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.22477707 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.222776454 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.22567912 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223552449 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223079655 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224001638 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223449833 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222323011 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224063308 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223723718 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224044795 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223634918 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223419054 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223391577 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223564675 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224577889 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222579301 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223087926 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222910561 seconds)
  done (took 35.409784574 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223156109 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222980857 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220817948 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.222242476 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222684375 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22148483 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222549378 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221320625 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223732415 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221693984 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224033677 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224743803 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223678298 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224403724 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224754626 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.224092736 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223571026 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222633916 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221914228 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222019778 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.224223706 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225922697 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22539551 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222455559 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223889042 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.225216255 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222043064 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2225827 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224356066 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222471194 seconds)
  done (took 37.855688665 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.245150705 seconds)
    (2/2) benchmarking "in"...
    done (took 1.243403336 seconds)
  done (took 3.647545509 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222361735 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224740737 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.225584602 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222703926 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223825955 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225662925 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226991438 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224087499 seconds)
  done (took 10.955073593 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226753468 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226295214 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.225866427 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227620764 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.226508375 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.22785505 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238766708 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24323975 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.228947973 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.229042278 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.234637514 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23767423 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232305128 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228304815 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.226724719 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231530135 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.227021894 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226458784 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226099716 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.228731953 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228143378 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231157308 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231165886 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224941302 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.229001098 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.242346603 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.23582439 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.226617626 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228826137 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.235223563 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.228820785 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.223559441 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227730736 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.226838148 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.226808635 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227964322 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241659614 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2456574 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.239401694 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22823722 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228204816 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224724296 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.231811426 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.232882038 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232382111 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.22818528 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228113037 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225848838 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230449199 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233042663 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.234315703 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228964649 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.228016335 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236890763 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.232533136 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238517872 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.245060872 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.233133907 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.238968956 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.243839744 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.246546947 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.239265273 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233081667 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.229153876 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240299315 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256823195 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240407347 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.243644602 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.227447209 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.22940557 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.241153145 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247612234 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.240814478 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.229625792 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230595442 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.230687315 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23447061 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229401223 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240725038 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.252132453 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230900827 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230405683 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241787685 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255443921 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.232757864 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.230149249 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.230293987 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.230836161 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.233671697 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245476373 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247388239 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.230985853 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.235505473 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.232954205 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.236001703 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.230938275 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.231960203 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233367935 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.228012271 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.231087631 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234469717 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236294462 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.243981242 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232477531 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231396975 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.243067383 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.232563452 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233107939 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.24470852 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.233942394 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231953381 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.233591291 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.240360186 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228126214 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236026817 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.242259602 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.231710007 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.238051503 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.231956138 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.231997174 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243373472 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.262640565 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.233280157 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.233161556 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.238866684 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.24697658 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231351667 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.238814293 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.233733087 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230711705 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.231293479 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.237215867 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.233369555 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.237892047 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233945526 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237295488 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.230463338 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.233471687 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.23242231 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.237027722 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.23636198 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.23566831 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.235895974 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.239036003 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.233148962 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.237543231 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.245186612 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.237271614 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.237678562 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.238259188 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.23215375 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235961839 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238719377 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.234510691 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.237887645 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234743918 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.2340962 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.235193531 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235395765 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.235302032 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235320993 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238156257 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240368665 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.234892275 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243040266 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.235976585 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.232686175 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.235094224 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236079197 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.23758081 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.234814271 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.23618445 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.238036401 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.243158689 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.236683469 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.235872622 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.240753706 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235152329 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236261989 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235400274 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.239586918 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.246130749 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.235645842 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.245875667 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.236474716 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234957054 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.236258185 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.23903903 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.238339387 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235833508 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240755379 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244196249 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252785141 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249634453 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.239252981 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.241086391 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.24042107 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.239777131 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.244515256 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.234818887 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.236905029 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236409513 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23733294 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236609766 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.240764543 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.236550958 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.238287339 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.236021544 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.237952614 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.238040102 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237099729 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.23960703 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239903292 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.23612518 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238314863 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236690133 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.237734773 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.234691313 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.237095753 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.237148424 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.237665365 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239762095 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.2507004 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.235104626 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241293141 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24107308 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.239521784 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.238989949 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.238026865 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243549949 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.241357227 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248162968 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.256849686 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.23972802 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248122295 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.257901341 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.239570253 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.243606858 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.239376107 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.237004904 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.2436425 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.248402978 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.240324699 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.239623949 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.240088786 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240719084 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239797502 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250033814 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.238285506 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.239206196 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.240612624 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.244651002 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.237041628 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.243767516 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.243087244 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.242322176 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244053522 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240376003 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.240331466 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242350902 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.239652093 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.240165839 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.239594332 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244062979 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.249068728 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.248562052 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.243013255 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.245274604 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243320853 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.245511365 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.242769431 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.24058272 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24183711 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255095643 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.2495841 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250633775 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.245705702 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.240340669 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250407176 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.24429239 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.248074143 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240979422 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244271143 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.242110741 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.242098082 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.238772166 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244020423 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.241116279 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244277829 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.243138042 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.245551702 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.241168106 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.242283291 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.242208843 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.241359861 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.241495809 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.243872725 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.242285363 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.248318696 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245586949 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.242848432 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.242420793 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252404969 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261030215 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.247428654 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.243706777 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.244438103 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.244186011 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.245812547 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.242389303 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.24814745 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.250354543 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.246487099 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.256022408 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.245487954 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25721029 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.241889932 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.24691536 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.252056919 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.241243968 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.24336259 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.245072067 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.242733143 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255130528 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.261042023 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.244478299 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.247609135 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242974175 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.243569785 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244094851 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.244255744 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244502477 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.243878586 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257376278 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.262957599 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251488776 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247527721 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.242816981 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.244372409 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.243694231 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245351188 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253097504 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.244386731 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246755598 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.246389563 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.246149785 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.24477092 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.244405493 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245841411 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.24370932 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.243793782 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256673235 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.263437083 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249276165 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.243827073 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.258329044 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244239478 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256973272 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.260923377 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.247623055 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.244663777 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.245941711 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250055829 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.246738082 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.248542332 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.244764064 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.246907321 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.24904502 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.246325912 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.250237284 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.247969526 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.246086595 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.247761077 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257503262 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270705043 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.249283835 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250655869 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.243532926 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.248623155 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.249207375 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.245906383 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.245629169 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.249027367 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258232753 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254570257 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.248552194 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.245886108 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248413807 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247859189 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.247717717 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.247532165 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.247272592 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.248311569 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.251799449 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.24700796 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254269408 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.248062291 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.25144193 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250413704 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250591226 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.261738006 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.247183842 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.250835834 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246830662 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.24726927 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.250584063 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.250544722 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.248542382 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250699614 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249785348 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.249012757 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255622646 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.256129366 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.253903278 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.249141775 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.24765051 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.250600316 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.252303771 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248795897 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.248340516 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249139554 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.251985463 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.249348178 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.2519755 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.248793896 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.24836354 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.25292498 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250179216 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252920824 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258154104 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249876136 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.246032811 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.24971825 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250045223 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.250004647 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.251506459 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.262225113 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254456849 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.26312554 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.259356542 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.25408311 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.251033541 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254440533 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.260714234 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.250183795 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.252346304 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.249744973 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.254932586 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.251732756 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.256408357 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250465682 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.262070045 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.252496448 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.251935641 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262148721 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.270283625 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250548207 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.253173782 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.256728601 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.250802849 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.248399518 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.250375449 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.251120102 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.2619049 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.273167041 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250534773 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255441454 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.250044942 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.253014975 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255625985 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252399758 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25460658 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.249728239 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.252444646 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25076863 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250854164 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.249126159 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.253033378 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.251823209 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.254932868 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.26006969 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.247859418 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257162725 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.254709853 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.25508248 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25199166 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252661771 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.249954102 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.249979381 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.253379216 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251545938 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.254236399 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.256736852 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.253967813 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.254354269 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.252967064 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251479707 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256063273 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.264377672 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.260887785 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.249738737 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.253849143 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.255625537 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.257519659 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251429647 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.252439433 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254342267 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.258498719 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.253170216 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25379574 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.25265888 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.256819276 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27412817 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271051921 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255289828 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.256249588 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261463701 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.254114986 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.251250694 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.254338078 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.25906988 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259467911 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.261966484 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.252879185 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263584714 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272375039 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.255711786 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.25805396 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.260248641 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.264849787 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.258034584 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254756257 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.253289612 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.261060823 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.276228044 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254205969 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26623374 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289161225 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.273627845 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.257482193 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.254348503 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254016844 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.253938199 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.258826434 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.253646738 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.254416208 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256040254 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.254685256 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.256487868 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262646629 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.258632134 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.254904431 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.254682554 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.257794778 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.258847872 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.252898565 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.255468226 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.255698014 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.25509161 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.254001946 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.255152149 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.258404661 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271998019 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.270485948 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.257307346 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.257808685 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.254626461 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.263022205 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.261504066 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268020177 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.264676479 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.255376698 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.254994793 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.259485853 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256503692 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.254049675 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.258536703 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.258355193 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258475272 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.254162923 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.273438117 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265835978 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.265445291 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.259712094 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256013667 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.258045205 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261805373 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256344768 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256553388 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.262008475 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.258669554 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260595937 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.257778376 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.258162669 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.2607343 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.266729596 seconds)
  done (took 743.529581895 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254550084 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254926221 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255510868 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256006755 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255121364 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255831213 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257063654 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257349957 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.255667843 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256112018 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256658467 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255666084 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257472755 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25579592 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256292044 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255375888 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256555771 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25593249 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255715497 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256763324 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255538464 seconds)
  done (took 27.566633836 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.257547439 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.256258463 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.256542257 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.259147842 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255742789 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25906843 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.256227572 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25883195 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259481121 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256737932 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260093207 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259098435 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.255317316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.256130398 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256122064 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258744661 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.259333489 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255406785 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.260464513 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.255546508 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259151408 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.2553733 seconds)
  done (took 28.858801659 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.25948172 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.258609087 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.261189769 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.257068881 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.257096607 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.255446424 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.255434357 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.256807612 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.257389312 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.259979078 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.256898657 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.258652685 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.265176118 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.263799028 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.262348607 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.257019289 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.40282755 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.258123124 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.25745896 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.258170375 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.255542534 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.266853696 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.253146122 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.254921657 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.257154412 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.256118802 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.257689307 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.257942469 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.257389953 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.259197544 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.259834613 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.257573486 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.257463163 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.260671129 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.257146817 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.262079488 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.261643627 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.255832582 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.253691385 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.257725634 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.267990596 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.27794765 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.256620632 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.268397012 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.256327521 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.257179492 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.260899767 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.26496873 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.254395944 seconds)
  done (took 63.036029525 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.256815458 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.258185646 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.255502394 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.257375063 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.256926954 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.257378318 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.256766722 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.256923551 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.255384947 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.255350003 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.257721063 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.255696389 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.254440716 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.257579227 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.258522029 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.25422801 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.255538526 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255137143 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.255211945 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.254665357 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.254912399 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.258365119 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.257898145 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.255623826 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.259070838 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255755712 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.255777866 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.257715664 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.255855404 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.254675536 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.259033839 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.257884795 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.258142538 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.256440342 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.254570856 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.258283843 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.258875602 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.255936547 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.257393506 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.256289106 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.259927796 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.257723105 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.259228161 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.259086849 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257868952 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.257152561 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.256315734 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.256173256 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.256991035 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.258972402 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.259804999 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.257598031 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.259873601 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.255856026 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.259871491 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.259446061 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.257762662 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.257730256 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.259937436 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.258573369 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.257829003 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.261124071 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.258447291 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.260844896 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.260666316 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.258284461 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.258898611 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.261090081 seconds)
  done (took 86.699671135 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260684278 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.260496898 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259802978 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259214929 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259516995 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.259779235 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.25950442 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.260058061 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.261651501 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259529941 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2599951 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.259587792 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.260163616 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260501803 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260528404 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260558032 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260404328 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261147155 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.261856576 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261219615 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.261010827 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.259194694 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.262037758 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260706197 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260703265 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.260371912 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260485653 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.260684858 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260309386 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.261008868 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262054382 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.261511959 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.260536534 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26024731 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.262490224 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.260715097 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261350344 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262369664 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.262249029 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.261693931 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.26046413 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262754403 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261495995 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.261365418 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261788477 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.262016073 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.262175419 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.262097394 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26335792 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262401034 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.26218347 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262326411 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262635462 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264128799 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.262169488 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.262800753 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263834891 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263280525 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263121638 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.262804102 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262908572 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.264460568 seconds)
  done (took 79.400043896 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264054832 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263486077 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.262457356 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.260191977 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263805781 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26202456 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264472427 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.264250422 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.263518381 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.264865151 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264580862 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261116075 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261560538 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2640582 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.262292328 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261571134 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262133599 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.261240746 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264649203 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.262762707 seconds)
  done (took 26.457494502 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.262848159 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.264628472 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.262198409 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261587921 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.264589323 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.261910742 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.265784197 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265408678 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262594509 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264943788 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264600289 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.265367014 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26435233 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263417025 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.266422625 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.262939807 seconds)
  done (took 21.422001792 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.263584383 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.26666197 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.263646944 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.265127433 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.262111734 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.264125326 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.267216342 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.262318592 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.262768451 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.266600275 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.266436089 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.265914596 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.266380283 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.265368529 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.26375573 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.266697877 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.263830219 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.264474988 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.266985284 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.268445157 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.265672567 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.26536094 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.266349681 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.267339424 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.265848171 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.265792321 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.263956932 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.265490917 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.265128631 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.268448619 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.265923597 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.264409382 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.266438602 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.264132837 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.266719309 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.26580344 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.26734236 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.266976229 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.268158775 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.267924957 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.266582937 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.265191748 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.267175594 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.268872468 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.266254247 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.267056679 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.264447663 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.266916542 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.265546687 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.264869057 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.268469226 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.267426538 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.267053904 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.268627049 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.268200806 seconds)
  done (took 70.828954247 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.26761848 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26880893 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.265194565 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.267400903 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.269070064 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.266564672 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268995277 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266225798 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265267327 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.268573629 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268821779 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269183719 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267425024 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269324319 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.267824744 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269398615 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.266310431 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.267492313 seconds)
  done (took 24.020752988 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.266979836 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266650098 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.269582456 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267383794 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.266123157 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270486402 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266720857 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.268927643 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270741242 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.269201003 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267953846 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.272610197 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269934029 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.271206622 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267488435 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268173875 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.271045009 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270466936 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268117727 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268044602 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271094927 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271433161 seconds)
  done (took 29.122832718 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.27068869 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.270666637 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.288448219 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.316776824 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.305311534 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.26986087 seconds)
  done (took 8.924406908 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26843997 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270230626 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270373731 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271789426 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27106904 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269868607 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269389176 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270020836 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270881679 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27040624 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268674261 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271283553 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27153938 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268225125 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272132315 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272244852 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269097698 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270802923 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269350568 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272705372 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269448182 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272750243 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269307711 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271667927 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270980728 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268682198 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271437166 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271822882 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270994693 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272878895 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272429979 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270718789 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27379464 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270278288 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274361575 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272331184 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270688985 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273403129 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273604921 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269842907 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.272493556 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272467482 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273730322 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27230663 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272907881 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271359216 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27090158 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271319094 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271733761 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273610984 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273071128 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271366726 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272985734 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2742647 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273262915 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274928042 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273183458 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272744843 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27361447 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272920904 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271306799 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27490545 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272935949 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272736996 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274880585 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271337355 seconds)
  done (took 85.138806097 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271500786 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271807358 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270153809 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272929625 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272542866 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273472921 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273198545 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272345885 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272752156 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274635903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274600809 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272425362 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273861183 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272541443 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274061117 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271901549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274153626 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273784223 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273092258 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276241144 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274756282 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271972746 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274041764 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273552293 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273675137 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275801686 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273604954 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274281168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274531773 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273600935 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274384549 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272791075 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273816843 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.272827417 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272352403 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272663836 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274409697 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273491135 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273953834 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276562523 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272983464 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277807408 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275484337 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27408216 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274997099 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274125843 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275216798 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274335607 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274130258 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27530272 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275449925 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276364083 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274701087 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275835253 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275184433 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275444652 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274260274 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274544139 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27452217 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27763163 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275477723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275351876 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278327174 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275345505 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275159115 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274871838 seconds)
  done (took 85.304565577 seconds)
done (took 1730.41662554 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.278125203 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.305734094 seconds)
  done (took 13.792210568 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.44120626 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.390347553 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.277911471 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.30834685 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.27687567 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.295793055 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.299251288 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.276586601 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.278251688 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.278886271 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.278148495 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.463035132 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.27334267 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.277797292 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.279312333 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.371641711 seconds)
  done (took 42.27984699 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.307866515 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.285614654 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.394397046 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.299048363 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.307313511 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.46068481 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.336220952 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.283965299 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.447572701 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.323471346 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.788154052 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.306923218 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.282648396 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.347222825 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.299960137 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.460308802 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.517757695 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.788006139 seconds)
  done (took 29.448969831 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.712739595 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.273951862 seconds)
  done (took 9.199582004 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.314762476 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.307653538 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.314946159 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.283562572 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.276088935 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.336839844 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.333219552 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.290022749 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.322172214 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.330092745 seconds)
  done (took 64.32603409 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.303249744 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.2839418 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.284112634 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.280899387 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.273825163 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.273418568 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.283769652 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.28345791 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.757596138 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.402712818 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.294143145 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.292078542 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.283634221 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.284351508 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.278692896 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.319994997 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.42851082 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.2795122 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.27798709 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.28981656 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.282997078 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.392338271 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.31990073 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.278001334 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.402097371 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.74662883 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.2850755 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.287604309 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.402095044 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.280252661 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.281757495 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.283387451 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.285066631 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.853357046 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.71820517 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.286504824 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.318068944 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.291503065 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.279591573 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.425201133 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.284576804 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.289190367 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.27633443 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.708901932 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.430355359 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.390992995 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.482426754 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.281443013 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.284329015 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.342901622 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.281876396 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.284817246 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.311474141 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.02563055 seconds)
  done (took 108.046329038 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.331094353 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.773786055 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.445302091 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.294691727 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.901761771 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.956045863 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.275511724 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.553129954 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.292627717 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.275462272 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.55328201 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.767266711 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.277368159 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.349315651 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.922591086 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.354419856 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.276946636 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.040678097 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.279697032 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.2824738 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.688071069 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297950852 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.275634018 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.542680484 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.313974943 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.729677233 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.644312212 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.702964981 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.278126489 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.275395106 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.731162392 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.278819412 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.326887294 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.278650669 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.55060134 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.633117944 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.611279671 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.28392965 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.317802082 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.278548819 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.300076867 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.725444422 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.620419375 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.278762051 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.276959103 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.750531333 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.27647613 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.289160049 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.284837042 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.476303149 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.204435203 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.280104765 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.651002984 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.277171832 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.537324656 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.352337334 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.323589194 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769069556 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279046786 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.345847458 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.283723245 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.277986121 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.286223036 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.281444841 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.2810298 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.626954806 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.637592853 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.284408989 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.629304259 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.728086224 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.27960449 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.803984825 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.22156851 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.309961926 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.31646475 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.2810458 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.866370466 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772153748 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334315577 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.279751607 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.614276358 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.283927992 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.555213195 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.291568752 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278642982 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.69779127 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.294796709 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.334906053 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.279268871 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.279048226 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.918098427 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.283049478 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.543703439 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.314090291 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.282173223 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.280452796 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.328092546 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.279733945 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.280424841 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.288782638 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.791250019 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.282198747 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.40913725 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.299914124 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28455441 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.281683498 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.28144739 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.282977377 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.49645738 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.758622828 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.284617866 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.283289557 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.27981872 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.2961373 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.515759466 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.286902065 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.586472286 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.286145325 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.285140385 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.282370041 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.005547052 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.315742518 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279738827 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.283865567 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.127177995 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.490297085 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.29936955 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.282115432 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.281649011 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.297147224 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.583673578 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.281836346 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.317735322 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.282913018 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.969517964 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.286368517 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.28443267 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.867365148 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.289587336 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.221577175 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.30382537 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.281241287 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588628453 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.55543575 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.518197156 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.282579346 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.284289654 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.961155142 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.290729379 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.429743639 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.301947372 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.269833908 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.480998282 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.573387685 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.285155423 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.83669328 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.284989491 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493064727 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.284395346 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598604677 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.761508512 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.285392912 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.284903324 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.973405408 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.937730462 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.095602406 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.287390553 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.562551837 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.244949942 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.738765625 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.284300445 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.284167673 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.746193087 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.286437687 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.290124829 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.284463816 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.285851676 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.429426167 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460110102 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.467059781 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.285665647 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.746284435 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.285803039 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.284012485 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.291230529 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.286546444 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.638230058 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367511136 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.285656676 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.297237277 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.286528176 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.284307079 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.760891621 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.249357828 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.285502331 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.43934371 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.902571137 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.287376821 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.288227461 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.933314412 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.567911047 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822505382 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.308818175 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.594716483 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.291947479 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.325175615 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.858737654 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342128278 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.757965842 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289193201 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.286551889 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875365862 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.287323949 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.349817783 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.285568909 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.286584861 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.802887782 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.287698904 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.290638452 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.609757561 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.28654203 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.529555894 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.286692325 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.300829804 seconds)
  done (took 1099.164199882 seconds)
done (took 1367.466735745 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.28511361 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.286140394 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.274582224 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.286840171 seconds)
  done (took 26.355633871 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.296683359 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.293871266 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.293776318 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.294525261 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.296211228 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.295635259 seconds)
  done (took 8.996738558 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.366100762 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.286331936 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.288729436 seconds)
  done (took 19.166102381 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.501589127 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.518557462 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.640410843 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.381512835 seconds)
  done (took 10.269818297 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.29531838 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.294435447 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.2954364 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.296157916 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.296741785 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.298512253 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.29532999 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.295852137 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.298619964 seconds)
  done (took 12.891594022 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.07385025 seconds)
done (took 83.978480368 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.289784379 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.017370415 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.336232023 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.603565614 seconds)
    (5/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.289893355 seconds)
    (6/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.047375385 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.274280393 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.566401866 seconds)
    (9/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.285696913 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.351232714 seconds)
    (11/309) benchmarking ("sort", Int8, false)...
    done (took 4.308856232 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.316133814 seconds)
    (13/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.874647174 seconds)
    (14/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.627554431 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.938601851 seconds)
    (16/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.316032738 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.547377632 seconds)
    (18/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.32846005 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.007782257 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.337015332 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.651677395 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.139087356 seconds)
    (23/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.879288508 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.594145038 seconds)
    (25/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.306918747 seconds)
    (26/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.839742746 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.036922593 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.572861663 seconds)
    (29/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.305663049 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.374534416 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.316901943 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.31555064 seconds)
    (33/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.558038202 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.275607489 seconds)
    (35/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.504618695 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.598143199 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.605258286 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.290429966 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.175869454 seconds)
    (40/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.370133895 seconds)
    (41/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.577690602 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.393094984 seconds)
    (43/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.317709985 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.186533196 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.363606391 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.89736722 seconds)
    (47/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.50145649 seconds)
    (48/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.33146716 seconds)
    (49/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.290558862 seconds)
    (50/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.705190739 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.861539796 seconds)
    (52/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.374338933 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.89433102 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.296765671 seconds)
    (55/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.072823625 seconds)
    (56/309) benchmarking ("sort", BigInt, false)...
    done (took 6.303236038 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.290125862 seconds)
    (58/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.325875952 seconds)
    (59/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.37332144 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.40221844 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.570442781 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.653145267 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.917042646 seconds)
    (64/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.894835131 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.355342389 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.691437977 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.535110575 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.037369127 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.128956776 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.346305656 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.279061122 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.143756728 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.608097185 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.997033101 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.688686031 seconds)
    (76/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.279418277 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.723143198 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.025308616 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.291296996 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.370822121 seconds)
    (81/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.319229232 seconds)
    (82/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.294366926 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.905381533 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.249711267 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.145588337 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.35737664 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.376539612 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.279058532 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.515140039 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.370064997 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.298481216 seconds)
    (92/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.497864855 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.316171997 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.418798168 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.678293481 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.707710067 seconds)
    (97/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.311945205 seconds)
    (98/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.313615529 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.137329257 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.390927251 seconds)
    (101/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.419708497 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.306856371 seconds)
    (103/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.405052122 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.492611342 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.281979932 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 5.571191324 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.862255063 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.192829148 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.294754411 seconds)
    (110/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.187091282 seconds)
    (111/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.414843838 seconds)
    (112/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.375944619 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.629964062 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.004045118 seconds)
    (115/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.656147999 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.493841436 seconds)
    (117/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.417816879 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.29352993 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.403160994 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.281737197 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.781473218 seconds)
    (122/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.538322608 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.865479415 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.709753137 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.945536557 seconds)
    (126/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.304143536 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.203330582 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.800915359 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.317668799 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.574224838 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.29551387 seconds)
    (132/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.484719314 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.379173756 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.393759428 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.049306124 seconds)
    (136/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.834568599 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.570665759 seconds)
    (138/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.380226591 seconds)
    (139/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.85522425 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.651408484 seconds)
    (141/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.036570373 seconds)
    (142/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.331762384 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.296314756 seconds)
    (144/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.890763827 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.424916933 seconds)
    (146/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.286114869 seconds)
    (147/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.335322801 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.577945737 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.297656589 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.033054722 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.32116989 seconds)
    (152/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.321291666 seconds)
    (153/309) benchmarking ("sort", Float32, false)...
    done (took 5.299507379 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.317153219 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.02961131 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.699470072 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.31647722 seconds)
    (158/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.651949418 seconds)
    (159/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.67317704 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.298926012 seconds)
    (161/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.173331288 seconds)
    (162/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.299595129 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.38393971 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.857762984 seconds)
    (165/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.841020329 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.239015497 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.419425213 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.394892266 seconds)
    (169/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.281473081 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.344198178 seconds)
    (171/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.651854102 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.282076223 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.372223111 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.713859723 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.938293101 seconds)
    (176/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.301222044 seconds)
    (177/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.427976256 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.693724019 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.300516821 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.328475656 seconds)
    (181/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.338558875 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.32615282 seconds)
    (183/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.30749706 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.324879285 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.43558552 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.299178575 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.690953113 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.341407123 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.850185512 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.346503046 seconds)
    (191/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.379649151 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.136474104 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.297429459 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.298737276 seconds)
    (195/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.141464531 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.641733702 seconds)
    (197/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.076893529 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.299879591 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.074403318 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.349689338 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.412226833 seconds)
    (202/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.340194586 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.315673531 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.357487085 seconds)
    (205/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.171028952 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.460734357 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.530787489 seconds)
    (208/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.285471243 seconds)
    (209/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.571279336 seconds)
    (210/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.65348099 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.319439227 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.491372781 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.314113913 seconds)
    (214/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.384468591 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.838628649 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.516729373 seconds)
    (217/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.153073543 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.033127904 seconds)
    (219/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.320919651 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.301547455 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.15877547 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.80452749 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.302173255 seconds)
    (224/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.410373858 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.323081914 seconds)
    (226/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.514449493 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.303586788 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.6687341 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.407564435 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.968635446 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.328637521 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.346658246 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.302758165 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.360473258 seconds)
    (235/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.671378228 seconds)
    (236/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.366159104 seconds)
    (237/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.672708367 seconds)
    (238/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.28627055 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.42160968 seconds)
    (240/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.898130285 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.303149644 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.304847473 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.739468672 seconds)
    (244/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.690952378 seconds)
    (245/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.917698478 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.712215328 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.612421242 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.664571218 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.301588153 seconds)
    (250/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.622529694 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.155099752 seconds)
    (252/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.13769241 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.327275027 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.304829881 seconds)
    (255/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.678559915 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.303021444 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.719686711 seconds)
    (258/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.597446134 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.302969129 seconds)
    (260/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.424942614 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.619612368 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.312835416 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.871945786 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.172971957 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.515681974 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.801735424 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.148811164 seconds)
    (268/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.301733739 seconds)
    (269/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.449290773 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.763577125 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.296181955 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.331354551 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.415803315 seconds)
    (274/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.345534824 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.291596401 seconds)
    (276/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.666350201 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.684030902 seconds)
    (278/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.306716845 seconds)
    (279/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.363438573 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.288879382 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.502737424 seconds)
    (282/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.529770369 seconds)
    (283/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.400274437 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.716071258 seconds)
    (285/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.606603844 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.306089118 seconds)
    (287/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.637586707 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.773536614 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.153611989 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.385729332 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.384637628 seconds)
    (292/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.489472431 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.422493167 seconds)
    (294/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.488126611 seconds)
    (295/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.847222028 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.455465489 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.910890135 seconds)
    (298/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.88076243 seconds)
    (299/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.401096154 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.346207407 seconds)
    (301/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.289392904 seconds)
    (302/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.797743482 seconds)
    (303/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.725329476 seconds)
    (304/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.764418935 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.345090723 seconds)
    (306/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.423633598 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.402291989 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.745982468 seconds)
    (309/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.900725096 seconds)
  done (took 911.463068408 seconds)
done (took 912.693312949 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.33685503 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.330883601 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.314544297 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.335428291 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.427731351 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.343879335 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.327969889 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.317177663 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.363278877 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.364349931 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.31490838 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.343106515 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.317060495 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.315751694 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.316056881 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329025998 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.329676817 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.316063089 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.332241473 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.324674277 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.332433895 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.313751769 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.365034775 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.342690319 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.320629961 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.320196444 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.319740271 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.33515753 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.428665544 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.319477573 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.318561032 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.328149164 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.329772539 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.317133356 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.311101906 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.338243347 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.32925566 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.325853582 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.320526614 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.349486915 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.725398021 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.316577654 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.317036749 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.317353332 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.317549996 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.321379699 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.31963963 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.324121168 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.331958001 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.329646489 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.674057017 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.331369704 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.320538942 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.318372815 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.329737362 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.319565866 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.322041954 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334140825 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.338543292 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.333889023 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.327403247 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.323160406 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.31993876 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.33634135 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.32753437 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.785166343 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.312657106 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.323921226 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.73619101 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.324243065 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.731069648 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.326915896 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.320979719 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.333943352 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.352177447 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.338619269 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.313631916 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.319168761 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.327897717 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.31782663 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.328870452 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.333849135 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.324777599 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.32085274 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.334151728 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.347653432 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.330173406 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.321715382 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.329517461 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.341355789 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.32811397 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.333338839 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.322778887 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.315944706 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.330117765 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.324361656 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.324141591 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.322664734 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.325598619 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.332309433 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.737827447 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338684015 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.318785119 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.315638469 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.319776743 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.335315597 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.739508535 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.324238969 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.342400643 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.369681861 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.322757106 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.332937229 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.326488075 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338295484 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.33076559 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.323893313 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.316672842 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.334173794 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.762818739 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.336782611 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.323779454 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.32034929 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.337623342 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.324188855 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.318886032 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.344684264 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.325648445 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336468279 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.444355743 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.33263827 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.354129504 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.321411733 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.324397599 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.351781632 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33946233 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.354085669 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.325668715 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33717043 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.33819441 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.318431796 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.332488925 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.332829212 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.322341328 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.328109233 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.316989824 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.352220261 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.334305996 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335550513 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.342229562 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.445757512 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.319834955 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.335433997 seconds)
done (took 222.967944939 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.382750954 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.321009484 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.406382155 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.320132836 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.419893773 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.420871908 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.317368872 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.320202153 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.318574477 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.701429759 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.319142487 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.319400904 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.317022257 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.319314034 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.405926758 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.320351893 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.318908214 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.664310592 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.321442862 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.391437278 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.322093068 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.318279955 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.320613058 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.728060772 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.317835014 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.319183136 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.391887871 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.321424579 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.669234632 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.316960369 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.318462504 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.668452639 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.412548213 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.339947568 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.332783515 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.330660245 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.421840579 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.339483531 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.404482045 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.403985509 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.408080265 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.360258035 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.320855861 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.323262517 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.324754782 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.322136011 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.322030532 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.349490777 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.322133611 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.31949868 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.663233356 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.333111128 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.320577194 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.321353682 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.321703131 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.35161655 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.320496467 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.323800575 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.416203903 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.324073774 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.385881281 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.733201046 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.704672274 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.323499488 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.321737372 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.321054514 seconds)
  done (took 147.733617122 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.392268869 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.395327578 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.436999648 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.326843651 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.375196991 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.443365075 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.324032744 seconds)
  done (took 10.947444627 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.331699788 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.324169758 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.373892506 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.37425546 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.324385406 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.470638056 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.325073596 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.33723454 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.323787675 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.37850911 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.3258201 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.326648797 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.332500559 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.324137728 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374881663 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.337851189 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.440444487 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.325911485 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326031594 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.476166459 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.323355287 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.332557876 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.378486982 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.338087883 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.326235818 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.333321661 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.896342488 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.325646998 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3236976 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.325932025 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.323370198 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.364749328 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.326979069 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.319629424 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.322996483 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.443182246 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.325657529 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.323564017 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.32609183 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.321575896 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.325639928 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.32914695 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.329962168 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.325197536 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.327807866 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.350649094 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.325386599 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.326953774 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.326400206 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.327279641 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.378231933 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.326222995 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.324927508 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.325515629 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.382780324 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333633531 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.32730872 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.327250554 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.328200217 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.324744216 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.480323906 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376111303 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.327737647 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.377221773 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328349131 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.329244879 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.329461503 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.327217337 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383937498 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.327897946 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.375514383 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.324940112 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.481319629 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.352661272 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.328771527 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.331494804 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.332133304 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.326698525 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.322697658 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.3352447 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.327416666 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.332090101 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.335531188 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327661454 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327153481 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.432181208 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438429607 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.326323124 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.342644293 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.334690635 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.325972763 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.382864447 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.328198921 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.326600628 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381674663 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.445605357 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.382856473 seconds)
  done (took 152.582111079 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.334761963 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.339088447 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.330833596 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.34714063 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.331852901 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.328829327 seconds)
  done (took 9.271619833 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.331947106 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.33216047 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.330375461 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.330253622 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.331184633 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.330495867 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.329186841 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332477296 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.33504583 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.330041569 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.332603934 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.332174537 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.330981788 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.329384219 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.330177677 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.329626427 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.331688547 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.328786904 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.331910667 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.332228606 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.425186513 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.330388821 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.329416778 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.332977232 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.336838646 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.331581912 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.340654238 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.332443113 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.332709044 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.339737404 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.334871084 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.332706 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.334093409 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.339751216 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.335968647 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.335308125 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337360575 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.334402898 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.330354084 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.332514374 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.3349442 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332873866 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.333985965 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.33317716 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.335646415 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.338583748 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.338311353 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.340121271 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.33330797 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.331832861 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.332473425 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.332455636 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.334727926 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.33576027 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.339051267 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33964791 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.339408392 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.333736033 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.333759482 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.336843545 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.33485289 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.335102492 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.337830525 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.337673833 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.339562712 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.335941697 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.336299922 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.339108949 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333287167 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.333294285 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.335433464 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.331982136 seconds)
  done (took 98.40543595 seconds)
done (took 420.190314602 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.73633506 seconds)
  done (took 7.998454713 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.442021675 seconds)
  done (took 7.708902396 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.291795515 seconds)
  done (took 21.567577726 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.369111297 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.391574432 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.356104611 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.32854331 seconds)
  done (took 26.711867013 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.692170133 seconds)
  done (took 7.958411397 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.328114925 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.325924246 seconds)
  done (took 13.923511662 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.342775612 seconds)
  done (took 7.609466313 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.804753862 seconds)
  done (took 8.078959327 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.338470003 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.349403649 seconds)
  done (took 14.220684968 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.326963927 seconds)
  done (took 7.592813963 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.172640929 seconds)
  done (took 8.438158129 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.33532289 seconds)
  done (took 7.602736032 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.336025017 seconds)
  done (took 7.600814757 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.155609659 seconds)
  done (took 9.42152623 seconds)
done (took 157.69723447 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.329289571 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.327357206 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.329656493 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.325712064 seconds)
  done (took 26.576080095 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.367292535 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.36842944 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.370151958 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.379486347 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.372745787 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.368733759 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.36133298 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.360903687 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.379889889 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.371066822 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.371684777 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.371706063 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.369402832 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.361742291 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.371920586 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.373065942 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.381249053 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.371662036 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.363444953 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.374246002 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.337417324 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.38140389 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.371958269 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.336509402 seconds)
  done (took 34.104252241 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.535436293 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.407961589 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.489444174 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.388418621 seconds)
  done (took 7.087036807 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.388037018 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.389502477 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.401913008 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.440182359 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.478154083 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.399803778 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.365925012 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.361077729 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.34592354 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.390493854 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.467340193 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.406331137 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.47258206 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.338005709 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.53654061 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.338617018 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.338050207 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.391417589 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.442324043 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.456053113 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.337544749 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.391580342 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.394883851 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.407930995 seconds)
  done (took 34.946782267 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.337429031 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.345913986 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.345082915 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.337626839 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.337935098 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.337974876 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.343997988 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.338818612 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.35981449 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.340200699 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.338653821 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.337957305 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.336649855 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.338249639 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.338602232 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.350626776 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.351115322 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.337870502 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.340064555 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.343803975 seconds)
  done (took 28.107175064 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.33309751 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.188835012 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.683656147 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.587427934 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.334207614 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.329681782 seconds)
  done (took 27.725297718 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.406928281 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.538371636 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.340950775 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.701212803 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.771654027 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.339935632 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.340250783 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.575491927 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.880771379 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.881741426 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.394958962 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.406995401 seconds)
  done (took 19.850905907 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.345507874 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.334884092 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.333840687 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.350854506 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.396993195 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.345552271 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.347308085 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.332642032 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.395490924 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.399600922 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.345298013 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.396502621 seconds)
  done (took 37.596116875 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421261482 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380322357 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.378146543 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.083719342 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.710603035 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54493912 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.081258836 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.763828988 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.337667529 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608650247 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340677432 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423359546 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.590538276 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349802616 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337703294 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.341144601 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563147625 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824660943 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33681312 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.247197336 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363257182 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348417636 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.36782368 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.363834704 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547500189 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.464379573 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.596159048 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335143019 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612416398 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349183466 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347630482 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336516972 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609924281 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015752685 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427989846 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346369548 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.049089219 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.050617319 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.3258547 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.280850598 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261914917 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.338324416 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348242963 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33572407 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.270623737 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336784617 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772568539 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.34180125 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.046219411 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336827575 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347026344 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434309862 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.340126005 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.152479284 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34970717 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337553529 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.337788482 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343982796 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906553356 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.78776765 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341082407 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.273084985 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.447026505 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.259566727 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949663429 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.438641758 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.341873239 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342665017 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271902005 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.330213619 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356680321 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486482144 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.359995548 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989669351 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021240067 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.348252072 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267930021 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889684573 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33893444 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.289276976 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567679028 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339720356 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276502385 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.284122496 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.274669021 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069939105 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349509911 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.739631004 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346509313 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.768464363 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.353450616 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35766346 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363756024 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.563447014 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.223471413 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340659809 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.296693551 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519310624 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358776871 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.770535207 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274572176 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.343065543 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594569306 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.551543922 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352121351 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.349620494 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542591412 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35268083 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.357216254 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.342997526 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.351002914 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.913368115 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352671489 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.801870511 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357887704 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.340785291 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102227912 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356713348 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.44111262 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.342492363 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591718507 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.139975342 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341736774 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423081375 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34421237 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341855813 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.3982265 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.857687647 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.342055338 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.343796199 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351541595 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.352314395 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.341177397 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290217443 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.337881422 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349687502 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.344907932 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.565682896 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345227598 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619188256 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274460655 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489993606 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.433344353 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.561805729 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.523105623 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.34043216 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600972393 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349858951 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349011773 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353520387 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359851849 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4414401 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363846846 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.353665138 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.599697116 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.348321857 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.347238405 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.840941534 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347051026 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351774946 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.34817564 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.173508979 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915038445 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320916425 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350549233 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231869862 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.356436379 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408035369 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348927008 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.354424826 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.163107415 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.149975728 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.346557704 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.353746636 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565796555 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354984533 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.354466848 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424885826 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.53837215 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918156162 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357585356 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.277149491 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.053672286 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.035538678 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343924174 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.278264541 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342778294 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353213068 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355249977 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.569227945 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.914747011 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34361494 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.258064797 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.351490914 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355042631 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.350187804 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344362406 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.121192542 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.781372111 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347564078 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.374196353 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486369232 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.358775463 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.279142712 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.34678745 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349846191 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.345688709 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.344173933 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378963153 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.270007802 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827042927 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602029881 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.064931772 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356205431 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.450312954 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.374665627 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.350640082 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29022427 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369471846 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.363039023 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350770263 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.356193405 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.340228644 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005887973 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910228653 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04846077 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86808334 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313851233 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.354663131 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347371652 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.783863179 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279291688 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.900894372 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536445473 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.782361343 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290023376 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542352804 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.542857084 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109783163 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357051974 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573569394 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30781624 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.316303508 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372142465 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558276712 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38038454 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.35235478 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276733222 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.868531092 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574531184 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282966357 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426427731 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781506161 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29508966 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361335204 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.346269524 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.716201798 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516491346 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.056455554 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.515073112 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.344485085 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370124633 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827819079 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355073753 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.574884836 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96251562 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360271214 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.545838449 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285323311 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.359747999 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.359749956 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.349070095 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.623447786 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.350402725 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.599673393 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358474453 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283944965 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348914264 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881170412 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.202103328 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.35482117 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34711802 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097400075 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352309613 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628775588 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.35153333 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.105414152 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348293053 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.281569408 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28287321 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.040843632 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355202903 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325284364 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837728633 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.438239759 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.342763358 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377731111 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195081455 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603397879 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.362355196 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922592603 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572636486 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.134121643 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372022696 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.450366022 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.260366293 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.347514265 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347761735 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.585648309 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180026324 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.572925018 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.382694968 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.261068924 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.349249057 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56429024 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349557196 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349694983 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59400234 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.061118128 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.366021612 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036088676 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376362191 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354453999 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.263639457 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.458756192 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35600626 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431009072 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361498926 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.360868539 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.362521784 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523565856 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357055166 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352100497 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.365976346 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446767611 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.834045184 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.14135691 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.356319976 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931975303 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063603228 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930398285 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364470314 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.351008663 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36094367 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286626228 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499588486 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.577128161 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626055928 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479650957 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.497315993 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37438074 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363714104 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353443497 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563791771 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62733657 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.247648805 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351444595 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.366914593 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.351364397 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361529445 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.565011118 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84745079 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910077346 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468472654 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351727571 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.785084772 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626196497 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351785623 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35424518 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945757112 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.354937114 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.734493981 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.356726725 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36124632 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502056702 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364667056 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035042977 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.365712779 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.511020926 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.130659182 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.304746315 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609791614 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.820459527 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.365689141 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937761017 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.055353863 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620817513 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423943662 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36801274 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.464274539 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504682057 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.357443496 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354423533 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356442413 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200179967 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.06386766 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.365389544 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937437238 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618569627 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.354985306 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.357218746 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377731818 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.366495677 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.581853636 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076463393 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578355524 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365379708 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36362772 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.172523858 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941632483 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368316341 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290001769 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.359356307 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599500605 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594003492 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377586941 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.806826223 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.066695387 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917388938 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.326321087 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380120529 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356160247 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059429263 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939959826 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.128839611 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851272843 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.920371926 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35771207 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633841988 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.36220783 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357784215 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634176294 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.360349474 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359641907 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368915928 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.940524392 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132417571 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.359892044 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.320973212 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.295466775 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70045878 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991121979 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295745182 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366344054 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.54273799 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359119764 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48646006 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368452331 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.366141157 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360923548 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.114914631 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633856035 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.361028274 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.345607689 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.330501405 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359895836 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370205134 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590792923 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365563837 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.035493563 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.707941827 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.613205348 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.362709335 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.343974694 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.362260495 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360342428 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.344237225 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.553869688 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.584703969 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919101988 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.363848072 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.370507205 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362573726 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.576330536 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570189544 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365826535 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369269547 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365741767 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375469106 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.272064941 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.86030113 seconds)
  done (took 1598.427728303 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.4016408 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.39304249 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.398141706 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.385892678 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.379149042 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.475752333 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.411393518 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.471075364 seconds)
  done (took 52.612079804 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.369738219 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.570704086 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.392417769 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.361285171 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.36877761 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.366782357 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.805749187 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.373720554 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.368349864 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.37061524 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.367628033 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.370654986 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.997907685 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.369733276 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.364795775 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.346078687 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.367168486 seconds)
  done (took 65.835427618 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.374980265 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.968397906 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.389294034 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.362913119 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.454065549 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.375239215 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.206334527 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.392995463 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.368758745 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.703379926 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.014113331 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.408728935 seconds)
  done (took 85.316222062 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.368254918 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.367113794 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.368024928 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.367603357 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.368809366 seconds)
  done (took 8.136520266 seconds)
done (took 2027.587639551 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.614400453 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.064599355 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.041524842 seconds)
  done (took 5.403184565 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.510161789 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.557390288 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.722812535 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.695399125 seconds)
  done (took 7.783250971 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.639278772 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.731607732 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.548163318 seconds)
  done (took 6.214927668 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.764204583 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.362212915 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.437842896 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.359898038 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.362454418 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.361081139 seconds)
  done (took 20.381097479 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.366916347 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.367893624 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.368128009 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.369257605 seconds)
  done (took 6.771419128 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.348309344 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.119921313 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.345962162 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.364999147 seconds)
  done (took 18.476098054 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.112085963 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.125497101 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.109898374 seconds)
  done (took 7.647711914 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.362509426 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.210051226 seconds)
  done (took 9.870649901 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.682401728 seconds)
  done (took 2.97940337 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.496915675 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.630758551 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.379659453 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.328810123 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.403253758 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.223612967 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.019268062 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.591836152 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.31723033 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.520632538 seconds)
  done (took 28.213344575 seconds)
done (took 127.217061708 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.148384984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.389122499 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.570573998 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.122641778 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.595873183 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.567438433 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.866245279 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.091218551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.626275077 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.616755722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.12522019 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.595718143 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.58746479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.387635965 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.587438853 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.378812387 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.598060091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.197095877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.841182591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.004363604 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.868814296 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.756954909 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.950991437 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.77821956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.592805368 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.520200826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.352271864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.378095625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.019945572 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.366492238 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.519732131 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.183060776 seconds)
  done (took 190.485272266 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.375730836 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.37497423 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.36609236 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.36375528 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.363789397 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.376877701 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.366226126 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.364478995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.384813098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.378365376 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.364033924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.365107834 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.367499383 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.369050356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.363817348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.363664228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.363406499 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.370346599 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.362477911 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.364126476 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.376274481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.362510919 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.364777278 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.369498094 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.363897521 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.36609148 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.377634702 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.36353578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.373308105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.366870833 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.366307741 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.364176598 seconds)
  done (took 205.086300985 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.380717396 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.3657613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.366054911 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.36510162 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.365303922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.380440178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.367747295 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.375082813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.369028114 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.365310268 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.36591695 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.375671167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.365043827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.389969817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.366768048 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.380366973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.373449298 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.373354537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.366782335 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.365600467 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.366560793 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.380762522 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.378504864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.366123797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.38414484 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.367671562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.397131183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.367069417 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.365281624 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.384232913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.365884582 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.378208254 seconds)
  done (took 205.228209013 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.571214811 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.374668261 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.376151439 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.330129001 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.377013331 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.375531496 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.371010876 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.566691493 seconds)
  done (took 14.645738967 seconds)
done (took 616.745533462 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.658404041 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.372527428 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.573250795 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.398020605 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.1335175 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.394415523 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.397588293 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.567747509 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.304822709 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.569780945 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.617416242 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.39335811 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.758787732 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.393056586 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.649171344 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.492520566 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.241436594 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.34763045 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.705916089 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.900822802 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.640852814 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.861721809 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.565834987 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.305353106 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.757736167 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.862847062 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.086194335 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.243074175 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.394869928 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.711310427 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.996511566 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.307872758 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.45270111 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.43970661 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.491446598 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.476045339 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.305061001 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.434120271 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.575864681 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.626585509 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.908667352 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.109568323 seconds)
  done (took 92.728424528 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.365663545 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.365228741 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.363565897 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.364611862 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.366786 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.365713278 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.36345471 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.364980261 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.365172619 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.364544717 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.363258692 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.365615593 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.363896981 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.365509132 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.364089499 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.364755176 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.367250928 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.368104299 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.363719196 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.365066145 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.366973533 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.365000556 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.365832005 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.363527354 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.366725733 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.365502001 seconds)
  done (took 36.804419416 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.378568439 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.615701756 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.790237175 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.384869175 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.380174024 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.383395589 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.457924993 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.379521719 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.383527204 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.381647385 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.530804051 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.379933685 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.418358251 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.800577566 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.38113063 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.37991597 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.380255004 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.380482407 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.621028036 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.389021411 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.461209711 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.380213241 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.459549328 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.391173867 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.383384619 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.38153419 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.384256554 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.880993411 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.384740679 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.535825028 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.149494101 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.456824995 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.834762532 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.803445059 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.15496482 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.384881882 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.380900956 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.537661177 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.381973362 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.381628931 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.457852535 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.38056331 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.810553957 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.022090861 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.395798352 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.382901837 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.902693228 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.534664435 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.623036991 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.388489737 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.827435676 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.386021926 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.38523999 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.386093443 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.626962799 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.389765774 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.384071095 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.913710033 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.388078708 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.461141383 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.384760855 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.383766384 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.629927133 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.382659414 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.618439357 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.384647938 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.392830763 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.385363339 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.810807219 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.386313783 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.041342654 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.399178511 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.38384942 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.53706303 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.617277511 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.93162443 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.387421319 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.632689146 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.844068451 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.460005125 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.387644567 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.874684165 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.464138128 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.389106393 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.387840693 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.387441519 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.386782681 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.429893809 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.458837755 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.964509907 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.025350642 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.928219553 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.463347154 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.395061918 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.384678836 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.916301684 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.399717481 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.386271264 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.800066858 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.039314077 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.399899407 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.395104808 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.027907263 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.400788002 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.461878157 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.390735164 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.812349799 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.385113132 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.430600136 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.384259315 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.391358771 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.389996593 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.462715535 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.38920719 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.386176382 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.020192798 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.560382241 seconds)
  done (took 181.220493354 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.389670617 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.379196355 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.377910095 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.378665193 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.379160833 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.384714025 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.378165856 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.378251941 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.384611516 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.378146035 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.377786044 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.382272547 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.381699487 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.396094161 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.38758891 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.386166067 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.991629003 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.380104295 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.381038368 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.380488768 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.177182342 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.385042633 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.383343454 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.381547255 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.380829513 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.383132255 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.388158185 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.401501506 seconds)
  done (took 153.450248515 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.388662908 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.970655391 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.389564393 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.51826304 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.40956218 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.385983797 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.51954411 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.446599499 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.389344323 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.384538567 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.384738916 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.700639728 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.38958104 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.894031258 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.573137007 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.52027534 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.895275488 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.388123218 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.387190252 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.387140263 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.522189738 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.395410419 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.700960409 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.973029416 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.388024479 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.971608397 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.377950527 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.389761483 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.387719659 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.972924629 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.388161874 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.703929285 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.466146213 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.449407699 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.973752292 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.898703703 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.898959206 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.534057712 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.391065792 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.38693622 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.386888598 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.3781817 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.975440911 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.39299003 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.390454551 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.966534154 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.406017994 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.392693775 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.39949515 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.387629112 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.449450132 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.449625651 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.705364671 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.981820554 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.46741917 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.41086891 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.522752045 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.747748439 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.391658123 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.89994621 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.376364548 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.975697423 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.394387439 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.381044274 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.389392138 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.397354909 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.541198848 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.522328682 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.923515975 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.391638002 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.922040908 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.542551782 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.391000952 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.389935356 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.393341368 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.974610614 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.924928296 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.542102435 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.526753902 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.581999096 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.380058369 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.389530509 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.378815936 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.468778147 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.38936231 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.975706774 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.908589438 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.391571671 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.392359746 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.392886336 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.392397469 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.566287495 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.979541604 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.469334125 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.919463308 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.721845745 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.707975796 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.393062142 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.45151533 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.389530367 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.708432135 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.39402057 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.449666327 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.804199395 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.709278583 seconds)
  done (took 165.524442457 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.631279243 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.569043528 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.481809831 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.505174521 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.930093704 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.972911002 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.566154841 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.521794192 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.499913091 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.635078404 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.58267028 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.483889182 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.579035822 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.468054304 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.0784952 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.460941729 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.481491779 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.512970405 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.501312625 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.416612522 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.032230412 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.679907266 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.567211659 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.485871416 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.490089185 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.157916632 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.946960411 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.898082774 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.56010095 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.670784912 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.903295704 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.522330771 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.362366652 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.076974633 seconds)
  done (took 66.553796917 seconds)
done (took 697.585497828 seconds)
SAVING RESULT...
DONE!
