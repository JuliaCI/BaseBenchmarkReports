cset: moving following pidspec: 9005
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.309081087 seconds)
loading group "string"... done (took 0.593692528 seconds)
loading group "linalg"... done (took 7.239849155 seconds)
loading group "parallel"... done (took 0.169224718 seconds)
loading group "find"... done (took 1.147199866 seconds)
loading group "tuple"... done (took 2.017002223 seconds)
loading group "dates"... done (took 1.295073225 seconds)
loading group "micro"... done (took 0.240137795 seconds)
loading group "io"... done (took 0.968171205 seconds)
loading group "scalar"... done (took 39.843044724 seconds)
loading group "sparse"... done (took 12.828971039 seconds)
loading group "broadcast"... done (took 1.006943818 seconds)
loading group "union"... done (took 13.745577322 seconds)
loading group "simd"... done (took 4.75832239 seconds)
loading group "random"... done (took 9.554219853 seconds)
loading group "problem"... done (took 2.026560038 seconds)
loading group "array"... done (took 22.738338456 seconds)
loading group "misc"... done (took 1.998313404 seconds)
loading group "sort"... done (took 3.46688705 seconds)
loading group "collection"... done (took 18.893396494 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529140483 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139809747 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117189045 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137532837 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183072906 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131367311 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143771626 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08401765 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.054437371 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159227931 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13803581 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475892769 seconds)
done (took 5.047131109 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.199751166 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085798096 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095087402 seconds)
  done (took 0.878748146 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064889477 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125171605 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08027305 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067845905 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06606579 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080441901 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067033423 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065293878 seconds)
  done (took 1.25710162 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073884787 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068095242 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084208208 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067389303 seconds)
  done (took 0.999329716 seconds)
done (took 4.115139476 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.89386695 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236011054 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188088828 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452741572 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147210259 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187514042 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.65464349 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311135768 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211149826 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099574135 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103780431 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.375930398 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106959639 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.651865257 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074882377 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105143895 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.157238817 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.418842779 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081925106 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081569413 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102603129 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140628642 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100353206 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07631313 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167776583 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068610067 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147704019 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.093863721 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067405636 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.24209168 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189282391 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.675956401 seconds)
  done (took 10.353253125 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098807002 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.116360997 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067892994 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138718518 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100006236 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085491023 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070663992 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082462646 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090629531 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156989718 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113025391 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104496768 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081266221 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068741672 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099548722 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210494916 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105574023 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084933194 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085881285 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076058771 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120363685 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081874488 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092922451 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078326559 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151331176 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193311548 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110527022 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11017923 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068186194 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080390619 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130989491 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140382927 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065782139 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081049285 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138268903 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109701982 seconds)
  done (took 4.512661546 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.023419936 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159449479 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091132524 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152054986 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084849193 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108644271 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082264343 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098844156 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244403097 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.083496414 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.455000602 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127750506 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101008661 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067149025 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08347399 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084590002 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083286076 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064599865 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.510745274 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136839746 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.128462606 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084747644 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0887634 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06974266 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066378027 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082889932 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068243446 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.117482124 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.297503039 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144030126 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083596194 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.191827429 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.106266837 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067856385 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118288815 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.175866983 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093485373 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.170064033 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066438921 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065211363 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166361497 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090652445 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065654393 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104844658 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102250909 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120733235 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08343582 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066423556 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180021844 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06647559 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098556075 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.863731455 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164124672 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076610982 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065041527 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285561364 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083321286 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083788262 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063976997 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.245262018 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152328932 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094016446 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084013884 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065961971 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082272492 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067999979 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.376819507 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066007425 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.764877501 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070713933 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076104284 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084620469 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066672265 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087778652 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071829327 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100448629 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066392403 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067369096 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082622106 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066217683 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083387034 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08517141 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201585791 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082313001 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067287029 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064212969 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102419257 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111021551 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069064783 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064553026 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115699912 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068331535 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08282145 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100712114 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08422579 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099691509 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069399097 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127609902 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067164547 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.122997502 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06743409 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113160136 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072078815 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11820796 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092327587 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067801764 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152511089 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063631299 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081258343 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064344143 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065991373 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081212494 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067882312 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083650256 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081099801 seconds)
  done (took 20.784783728 seconds)
done (took 37.379318906 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.29234489 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091021696 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090975778 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073453855 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091120155 seconds)
  done (took 1.423867251 seconds)
done (took 2.184367065 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118570628 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116113148 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062920711 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111175546 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062831745 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115492268 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113445276 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080852765 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117371498 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063273932 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111189608 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06368042 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062494157 seconds)
  done (took 1.982880165 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082186448 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08417633 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085819822 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08073023 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07786571 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082333379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080011341 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105077545 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079634013 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086873607 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063763507 seconds)
  done (took 1.662711671 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081727769 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082901831 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084616077 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080045331 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077704962 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081043786 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079049192 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101108768 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079781146 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088039513 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063149515 seconds)
  done (took 1.655778656 seconds)
done (took 6.048432174 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076928469 seconds)
  done (took 0.827501455 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.692416466 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.640460906 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082699915 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133304827 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.219775582 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153906698 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.439776879 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.107741243 seconds)
  done (took 10.392165889 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102446902 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08477361 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069191551 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08666817 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071335703 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087558737 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067589642 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067184239 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086731488 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070234213 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085298829 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069162878 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083863629 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071089303 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068426228 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084185724 seconds)
  done (took 2.072806637 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092598168 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091849342 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089724182 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075947063 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088575818 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071540234 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090517533 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073205925 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086233777 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071651892 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09056291 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074532314 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087311301 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066314864 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089304714 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076079887 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085978277 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073844125 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09015577 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075640525 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090931868 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06463218 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088007537 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074205206 seconds)
  done (took 2.820653379 seconds)
done (took 16.870018043 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130101311 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075447945 seconds)
  done (took 0.9623993 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081126687 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096815552 seconds)
  done (took 0.943807234 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082082222 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079741474 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088936378 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092232151 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065863045 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080461719 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102010407 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066261998 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080225595 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065717604 seconds)
  done (took 1.569805442 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06786347 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092077108 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070479246 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096111041 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073843137 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.07960987 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072101612 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082894353 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078005172 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078837969 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070871616 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.09831315 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071270159 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099661166 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072986383 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083874791 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08675294 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067096974 seconds)
  done (took 2.209026232 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065314774 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066249605 seconds)
  done (took 0.900140235 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066329574 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063354613 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081699183 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065671532 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07859057 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0626151 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078615338 seconds)
  done (took 1.26511234 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396296852 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.1075024 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241107099 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087206597 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102736741 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260714751 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082371437 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070453278 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086823167 seconds)
  done (took 2.240273201 seconds)
done (took 10.854219967 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078729683 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085741474 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108536532 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41802163 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105257595 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06594392 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.130790884 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.21824168 seconds)
done (took 1.979771892 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.123847425 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602948751 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.393613062 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211020766 seconds)
  done (took 1.978872532 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.37033504 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091303627 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073455828 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066443118 seconds)
  done (took 1.378366296 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06553516 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069024632 seconds)
  done (took 0.908231841 seconds)
done (took 5.160395671 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067011694 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065908593 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079138402 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06573439 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063171895 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07943903 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066268142 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.101678535 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065200505 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065289229 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.082237554 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068043862 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080582512 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063237195 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063209303 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080075109 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06571975 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063108662 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079142911 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063421515 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065663551 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078782295 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06368503 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065420578 seconds)
  done (took 2.508450001 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084413312 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.081893487 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071587428 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087158905 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070005665 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08652236 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071182126 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065990371 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087102538 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070808444 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086256491 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069923087 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083737921 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070089554 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083141948 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070104709 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087247207 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066382104 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068237271 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086175744 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070516251 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081927584 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069141181 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087201471 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070035207 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085710623 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068155294 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081979524 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071174254 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085170056 seconds)
  done (took 3.095884587 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070588042 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063156839 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07970926 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069855883 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063094444 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081294437 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063681978 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080317231 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064585516 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063395603 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080706926 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063496995 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063429718 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08052086 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064155495 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082698486 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080146699 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064476164 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080220244 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064452792 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066317604 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079088024 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06365578 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079482609 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063901962 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06406817 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080075363 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063622146 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064462856 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080326521 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066754175 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066754792 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080170695 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070333824 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083396592 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065164619 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.0676866 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079005734 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064527693 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062920864 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079358972 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063049174 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063073924 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085571565 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063466815 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081531561 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064383742 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064293315 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080799159 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066636852 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078831942 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06411216 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065182553 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080748904 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068049362 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062522953 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080825405 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063478894 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079986869 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063120139 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06278502 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078956832 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065583209 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064340379 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094193927 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06967791 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07945098 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065128135 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064733892 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081622171 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06540822 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076834033 seconds)
  done (took 5.900644892 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115735077 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089738825 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082459903 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065357442 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078232232 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064363756 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067336544 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080219444 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065429415 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086040041 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064141339 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065372643 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081776052 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076514853 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080464699 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065211781 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085324666 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062086106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063654655 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083338716 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064157134 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083464701 seconds)
  done (took 2.454126938 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.184474372 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086475031 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108310456 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089477186 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084342202 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073899943 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070173415 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086431358 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070665684 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083815745 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068020925 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085971584 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068083172 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084247052 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068129497 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083817094 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070441373 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084376885 seconds)
  done (took 2.332005067 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077241893 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065719454 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105184311 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065641507 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083618899 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068132137 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087965973 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075324249 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08440177 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065926644 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090524573 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068409183 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08444745 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066313663 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068085289 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082540774 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068719187 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081957991 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074386161 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086394337 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071942374 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089851465 seconds)
  done (took 2.49621968 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08055312 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067236726 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100127104 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085001935 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062300085 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063961259 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088705928 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066409548 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087754532 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067558196 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066144509 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080780351 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070901901 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082331273 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070724664 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081832616 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06832774 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065681247 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08413668 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062474398 seconds)
  done (took 2.287566307 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086666352 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083268671 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067193185 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091436315 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067580867 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08264422 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075549891 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083095074 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067126501 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107478976 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067551528 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084936483 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07569594 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088742643 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067483722 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091202787 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074961486 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091677286 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067177938 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084857783 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.217541754 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067429033 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091230042 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068063685 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083317083 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067467742 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066710995 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088650748 seconds)
  done (took 3.146543507 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066570966 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065807944 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079723232 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06373311 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062865621 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080355507 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063853745 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063904231 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083001618 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063920002 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.0655344 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082156161 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066599436 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081292024 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066062254 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065460748 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081921244 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063519801 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063444394 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079688158 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065543663 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065566509 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081873128 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062965211 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079165039 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065795454 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064091749 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079284152 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066390558 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063224483 seconds)
  done (took 2.893811878 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076036707 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089244638 seconds)
  done (took 0.95778706 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063892385 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079696478 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080122191 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069723362 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086859422 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066337404 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090732644 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070633127 seconds)
  done (took 1.398619512 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081874759 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077215842 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084275209 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078120386 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093979427 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082306839 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153240687 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083756553 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072748256 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081212001 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080213705 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065837538 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089250726 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066911481 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088906265 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07251172 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064724384 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088236872 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06868579 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081253258 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067525453 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0908545 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068844627 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062630104 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084477358 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.074880336 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094730566 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067206473 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086164565 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073743999 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071178533 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077140687 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065880933 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083674645 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0644853 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092477097 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081325249 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085302831 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075317791 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066849796 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092638525 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061596799 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087895923 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072300453 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09216739 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066856197 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066750769 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079122195 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064563939 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084393018 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062308702 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066751905 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078207685 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072542133 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086071975 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076634883 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06743542 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084247093 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069294541 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086422157 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072961896 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08420166 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069301644 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065916878 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092826733 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071174532 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092328195 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061845604 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060836901 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081046902 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076206759 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104677489 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072125758 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083460975 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067855361 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081552118 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069407951 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067672424 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088029271 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072603572 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083045231 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072304029 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089441169 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066485381 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068698693 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089925951 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064324054 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084860262 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064597044 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098836876 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06523141 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080204404 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065442909 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07701405 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085808993 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066152847 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080585963 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073016598 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060587757 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08335936 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067073068 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083526566 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076644508 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088138489 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072432096 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091166872 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074116047 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066206644 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086966207 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063879094 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083261628 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065869633 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073293758 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077544037 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069719165 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083521973 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066572336 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090548244 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064660573 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066655338 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089890023 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071945608 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081414243 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063025051 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069324098 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08275531 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070225957 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091297784 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065511674 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06139798 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078367351 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070111733 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082982267 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069993648 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087983557 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069339437 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061169756 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081315554 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070307607 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092073554 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067558882 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066449226 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089632589 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067847257 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082630802 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073140747 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085536634 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065664032 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072130696 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083759516 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061575301 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086108892 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069155871 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065472975 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08698364 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070513686 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085560851 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066949529 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081072402 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072273553 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06728333 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082363043 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066470205 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081325624 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076640686 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067870445 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078557489 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063401841 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089164385 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064572154 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.0661331 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08268242 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067946717 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08435727 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064795116 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065897619 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085081286 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076983392 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087223884 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067771962 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088851682 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07785968 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08277644 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06877921 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066018868 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08449121 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066722719 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091929607 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071788774 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087124034 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069039751 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062856171 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089321577 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073774968 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082917007 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064813695 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065295684 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086918078 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072086749 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087346631 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067713931 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081590984 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067576291 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06922255 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08589704 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066764065 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083430919 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072128136 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082207897 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072872011 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067697929 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093603876 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06889726 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078749758 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069523019 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081535026 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073021039 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061433663 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08136697 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066287947 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084446447 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065492358 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069771129 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078133152 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072708672 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090581349 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06700347 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066712061 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083880988 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073155755 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084325315 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070228974 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069625384 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089357651 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076551496 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082710708 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069776789 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092997532 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066670076 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060319508 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08876713 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065153143 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082678703 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065194035 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063827732 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086080381 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074573509 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090284988 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060864352 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085959898 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065273833 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065307273 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078669823 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071404648 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086187405 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067658523 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07273028 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084611974 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067171374 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086924643 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066120405 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067045394 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084327803 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069775916 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084024333 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069322683 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082189159 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069696866 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066371802 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081041587 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068921041 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066212103 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084890877 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072661899 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083318738 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067266374 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085781076 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067971209 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067248873 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084505708 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066324224 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086434734 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067584594 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067416564 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085928323 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062515759 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090369336 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066753787 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073730087 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083846699 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063887834 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08823012 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068694969 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07032314 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084411403 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066846925 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085127443 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065925307 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085528998 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073276779 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064467476 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094198402 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073667485 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084173525 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069746967 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083380846 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068434746 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065987176 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084700687 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067864103 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065541392 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083787934 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071215529 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085700618 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06738249 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084057029 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067494913 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066246105 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084479172 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061812672 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065215241 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083187124 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066695149 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092979461 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067489989 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082922705 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065570288 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066743307 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082804972 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06411693 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091789879 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075420819 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083903896 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073575851 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081736059 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067298864 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076348405 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078388312 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065880109 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080986902 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065195693 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073604401 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084308402 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075155972 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083029829 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066375417 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063373767 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084700419 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065703983 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060506803 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081613406 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070127695 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082910355 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06621661 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065959875 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087110108 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067623801 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092761936 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065719425 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084865406 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066719795 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063589198 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083142526 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065892183 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08608249 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067899917 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064068783 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081340555 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066696575 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066289031 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085799803 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066081539 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08520506 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073385554 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082598423 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069217158 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068822646 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081161021 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069701951 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083273568 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066203722 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065786608 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0881716 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070068033 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084544271 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076001638 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083565237 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066999942 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067056506 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081820655 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066702811 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06478374 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084239408 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.0661042 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.0850073 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074089347 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08084393 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070069322 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065826444 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085044896 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073675471 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084200628 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069573872 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090439492 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066840259 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067823623 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092046105 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070913348 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087364261 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067711505 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067900321 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089979499 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065671568 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09030571 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06728617 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084448638 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068600922 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064463901 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083806582 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066609282 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065130807 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090829788 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068128133 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084389519 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065809441 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081985756 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068314917 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070199093 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091108082 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068795943 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087559239 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06217678 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063519911 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084743758 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064758003 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085271258 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069547178 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07155843 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087002902 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067309507 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082428857 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076086519 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089457361 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070386696 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065007972 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087655004 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067634397 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086309436 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068787344 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066650299 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085314537 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070628968 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084983931 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066469446 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072836694 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087182024 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068062627 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085428524 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067974454 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06629466 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078672255 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067143089 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086254874 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07147045 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067691511 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084401612 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076270713 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082414125 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067242689 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086848009 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066661939 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07107958 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079717193 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06836237 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085058484 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067984617 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061944667 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083176218 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064307947 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085839835 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066071334 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062153811 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094586264 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075217673 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087112731 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065509026 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064790961 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080008558 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062290456 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083604406 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067783167 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06823446 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093840178 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065982165 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083784217 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062456817 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066334666 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087495411 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069585169 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082343085 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063067571 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065363998 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087651648 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072059365 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08275605 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067331548 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069229034 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087001985 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064355757 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087200748 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063725715 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087596833 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078981546 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066220576 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085343668 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072967233 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091400971 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067373285 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079418523 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067644652 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068709197 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084823717 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067214868 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085236744 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080981897 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086904906 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066310369 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064841422 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086701578 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065879273 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093028842 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068149951 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066478442 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089082786 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068298488 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092870862 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06933605 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091801773 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069918699 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086952855 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065817079 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066957577 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083087548 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06618245 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085447339 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067425766 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070540396 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091525294 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065636862 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094722893 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075195894 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086118129 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063532066 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065765484 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083858107 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062505433 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084820242 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065084754 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064035526 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082164158 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065683327 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084513012 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072579646 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067131118 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085257998 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066714994 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077910016 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069700577 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06889862 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085082651 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063428313 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066320153 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085897379 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070101676 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087166432 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064651422 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085915558 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068751241 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067192564 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079685441 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073414143 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082104004 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069342632 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065862721 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084270063 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067719517 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086917992 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071532084 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067244067 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086691203 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075741703 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086257918 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064981725 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063005807 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089905079 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063856687 seconds)
  done (took 45.860679568 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106668259 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081703299 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061849191 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080198119 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07431565 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080814887 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06265236 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062475511 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081449323 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065308297 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080156916 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062066962 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088291771 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086412309 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092554266 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065815378 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080064797 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062997659 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08031738 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063506094 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088601492 seconds)
  done (took 2.449467391 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074117565 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.088669749 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07307048 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094063722 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067799138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089861942 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072045133 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088097109 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093570856 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067708379 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094241992 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071283662 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.084838627 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067779998 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08504823 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071711207 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093897468 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068465465 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089030624 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073444231 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089051135 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072970891 seconds)
  done (took 2.607968538 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06662565 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066169676 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085798198 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062148466 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065006298 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080251151 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069468128 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082317636 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070520893 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064547643 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083232196 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073154426 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084707212 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061558678 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066297741 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081973451 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13151897 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06957415 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064870187 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086392602 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061418631 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086000659 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06206557 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06156673 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.08342718 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069802071 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084841896 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064692161 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065277849 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083468386 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066176913 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08133213 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067869553 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066260313 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082513649 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065231294 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064800017 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083783627 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062238781 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08161855 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067040538 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061962092 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084907167 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067089723 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063255098 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081851447 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068084743 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083644582 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061214023 seconds)
  done (took 4.441309831 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084269577 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1275847 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087152383 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089299579 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.100589784 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092085153 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069339294 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109450907 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064014948 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083646097 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082018681 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103012841 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083951806 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071002442 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090507738 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066408582 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066638509 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084049685 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069115951 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083462716 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070150937 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090906059 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098358646 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079641789 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087675177 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065112719 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083329155 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070961908 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096992996 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071063753 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088849487 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071310467 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099646645 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0683113 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083409924 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068064616 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100166153 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065382302 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087318681 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063613545 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085972756 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070820735 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090877797 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082358253 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084240847 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071580505 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084167942 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063156353 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098293528 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067764647 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092402643 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099335036 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069794288 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084101462 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070979459 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099454056 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066598322 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081772682 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069821288 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09710057 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06404892 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087663459 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080625348 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085592412 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073812847 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098710662 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071405865 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088607611 seconds)
  done (took 6.562854593 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075077701 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090692321 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081038869 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099710422 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090304092 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073211143 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090945217 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072817582 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090650921 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077446752 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091261501 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111727775 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068407271 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09367355 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073059554 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091433415 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.0730984 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091920511 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072312912 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092519457 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090920051 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080889605 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091813181 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09871706 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102712982 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086926019 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073599985 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090974235 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081254553 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09243601 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102038087 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07357477 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090750887 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099508811 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084878761 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090919057 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066324908 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090647865 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073345373 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091415745 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06852393 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099106497 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072501761 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086474136 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072572799 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091196148 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.097868361 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083927191 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093571723 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095858378 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073261747 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099002243 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072806947 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09157649 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099286677 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105824855 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09949386 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099566662 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073414263 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099468706 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099155988 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107077521 seconds)
  done (took 6.284089964 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0883722 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093901114 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096154832 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06193642 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064687197 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089363082 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064748541 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082528414 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075640173 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093878785 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077619028 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087684241 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073229745 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097174779 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088323615 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074785957 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088845723 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070392821 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093625857 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070336149 seconds)
  done (took 2.483770822 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075617953 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102097146 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067919903 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071577067 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089219209 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071933974 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088126357 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069234535 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086398036 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070032576 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095333246 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07737146 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086312085 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073199584 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094392535 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072789309 seconds)
  done (took 2.145959899 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078515198 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096194768 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080982578 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086063593 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065166733 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082667412 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067486947 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062250759 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082614876 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081388548 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08616405 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069094953 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085806748 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065180792 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063367396 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088240897 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062615764 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083381742 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06696888 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099980944 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077941333 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084076955 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068001583 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067204336 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086755427 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071943253 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085766594 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.0644027 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083880193 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06769931 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085697954 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07503246 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081754104 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066787259 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064985918 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082746517 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067141679 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085409347 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070402799 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065673257 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083674988 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066609412 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084831146 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06806717 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081129049 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067429117 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062743665 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091695637 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064796859 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085281364 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066583742 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087318054 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067706488 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075668311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089198539 seconds)
  done (took 5.057380234 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080198015 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06872356 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081532671 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065175406 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088495441 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068851214 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069406545 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088154869 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068325867 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083062545 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068852935 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088203895 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06876544 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069447192 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087201848 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07021266 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081152808 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069132755 seconds)
  done (took 2.224212848 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072437814 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067101002 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093201917 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066789233 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08687698 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069530716 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063154173 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085495537 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065836305 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085723679 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067533298 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068558318 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085391151 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069696306 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085550951 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066903323 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068476894 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084613215 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067351536 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080590408 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069772224 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064721272 seconds)
  done (took 2.496297877 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072527136 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092761812 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162433149 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107212827 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083005748 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100414626 seconds)
  done (took 1.480269519 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091028444 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09897151 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067730519 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106831239 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075526835 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087595315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068459045 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086579739 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077197402 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100763653 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067988242 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096402246 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095604969 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077174932 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093178177 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074139161 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087876869 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068634051 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086938303 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105319975 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068834255 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095124047 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069347344 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08678052 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068788251 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094828151 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077090706 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101896421 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086771687 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077547388 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092880322 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068946758 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096207729 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100591371 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070771247 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095691841 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068845582 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105472231 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073379446 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096014846 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068926602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094326893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096029146 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073663517 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096648337 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069366672 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092521082 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067260879 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088633493 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11195881 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074702603 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096348486 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092372428 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078285486 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0953923 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112941737 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081789081 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096420608 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092836484 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082023362 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096294045 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073028041 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096345879 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100937599 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074301456 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096075263 seconds)
  done (took 6.572556968 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084913496 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10571385 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068851493 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101823825 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095687153 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069161424 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086523392 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06906212 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087318831 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069152954 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128389349 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069263906 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096448017 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096176695 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068775641 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087597961 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069569201 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096337127 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068703412 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11220132 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086996425 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077243965 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096216495 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095664481 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082478964 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093585486 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068519964 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087269082 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067904945 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088253115 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07332576 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087610677 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095059277 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068698802 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095957515 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069378811 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087511208 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073734056 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087519653 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074354873 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096224505 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105704237 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069471621 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087493221 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082027185 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088400081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068165784 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088018445 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068240527 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087787118 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080830111 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101092596 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101141957 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095521352 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069745162 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088154009 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068910402 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088360813 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069537247 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092976383 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07724339 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087755729 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113069356 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068591524 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086674873 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078223557 seconds)
  done (took 6.465670222 seconds)
done (took 127.376591386 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201190238 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184414176 seconds)
  done (took 1.249155353 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069101095 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09508471 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09827541 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128446583 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086469304 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100428827 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118070703 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079885413 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066081278 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086887705 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067116294 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087669242 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131405704 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067305339 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08566281 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069069492 seconds)
  done (took 2.307272129 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.1027459 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195005201 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108961163 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06572496 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099194887 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078124707 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084731862 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077124061 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093252223 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066919523 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077268516 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096143613 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064880774 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094668475 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074371743 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097923334 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065361878 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098315899 seconds)
  done (took 2.514884277 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103304709 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14225328 seconds)
  done (took 1.119477444 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.199028749 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122777184 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202411874 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.410931904 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206391629 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277003585 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172911088 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171125537 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15215286 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169424634 seconds)
  done (took 2.954390593 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099583247 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170066965 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310356903 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13721513 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085371546 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115262368 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.136481547 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089502173 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101453192 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100361872 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081254523 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096565337 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097170998 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096057477 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073816973 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096450113 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120588785 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074103923 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095805824 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07550121 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117943137 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067359944 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07408362 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094260497 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076805054 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097577603 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0661087 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085811131 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075389855 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094588094 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078261439 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113307479 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096362609 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130934447 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.080699092 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129914815 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097328704 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072060143 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094607283 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072234964 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096974585 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076370915 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103141337 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.0758531 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086218013 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076216928 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085007476 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066253467 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098714249 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076550204 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098179912 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078180256 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129504044 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09692018 seconds)
  done (took 6.184285669 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.743851471 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110564457 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093569246 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.807681723 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090712777 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104907809 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.712278914 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1186682 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209538153 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766029106 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.092039209 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097931983 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179994689 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.233107025 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.878837091 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.280696039 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.635269815 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107081725 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107827616 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131650818 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138572149 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.17527644 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148804611 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430008915 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075019844 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09301557 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136701281 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073413343 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160282971 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084082928 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092857705 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155182411 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224227662 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154570336 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096652501 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069152742 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090869901 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.153394924 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242395595 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170793256 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158132637 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067192004 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091003654 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13911089 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130984416 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067112348 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139072769 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173934256 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148583951 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073156992 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094873731 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142005046 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137273998 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141960676 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100752931 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.269829315 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286853275 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089996006 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097848075 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103933913 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23380281 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083096932 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198037801 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137508921 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166758989 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090617995 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.728756969 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.14703573 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091839314 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073095334 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119018833 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094090576 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139058019 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146300729 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.346304026 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.160998869 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072561062 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090000903 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206526989 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082601281 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091067037 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141300923 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073727717 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121491369 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163843257 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143182315 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146935254 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.205364417 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139762944 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.157960349 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07416113 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12260118 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073655286 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189441279 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19198254 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139362296 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.183692247 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.157127918 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141824281 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146761063 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074514554 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170046413 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097053137 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10109521 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137117117 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19050298 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122029308 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082300705 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093294075 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138868031 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124391034 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084990051 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.158119444 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148921325 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454158338 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145309864 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087288671 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086589405 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137765725 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.13950897 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095857027 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210856816 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120930991 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145586764 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118534256 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088435755 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118220457 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140543091 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076670056 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120911338 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135309976 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097920957 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.211925112 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.18849072 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077080457 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214026746 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.141448205 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096171272 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148109386 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119669511 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145556831 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076326819 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.158434277 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075542152 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758989229 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144826855 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119784288 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071845998 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173834172 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068934685 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103775565 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103230914 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068811348 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757133583 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084328771 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100073777 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082459556 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095018615 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120290212 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135262585 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071640562 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137721989 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201273558 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095399461 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117520664 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08284851 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.138936443 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09596585 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082641852 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105063941 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081991219 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121584555 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093842283 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08223416 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16653096 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140402998 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.171361518 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566784906 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070105165 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103432473 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.178650135 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090753108 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261786972 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136663816 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.175632479 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.13877081 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100525832 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.291330427 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142898165 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.173026806 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084705042 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150461084 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089071281 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136427284 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142014377 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089892936 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075336579 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139880579 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142478969 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.163173515 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925773283 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09073664 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20281278 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068163224 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.148406498 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096442952 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075069807 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260747376 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069251495 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1659348 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1423146 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072651636 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103853546 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.691286286 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103515136 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138795703 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072470735 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193969997 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.140238942 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135624736 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.157716843 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075838844 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138280774 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184748931 seconds)
  done (took 40.193353978 seconds)
done (took 57.393341367 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256684693 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177605401 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241174239 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142955559 seconds)
  done (took 1.788173973 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14293484 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103692226 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116892529 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085341673 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102302205 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085641848 seconds)
  done (took 1.533831859 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.401866664 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264201312 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228740561 seconds)
  done (took 1.792977691 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260527103 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211815063 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.448380756 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299805816 seconds)
  done (took 2.24755619 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.174330636 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114326866 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066714336 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105592056 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.157169401 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252266637 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127139 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186461545 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079354531 seconds)
  done (took 2.210060841 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196610186 seconds)
done (took 10.669696961 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.263381872 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.125526866 seconds)
    (3/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.294132754 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.155355746 seconds)
    (5/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076035996 seconds)
    (6/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100458947 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072602432 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.246951732 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.257599292 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.191062739 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072507072 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.21445428 seconds)
    (13/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.183417302 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07772754 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094433491 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075854057 seconds)
    (17/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.182120023 seconds)
    (18/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.226776462 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.209113662 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.136728366 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.15502212 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114764725 seconds)
    (23/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.097393179 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.176730687 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.174981055 seconds)
    (26/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092600017 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066678823 seconds)
    (28/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.110136991 seconds)
    (29/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.099954072 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.228465172 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05381343 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099717949 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086389381 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099391616 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.062405054 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.127309669 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072805443 seconds)
    (38/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.19460051 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.110491404 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051518358 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.168455407 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.180622896 seconds)
    (43/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.210825683 seconds)
    (44/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.180557679 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.181492572 seconds)
    (46/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.213990007 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052698016 seconds)
    (48/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.179728537 seconds)
    (49/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.155321237 seconds)
    (50/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099669666 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.11161223 seconds)
    (52/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074014142 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099944242 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077472955 seconds)
    (55/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097732463 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068336091 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073162224 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095758102 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074164162 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.165763489 seconds)
    (61/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16704121 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053022299 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071663973 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090913175 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051968589 seconds)
    (66/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104782775 seconds)
    (67/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093783037 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.158669792 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119315235 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094009634 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073386076 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067919635 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.131513377 seconds)
    (74/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114096579 seconds)
    (75/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.132867345 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.201755905 seconds)
    (77/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079490969 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065333493 seconds)
    (79/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098364761 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052909265 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.155872581 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052554789 seconds)
    (83/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.12051761 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169170563 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109648981 seconds)
    (86/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.136157371 seconds)
    (87/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094595839 seconds)
    (88/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053220163 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.119411496 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067860548 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117590226 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.172559494 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.07307079 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.067699236 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.158440545 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066470943 seconds)
    (97/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.118961213 seconds)
    (98/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108971684 seconds)
    (99/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.152196485 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05332017 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192956194 seconds)
    (102/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062306504 seconds)
    (103/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094650071 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 0.127000191 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133237918 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122330377 seconds)
    (107/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.115211581 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.138030169 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066936567 seconds)
    (110/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114581162 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085305096 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089011978 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.137052719 seconds)
    (114/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092627717 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076361721 seconds)
    (116/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095465613 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092397498 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169419681 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092191726 seconds)
    (120/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.074458263 seconds)
    (121/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075434923 seconds)
    (122/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.097682107 seconds)
    (123/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07791268 seconds)
    (124/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209254341 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.167776177 seconds)
    (126/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053868546 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065284028 seconds)
    (128/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.192160811 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.101199518 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081647919 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067655959 seconds)
    (132/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.121568587 seconds)
    (133/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.113670189 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.158249304 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096304507 seconds)
    (136/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066696797 seconds)
    (137/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087696445 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092609959 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158155477 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074640983 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201297604 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053528798 seconds)
    (143/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095365736 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071957819 seconds)
    (145/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054232114 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115353469 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067993345 seconds)
    (148/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102696835 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093809687 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117375019 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148076734 seconds)
    (152/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.073257281 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073907807 seconds)
    (154/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073219503 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096400368 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068462899 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.112004848 seconds)
    (158/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091114352 seconds)
    (159/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.121046313 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053404375 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051774923 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097402398 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063759244 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065695 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09673832 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.076404615 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.199902338 seconds)
    (168/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052579642 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096140186 seconds)
    (170/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076646906 seconds)
    (171/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105178381 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08725342 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096253089 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.156823485 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073962164 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088213916 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135034468 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.153224265 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052091564 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135808313 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201754105 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052000526 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077333039 seconds)
    (184/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102200572 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119232819 seconds)
    (186/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092986352 seconds)
    (187/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053824448 seconds)
    (188/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114324059 seconds)
    (189/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103465097 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119656359 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065638698 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087857496 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110141965 seconds)
    (194/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196043413 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067034962 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072691083 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073625406 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.0666135 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159884564 seconds)
    (200/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053280773 seconds)
    (201/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081612227 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.378321035 seconds)
    (203/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079840174 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089452141 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074586687 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116827976 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052207054 seconds)
    (208/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112404538 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062722439 seconds)
    (210/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053105889 seconds)
    (211/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052288398 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.16201212 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086240003 seconds)
    (214/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071606573 seconds)
    (215/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05433979 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088188151 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.169191629 seconds)
    (218/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095061501 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053034516 seconds)
    (220/309) benchmarking ("sort", Float32, false)...
    done (took 0.150739911 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.14577087 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087470199 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089891946 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188192067 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075198136 seconds)
    (226/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.083209552 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073821567 seconds)
    (228/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05302057 seconds)
    (229/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061652097 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087506273 seconds)
    (231/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052521536 seconds)
    (232/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068876001 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093705276 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052972192 seconds)
    (235/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094025665 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111551583 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.07430689 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0646652 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053077931 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11275364 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09141389 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051751521 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093645399 seconds)
    (244/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063269259 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162037466 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054275772 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051270096 seconds)
    (248/309) benchmarking ("sort", Int8, false)...
    done (took 0.162283363 seconds)
    (249/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.07432798 seconds)
    (250/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089398265 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090913978 seconds)
    (252/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067504156 seconds)
    (253/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052120164 seconds)
    (254/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.09283639 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066249843 seconds)
    (256/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079470019 seconds)
    (257/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073786632 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06759531 seconds)
    (259/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08961087 seconds)
    (260/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052853553 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051917497 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065166468 seconds)
    (263/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.082739351 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079804565 seconds)
    (265/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061242694 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087406694 seconds)
    (267/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051519995 seconds)
    (268/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070762261 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094804824 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071174729 seconds)
    (271/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051378388 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.073049035 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052066811 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065715141 seconds)
    (275/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.121527521 seconds)
    (276/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051318688 seconds)
    (277/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067747603 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095344015 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162744415 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073096466 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065656121 seconds)
    (282/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072853464 seconds)
    (283/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081890579 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072270754 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087826092 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06656611 seconds)
    (287/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052056142 seconds)
    (288/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.074060349 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074406584 seconds)
    (290/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087419008 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06509966 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064726002 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087968981 seconds)
    (294/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065517473 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067654127 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095773678 seconds)
    (297/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053746522 seconds)
    (298/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067600752 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093919673 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066784952 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051180689 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073654082 seconds)
    (303/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051195235 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124200456 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071935836 seconds)
    (306/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067342206 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.111246855 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14000889 seconds)
    (309/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.083814091 seconds)
  done (took 33.0257571 seconds)
done (took 33.936541004 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080873167 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113857446 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074145617 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.11458684 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081062224 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098663001 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072435652 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078007484 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102836756 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08212928 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101438927 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054616548 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09689837 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075482013 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096452 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092409432 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100376241 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072434571 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074011112 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087401652 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074457608 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087631287 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067054527 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054745891 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099482017 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072407802 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071466698 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.096804423 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065931638 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087918229 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068664167 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072838617 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087151706 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078631443 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093224274 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074176628 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074967292 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098207558 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068119389 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087316166 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073620624 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066159114 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094438874 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073110605 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070661883 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093135892 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073723607 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101817745 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091658381 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089941273 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074168609 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098649964 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076716867 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071587782 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091643192 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073864732 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09236833 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092172552 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095654288 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068759389 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073495323 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095892309 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071248191 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094908041 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073747219 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075877171 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097913791 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071990559 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096935467 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071469488 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065993443 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095982507 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069609146 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065397478 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098476217 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077006448 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086438366 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071937668 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072397229 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094065225 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065818038 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089322417 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067655155 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071921803 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089923251 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055651319 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06955 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093845463 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065588711 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074617674 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.094186717 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073079779 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089071464 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07695743 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065429305 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092533099 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066569042 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066173093 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089716666 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069724551 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065898437 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090147653 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074497875 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088383546 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071812015 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07908112 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088363948 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072613507 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08621771 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065332497 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081912734 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098049261 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065983649 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090077358 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065246083 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073448131 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087119001 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06579795 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065912435 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088318309 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071812556 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065199707 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090138207 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073875506 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100880561 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065901711 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070044037 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090410532 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066126531 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071546105 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088549515 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066476005 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088898343 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063688435 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068335265 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087257653 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073181118 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068271468 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096399674 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067578132 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095700556 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070808459 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071624438 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09272849 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064557761 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058994125 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089998703 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068208618 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067712322 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088356227 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067667519 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06564437 seconds)
done (took 13.104568145 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066094389 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167811379 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.12545794 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096064069 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10993424 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066645936 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099955589 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103073161 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090667577 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125860703 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087129393 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107969861 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114346698 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087602677 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066296605 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069742954 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089911931 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089280784 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124083989 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085636546 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139841827 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087425825 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.11932218 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090388522 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111421648 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102788098 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088857891 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070570222 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06909544 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115693817 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108046735 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070230191 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066461745 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122360933 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116786447 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085273546 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088563931 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084833864 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087609138 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066703123 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114423045 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100516818 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105161253 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081434319 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095144465 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068998514 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08975411 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085725638 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113827355 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081356162 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110663118 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133901713 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069448948 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10521105 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065558531 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110446953 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081723054 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090855648 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067525765 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090228352 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066768248 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069918775 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111076926 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115816635 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070610027 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104229569 seconds)
  done (took 7.224790374 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084448991 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115615925 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084098967 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107246982 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066823807 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067275639 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090089878 seconds)
  done (took 1.585749708 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067162372 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088454305 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112149717 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089611086 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108787418 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087322705 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099210187 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067440309 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.107072332 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068389768 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087410204 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127634471 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068754756 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097219225 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090581232 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089985657 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091159061 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089955544 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070000106 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113153926 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070077437 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087035916 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09269259 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067708395 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103444234 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067295301 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138551482 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071744776 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067722115 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.094076283 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065564035 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140147719 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104205904 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077893705 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066786656 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105433598 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082081316 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088237296 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083688567 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095212059 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081009238 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067647621 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091203363 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065665306 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07129268 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101159107 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06808791 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090043271 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070542886 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087376855 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091177257 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081403392 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089516519 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070947881 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068280698 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096857723 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077090219 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090366385 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08739769 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068896965 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107354674 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083366547 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104592018 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083831245 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092181067 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081778727 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103762844 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070325675 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069464732 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093545678 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083819031 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08769423 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068947073 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078036066 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092078915 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090846471 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113626017 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068741731 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100073295 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067772552 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06800108 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090424853 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090094106 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093528872 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067955276 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071491673 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094104715 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06601721 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066682925 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09391364 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065876518 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090468396 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070727638 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067842772 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092743448 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084620279 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06717239 seconds)
  done (took 9.26533427 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069116321 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069120746 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09204779 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068741724 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068217271 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091724478 seconds)
  done (took 1.44526349 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098212659 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092562416 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081804492 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095839695 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106400402 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104662953 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08249911 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106475893 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085158851 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102859535 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083419288 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105615881 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.08840348 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096322929 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08223262 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095379298 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083568544 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099050961 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079374612 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097005197 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089152449 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.09654277 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074378221 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106863259 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071788692 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072918209 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101093137 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07943893 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102416761 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083579214 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096888199 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071319872 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094599992 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082464321 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.105895137 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072417948 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096167909 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072408353 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099461205 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07173212 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105910505 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073277741 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10138845 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071864981 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105828433 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072832146 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071839001 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099915969 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081929339 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094867897 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071258746 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096030011 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070778767 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094461857 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073157081 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105938823 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071559798 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106112329 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073920582 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072377422 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094375721 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071217118 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105426251 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071327439 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104497565 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071382132 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09618347 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07422049 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096779759 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073371415 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.094905819 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070990627 seconds)
  done (took 7.331115186 seconds)
done (took 27.819324812 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.651586125 seconds)
  done (took 1.630928455 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.763391266 seconds)
  done (took 1.745383274 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.513730871 seconds)
  done (took 15.501587859 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.613041132 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.757685669 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.792733588 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153006476 seconds)
  done (took 3.299166829 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.883969471 seconds)
  done (took 1.89213583 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234514198 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223175 seconds)
  done (took 1.45079459 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.731288469 seconds)
  done (took 1.727225593 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.279846361 seconds)
  done (took 2.264910069 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.319350123 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181798728 seconds)
  done (took 1.497802485 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.521578795 seconds)
  done (took 1.516051036 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.565244569 seconds)
  done (took 7.566002402 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22733491 seconds)
  done (took 1.235220452 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268650827 seconds)
  done (took 1.266694548 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.106459791 seconds)
  done (took 4.107616374 seconds)
done (took 47.691494309 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.0773609 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082598976 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104603184 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078530301 seconds)
  done (took 1.338337144 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077714485 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073308386 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100600205 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073207885 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100714799 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073650837 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.097877585 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07762417 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072882026 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097538452 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073721151 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095076129 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075771268 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098213105 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070276287 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075363975 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099881585 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073668759 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099162815 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074259763 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070890736 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098399295 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076282792 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09549411 seconds)
  done (took 3.028232055 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077952208 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073938905 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097616754 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07245992 seconds)
  done (took 1.325871853 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077772426 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115879716 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088923774 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.1010483 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09343877 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110330105 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069152194 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070350517 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094505368 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077405726 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090939578 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09771734 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110989647 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077489095 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10238184 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065826666 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069354545 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110712578 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077671429 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100911492 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070505716 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079039032 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091786866 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089893503 seconds)
  done (took 3.143860897 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076623821 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127352324 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077871975 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.114349275 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091338223 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089364309 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075611155 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.115353923 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124076752 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089983079 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069837876 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066317056 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096836684 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065772252 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076342401 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132485936 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135048477 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06884507 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.121400127 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066425896 seconds)
  done (took 2.894849294 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07450799 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070165685 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089351999 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069608123 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07698149 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096588296 seconds)
  done (took 1.492626063 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068400848 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067774801 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090622533 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067095755 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071938266 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091037583 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06668055 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066817707 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090397084 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067730644 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066289062 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089677606 seconds)
  done (took 1.914316517 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.42330062 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068989822 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093091111 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065612998 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071620655 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090583793 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080498438 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068525701 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115511416 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066965066 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091092352 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069328509 seconds)
  done (took 2.319444771 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260237597 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077399387 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324288212 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167930389 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140789133 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155586916 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10539587 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140216885 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197780562 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139155825 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199577699 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225043928 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133475329 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16751433 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114615811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131409415 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186478539 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221433034 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10473588 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223514929 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205892186 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156382375 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180096498 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128436914 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134629368 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150562661 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072002378 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104612392 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231782483 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161210973 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200930559 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137774501 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096857207 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231313325 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224932872 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195694465 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163781839 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085576103 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158069565 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165354557 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256220101 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114840385 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193978857 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133723644 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106382705 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17353748 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146344822 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147173581 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138161089 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114734222 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173883238 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240532059 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166919644 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112839386 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13733627 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142514103 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143330832 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104289896 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268126432 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194779159 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158621858 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096113403 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098784603 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211054805 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158155325 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14125837 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15318699 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118551462 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167607842 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210474632 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146225571 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17290967 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179383987 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089299284 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146335772 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19489081 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156283505 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228377125 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155083353 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073845648 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152183964 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128416765 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10625255 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144718341 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10126231 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207464738 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124572851 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138348428 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139890576 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134817918 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136305106 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194795462 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201973129 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129795714 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06683367 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130226418 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148916371 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176459384 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113597859 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134333466 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146980112 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079653364 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192560403 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075441926 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152201546 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104113208 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151512322 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162220383 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075606985 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178899342 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102866316 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127703028 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164772727 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219761818 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115682849 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082822481 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227836076 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156128763 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131708381 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173914547 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214793658 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10210173 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129813149 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204802318 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243471771 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090370784 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224127422 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135692855 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084019201 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.11293526 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154532404 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139314802 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148753186 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108744456 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153616727 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227487445 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075401733 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121283362 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166681308 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081997554 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106990496 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140847553 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127673169 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095462857 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126848515 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133105602 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1960984 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154550872 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108649838 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178047313 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099594653 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224882089 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114971812 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130976887 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103896823 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095882226 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.164836035 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218512948 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080172731 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226501988 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153626893 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133216627 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147445156 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0841862 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193847891 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079239213 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071304656 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200049991 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138383315 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137289117 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183312399 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130906446 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154626053 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151437846 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16326362 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18538776 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162320562 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132972845 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088776132 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140133838 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153055273 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099141108 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120371184 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08353152 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131336571 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122273993 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083675211 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197369333 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155846438 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126786952 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113477701 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123195556 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203948944 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077519387 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157829779 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146815522 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121322688 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211628393 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187351074 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164645682 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126178886 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200757079 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071296166 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098651686 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092336246 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154462317 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108744713 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083963861 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169576046 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179297927 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156491561 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16670359 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137398129 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148293395 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212217983 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071839139 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14416478 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178804658 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153543829 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154595216 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112752253 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099743286 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200162063 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135576487 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246120988 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143619603 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152532243 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181393591 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130677213 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106259098 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10677339 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192548063 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133400399 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181514776 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125974851 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114185615 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137543831 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081692174 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130877634 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155236629 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147158528 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18925961 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144473218 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162504914 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077178249 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1442994 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175266622 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15051355 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065481951 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147025839 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221259286 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121147045 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151762158 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184457972 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105485965 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153283165 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23724141 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175299926 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109887359 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138073854 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147967236 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157237977 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147043945 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170007866 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138570452 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164082182 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138416386 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085444573 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11418587 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124764788 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134256085 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096275087 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138774303 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.169271707 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095649807 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159467763 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138451467 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138094847 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146499435 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12461012 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091953697 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123373911 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235059338 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150041841 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233463096 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101820794 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206250023 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226898419 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07539377 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105824082 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08125977 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194306905 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084741251 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162494482 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124973219 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132618801 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154948875 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173944045 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122078731 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069305044 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137584873 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163714195 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138279662 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124438898 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132817352 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221838984 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.105157181 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105778391 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153118496 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105681367 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128398072 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233808954 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.087029552 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098873351 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101042534 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081037598 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158106489 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213672085 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108572752 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.130300417 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143815205 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147769837 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181573822 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103417731 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126251771 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141719258 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178742414 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182384488 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090472047 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140778852 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158115753 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214724391 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133302491 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121998735 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203474178 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211269992 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220646814 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090572965 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142781331 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143316773 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137381758 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197360322 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084920512 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22520822 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108249779 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166843948 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13146321 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119868799 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158750333 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125381625 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089757573 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204984964 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148582417 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10007734 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106597639 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147367933 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150572202 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134269771 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075960879 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194104248 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073118957 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194440277 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202245444 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107665145 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131923597 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097511715 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108909824 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135671159 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130341741 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087526406 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143576906 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230000151 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091883645 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208496936 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170185461 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141010685 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192720915 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126485078 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662602308 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078855658 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213306268 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147935861 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236632246 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125513731 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147320174 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110608572 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151795227 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200586328 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132256672 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203699116 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163188681 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150800023 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079298689 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129608077 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139493502 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117302704 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134413989 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141642228 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144480253 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127632167 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.14965981 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155796585 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10747015 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096710778 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216159177 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145140643 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172981004 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169679926 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111825179 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14750746 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195138601 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081538917 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150789929 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214341 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135553739 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125202852 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081942397 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132892655 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232208181 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07372977 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220471277 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153110973 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138616643 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142070366 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146121447 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187881164 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109869311 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179991786 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096997614 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140044841 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143722423 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11253886 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104345452 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107743301 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139919781 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126761951 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12944034 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123578768 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206872626 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071898332 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123144073 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130267055 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175443876 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238654457 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115947399 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083702463 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147792488 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140832402 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144387481 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153615101 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10730444 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10862726 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082793559 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13694889 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111751123 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14279602 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130863528 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138604197 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226123034 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084475254 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.2518967 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122538706 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132713975 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070655876 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106460831 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097785056 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124741688 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136005069 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127977915 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229565692 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098164328 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.117155816 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119634458 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074186382 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083781349 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1833396 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138894701 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150050836 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09886753 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.089099289 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136929469 seconds)
  done (took 71.182287784 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134247125 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104151283 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117330162 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.17208619 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144773465 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237584509 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.18094968 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22259425 seconds)
  done (took 2.403274445 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071514008 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116208345 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102517238 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116041222 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089144025 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06822148 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.296090917 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109699456 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066538006 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114565192 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118872527 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091883113 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468671527 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067193351 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093864431 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084446312 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067327373 seconds)
  done (took 3.22637667 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.426311159 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.633922808 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450885312 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072812106 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.936744854 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.1060053 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.47427703 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161713842 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090320939 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430823238 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.727706674 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.151015828 seconds)
  done (took 17.758071176 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076444484 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070025575 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10923938 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083301581 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099788997 seconds)
  done (took 1.533416927 seconds)
done (took 114.554565714 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081660934 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.345340443 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053217818 seconds)
  done (took 1.527764013 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085313011 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084115107 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110639997 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083154036 seconds)
  done (took 1.463908228 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076482154 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075596003 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11032866 seconds)
  done (took 1.36445644 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278229202 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16531674 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087313481 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084950422 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078317099 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103948201 seconds)
  done (took 1.370711389 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074780883 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076297933 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098511935 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076500785 seconds)
  done (took 1.420934684 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078238739 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053820271 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055412283 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08150477 seconds)
  done (took 1.36959203 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091052289 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105545753 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080945562 seconds)
  done (took 1.374103132 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109794169 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112394047 seconds)
  done (took 1.322842579 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082715771 seconds)
  done (took 1.176093884 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096230037 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.138208742 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15600837 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136786938 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165710432 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135774849 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.113439892 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087653021 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103658728 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115820524 seconds)
  done (took 2.34943437 seconds)
done (took 16.444838262 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080687352 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.389799381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360201842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116093522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667244503 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356516768 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005960958 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119196076 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119920233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094788573 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083884011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673376066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.971814246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.34572276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960154513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323891582 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674503698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068230848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092987273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068149116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965344828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093487606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067763093 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068123682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67362924 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370498081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094365399 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322136145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067597353 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096028356 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355376367 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09464788 seconds)
  done (took 15.936217811 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073436973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144571691 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073648781 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083342529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096970287 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069504925 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098208489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06895078 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152630998 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067842612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111218802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067729215 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097071367 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06869812 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08660408 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094826457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068758996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068586015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094746624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068385027 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112235624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067887014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067813734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094258452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068061946 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105337267 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068201584 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067708483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093796879 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06985599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097176859 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069075106 seconds)
  done (took 3.839795869 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117516783 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152605878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074248774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128926953 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113095694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09637285 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170059301 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093659157 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154587926 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067414678 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110738153 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067573148 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127594622 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069077791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113876045 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06826791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0692306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094847991 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067558879 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094581827 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086921538 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09339358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068040844 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068306965 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094735273 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080620642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09364056 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068392032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068040887 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096764003 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071402814 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093921914 seconds)
  done (took 4.146207601 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074954913 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075899165 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108905826 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083399107 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095881434 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071737099 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072725772 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095592348 seconds)
  done (took 1.784965818 seconds)
done (took 26.801449949 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080988783 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071541768 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099728167 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080883645 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099582668 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079095073 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067672757 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101174188 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076781809 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072828521 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102114686 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067317831 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097062047 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067264913 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074280159 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093780734 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079497504 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098108807 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079677521 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079565709 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096126994 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076809996 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100091877 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07957322 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105736086 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079292657 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082158207 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100718976 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069084289 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096781171 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076493718 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083421673 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.095241731 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080058391 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094391935 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067983857 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067813522 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094623707 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079344126 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099957137 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071179971 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100528125 seconds)
  done (took 4.66884178 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091257023 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092340669 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111336642 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065501662 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097101277 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064699796 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.114738335 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063390596 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058965644 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114959562 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055804225 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059244772 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089221326 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054566497 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058770589 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055947936 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088074746 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055742709 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059481688 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085827576 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057873314 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054051468 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086954789 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062709389 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056671173 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087799818 seconds)
  done (took 3.053702314 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076957164 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08449933 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114515469 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127913431 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132437745 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077041232 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105104395 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.085640887 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112662232 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067423829 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071228409 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121372176 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087351902 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100759435 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067720746 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112445156 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082597605 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069218021 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100174071 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090026211 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111959089 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.076889009 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091139168 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108115621 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066960685 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09642501 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072592824 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108704599 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072601338 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076919314 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099051924 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071287424 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096737987 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078928478 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07217499 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095698997 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090057516 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10470819 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077847697 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068782688 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098648785 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069031026 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115077965 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111738015 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093919984 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075103942 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075223198 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103792369 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067324711 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113588513 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076696111 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067518373 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097528104 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067126781 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067322578 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107593295 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069869722 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096918638 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076648093 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070696115 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10578003 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07191212 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110274177 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066924576 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074653912 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.094139396 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06834602 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093318432 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091121772 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068433432 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135630692 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068379705 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096071746 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07676832 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10201461 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073717577 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068437894 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109903827 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07700307 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097715493 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076758639 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071656136 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097622711 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086735518 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096425465 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069083809 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068225557 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10052145 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070274476 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06890367 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107972431 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067658956 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.09722777 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084591922 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09342374 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069545301 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073658829 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099702912 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067757044 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105962977 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073933741 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068413784 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103520687 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067919235 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097717711 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07786048 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072571341 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093836557 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07237839 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100483336 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068492585 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069364473 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097336532 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069139152 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074784278 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100412835 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072672196 seconds)
  done (took 11.269400453 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.191583049 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.184997514 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071205581 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.178302787 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076178336 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107375779 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177781568 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095135904 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096171122 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067823444 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068838383 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129325328 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123260072 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105622576 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.10608805 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067468131 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112854628 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104387324 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.180725472 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174378188 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114687302 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076029951 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069456747 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097164434 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070268684 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076966995 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112645579 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.101721197 seconds)
  done (took 4.265876078 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084100994 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129566185 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073281925 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088802389 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118712786 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068875872 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101667268 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070017065 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107559795 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080434341 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095330097 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073793447 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074315142 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105333168 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068710496 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105402214 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078154032 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068886892 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.097934377 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073256397 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104580802 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080518712 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071628345 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.094577185 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074088597 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094795773 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065111226 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.112745123 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067724053 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117183684 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065669245 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074583431 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108505839 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068567174 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095062046 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071477747 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071272145 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098019619 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069411803 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066160293 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094059338 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057473572 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067024099 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107315354 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073247966 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087022706 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073352394 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072363964 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099608069 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065451666 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097496302 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071109179 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07099968 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103813664 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072390967 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072753722 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099584675 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065850709 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102981964 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071574924 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064262882 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094364628 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073197157 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06668543 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103091771 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072325706 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094086592 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070953571 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073417193 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102102948 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071455344 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070781653 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093008273 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069270771 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099843688 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072842409 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072086558 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094447036 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06797721 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067900957 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082999621 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067717389 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053690752 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.09832364 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065868633 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06724914 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097956953 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073784297 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108126733 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068389153 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.100588665 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06855624 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06736298 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09829746 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063444119 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070031279 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110531944 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110962352 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067979695 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06577907 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109805939 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07289052 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067144621 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083621862 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074891618 seconds)
  done (took 9.800002809 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09835312 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092551682 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097098033 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083357296 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123035654 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092035405 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102542954 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074660281 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069371852 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112067356 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067967995 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103493637 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068527841 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076562582 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124044064 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075408738 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097309828 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076891692 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071702089 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135431085 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083510473 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110116519 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080838914 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096435301 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072445053 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.0806002 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124411336 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079135853 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106032775 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084523813 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080029348 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.123357196 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085656705 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099505317 seconds)
  done (took 4.294153533 seconds)
done (took 38.457747173 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.197610989 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.398045628 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.181663127 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.102175881 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.230833473 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.194482674 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.189983801 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.176773046 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.275443135 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.180659098 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.421350861 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.815756808 seconds)
done (took 58.501262613 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.178311155 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.321812575 seconds)
    (2/2) benchmarking "String"...
    done (took 1.453261904 seconds)
  done (took 3.898594689 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.526005129 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.076289149 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.437515336 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.180866553 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.184637142 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.48481423 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.786576287 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.021313565 seconds)
  done (took 27.304265125 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.183416502 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.544867385 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.52980347 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.528661881 seconds)
  done (took 17.918106211 seconds)
done (took 58.957226778 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.215258057 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.206798003 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.182269278 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.162518923 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.289541008 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.201589227 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.487046487 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.423881357 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.183326479 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.163622106 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.180322566 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194992489 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.191224315 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.490280072 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.187895751 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.182681154 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.240394867 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.606700466 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.570501325 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.192002901 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.20428001 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.214491818 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.189785144 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.18722497 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.220653434 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.182509635 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.190490987 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.211483899 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.424715749 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.189583282 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.275047344 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.649363751 seconds)
  done (took 190.813432904 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.180161208 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.325335258 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.385515155 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.233895323 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.776164021 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.373677525 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.314229036 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.842197005 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.195895468 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.180651271 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.496321137 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.181506578 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.553353568 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.145524518 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.185777785 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.256513503 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.40737777 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.527489228 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.195564588 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.457481487 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.20482831 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.499246517 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.444184178 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.426842028 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.227218341 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.288464794 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.196183332 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.201930491 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.369877344 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.344963388 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.205624571 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.204854817 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.75244822 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.040002938 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.190293707 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.185048614 seconds)
  done (took 150.117691246 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.441894449 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.181252067 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.181652018 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182801088 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.211124439 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.186537009 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.718640029 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.712381214 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.683302257 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.306469318 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.242831727 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.373927182 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.185220287 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278099828 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.194706219 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.186082273 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.184111844 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.181500623 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.198832906 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.184360359 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.207201517 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186653782 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.719406844 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.198467748 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190561072 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.181915111 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.213074706 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.577215334 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.274908406 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.183641531 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.214464725 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.49894864 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.227635037 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184130066 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.46057749 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.963612571 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29124064 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187258032 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.213137939 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.185414475 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.453932364 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185592905 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.184775426 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.189697683 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.755153532 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.191282985 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.718720683 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189366229 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.07337787 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.186108842 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189867572 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.577120534 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.593641355 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.187189132 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.189268827 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189854642 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.184012527 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185929893 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.218589745 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.673309073 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.284869433 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.188425529 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.184160617 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.189091371 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2181425 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.188609233 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.214946217 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185502349 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.802804048 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.245252617 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.29294819 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.718510763 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189045784 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280870257 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305096333 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.190531966 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.18861331 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.185517949 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.191329183 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.294075918 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.187671992 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.581617332 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193505701 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.189689571 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.245662377 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.281976015 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.18841321 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491712569 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.191364363 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.189663878 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.881488256 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281082062 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.190656926 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.191410544 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18842273 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.584405147 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.724658425 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.366110168 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.191394366 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.711252051 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.192932599 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.593969585 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.701533126 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.784946263 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.193153066 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292798246 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193964203 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.190012701 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.188194259 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.187071579 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216141003 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.192300095 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.249687912 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.190986199 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.585318013 seconds)
  done (took 342.926904454 seconds)
done (took 686.431903938 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.859213638 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.837647037 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.946565845 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.840928917 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.824917498 seconds)
  done (took 10.441033855 seconds)
done (took 11.57244058 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.37126092 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.377310641 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250575792 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.375709529 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221375096 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.390789199 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.351762865 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.215616808 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.285704582 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.265777981 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.291281073 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241644886 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219065336 seconds)
  done (took 17.986454287 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.492990294 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497107857 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258235232 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.492447255 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22856645 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.49664833 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.38338753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395039664 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389653012 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209824924 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205153521 seconds)
  done (took 16.179960785 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.507970654 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.495738199 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264281538 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49917002 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232645155 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.496942557 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.380700641 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.394557602 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.382806654 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209365315 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204156988 seconds)
  done (took 16.202225691 seconds)
done (took 51.500950968 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.202573674 seconds)
  done (took 2.335984284 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.237411467 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.396365232 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.218819841 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.20707855 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.203490856 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.19947492 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.207169338 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.203362589 seconds)
  done (took 11.009224846 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.200168515 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.200296687 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.197694707 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.199782871 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.200593916 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.199541686 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.19661855 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.200899286 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.203024424 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.202184832 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.199544112 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.199503429 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.197813061 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.201819179 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.200408923 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.200896052 seconds)
  done (took 20.338000911 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20045367 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.199008026 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.200973364 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.200176529 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.198149327 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.201753768 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.201228127 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200920617 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.199170411 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.199427374 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.200382085 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.198621847 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.200136385 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.198247831 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.198686964 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.199881617 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.199181922 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.199393847 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.206763907 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.198305596 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.202732854 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.198974778 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.200558701 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.199970069 seconds)
  done (took 29.942419992 seconds)
done (took 64.759246973 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.173567037 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.791709213 seconds)
  done (took 9.102469486 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.203284207 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.202252012 seconds)
  done (took 3.54685728 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.203212707 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.204471354 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.200204147 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.204094523 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.204015961 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.205789199 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.201283035 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205011014 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.204963115 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.199962553 seconds)
  done (took 13.168803031 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.204821091 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.203633098 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.201567454 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.203986816 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.201381555 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.202813512 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.206239195 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.203651095 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.203588261 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.203575412 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.200482822 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.202986466 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.204179592 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.202740462 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.203289032 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.202092708 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.20294803 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.199841762 seconds)
  done (took 22.790449836 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.206875901 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.204461799 seconds)
  done (took 3.547521886 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.201403734 seconds)
    (2/7) benchmarking "second"...
    done (took 1.201147427 seconds)
    (3/7) benchmarking "month"...
    done (took 1.200591171 seconds)
    (4/7) benchmarking "year"...
    done (took 1.204544833 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.203368717 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.20166086 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.201849038 seconds)
  done (took 9.551718065 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.203330394 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.378318618 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.462409592 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.794680178 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.205469438 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.209850408 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.060166699 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.206125253 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.208209942 seconds)
  done (took 13.866842528 seconds)
done (took 76.713305541 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.194414121 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.199394441 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.021976575 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.202829655 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.226800088 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.496719114 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.217789663 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.318754635 seconds)
done (took 37.015552485 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.199882931 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.893181603 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.931222258 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.200117558 seconds)
  done (took 11.164136111 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.196572137 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.099730474 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.193646247 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.199169436 seconds)
  done (took 17.826908035 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.813759814 seconds)
    (2/2) benchmarking "read"...
    done (took 1.53214292 seconds)
  done (took 4.488585591 seconds)
done (took 40.818780415 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208640793 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.205643782 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.203854007 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.205577275 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.204243771 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.20452488 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.209097232 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.207590797 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.20686092 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.208346221 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.206249263 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206418496 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.204061863 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201800892 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206176931 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.202554087 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206815684 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.205248926 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205611279 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206533675 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203836572 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.206293989 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206550461 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.207156595 seconds)
  done (took 30.077745711 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.206146726 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.2071635 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.20733077 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.209607066 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.205348048 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.208043325 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.208571256 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.206972265 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.208059301 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.209216544 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202662304 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.204964562 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.208928101 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.205969627 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209063587 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.206792617 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.207981768 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20720608 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209917358 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.202292719 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.209558798 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207782847 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.206159425 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207347731 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.204978824 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205070623 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.210667396 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.207327845 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208768025 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.206524801 seconds)
  done (took 37.358720737 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.215852722 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.216269548 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.208253213 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.21000591 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.208853667 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.209366992 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.209815783 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.210248192 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.206325856 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.210334588 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.208922169 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.206797246 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.206702278 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.211551511 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211339665 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.205127169 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.205531468 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.209609476 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.207089528 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.208566999 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.211799281 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.212308314 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.20733944 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.209690547 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.212063899 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.207967494 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.209850801 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.210527621 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.208984203 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.208318836 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.210300005 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.20799449 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.207425314 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.210818409 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.210605003 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.211055521 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.212341976 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.214600289 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.207637965 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.210762058 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.209532716 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.208225645 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21014784 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.211106607 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.210558045 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.209188711 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.210686513 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.207135621 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21140256 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.209532796 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.210455189 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.212958509 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.212260679 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.210406229 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.209030522 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.21178166 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.212446904 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213108631 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.209799571 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.21017154 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.207841247 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.210638411 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.210531602 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.208907196 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.211005872 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.210551694 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.21128187 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.212618301 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.209598302 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.211374735 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.209279578 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.21093925 seconds)
  done (took 88.271242282 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.214425395 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.207559925 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212134162 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.209686025 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211622236 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2134829 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.207941015 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209999362 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207517474 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.213190614 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210642379 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.210441231 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208594428 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.210531884 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211558679 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.208924965 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.209776646 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20552911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.208586585 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.210873251 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212163827 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.208735151 seconds)
  done (took 27.767687876 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214101898 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.210515473 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.206443245 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.210038395 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.210719238 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.211043725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.210770611 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.210279587 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209735562 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207959937 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210823535 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210757359 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209493514 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206747971 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207856793 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.210820728 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213835313 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208822556 seconds)
  done (took 22.924074406 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.206859363 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.211521597 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.212984434 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212417959 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.212794362 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.214423857 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207056771 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21121607 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.214342632 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.20687379 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.214597379 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211069512 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.209680637 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208484555 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211047845 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.207945148 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.20959811 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207957959 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210157514 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209548066 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.209226427 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211473439 seconds)
  done (took 27.775819425 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214551948 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.211296062 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.209592006 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.213196251 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.209148566 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.211489992 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.210429484 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.20743865 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.21345346 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.212413308 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210503568 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.214628546 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.210327678 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211704747 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.207621863 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210547222 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.213446023 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213852038 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211058969 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.20840739 seconds)
  done (took 25.36890321 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21186721 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214552049 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.213404764 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21396558 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213628568 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.212560311 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21429564 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.214136117 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215433385 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.215672951 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215748566 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.214250854 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216041442 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.213928307 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214617506 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213691677 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.213294127 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2145324 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213654531 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.214423023 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214883714 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216055923 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216560888 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.214882013 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.214778498 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213888516 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.214158458 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.215747946 seconds)
  done (took 35.149416228 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218526713 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.21538388 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.214041356 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.211320032 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.21264203 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.211376689 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.211292904 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.212311492 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218412608 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213296235 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.215021389 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.214425273 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214085908 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.213858541 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215178409 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.215661212 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218314573 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.216892635 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21181983 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214401508 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.217683784 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217378939 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.215147892 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.211892873 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211927091 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.215877629 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215522443 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213419557 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217521879 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.212946521 seconds)
  done (took 37.5876269 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.23765468 seconds)
    (2/2) benchmarking "in"...
    done (took 1.236322408 seconds)
  done (took 3.622679575 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.212884522 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215411479 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.214411895 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213515321 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.215611728 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217034467 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.215294873 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215987147 seconds)
  done (took 10.869367237 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.217694801 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.216490163 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.216760623 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.217729672 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.216814185 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.21955637 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225245593 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.23574718 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.218929707 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.217218678 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.226853965 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.227855331 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.22022012 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.217059048 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.218890927 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222211039 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.216460982 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.216228567 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.220291859 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.218400987 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.220484058 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220895215 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.222723541 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.217943616 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.219362255 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.233428663 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.227944081 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.21762238 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218484715 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.22930425 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.219581317 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.216496496 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.219124249 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.218012438 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.217020567 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.218458732 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232216325 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233172624 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.229977395 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.218731078 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220077201 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.216792045 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.222069079 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.221962404 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220403612 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.220140052 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.218667839 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.215643094 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.218187985 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.223005345 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.224813879 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222059676 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.217168258 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226172079 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.221362988 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228827622 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.234282678 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.223026377 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.231557097 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.23507924 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.236137453 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.226923048 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.223261586 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.220146094 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.231011074 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.248185994 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229251672 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.229436332 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.216166718 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.219861641 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.232062718 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236170328 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.232529776 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.221582333 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.219130201 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.222110589 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224369233 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219996797 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229625129 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.241313022 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.220738325 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226376092 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231199274 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243245545 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.221903116 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.223774274 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.221119852 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.219697638 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.225201763 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235790488 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.23334885 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.220680814 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.221275205 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.220308633 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.224581379 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.223930261 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.222236809 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222301568 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.217738861 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.223956192 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220008889 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230697952 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.237513989 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220965716 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22033134 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.232367186 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.221832191 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221416495 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.237902726 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.22296017 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220736396 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.223986173 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.231620462 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.220955785 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225957063 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.230083957 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.221571387 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.227959023 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.221341088 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.22181426 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231915995 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.252231386 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.223103104 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.222939532 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.233016509 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.235750832 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223229114 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.228078703 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.221959661 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.22050848 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.221924502 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.227588705 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.224514215 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.225776605 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223891976 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227180366 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.224199825 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.223114186 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.221717988 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.226310642 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.229091684 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.225987782 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.226009251 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.229569885 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.224635934 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.231721226 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.235102969 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.226472199 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.226352902 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.226089205 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.221916759 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224551988 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.228265152 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.224816429 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.227926157 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223144859 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.224533742 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.224549769 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.225744343 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.225752152 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.224712567 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.22586334 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229377753 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.223904162 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.231291816 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.226464883 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.223847967 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.223402267 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.226917302 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.227326743 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.226956289 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.225049029 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.228450856 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.234457643 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.226892064 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.225311242 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.231862644 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225738682 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224889293 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225253902 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.230015302 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.239499603 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.226738186 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.237013777 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.226059348 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228879842 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.226083242 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.226700908 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.225533826 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22615982 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.229641568 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.236312142 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244194513 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236813082 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.227916169 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.230898367 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.22819401 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.229645141 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.23423962 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.228126992 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.227486974 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228407003 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226041384 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22678034 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.230797005 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.226596602 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.226470798 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.229492769 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.230420715 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.226605302 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227511216 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.228383927 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23290326 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.226691863 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229956289 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227682128 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.228028731 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.224522306 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.230307262 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.22806327 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.227401911 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.229058582 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.239849612 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.225447949 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231270712 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23129168 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.230141268 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.227361965 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.228762424 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232774816 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.2290021 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238733544 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.243024744 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.230327633 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238949874 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.244396514 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.229452375 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.233806671 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.228097178 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.227476782 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.232013937 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.235534069 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.228634166 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.228303914 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.227712739 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230265522 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230280547 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.240030999 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.227399908 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.228500876 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.232296712 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.234195963 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.227513083 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.232341795 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.231832123 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.231268254 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23214205 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229406144 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.232454172 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23305772 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.230869716 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.228923172 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.232213443 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233532837 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.235958755 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.236558993 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.233000697 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.235396299 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.231929907 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.236125709 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.232019845 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.228563978 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.230949339 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246818731 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.240611009 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239695838 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.235508956 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.230289279 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241816179 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.23652023 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.2376485 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232529143 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231943494 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.233647595 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.231341352 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.229564037 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237110688 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.23087814 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233100858 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.233162234 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234640538 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.231324684 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.234937354 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.234022416 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.231250013 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.234389098 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.232840886 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.231211424 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.236551924 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235769365 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.23177888 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.231523522 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240132322 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245924761 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.235147681 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.234362152 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.235095993 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.233223004 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.235633684 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.234139387 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.242780405 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.24018733 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.23479477 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.251261081 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.233963581 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253614815 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.232185838 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.236782351 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.239848633 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.230198516 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.233032136 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.233955714 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.23322461 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242810343 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.244314946 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.236755036 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.237530524 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235604202 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.23331738 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.236090581 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.233778597 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237998371 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.234222332 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246500602 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.248061839 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.240126722 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236956357 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.231659354 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.233592071 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.237287594 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.233835851 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240418343 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.233741113 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.235591719 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.238191729 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.2368054 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.235249791 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.237019568 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.238991794 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.234982902 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.236825861 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248320249 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.249008566 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238147918 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.234020934 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.248191873 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23919241 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24921238 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.255353431 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.238940573 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.234450654 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.24089154 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.242698525 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.236644426 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.240738461 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.238839457 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.242596615 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.245563357 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.242318101 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.241264759 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.246175908 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.241575785 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.239037919 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248149006 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268436646 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.241859196 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242171251 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.232605034 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.238541204 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.245928271 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.240826767 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.241300857 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.242378256 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252990403 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251186052 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.236754081 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.238525075 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242125198 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236774691 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.238998626 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.241027057 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.235380635 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.237193797 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.246179082 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.243044944 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245383116 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.240863442 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.239574732 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244100794 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.238735595 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.250085391 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.236385233 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.242379112 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243105931 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.240608841 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.242851956 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.242590505 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.238753507 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241403376 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237942095 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.242884122 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246847632 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.250135706 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.242318509 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.239856204 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.240958482 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.239833061 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.240358753 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245081833 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.242596856 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245015988 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.244279852 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.239966331 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.249372381 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.242684235 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.236933591 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.244197698 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242927082 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245766255 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.251736855 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241619993 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.235815541 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.238421941 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245915606 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.239379263 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.241929828 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.255602427 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243929449 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.255386474 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.248982205 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.246880346 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.246056864 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246734813 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.250457607 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.2431819 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.244461757 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.239192413 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.243150174 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.246184087 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.24734147 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242982195 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.252175995 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.245584584 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.246167947 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256801923 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.260071393 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239418562 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.242151348 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.250048532 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.24138862 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.240065926 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.242583618 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.245546753 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250349678 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.259864911 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240903513 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244968401 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.241686671 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.244437254 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250346262 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244478147 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.244763491 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.238655098 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.242575338 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240527512 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242017252 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.240525448 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.241663915 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.24232971 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.244360721 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.249672994 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.238163779 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245880991 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.242352346 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.247374963 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24009061 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241555522 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.238533992 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.241795501 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.245795694 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244541382 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.249197134 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.250896317 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.243585102 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.246501717 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.245127695 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242593161 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24634653 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.253777565 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.254926574 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.240463346 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.245808258 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.246314595 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.246802989 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244648889 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.242222214 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245069961 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.250224079 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.243040088 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241299089 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.243421019 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.24649885 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261877535 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.256269471 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2455247 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.249219859 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254655251 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.243762991 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.245983069 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.24401386 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.249803788 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.247845521 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.250640346 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.242848053 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255915081 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260075271 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.245157449 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.247326497 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.247255824 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.254621726 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.247786527 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242881413 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.243138556 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.249890217 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.263036655 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245098283 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255122974 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277871588 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.263612542 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.248230263 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.248650955 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243570083 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.24398141 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.248746735 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.245732191 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.244408236 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244526175 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.245809302 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.24673038 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255711146 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.247504274 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.244843945 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.2467589 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.247314406 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.250890367 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.242655999 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.246224079 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.244297456 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.245128425 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.245453166 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.245193653 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.248759934 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260792611 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.25941601 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.245439728 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.246880985 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.243670851 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.252979949 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.250358347 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260499286 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.254849167 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.246356074 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.249756649 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.248382655 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249411253 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.246595483 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.249665793 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.250296 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245218132 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.245718072 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.262212149 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253056779 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.256254113 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.253211286 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247328107 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.246978321 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251135941 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24594674 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244982967 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.250318931 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.249668882 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25085716 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.247166578 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.247217457 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.253768301 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.254500903 seconds)
  done (took 737.852399832 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245090635 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244760508 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245253309 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.245625671 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247086555 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246089906 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246385609 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249767062 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.245888068 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.246025611 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.247049183 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245777084 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245897177 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245642149 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24680208 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248739583 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245126742 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24525559 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.246899643 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248496486 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249395875 seconds)
  done (took 27.357952278 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.257236027 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.253862251 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251866513 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254576964 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252496247 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.257655173 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.249515528 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255497378 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.255163313 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251157042 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.257042326 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257458825 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.254713311 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.253603472 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254399937 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255474656 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.256011074 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253101731 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.2575581 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.254275446 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256002469 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.254548846 seconds)
  done (took 28.783243821 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.256298485 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.256971906 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.256719709 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.252859485 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.256818068 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.255284476 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.257099318 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.255874117 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.255850577 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.259142017 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.256606304 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.258451635 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.266133424 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.26245077 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.261996746 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.257657062 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.400997587 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.258200973 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.256861778 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.257521835 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.256392717 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.265007322 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.25692309 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.255907646 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.258380002 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.256897042 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.255028048 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.258081175 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.258342061 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.260907271 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.26223623 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.256384044 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.259385982 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.262493152 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.253701116 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.259402718 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.262730785 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.259326336 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.256440257 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.259623515 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.263907848 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.280244094 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.259645494 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.263269459 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.259736674 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.258991681 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.263970932 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.266896698 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.256232442 seconds)
  done (took 63.040227152 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.260987481 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.258873721 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.255038389 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.259254518 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.257524042 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.259824814 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.260891624 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.261198197 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.257562613 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.258209113 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.261065414 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.257443582 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.253500666 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.260779074 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.257563945 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.255313774 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256253118 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.25649898 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.258403973 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257700465 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.257430682 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.258885708 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.260824374 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.259032429 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.260234958 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.258060847 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.257602946 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.261977795 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.253951326 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.259320537 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.260864082 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.262355846 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.262722973 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.260228345 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.259122317 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.261132041 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.261472867 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.258851944 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.260232436 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.259013043 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.261705262 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26117681 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.262003571 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.26156428 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.259394514 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.259995951 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259377146 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.260264156 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.261014659 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.262356374 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.26269359 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.260041198 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.263698345 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.260404491 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.263618311 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.259988182 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.257357549 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.256073733 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.262677109 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.260723795 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.260359458 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.261510212 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.260837404 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.261705534 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.262652527 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.261715068 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.261471871 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26196213 seconds)
  done (took 86.857329573 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262911095 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263178612 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263757823 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263083975 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26231684 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.262861371 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263666009 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.26332594 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.263277581 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262977344 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263072215 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261074246 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.263342023 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.262872976 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.263253113 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26312574 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.263938491 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263459064 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26344219 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263786491 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.263992492 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264297231 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.263825258 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.264248631 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.26601363 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.263415394 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264698019 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26467408 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264585418 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260480167 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263459066 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.2647559 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264760728 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26326035 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.26482152 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.261015776 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264095566 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264705342 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.265775588 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.265583329 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264736778 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262819814 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265986114 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.265520475 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265297741 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264724884 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.265673647 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.265202456 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.265568317 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266554822 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.264981862 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.266065042 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264907882 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264575471 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264605049 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.267830567 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264165344 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266024416 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265656525 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.264950611 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266425097 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.267749021 seconds)
  done (took 79.584591156 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2670643 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267142535 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.263588948 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.265976659 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266870689 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26452487 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267887159 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.268329473 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26741097 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.267846225 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268186944 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264098715 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264638811 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267748592 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.265170324 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264918872 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265314726 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264670296 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268157507 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.264883337 seconds)
  done (took 26.52573166 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.265243887 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.268743074 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.264579009 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266674316 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.269295554 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265559739 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.26841588 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268601022 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26690161 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268651438 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268407199 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269173611 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266811004 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267277678 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.270304923 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.267173616 seconds)
  done (took 21.484320697 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.266355 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.268430721 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.268230531 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.268486259 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.267167344 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.267351597 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.268848238 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.266175125 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.266944063 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.270271972 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.269603337 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.269070953 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.26897541 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.268642255 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.26782046 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.269560568 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.26717027 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.266632012 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.269421505 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.26947251 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.267493169 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.266501902 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.269409695 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.269936893 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.267204794 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.268649643 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.267758915 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.266503405 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.267826092 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.27050631 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.268325008 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.26729268 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.26862357 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.268125112 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.269585052 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.266553406 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.271134343 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.270350724 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.271559317 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.270569486 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.271034063 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.267939356 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.271964895 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.271715473 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.268410659 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.27018386 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.268876851 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.268992067 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.268116878 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.269036077 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.271957901 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.270901941 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.271689826 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.272062131 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.272319755 seconds)
  done (took 70.999649377 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271991195 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272703402 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.269716079 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.27188944 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273209166 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.270174461 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.271366364 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271420373 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268830718 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.272298068 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.270778073 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272371221 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270117623 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272558543 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.271041194 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27331538 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.269998073 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.270470021 seconds)
  done (took 24.090909067 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.270913188 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270410449 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.273240505 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.270090584 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.270736165 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27372522 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269449602 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.272436489 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273455989 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.271900725 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270980977 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.272593178 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273589639 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.273281071 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271343919 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270705936 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.273302054 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274439769 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.27121297 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270672939 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273365302 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273218117 seconds)
  done (took 29.192242376 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.273148153 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.273052446 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.291259464 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.317450906 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.304243661 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.272863335 seconds)
  done (took 8.937569033 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273004452 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274115245 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271367263 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274896733 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275598445 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27337061 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270750812 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272097534 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274617883 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273503434 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272244337 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274287547 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274971849 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272704599 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274937483 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274121182 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272301042 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271961577 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27348327 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27491235 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272645666 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275675625 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272431363 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271941694 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272492641 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273220519 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275408836 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274181673 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273184467 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275070187 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275587624 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273179709 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275843266 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275016704 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277706193 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277052322 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27419655 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276342868 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275783734 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274447882 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277445157 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276201509 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277435 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273993042 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277088922 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274348085 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274771426 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273640407 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273338224 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277991918 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277100744 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275391568 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276870606 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278242411 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277172398 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277660028 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275032887 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274742039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27781608 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27545071 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274977496 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277161945 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273909394 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275544606 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277608199 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275859606 seconds)
  done (took 85.346815177 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275772187 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275409048 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275639058 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276495008 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275632338 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276034444 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275596737 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275402944 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27638283 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275826655 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277585261 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276053488 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276798281 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27554956 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27569462 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276597545 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276249315 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27566149 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275674399 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278116759 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275305603 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2759651 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275857648 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276189585 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277579941 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277855282 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276067873 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27499016 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276117152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275881342 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275418495 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275725618 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276354242 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273316404 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274789324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274677716 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274925216 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275270341 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275414436 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276953276 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275340861 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277387439 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274398489 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274844951 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275987886 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274789028 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275103874 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275905254 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2744616 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275513029 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275017937 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27514839 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276145652 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275173921 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27454264 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275486139 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275359086 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275102246 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274535346 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278130298 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276250414 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275907182 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278406335 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274822867 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275449745 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275436006 seconds)
  done (took 85.415491702 seconds)
done (took 1723.381069045 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.358815151 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.2685623 seconds)
  done (took 13.837639129 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.440121581 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.389818236 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.275293472 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.30975581 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.274213982 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.280683425 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.298001066 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.274551482 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.275057613 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.274847908 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.275262664 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.460300954 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.328837779 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.275810417 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.275281476 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.371491542 seconds)
  done (took 42.29218843 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.303389812 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.282365118 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.391434628 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.297311947 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.303389042 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.460291409 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.331765376 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.280451386 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.445434976 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.321231766 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.782787545 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.303569183 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.280704452 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.346798793 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.297198562 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.45937965 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.515010759 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.78655729 seconds)
  done (took 29.399860745 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.714412177 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.286639018 seconds)
  done (took 9.212641674 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.275207381 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.289673523 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.274877833 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.284376916 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.284072938 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.342234906 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.33236249 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.347345311 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.291022149 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.359976436 seconds)
  done (took 64.294479855 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.298166257 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.2809367 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.280423514 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.278801421 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.281423474 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.271773117 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.278318391 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.273388254 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.781911632 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.402153825 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.2950686 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.286532545 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.281114492 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.280137874 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.276603084 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.315363236 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.424721979 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.276157678 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.276062609 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.285963758 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.279877097 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.396718511 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.317849611 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.27667961 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.399031299 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.759567525 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.283604402 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.285306315 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.39885822 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.27573432 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.278013167 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.278304124 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.281027017 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.852510569 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.776147716 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.291793668 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.301519661 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.287592591 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.27582951 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.420502678 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.279500404 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.285246789 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.277276933 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.752834692 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.429165074 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.386290492 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.47960062 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.280948291 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.280285035 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.339494754 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.279219448 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.280255371 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.306720586 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.020237311 seconds)
  done (took 108.033511145 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.328543217 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.759406278 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439840608 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.291622072 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.897914054 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.959123953 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.27359396 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.546684378 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.285344892 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.272170231 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.543655328 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.756335355 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.275261356 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.278379592 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.989327053 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.349430272 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.270611405 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.029063443 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.27110028 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.276031218 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.678451545 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.287664168 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.27444297 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.538148406 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.308487039 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.708491896 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.60070839 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.712031215 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.273497554 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.268224976 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.715022046 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.278856016 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.311421829 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.270207417 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.534052263 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.599969047 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.58381818 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.276444165 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320601113 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.26986119 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.291113736 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.702053249 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.586499409 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.268360164 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.269826811 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.705864665 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.268576335 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.270873474 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.270065476 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.466770943 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.186536846 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.269202991 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.624278385 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.270496802 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.522619575 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.314034529 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.340096195 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726739504 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.267203466 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.317117643 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.30717468 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.266797771 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.274491412 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.269110005 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.267670172 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.579255652 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.583937726 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.270930374 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.577690112 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.686145068 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.265447876 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.750670778 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.180487044 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.281823974 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.309010689 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.264979835 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.820488021 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.71843196 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.295790128 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.264080209 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.559096204 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.266170613 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.525606238 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.275199233 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.264185258 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.668407126 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.286758411 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.324472693 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.263887297 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.264256224 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.900730661 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.26547245 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.510283858 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.290793832 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.262356501 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.262800829 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.284659286 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.273420661 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.262395111 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.26549767 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.741358466 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.267924747 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.370197146 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.279226219 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.262841245 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.263809013 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.263475711 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.264396122 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.474466028 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.714144648 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.266232543 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.264118345 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.266673488 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.271284863 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.486760498 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.267182063 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.527195934 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.264395043 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.262897174 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.278760949 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.954557462 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.307227476 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.264568581 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.266970515 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.095358657 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.471586797 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.280183855 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.263283105 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.264759311 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.27752293 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.450963374 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.26357684 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.287679153 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.265293166 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.921689841 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305018183 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.271963149 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.839418574 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.26640977 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.167699227 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.280352644 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.263920451 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.558670412 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.518764956 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.498138205 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.267151841 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.267313381 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90221201 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.282911103 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.410474611 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.282137203 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.251119474 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.459417322 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.523828117 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.266214381 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.813284414 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.266705395 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470183577 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.26450455 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.583846091 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.705438695 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.267890003 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.266553773 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915948044 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.909677612 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.078413688 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.266113159 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.521215903 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.258696351 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.718146486 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.265529992 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.265176423 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.695211103 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.268195579 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.266629837 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.266484635 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.266074267 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.411806855 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.437376831 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.462669216 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.266825915 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.682227028 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.270751886 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.26680414 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.272561522 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.265804706 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.622184361 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.347506504 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.270020456 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.31013617 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.265176237 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.27091904 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.693240264 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.195811296 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.268873937 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.417848658 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.843175879 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.268591978 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.268135153 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.885792487 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.554562175 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.77149935 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.301749361 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.533797013 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.270022363 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.304319753 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.801015771 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.326394402 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.698803145 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272259886 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.271891896 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.816416241 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.270562852 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.364928836 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.267853507 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.267419491 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.748598648 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.269909243 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.26875616 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.47516723 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.269702817 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522026879 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.268683558 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.29461536 seconds)
  done (took 1094.225017778 seconds)
done (took 1362.505232209 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.268757962 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.270832253 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.257808211 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.27119843 seconds)
  done (took 26.278449961 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.279665018 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.275232231 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.274294836 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.27578826 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.277219112 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.275542824 seconds)
  done (took 8.867532469 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.311919342 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.26958983 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.271261829 seconds)
  done (took 19.064427377 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.461876296 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.413097349 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.59332848 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.201058375 seconds)
  done (took 9.877496456 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.276220416 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.275267096 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.276075347 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.277830488 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.280542619 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.280204629 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.277020622 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.277046238 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.281668139 seconds)
  done (took 12.712493578 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.720477863 seconds)
done (took 82.730869527 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.311586979 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.29249275 seconds)
    (3/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.682801578 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.828177558 seconds)
    (5/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.298979289 seconds)
    (6/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.397669457 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.935466142 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.728989912 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.682522048 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.043528145 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.496644323 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.298899441 seconds)
    (13/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.744922024 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.324680895 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.924787072 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.298539905 seconds)
    (17/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.472364217 seconds)
    (18/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.6967487 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.47075525 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.286737205 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.27755716 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.346400988 seconds)
    (23/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.271288168 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.267257018 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.776938014 seconds)
    (26/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.336916805 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.276154924 seconds)
    (28/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.006390254 seconds)
    (29/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.27675876 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.272666567 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.260391135 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.380276434 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.477401729 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.396820749 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.467450945 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.615671644 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.391042361 seconds)
    (38/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.941114023 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.284629608 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.565574679 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.377081122 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.848901201 seconds)
    (43/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.591688573 seconds)
    (44/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.798410306 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.476177912 seconds)
    (46/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.275993475 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.26804543 seconds)
    (48/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.24319932 seconds)
    (49/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.97280362 seconds)
    (50/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.250286361 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.588087177 seconds)
    (52/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.372102664 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.297584822 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.272100214 seconds)
    (55/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.275021293 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.402341533 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.384768783 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.533650844 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.299709194 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.422848086 seconds)
    (61/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.966538577 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.061566643 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.506045758 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.350669167 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.475637114 seconds)
    (66/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.597954906 seconds)
    (67/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.303131638 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.710805097 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.300443614 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.675654531 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.042585506 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.331691153 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.25947514 seconds)
    (74/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.414082208 seconds)
    (75/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.390714259 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.258723078 seconds)
    (77/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.315526817 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.951551468 seconds)
    (79/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.502163732 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.491873436 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.275350321 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.713044495 seconds)
    (83/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.825773574 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.331470637 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.52527041 seconds)
    (86/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.23806141 seconds)
    (87/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.37196246 seconds)
    (88/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.824415265 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.696290982 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.297183058 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.097622297 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.638420802 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.418669991 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.389347987 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.29717671 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.108197164 seconds)
    (97/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.45193695 seconds)
    (98/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.588472392 seconds)
    (99/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.292040355 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.2425773 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.278789678 seconds)
    (102/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.620395474 seconds)
    (103/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.385040964 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 5.49653443 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.294363411 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.326472018 seconds)
    (107/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.262288778 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.265260588 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.289592239 seconds)
    (110/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.278708557 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.47221482 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.789661725 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.945846944 seconds)
    (114/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.364098843 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.277937341 seconds)
    (116/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.317804291 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.492323013 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.277743141 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.478198019 seconds)
    (120/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.279383247 seconds)
    (121/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.316558355 seconds)
    (122/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.386193182 seconds)
    (123/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.383600482 seconds)
    (124/309) benchmarking ("sort", BigInt, false)...
    done (took 6.277906606 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.277799949 seconds)
    (126/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.691953136 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.047488767 seconds)
    (128/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.654901018 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.39917478 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.965329377 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.294677177 seconds)
    (132/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.842488379 seconds)
    (133/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.915141863 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 1.783048859 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.30186142 seconds)
    (136/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.291320075 seconds)
    (137/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.51252154 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.353962343 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.793194876 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.55915372 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.27847361 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.563832899 seconds)
    (143/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.375189129 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.945700113 seconds)
    (145/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.274819161 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.54426172 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.828608031 seconds)
    (148/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.747964735 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.324051996 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.637630916 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.282107866 seconds)
    (152/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.590994284 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.4129481 seconds)
    (154/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.306972131 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.306236962 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.338666414 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.094972392 seconds)
    (158/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.310062671 seconds)
    (159/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.862257233 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.798514041 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.581023913 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.290279275 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.297749802 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.935099852 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.290883642 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.652481854 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.263486238 seconds)
    (168/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.846288022 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.283840483 seconds)
    (170/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.315878359 seconds)
    (171/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.582615942 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.350736199 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.345202519 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.595742047 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.275929146 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.918242173 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.257221384 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.342161037 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.997681574 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.324239761 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.24813094 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.645672413 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.785479015 seconds)
    (184/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.25778628 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.342921902 seconds)
    (186/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.309037779 seconds)
    (187/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.744304716 seconds)
    (188/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.330799652 seconds)
    (189/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.234064014 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.326346671 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.349126892 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.921242445 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.561802088 seconds)
    (194/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.264155441 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.638672484 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.288692314 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.375561292 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.848429174 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.750558055 seconds)
    (200/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.657378807 seconds)
    (201/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.940112796 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.745263961 seconds)
    (203/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.017092617 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.258248987 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.291839122 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.348308282 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.502294052 seconds)
    (208/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.291184124 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.364152237 seconds)
    (210/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.737819069 seconds)
    (211/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.068509337 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.344613092 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.305309249 seconds)
    (214/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.274306273 seconds)
    (215/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.234046648 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.644663168 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.669223056 seconds)
    (218/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.273886909 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.244376667 seconds)
    (220/309) benchmarking ("sort", Float32, false)...
    done (took 5.210603913 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.448069497 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.097709754 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.955802012 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.246168188 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.807667462 seconds)
    (226/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.568304085 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.462852892 seconds)
    (228/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.391635073 seconds)
    (229/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.401372352 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.635679938 seconds)
    (231/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.006179678 seconds)
    (232/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.326869189 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.263891853 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.227407806 seconds)
    (235/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.269935314 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.227589132 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.533172405 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.284350092 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.251987768 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.195639774 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.071884891 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.56831735 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.261166734 seconds)
    (244/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.25875928 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.262809187 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.227737904 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.442970742 seconds)
    (248/309) benchmarking ("sort", Int8, false)...
    done (took 4.251637831 seconds)
    (249/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.42240116 seconds)
    (250/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.259014054 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.243434917 seconds)
    (252/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.366167049 seconds)
    (253/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.578711365 seconds)
    (254/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.331235687 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.74642597 seconds)
    (256/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.395237032 seconds)
    (257/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.387083639 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.249245549 seconds)
    (259/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.366089947 seconds)
    (260/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.812090977 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.026786459 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.436198674 seconds)
    (263/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.539140295 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.252088163 seconds)
    (265/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.37762447 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.999903032 seconds)
    (267/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.364459464 seconds)
    (268/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.329306982 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.267567758 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.258241613 seconds)
    (271/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.418228486 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.335142084 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.450365553 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.085146335 seconds)
    (275/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.576098132 seconds)
    (276/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.008201202 seconds)
    (277/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.3053704 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.631182181 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.242626339 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.268758783 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.582201295 seconds)
    (282/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.384050564 seconds)
    (283/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.489007507 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.272078921 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.694776469 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.265729493 seconds)
    (287/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.231018776 seconds)
    (288/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.501295861 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.329024751 seconds)
    (290/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.24989003 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.325966282 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.357934039 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.252828157 seconds)
    (294/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.432176818 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.352740496 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.38902405 seconds)
    (297/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.280738568 seconds)
    (298/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.344494048 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.281071735 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.833012761 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.021300346 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.75245442 seconds)
    (303/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.537872295 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.31630679 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.259952004 seconds)
    (306/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.266234435 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.496922896 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.265420827 seconds)
    (309/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.918015586 seconds)
  done (took 886.243781391 seconds)
done (took 887.456762383 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.272141918 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.26528266 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.25045909 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.270860763 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.36238658 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.279159272 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.258215033 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.252717667 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.298022067 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.30134468 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.247195729 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.277290485 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.252596643 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.250457209 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.250619334 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.269655938 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.142032702 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.255302665 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.263722854 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.261348152 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.265621924 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.249777393 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.299616684 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.2791601 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.259959686 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.256481727 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.255120127 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.267868472 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.36169432 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.254648516 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.258569081 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.262268624 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.141325905 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.254225995 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.246671274 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.271021406 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.266751734 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.260865386 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.259949718 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.282527098 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.486821148 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.252275628 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.257536578 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.251552409 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.25852686 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.256014068 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.25783758 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.261401707 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266770906 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.265445963 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.48670263 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.267409752 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.257508469 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.249974685 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.264033475 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.256826662 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.257878917 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27071282 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.27280708 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.268722441 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.138926156 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.263415603 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.259509936 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.2730379 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.256873765 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.531819944 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.249550361 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.260446665 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.495301618 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.26214806 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.53888596 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.263418372 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.256692961 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.272007175 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.283590441 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.147266473 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.253270141 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.258022851 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.265248822 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.25602195 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.26818806 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.267597626 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.263456556 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.254642916 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.268987207 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.287405356 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.268330674 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.260840031 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.266193142 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.275535587 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.264740967 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.264681637 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.259853507 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.25537414 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.265338483 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.255393243 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.256999839 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.259028809 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.260434008 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.264886085 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.479582774 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.265626032 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.252533909 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.252985985 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.251972374 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.269864841 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.481115874 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.252665959 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.278021836 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.303416611 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.256774709 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.147131652 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.263224303 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267981326 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.264778158 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.261378647 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.250190655 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.148996961 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.484227379 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.264616484 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.2554114 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.254034053 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.272265088 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.258153596 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.252172017 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.155938937 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.257070052 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.275077792 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.378537563 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.267538296 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.284480473 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.259008105 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.257872584 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.287910054 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.272171974 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.287970205 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.25952079 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.270079678 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.276354705 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.253926764 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.273630614 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.265137549 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.263013745 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.260042656 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.255648669 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.290640935 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.274162518 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.272884575 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.27688572 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.378987036 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.256790197 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.148997084 seconds)
done (took 210.715567452 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.316455024 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.248299481 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.340564695 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.255224677 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.352182447 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.354369177 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.251382652 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.252217613 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.249626718 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.663577067 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.251105241 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.251705755 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.245526611 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.250473442 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.339405135 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.253878921 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.253210883 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.59733782 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.252938323 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.324364525 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.252592397 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.246778864 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.250275748 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.655101482 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.25066793 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.247476161 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.316006117 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.250103903 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.594651381 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.250487364 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.247667343 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.590481537 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.340818747 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.2645937 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.261356609 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.259619519 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.345653169 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.269652026 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.332747875 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.33736959 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.338103172 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.283703377 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.242933044 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.244170416 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.249037274 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.250065241 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.244252129 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.27617265 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.249338414 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.252581324 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.595632446 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.261081303 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.248520437 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.24649065 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.24838189 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.277143217 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.243248645 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.25174397 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.336892239 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.247742518 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.309464965 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.627762469 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.649520728 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.242792928 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.238375875 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.244057705 seconds)
  done (took 142.959516116 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.312842003 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.320011005 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.346328538 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.242674387 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.294328266 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.347870749 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.248219584 seconds)
  done (took 10.295121593 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.250624073 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.240711225 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.29039904 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.292620016 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.242918289 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.391347447 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.245006125 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.255726772 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.239273371 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.297310405 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.242977863 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.244675095 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.251250435 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.239004628 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.292754562 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.251732365 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.359550131 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.246521763 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.243287769 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.397102398 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.242113024 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.249972606 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.295722154 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.253239537 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.243814651 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.246911917 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.862402236 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.238811168 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.242208327 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.242666004 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241117842 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.278753385 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.243913564 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.240600922 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.243301805 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359922087 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.244639985 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.238966356 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.245538805 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.246072875 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.242941645 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.244259746 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.246226751 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.24209162 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.241794152 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.266861055 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.243723699 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.244389059 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.243664781 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.247617103 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.295469944 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.247132492 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.242650569 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.244382453 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.303030574 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.251634145 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.24319842 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.242186446 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.242758683 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.247631185 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.399915854 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.292201612 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.245249729 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.29779193 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.246284218 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.243229238 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.248331917 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.247002916 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.299351951 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.246752833 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.292129289 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.242351222 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.401538065 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.270212304 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.247605647 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.250251739 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.246597197 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.24842302 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.241946996 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.253807017 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.245556716 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.249906234 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.250282334 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.244083233 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241166219 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349403609 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365472928 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.243894847 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.258346768 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.251767974 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.246260796 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.298378072 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.2464235 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.245130559 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.300021467 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.362632404 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.298119806 seconds)
  done (took 144.583299079 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.250669827 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.25420921 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.247149498 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.261987257 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.246104052 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.24406837 seconds)
  done (took 8.691797147 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.247651876 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.24691283 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.245738041 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.245995772 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.246880178 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.248647083 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.245230832 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248360815 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.251342998 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.246781097 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.248131184 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.250039384 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.247812829 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.248602714 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.247146924 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.248485611 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.248565731 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.244817669 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.245944387 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.248097468 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.34299236 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.246153974 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248239114 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.246944396 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.254201058 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.248164343 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.255968342 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.247966825 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.24671052 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.254173021 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.250458812 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.247597378 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.246437589 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.253441558 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.249228756 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.249176593 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.253355832 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.251088145 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.247464944 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.250518387 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.251035485 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.249551669 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.248139966 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.252410134 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.252307921 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.252851022 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.255489554 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.259084648 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.25065461 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.250376015 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.250889277 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.248088114 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.251252912 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.251433901 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.25479808 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.252158608 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.257086911 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.251391187 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.249384214 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.253363755 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.250249179 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.251750554 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.251251522 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.253607768 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.254898051 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.253767185 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.252948026 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.25554397 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251669086 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.251849001 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.252126981 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.246656695 seconds)
  done (took 92.299510642 seconds)
done (took 400.019205333 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.394403394 seconds)
  done (took 7.584630001 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.474216147 seconds)
  done (took 7.667300523 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.706823656 seconds)
  done (took 18.910080349 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.306889138 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.332256209 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.248866498 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.253447655 seconds)
  done (took 26.33096527 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.353005143 seconds)
  done (took 7.545191997 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.253199515 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.243813678 seconds)
  done (took 13.692396932 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.572397169 seconds)
  done (took 7.762022528 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.097126165 seconds)
  done (took 8.299275738 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.262705517 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.260904001 seconds)
  done (took 13.724862878 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.230001352 seconds)
  done (took 7.42290248 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.775658747 seconds)
  done (took 7.9705382 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.246704566 seconds)
  done (took 7.439589283 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.298538 seconds)
  done (took 7.489789237 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.294777226 seconds)
  done (took 8.487578184 seconds)
done (took 151.519584846 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.246026411 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.248865371 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.245638618 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.246622623 seconds)
  done (took 26.179575826 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.287336915 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.291409336 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.311427747 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.298280143 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.295113833 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.287249294 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.281680929 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.282390571 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.29779381 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.295282204 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.294862441 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.296358448 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.289783493 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.280215648 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.297471652 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.292833757 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.299204884 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.293884057 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.282428225 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.294329503 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.257647937 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.302568163 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.295446662 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.259529151 seconds)
  done (took 32.157052428 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.455850238 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.328655883 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.409303734 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.309435103 seconds)
  done (took 6.697908237 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.309887023 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.31029006 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.321478036 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.364610849 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.39392719 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.321376432 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.285781592 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.279172919 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.266519272 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.313090897 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.384194455 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.333230793 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.400468648 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.259380587 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.438050183 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.258285336 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.259482235 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.311060732 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.364210322 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.375980039 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.25805747 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.309462704 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.314428282 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.327733079 seconds)
  done (took 32.956309041 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.256096799 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.266268548 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.266527712 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.259082926 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.262846578 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.256794714 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.265667215 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.262411552 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.28006483 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.257124021 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.263419547 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.256898605 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.256906581 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.256092082 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.256061022 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.269569108 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.273645006 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.260224205 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.266821841 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.268527618 seconds)
  done (took 26.45761714 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.258008323 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.109473286 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.608539978 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.512586355 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.256830347 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.250641379 seconds)
  done (took 27.192924919 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.323677173 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.437405272 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.265556306 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.579162575 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.657765681 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.257974778 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.261995531 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.467589539 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.736029481 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.745023203 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.310684761 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.323189848 seconds)
  done (took 18.563483636 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.257865424 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.260281125 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.265381682 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.27121941 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.307292101 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.269635531 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.266804058 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.252915595 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.313066629 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.310577301 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.266967856 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.309130783 seconds)
  done (took 36.551201036 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344084402 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302967056 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.148253703 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988761623 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.630140576 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.465270315 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.99635109 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.666763649 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.257435464 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526136831 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.897934122 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362010885 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.508117616 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253552775 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260433019 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.191879714 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479561559 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706179803 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263777984 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910264338 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285428567 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.263680678 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.98710098 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.287711549 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.468275791 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.384795585 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.564094323 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.259270058 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514290231 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274116911 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273134219 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.262270208 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538243643 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89448358 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351456652 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27102769 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.947003714 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.970134574 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.248657759 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.925355006 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.72623854 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.258188016 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267191495 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255281886 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.194547876 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268666336 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683740501 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.262521934 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.970031262 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.25838767 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.2719176 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352220407 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.267514157 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.07273478 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250809935 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.256407368 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.255786951 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264264416 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832518392 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.357702953 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269294347 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.198420642 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364211809 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924683234 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831618873 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.36032238 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.263252581 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.265881345 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.1951239 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.986273509 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281960179 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408985302 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.276080981 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910239074 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895886911 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.923656545 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.204977483 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.774857141 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266136876 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.198833167 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487609307 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26390819 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197291185 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.203509281 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.193207067 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916130136 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274787466 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.593784751 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.265168801 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.678728687 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.270134645 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278503544 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28664781 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.487891618 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.147419224 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263165235 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.679890445 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456840066 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279469634 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.680175102 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194428474 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.262969961 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518562032 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.47590891 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263065308 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.20066385 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.449436146 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258723431 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.282297008 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.274811846 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.2754299 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.787196507 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274257596 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.377817806 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281521449 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.261338133 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960641608 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265938385 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.366520969 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.932189912 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505538559 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.001485708 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268721261 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346808123 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273590112 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.266436002 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.040502521 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.781348971 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.268607177 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.269004147 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266392633 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.295178368 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.267906592 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213050467 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.264125909 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.952309125 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.269100712 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.492020997 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276930169 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542941184 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198145495 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412755654 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351550448 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.483955846 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.361457555 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.256596985 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522746707 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270797916 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.274308062 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278032808 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283308587 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36703877 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287927729 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.26826963 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.522637047 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.266441389 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.27311279 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.032091392 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.690041509 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265614178 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.270613458 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.080012232 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784842502 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246825065 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.268101069 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15300247 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.279120499 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332310324 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.269975355 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.27608984 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.899055068 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.06523813 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.266425758 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.271789402 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491176284 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279030037 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.029988967 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349656863 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.445476378 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.789539317 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.282599887 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.204593988 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.979448938 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.958961438 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270166478 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.204541639 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.27162122 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279798018 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281135222 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490858559 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.7952208 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270877299 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.947681618 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.276157533 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281481823 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.274379126 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270345526 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.874759443 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.3928099 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280448828 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.280307166 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413991553 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.283645178 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.20489491 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.274369249 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.272603729 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271406748 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.270065824 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304785649 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.96259613 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737467199 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523247689 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.991778639 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276674082 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.09931416 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.299656432 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.267671515 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.715095502 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293404084 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.272463611 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271116993 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.283003074 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.031675125 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.932115606 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835642781 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93723651 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749885621 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1492301 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.278242202 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.274642447 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.69389437 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199695625 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.828418369 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44194877 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.693414826 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211533448 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.446790343 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.367043996 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958510343 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284129039 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499399903 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141994918 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.721698299 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294307563 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483426862 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308448737 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.281299542 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.200105434 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.789615463 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487927598 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.730714157 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351265088 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695421815 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.718029927 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.287918773 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.273239902 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557364425 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429456577 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.978070355 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.446349372 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.264145869 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.972752362 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743766548 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273014782 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.496833153 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851777083 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.28541701 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.4577975 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204311679 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.286194879 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.286424035 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.274009082 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.396097963 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.228137843 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.540310417 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27930178 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205880146 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.271811996 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752429457 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.131804112 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.282048701 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276749204 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964895953 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288378042 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529523053 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.290011416 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.887065424 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273204558 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.20454631 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209231113 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.968440019 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.281264785 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247893559 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726258823 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.363542557 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.24828369 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284702024 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120030373 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.529938647 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.285476608 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.800460804 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501841789 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.033260836 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296310477 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.376293788 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.764481427 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.273806129 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.271200763 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.509926008 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.084095404 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.491952289 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.178044812 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.19006976 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.271481007 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484033739 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269492978 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.991448519 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51077281 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.987649154 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.285188801 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924388859 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304129048 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.988482066 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203488748 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376926951 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.282071352 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351495659 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284102139 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.283587568 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.284593444 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429199852 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995517923 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290412724 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.286627775 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364499216 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.44195582 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.876193528 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.27934256 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809600401 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949051052 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.808068868 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289593511 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278354842 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274273216 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210364977 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421847408 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.505207858 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551750066 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406071525 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.415070342 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30171827 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.780380816 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292946463 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490929322 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54749545 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.168779308 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285868836 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291798988 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.274978349 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285800672 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.489919266 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732801965 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8076505 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391069945 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.27968238 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.697109352 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549229372 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276996962 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275289477 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.864518106 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.289607659 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.574156203 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.282481445 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.036957654 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42608046 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285821665 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912952043 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.287016015 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.434484002 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.054177729 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.995417309 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.535524081 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.69515837 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.291842939 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817822369 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918852448 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545678778 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347357207 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.291574751 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.392775744 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42796613 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.279022282 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.293132091 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283402237 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129372122 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.992580757 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.290926206 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815453808 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545966279 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.27916164 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.280115975 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303714837 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.291638827 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.505251326 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949205726 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.505399396 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291716173 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.288758971 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.098926794 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816081075 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295028609 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215791822 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.280683252 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50264673 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.519032321 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303620509 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.763389082 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.994433568 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808762694 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.409824166 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303634644 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282941704 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.919684213 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818382843 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.891522492 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740229033 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.849614771 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28295487 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555803447 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.287773507 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.294866941 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559104677 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.285618886 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.294468037 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294019741 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.81610123 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984070047 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.303852109 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.014043568 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.22003516 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624878835 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910018959 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215116699 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278217163 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.452240745 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.282750414 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412167252 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290106195 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.282765826 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284942243 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.040608614 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569379572 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.280562729 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.277833779 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.835926492 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.293405206 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290552745 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502126351 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277535647 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.962880578 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.633817889 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.539232001 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.297062216 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.269288152 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.288448142 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285407239 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273251544 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.475913392 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500953537 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812088761 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.298005116 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.29510509 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.289323685 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.503175231 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.497831827 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.035946885 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310021291 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299605074 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30202378 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.197570049 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.787209898 seconds)
  done (took 1545.186562446 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.286381756 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.301457037 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.298588169 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.382721967 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.311419865 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.344899343 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.383302379 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.325237263 seconds)
  done (took 51.856675686 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.28892552 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.493542753 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.316308803 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.295280708 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.289294769 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.290792492 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.685901737 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.294205828 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.289816877 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.297014748 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.299687746 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.293816357 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.845871909 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.296486165 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.295703745 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.277996773 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.287222712 seconds)
  done (took 64.368173469 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.288489855 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.47614722 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.356526162 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.2858911 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.946955637 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.295365399 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.43003934 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.303678867 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.288035356 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.290559073 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.93596552 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.299736662 seconds)
  done (took 82.422869006 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.292927198 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.292639261 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.293872839 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.29340784 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.293460785 seconds)
  done (took 7.688354897 seconds)
done (took 1959.473331709 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.539712724 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.911989611 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.896369578 seconds)
  done (took 5.033280067 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.435181736 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.484189701 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.607030955 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.626985717 seconds)
  done (took 7.379252314 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.562280799 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.658844734 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.479939428 seconds)
  done (took 5.926466496 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.558080027 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.300618283 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.36243702 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.285094933 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.290220288 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.289711379 seconds)
  done (took 20.093200341 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.293245477 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.295623254 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.293548049 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.295789843 seconds)
  done (took 6.405661088 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.274460219 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.049863425 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.277198269 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.289958339 seconds)
  done (took 18.119125294 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.040006875 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.062037981 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.03774617 seconds)
  done (took 7.367771954 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.298100954 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.200485807 seconds)
  done (took 9.726235952 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.597206323 seconds)
  done (took 2.826007131 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.425052713 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.558650235 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.244894643 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.183565497 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.254623085 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.675612053 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.752257766 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.366477538 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.163793475 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.233785727 seconds)
  done (took 26.083059426 seconds)
done (took 121.944507705 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.793168512 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.286445825 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.494334072 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.766214871 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.517406647 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.494136856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.510331094 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.731460012 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.303996504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.26248231 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.761395586 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.516414375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.457287635 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.534200498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.457072579 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.529809604 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.521533499 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.832814949 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.439926081 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.638419817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.5022974 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.393810777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.589364806 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.42504711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.511347868 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.442603593 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.990766005 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.520977891 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.614546573 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.027884367 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.440026323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.819620232 seconds)
  done (took 186.355204647 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.291170108 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.290681238 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.286413672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.296759232 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.297048324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.292133786 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.30845471 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.287710648 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.298867743 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.293206161 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.289677277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.29295859 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.288953124 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.288223439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.288722776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.294377098 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.301292747 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.294016195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.28768661 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.287891197 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.289908148 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.297671206 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.286894696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.287856441 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.302279908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.288110355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.291742035 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.288934385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.28917501 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.292712361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.293507915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.292096792 seconds)
  done (took 202.585687672 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.292330568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.2903999 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.289153483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.293568897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.289425834 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.293452586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.305203946 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.305678148 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.294033125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.293476575 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.288457618 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.291179055 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.289596162 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.288722537 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.291678592 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.291081131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.288600862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.310798035 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.29578886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.293284201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.291608303 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.291441923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.289272447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.291633478 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.293360213 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.290711729 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.290078841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.289157706 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.290701804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.293070881 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.296626959 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.295229135 seconds)
  done (took 202.606723953 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.495523842 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.300903415 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.302030426 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.252208029 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.302297394 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.301776366 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.29297534 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.492303901 seconds)
  done (took 13.968868533 seconds)
done (took 606.742505151 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.477134247 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.203436025 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.495277003 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.318140257 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.98831731 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.319464783 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.323426689 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.477021822 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.18928336 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.472498001 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.497779015 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.315014538 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.641716365 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.320361215 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.555177353 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.410353117 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.135452422 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.244977966 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.613224076 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.74619265 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.560585894 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.706164928 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.469245777 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.19675037 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.626620656 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.705867145 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.914765367 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.141080233 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.322646673 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.615361848 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.772834574 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.145214782 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.368053352 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.351624059 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.407474857 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.391078572 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.144061198 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.348530483 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.499336496 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.483796872 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.76648765 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.017522767 seconds)
  done (took 87.932135737 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.292641424 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.290824536 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.290588556 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.29090909 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.29348032 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.29196935 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.291871418 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.290021531 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.29264657 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.290187246 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.291783854 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.292667532 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.291229294 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.291192596 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.291470523 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.291868827 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.292449111 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.294208517 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.290508501 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.289844797 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.2918468 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.292407656 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.292174832 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.292280745 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.293060201 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.293922597 seconds)
  done (took 34.823703352 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.30596793 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.526208463 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.693741869 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.308706853 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.305771862 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.310735655 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.375518229 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.307403422 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.308601356 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.309018563 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.450008956 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.310200049 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.342066168 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.702728379 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.309313448 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.307781828 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.307919299 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.306838895 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.536057074 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.317673553 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.377813688 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.307857777 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.37606989 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.318661737 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.310228133 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.308712728 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.311452653 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.79628513 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.309523906 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.453824621 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.996132387 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.375295144 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.754298422 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.708443836 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.995901858 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.309501302 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.30867946 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.460605971 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.310633996 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.308189683 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.37583795 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.309313917 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.705069825 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.921409396 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.322006268 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.309529047 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.818712554 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.458389228 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.525233893 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.315723524 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.725587518 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.311795092 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.310991448 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.312414317 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.526137866 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.314459458 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.309213455 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.821961088 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.314407752 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.37885596 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.309971793 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.309982872 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.54268129 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.31004256 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.533249097 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.311836096 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.318938023 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.308149115 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.708591952 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.31235073 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.932390259 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.322435434 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.308836429 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.456428743 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.534150668 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.842838959 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.312883663 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.545178011 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.766264466 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.378678945 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.315659186 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.788937961 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.380947474 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.314604408 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.313947682 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.313686731 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.312831784 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.355666319 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.376485997 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.868937152 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.922821282 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.836206984 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.382586093 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.322790379 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.313227612 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.82592313 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.319593421 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.310504467 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.702501515 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.937804606 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.324020352 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.318769347 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.922839915 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.327402493 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.381885432 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.316108294 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.713700071 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.316521043 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.354204751 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.311516888 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.319689726 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.313985316 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.380172439 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.316244553 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.312346851 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.917300372 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.474100223 seconds)
  done (took 171.571647155 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.30311893 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.300314098 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.316888242 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.301197328 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.304904818 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.311745671 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.304365184 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.304668266 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.313367338 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.306006062 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.305931325 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.305526997 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.303228968 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.307527127 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.3105903 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.314492683 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.923606759 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.307569922 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.306576308 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.301129555 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.085167509 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.306909883 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.308436296 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.297726579 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.306229957 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.304744381 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.307222954 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.303762708 seconds)
  done (took 151.215959238 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.314499857 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.821616151 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.313239074 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.424023286 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.332100157 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.310723773 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.425751498 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.364701894 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.308443717 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.309902987 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.312427756 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.584167457 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.30936794 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.771414139 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.474150093 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.428789704 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.771956335 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.307834864 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.312568077 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.310816427 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.42819998 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.319021996 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.587588718 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.824726454 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.316616131 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.824933155 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.305108073 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.314311648 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.314578083 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.826065319 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.313905197 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.587556816 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.383699549 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.368417666 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.82698359 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.778704613 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.780919288 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.44228389 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.314961229 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.313555258 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.314737196 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.302935888 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.82610857 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.314636859 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.316525313 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.818455351 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.329454613 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.317818521 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.324677346 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.314255855 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.369300286 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.369546039 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.592415457 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.832401061 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.385095093 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.335762818 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.431911297 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.665831873 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.319137266 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.7805352 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.303920832 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.827177141 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.317511794 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.305665197 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.316179539 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.321052048 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.447076672 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.433462949 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.783157781 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.319042802 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.777679176 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.447164808 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.315740272 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.316310421 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.320065876 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.834127724 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.779488408 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.448343288 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.436422779 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.485608218 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.307684361 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.315993537 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.306032328 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.383742303 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.316945447 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.831062339 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.782742249 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.318946097 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.318144174 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.318169089 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.319187287 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.472762358 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.834661551 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.385774136 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.775792033 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.606048038 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.593710284 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.317243947 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.368463616 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.315360327 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.595169449 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.318840767 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.367977498 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.723981711 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.592530521 seconds)
  done (took 155.513937088 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.536080941 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.415023615 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.395809165 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.419492326 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.814142177 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.867049487 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.383269254 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.434980161 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.415712132 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.543519987 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.388060213 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.402595226 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.485965579 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.386606267 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.951274128 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.376911404 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.401983971 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.431963055 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.418539037 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.327315349 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.904701616 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.584339698 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.474596533 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.268721459 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.397194359 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.03679579 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.83920252 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.799721312 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.473190987 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.487882103 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.792761154 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.373975591 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.197232704 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.937256 seconds)
  done (took 62.613203575 seconds)
done (took 664.904090806 seconds)
SAVING RESULT...
DONE!
