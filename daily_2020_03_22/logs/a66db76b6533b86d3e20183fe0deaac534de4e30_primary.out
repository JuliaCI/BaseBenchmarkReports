cset: moving following pidspec: 26167
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.295571698 seconds)
loading group "string"... done (took 0.631512706 seconds)
loading group "linalg"... done (took 7.564622559 seconds)
loading group "parallel"... done (took 0.156110199 seconds)
loading group "find"... done (took 1.207852603 seconds)
loading group "tuple"... done (took 1.804134777 seconds)
loading group "dates"... done (took 1.260957997 seconds)
loading group "micro"... done (took 0.2212659 seconds)
loading group "io"... done (took 0.913098885 seconds)
loading group "scalar"... done (took 38.365487078 seconds)
loading group "sparse"... done (took 12.214637033 seconds)
loading group "broadcast"... done (took 0.996341963 seconds)
loading group "union"... done (took 12.900307645 seconds)
loading group "simd"... done (took 4.815802368 seconds)
loading group "random"... done (took 9.6029717 seconds)
loading group "problem"... done (took 1.89829807 seconds)
loading group "array"... done (took 22.332135517 seconds)
loading group "misc"... done (took 1.776683774 seconds)
loading group "sort"... done (took 3.652230761 seconds)
loading group "collection"... done (took 17.737003948 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528572639 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125821816 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135072305 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121417866 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149307007 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119251657 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126359667 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088674211 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.85693647 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145803321 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117518086 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.400508678 seconds)
done (took 5.388331342 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176730962 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085786166 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086066127 seconds)
  done (took 1.315302881 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069801813 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129429242 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071812525 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071201775 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071114828 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070577515 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069974929 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070778379 seconds)
  done (took 1.697615872 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077315362 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072600287 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069976002 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075355645 seconds)
  done (took 1.438763179 seconds)
done (took 5.860187533 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.75234529 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213622725 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185706907 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.383293993 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129118804 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.171350373 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640002589 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319521906 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18646854 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077425107 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109466053 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.340922166 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.122651153 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639224558 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0765489 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090698526 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140127938 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.422951289 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069106398 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084607632 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09081236 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.1311504 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089329225 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07766944 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146054115 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069511122 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133129456 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084404415 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068200916 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214003313 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176802344 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660211302 seconds)
  done (took 10.274172286 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102941431 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102736267 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073154543 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129053552 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102087862 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073830156 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079083847 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07179307 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093859406 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133687259 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095819479 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109407733 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070948692 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073026182 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087587931 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212808635 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084130202 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085471931 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074295854 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.082178928 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112204001 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081355865 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083434114 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081270419 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130344934 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184928346 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097834097 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099357426 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06836307 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08367644 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116982459 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128509118 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069033161 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073570916 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126676092 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09900719 seconds)
  done (took 4.759067227 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.964774867 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143462031 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091747413 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133877602 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068979094 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109888389 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070177147 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084211101 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.208157478 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.43402681 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.571140302 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.131772097 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113479535 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095414552 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106685667 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071966282 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071609884 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069110505 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.437278475 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099214287 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107568329 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082517438 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07323109 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071338733 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067804138 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069958407 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067909344 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072530471 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.11792458 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081161049 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.304216703 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122933728 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072076638 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.901559432 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.161425132 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068030406 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.235286408 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16918851 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094512302 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1402416 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073379141 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070446099 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155797691 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067011421 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067136982 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073684953 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.072093322 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085240691 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104331047 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118897577 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067826763 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068659701 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163748565 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067453872 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080413354 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.124640076 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157208506 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071002781 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.261634104 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091062885 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071782613 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067598077 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.16192397 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12454496 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072259638 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071212789 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072670278 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072693149 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364253853 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067975113 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.226767408 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072716867 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080112223 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071440856 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071204351 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074528944 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074302227 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089599602 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068827985 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075745433 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069248553 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070221308 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071491989 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087271227 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068662162 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.485367225 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069738728 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071174138 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070105933 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095800553 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09995742 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07184795 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069502843 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103476793 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072402953 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070880835 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071260616 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087225478 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074078504 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117282112 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071055407 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.09422386 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101082396 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073106429 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068937439 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105101728 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084095694 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072467617 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.40606969 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071330903 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069589296 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067181574 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069792064 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068210219 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079498354 seconds)
  done (took 22.092309582 seconds)
done (took 39.236896071 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.252035261 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078232499 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07934006 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079013602 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079185765 seconds)
  done (took 1.789497006 seconds)
done (took 3.003742618 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121739115 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101686697 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068326586 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101357846 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068812984 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102973291 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101682429 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080234502 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101217336 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069166244 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098818553 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069060903 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068589697 seconds)
  done (took 2.371778748 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087808912 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08771219 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073590128 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087083288 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067615964 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086781239 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085328081 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095581505 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085223824 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075968165 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067935355 seconds)
  done (took 2.105766145 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086638346 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087431891 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072856574 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086463634 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067499166 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086086013 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085292207 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089160571 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085607007 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077419921 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067750249 seconds)
  done (took 2.09196888 seconds)
done (took 7.773729235 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080007077 seconds)
  done (took 1.271906553 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.521586801 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.652577045 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082175196 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106324902 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188563314 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115049351 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.246771679 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089567924 seconds)
  done (took 8.382562642 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09270008 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073376957 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085649589 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072662901 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074545486 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074644958 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075427714 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073556733 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073005333 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075041748 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074973267 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075825976 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072203762 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.0722189 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075750236 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071988117 seconds)
  done (took 2.486882415 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095048577 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093846953 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076823742 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079038718 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076170169 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075130959 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077429205 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077018491 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074303266 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076078383 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078745558 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076497964 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075157479 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068240797 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077960771 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080341789 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074937814 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07776885 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078468545 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079085832 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078353028 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068706937 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074934087 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077785845 seconds)
  done (took 3.165727065 seconds)
done (took 16.511933907 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108119916 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071873877 seconds)
  done (took 1.371618685 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082958424 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085743 seconds)
  done (took 1.374112313 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082813137 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067616135 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091033423 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.08082958 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069586818 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069394878 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089165176 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069818079 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069465059 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069420847 seconds)
  done (took 1.966454219 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071721829 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078009626 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071900492 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082831042 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076527269 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067774726 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075338482 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071479433 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078747728 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065740063 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074532612 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086350448 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074905531 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087370131 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07305661 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069950045 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071603629 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069003974 seconds)
  done (took 2.558640294 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069808693 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070270815 seconds)
  done (took 1.355751974 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070953829 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06678167 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069768704 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069693332 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067264388 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066126361 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067591306 seconds)
  done (took 1.688175536 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.362440745 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117323391 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.302026157 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074720003 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083788745 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252069637 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068827693 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07338736 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073245672 seconds)
  done (took 2.658660712 seconds)
done (took 14.195273501 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083670428 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088335222 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098250844 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.372014341 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093242831 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068993164 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117391546 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181145991 seconds)
done (took 2.3308038 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.223341925 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.658798362 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.415333043 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207367471 seconds)
  done (took 2.49244646 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332202754 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090139842 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063611203 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071468992 seconds)
  done (took 1.782575966 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070548423 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072838779 seconds)
  done (took 1.363965933 seconds)
done (took 7.088082657 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071017141 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069861315 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089602877 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067693382 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069702141 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067689737 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067728973 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070225557 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070664706 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.070212246 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068530198 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0679842 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066674009 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067162478 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069606697 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067833669 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067349507 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.178419585 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068073785 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07037821 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067554636 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067767286 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067894233 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.074713676 seconds)
  done (took 3.033230843 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085320287 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068356469 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072677044 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073156542 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071562216 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073357923 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072888811 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068282648 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072719501 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07039822 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070353193 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070924085 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070133754 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07048263 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069804926 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070463076 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072921196 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067860787 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070196106 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070560971 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073027214 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067922618 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070903048 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072694718 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071038875 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070708982 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070348832 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068113695 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072696274 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070849238 seconds)
  done (took 3.366691813 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072393853 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065176238 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066537758 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07251175 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065053787 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066604293 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065545579 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065868006 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06672101 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06513127 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067013144 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065458648 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065637896 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066007495 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066696607 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069004484 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080538351 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065622449 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065709523 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065997641 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069137046 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068456865 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065413144 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065255134 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065542961 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064966938 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06560654 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06523689 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066009665 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066037213 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068699748 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069397563 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065369117 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073724761 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069724929 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065745678 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070256723 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06567024 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066205802 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06521729 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065055514 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065217288 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065605644 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072551176 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065933121 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067466863 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065436471 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066686419 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065902633 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067269258 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065493558 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065424329 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067109272 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067081083 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070355384 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067381705 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068201478 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067103798 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068039761 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067692703 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066717822 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067594969 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06988424 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068097781 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082246038 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074441371 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067401723 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069267798 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068134673 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070869009 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068894632 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081071397 seconds)
  done (took 6.115587427 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092032839 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088475479 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06805598 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06761546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064032037 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066006657 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071172623 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066427931 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067440848 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083309415 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066537682 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067305389 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067514813 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069884493 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066641249 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068015483 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073746544 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064078611 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066404691 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069737948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067696195 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073251961 seconds)
  done (took 2.802351202 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146624711 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071885252 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105093036 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076474042 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071296692 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076220729 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071220789 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07213966 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071482545 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069160624 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069626236 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071638164 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071687188 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069245608 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069312793 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069320909 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072947238 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07147172 seconds)
  done (took 2.63098526 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080153599 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068342674 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087575396 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067587429 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067834103 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0707661 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07191476 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075263341 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069959077 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068192674 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075154257 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069969115 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070123383 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067547492 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070190127 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068081017 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070010709 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067704129 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076420814 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074107936 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073693022 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077064751 seconds)
  done (took 2.8254497 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082349158 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069825387 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081331606 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069471468 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063518932 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066272801 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071316621 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067727101 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071693922 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06946874 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067811946 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066174112 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070190072 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068661361 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071754415 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069418548 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071498635 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069572124 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071176499 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065879329 seconds)
  done (took 2.645439406 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086310881 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070238263 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069350921 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076309351 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069584788 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069157533 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076139897 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0694493 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069403785 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089460927 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069832026 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069842527 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075670029 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076037391 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069650719 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07557734 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075959215 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077204358 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069455034 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06954304 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088879568 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069669065 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07637559 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070194236 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069647492 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069919517 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069760257 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073785247 seconds)
  done (took 3.306489022 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070895871 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070541435 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067483568 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06741108 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06825278 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068029761 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068098588 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06805883 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070090288 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068197002 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069864874 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07051224 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07027255 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070435777 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070303805 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070285041 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07050257 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067847274 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067659879 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068037649 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070117691 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070193778 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070079445 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068040693 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067986567 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070026414 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068315695 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068927361 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070323291 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06739968 seconds)
  done (took 3.320598804 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078950187 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075013694 seconds)
  done (took 1.400236111 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066904167 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081502563 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065378459 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072948043 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070938962 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068421964 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074288901 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071065154 seconds)
  done (took 1.809682372 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086036173 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079668285 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070238972 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078296553 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077345906 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084310399 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133949975 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068704083 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074565304 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06725023 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080682114 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067883268 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075342221 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06969541 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073895521 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07555954 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066511981 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072457637 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069490688 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066559208 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068547622 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076780311 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071131808 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064096746 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070574211 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089426056 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078528841 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06779675 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071128313 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07504428 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073541742 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062775337 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067762865 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06778826 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066165665 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.0766159 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081735403 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071171555 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076205098 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068336408 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076116839 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063214335 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072607189 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074888755 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078322714 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067967038 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068654248 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06361287 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066558411 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070711273 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063717448 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068937649 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063132989 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074736524 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071931388 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07844045 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066985642 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070392938 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071436313 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071910426 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075342864 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070362121 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071585726 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068035749 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078892532 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074444762 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078661817 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066009072 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065085461 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067770406 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079040947 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089959017 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074881221 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07023666 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068811652 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066138345 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071825877 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068692963 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073544042 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074919669 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067820124 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072441682 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075477502 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068663322 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070850626 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074425162 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066272661 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070088217 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066816218 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083739222 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068456831 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069765675 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068401733 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080009659 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073566547 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069029833 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068275863 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076508536 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064492402 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069900587 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069134807 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067961758 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076127589 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070020383 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070947346 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077364276 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075696813 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069222189 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071490482 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.19563305 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072850376 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.071437905 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07926801 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065447516 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074508361 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.072312292 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070972836 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.0794706 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068922105 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070552541 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078468501 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076790253 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068841265 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06723736 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073465742 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069417553 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072722141 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078781002 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06879284 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066201005 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065864731 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074237676 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069685814 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074067244 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073823856 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073822172 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065854888 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068413445 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073991298 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079112375 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071399336 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071650416 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076385761 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071974254 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069479453 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076776301 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072553722 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069834449 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075950439 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071364782 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065055058 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07269019 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073237481 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068613622 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074233131 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072190012 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072692667 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070485254 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068935597 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07612348 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070944745 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070301951 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070464847 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069087918 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081891053 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07226184 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065577101 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067432102 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076904814 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068582875 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069704028 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069697457 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072493951 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070118089 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068212496 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069813827 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07260173 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078259209 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073082529 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070802759 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076193689 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08219206 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069654721 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072666117 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069550194 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070722738 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070682855 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079493024 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074699448 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071977512 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070870307 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066234083 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073251883 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075815053 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068518598 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066468546 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068386206 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073456414 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074914242 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071398077 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068738273 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06634268 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06946977 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070133594 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070109988 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066709844 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067219349 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072106295 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066122599 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072245366 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067974596 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077177294 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070565178 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062567894 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06872522 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065576918 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074661937 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06465328 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067574291 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068965371 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070500669 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067737936 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.202293052 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064156788 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078452414 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078232759 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069448445 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.070093256 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069872391 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07634066 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07027087 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071592828 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072589268 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074338398 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07881168 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067893392 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07185994 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081145807 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067999117 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064379817 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075802904 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069365816 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070047428 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069768254 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068932513 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073820302 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07771973 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077731171 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06466534 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073200193 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068840896 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06957835 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065523369 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075938953 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073626878 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07148089 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077560665 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070418843 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070426405 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073609999 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069902762 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070109395 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070608284 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073415831 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070464029 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070880084 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067550481 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071293797 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067527042 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066108501 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070040142 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068069759 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069083669 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072954716 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068712652 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068373598 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071250215 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069776852 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071791764 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071723517 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069919517 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073256521 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071631198 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070556874 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072770955 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065546392 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077184706 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069982438 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077513451 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071009132 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067622643 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076755911 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073161014 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074724299 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070626571 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070896893 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072309402 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069848418 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073433227 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077688732 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068766274 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081079535 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07783543 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071611115 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072306523 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07017901 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070625374 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069372133 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069539174 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068636737 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069504066 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06888907 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074898697 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072559528 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069019326 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070063627 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069921765 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070684493 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070639272 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064716454 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069126476 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069551442 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070003671 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079566759 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069805789 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070108069 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068453747 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070124768 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067823771 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064494905 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073519862 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073263373 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066811025 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072799516 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066804122 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068603082 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076835204 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.195221115 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.069796285 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.069607992 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.070064192 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078717916 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07157696 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081024973 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071920445 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.070085885 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06836168 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070913325 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069085829 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066019811 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06855151 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07413055 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070158349 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069992175 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070409124 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073363386 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070796779 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079889112 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069455813 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072534523 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070106082 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06724499 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070895286 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06958222 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073173715 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071318681 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068718222 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06789738 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06966473 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072013238 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072027814 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069453285 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072195481 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076830751 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069265762 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.0731058 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071254986 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062889995 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071300636 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068546283 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06722085 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068174002 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071677951 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073617716 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06838456 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077017378 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067864434 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069750368 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067997838 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066254556 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068347292 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06771135 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067975412 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068340976 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07061161 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077893696 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068762197 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073624433 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070484759 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071349843 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077058485 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070803642 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073874576 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076040305 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070776606 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07210025 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07840096 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074258562 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073588723 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07100598 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071794011 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076638273 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070200382 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078882485 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071259667 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070694817 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072466464 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068714983 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070132248 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07022067 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069448294 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077243763 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070774583 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070019043 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070096265 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068068827 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072101587 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072221371 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077811157 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073740629 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074975223 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066241361 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067980655 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070862885 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068369213 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072486268 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072737152 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075921222 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070954169 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068835581 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067073196 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07668619 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073220126 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071717605 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066435507 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071612969 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067467798 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069717059 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069367194 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067535009 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067668863 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070598288 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068910421 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066936981 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.206937328 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074897943 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069648397 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07087391 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070588403 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069692223 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064528111 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068977362 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071008867 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073523674 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070721697 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068265154 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078610679 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066901737 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06948664 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070909979 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067733879 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073209711 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064796324 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070792528 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06915774 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069059021 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064467138 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068394666 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067638106 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071575513 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068744547 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063574681 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078128884 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076712624 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071013219 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067485354 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067703058 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063391064 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063694197 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068161497 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069030041 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069986624 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078170264 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068075027 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067690044 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063439943 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067732163 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071703302 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071423275 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066168843 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063543394 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069027185 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072446868 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0762545 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068926191 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070196241 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073800305 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072418185 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068014866 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073208202 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067425817 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073998581 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082719061 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070751263 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072132392 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076909958 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078112962 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070481293 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065446668 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070169628 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074219797 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071232579 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070547575 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071090349 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085823604 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07453621 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070046739 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069743822 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073170763 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.072744582 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078602514 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070807775 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071088956 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075757276 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072562874 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077635857 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073442879 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075757631 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071684868 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071869895 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067646082 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069425405 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06691897 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06844987 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06942844 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068923104 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072613987 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074687559 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06812966 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078488515 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076880052 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070974161 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070219666 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07007089 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070379243 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065719571 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07014796 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068735678 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068450197 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068328906 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069445764 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071281833 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072894163 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06933427 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067521924 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066632256 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06196182 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070125964 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070165134 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070320393 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.202304416 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.071444918 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.072131043 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075689579 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074253078 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069536396 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071967649 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070718274 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070499044 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065649118 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077660363 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069586346 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072802672 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070458745 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071114041 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07107377 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074023417 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074757065 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071749853 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07318025 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074219586 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071791338 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067961947 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068039128 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076487484 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068757788 seconds)
  done (took 44.488423846 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10008863 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065536903 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064812485 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064597019 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075452331 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065788745 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064765435 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066652755 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067433279 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06901347 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066362558 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066154604 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073872129 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080583723 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076032416 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070448525 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066012381 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067207693 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066350277 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067470035 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073931445 seconds)
  done (took 2.811900665 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075964335 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079027978 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078079599 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084521937 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072318004 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07138507 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075876685 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071878656 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080261308 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073308027 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080489216 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073598993 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075734262 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074899109 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075562631 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074419827 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081107736 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074606637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07409667 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078703092 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073921084 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078597053 seconds)
  done (took 3.00171151 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069852736 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070025522 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072038069 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065200572 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069983121 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065124084 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072663369 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067401243 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072201144 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069839702 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069922396 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069667439 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072214661 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065600665 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070387088 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06771245 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109082857 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072833852 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070415483 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070489957 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065866581 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072154634 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065686036 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065714059 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069460672 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072502572 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070581053 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068160682 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069308868 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06937829 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069608913 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067587196 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071539304 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070733395 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06910428 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069553728 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070052891 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072035385 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065928038 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067938077 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071005648 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066064937 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070361309 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071857558 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068833008 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066641876 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07209176 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069159799 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063524546 seconds)
  done (took 4.764223591 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08100196 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111608636 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070579888 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091406655 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082708083 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07597238 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074047513 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092874964 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067725325 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068178044 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084659382 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081911325 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069268372 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073733471 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07672199 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069673007 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070003907 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068332721 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072960745 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068636251 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07256998 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076585244 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082878837 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081421749 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07306656 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068320201 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069080766 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072991792 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080848106 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073480498 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07357895 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074799078 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100892065 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073950364 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068220461 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071178484 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083981797 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069378006 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071084702 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066882597 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071622829 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072898698 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07614056 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08395218 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069648162 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074238811 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069383323 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066758386 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080770795 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072051869 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076523456 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081485321 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072496585 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.0700958 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073103957 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082797509 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069283099 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067555292 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071835899 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080260569 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067158051 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072696211 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.0815985 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070949736 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075240433 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081504448 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074417146 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073058427 seconds)
  done (took 6.594981138 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076926321 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095276773 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082553357 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083141752 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076840717 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076538674 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076810267 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076205652 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076763534 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080623433 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076425287 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11415393 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072542199 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078823233 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084659607 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076935281 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07641957 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076332907 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076256533 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076923581 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076432059 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08230891 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076395959 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082601055 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079824937 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072276912 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076372368 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07595217 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083073562 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076454898 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079962051 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076362693 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076588659 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08279558 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079649196 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076709272 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067283141 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078300893 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.078800969 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.078687945 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074452557 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085045818 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078368285 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074535529 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078720651 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07856495 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085082865 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081097882 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08004851 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083004222 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.078476279 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085788933 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0784589 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078648436 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085289217 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087445255 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085013206 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085361651 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078608728 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085091603 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085374927 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087728035 seconds)
  done (took 6.33715753 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083239672 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075821328 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083598687 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063802366 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068742268 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073075286 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066273274 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066042879 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074658181 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074445431 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07669463 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073191025 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075750201 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076783633 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072870866 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075746298 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073336344 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072962966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074444078 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073327975 seconds)
  done (took 2.841203049 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075916941 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084655784 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067951641 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072642401 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070668997 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072370607 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070604103 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073245038 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071161442 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072792862 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079059755 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07898004 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070407718 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074953394 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078653634 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074798564 seconds)
  done (took 2.540756308 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085649711 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076233327 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081444866 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070816387 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069859287 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067110324 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069303435 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065444739 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066319054 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081885636 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06933506 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079521854 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069779725 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068096014 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06697093 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074521133 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066482852 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067114757 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069379035 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081132896 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073070731 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068416381 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073164162 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069317481 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071918886 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073732496 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068592725 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07008055 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067022593 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069756949 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072297692 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072317386 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064867781 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066648498 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067166296 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065070353 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067589975 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068102429 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072686517 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068215544 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06784986 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070659282 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067850352 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068720712 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064531431 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068484899 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064349641 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070160799 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065640362 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070543559 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067720796 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070358734 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069283482 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076150305 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072264886 seconds)
  done (took 5.224400042 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081348785 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07215724 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064929677 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066400631 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072137996 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071229434 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073199927 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070641438 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069104876 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066076504 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06929498 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071015689 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068888227 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071188606 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069219816 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071253715 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06385642 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068717406 seconds)
  done (took 2.626950743 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072790302 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067973064 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076119564 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06937808 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0702112 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072057304 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066051387 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068496456 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06829472 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070158373 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070280365 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072368676 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068443105 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072471739 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070848315 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070125205 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072610961 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068615066 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070106045 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066049435 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072237903 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068890887 seconds)
  done (took 2.902327023 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095122441 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085990161 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.13900322 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07984112 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086860995 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073494069 seconds)
  done (took 1.917195447 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092793247 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101168202 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069085157 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071155638 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076427302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071245722 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071850501 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071695948 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079260862 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076940397 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07206954 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081006334 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078775719 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078161857 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076488846 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077991041 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073703497 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073649307 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070239082 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085872464 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07413242 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080900633 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073874771 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073686512 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074095027 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080489367 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080910199 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078889568 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073498586 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080897246 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079017259 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073736168 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081570709 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079477017 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072802016 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080444495 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073764887 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085467088 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078583441 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080174202 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073115807 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079043323 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081143655 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077855042 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081126702 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074179548 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077381408 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073549114 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07436651 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088216031 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078770509 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080047046 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078913042 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081412684 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080839122 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087457104 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079240289 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080237219 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079041688 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079006774 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08061167 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078689683 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080404082 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078753569 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078790074 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080212607 seconds)
  done (took 6.530924007 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103869014 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068825666 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071936789 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076333617 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079041289 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072683694 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073034692 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072091055 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073042581 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071106331 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110889017 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074083574 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080597043 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079659343 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072139851 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073613723 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073666294 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079472978 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069900962 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086566005 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072711518 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079342779 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080421382 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080476277 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078555927 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076709389 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071878689 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071664604 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071964655 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071769587 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075466926 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072106585 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078053315 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068911868 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077755138 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071794907 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072058161 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076074132 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073217415 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079165165 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080381399 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085604786 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073598481 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073806402 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07916011 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074511492 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073967601 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070976787 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07426174 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070848799 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079429814 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078962881 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079006501 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080138793 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073903524 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074608165 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074014263 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073580502 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073709799 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078682346 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080152023 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073700082 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087448852 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07395145 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073822561 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080542146 seconds)
  done (took 6.436893044 seconds)
done (took 133.499468962 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.195029513 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17250186 seconds)
  done (took 1.715998805 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070298283 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099861868 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080180975 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133410968 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068178512 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101784454 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1006888 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078557735 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069105322 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071071873 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071159215 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07274653 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135623915 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068654486 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06817995 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070801889 seconds)
  done (took 2.726180043 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097357892 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159075344 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1038664 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06915951 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101414495 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076239689 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069564915 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080974407 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074680579 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070472983 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075983959 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074339568 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069757185 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074628404 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074703991 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076615181 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069732348 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075822842 seconds)
  done (took 2.866479803 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097123754 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090923299 seconds)
  done (took 1.558678622 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15325362 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134260876 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200162696 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.328729978 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153277443 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.144951792 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.140727385 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141706641 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113915883 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135646259 seconds)
  done (took 3.004051643 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099156116 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.146439489 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.263256231 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115399885 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074670312 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092238752 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117121458 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079804277 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080692991 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080455923 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080561935 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077535084 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098616757 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074554149 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075624281 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076976769 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10228502 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074813356 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076148141 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076672098 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100416549 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068395144 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074444478 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074591895 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078197304 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07830037 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068489868 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068102402 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076510073 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076099822 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07708139 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091178918 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077646969 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102970555 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073069592 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103560659 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077553878 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074900531 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076551108 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074689288 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078515171 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078720518 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075245215 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077412421 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068204628 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077822164 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068992511 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068622333 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078327938 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069610972 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07806588 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077205777 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102933618 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069238915 seconds)
  done (took 6.018481543 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107901739 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106974827 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0718372 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112578047 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103953071 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071187529 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105567936 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098236759 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107425112 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071636937 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069952946 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072129111 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080434337 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08201734 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115505417 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107146329 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073656713 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073231365 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108527337 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107183157 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070807735 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101128597 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097747001 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107618398 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069694062 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071745583 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070005864 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071778452 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076952574 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078367059 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070000474 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080115129 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084405583 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077899203 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069197271 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069765882 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070031963 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079688569 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079759884 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079613037 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078045248 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06927721 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069874627 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070870991 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070932944 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069742614 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078916486 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079768287 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078472036 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069945137 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071490364 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070383128 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07133741 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079656908 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077242172 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080174191 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079835397 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07005954 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06993201 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073154253 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080143983 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079485408 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079207637 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07169671 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080587838 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072430592 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080643819 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083115614 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070381642 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071137359 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070383019 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070055972 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0714116 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077593614 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077996241 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071752606 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070576358 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070432738 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079683526 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078315997 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07017897 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077687711 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069421191 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071061055 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072296541 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071843568 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076590022 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079282161 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07085304 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0699457 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068997236 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068672925 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068075514 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075164418 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07744058 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076799833 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076318885 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069387412 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076727302 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.212638891 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072254617 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079034928 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071108251 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071889122 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071346512 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078432649 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078006714 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079203698 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070324319 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070698274 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078878791 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080994152 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070440297 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078049842 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081044238 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078681703 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069899646 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081553364 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070303291 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079967487 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070205994 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079891337 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070615169 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079436893 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070143816 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069579124 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070462963 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080665139 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07347949 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072515653 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074241631 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07319129 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080648303 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082449979 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071354467 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079436963 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078591313 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071674684 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078718116 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07053436 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079322134 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070435908 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071845839 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07176748 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084012337 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072833732 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072754107 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073000708 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083384588 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072938879 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082313694 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080402443 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071332257 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085909016 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081400157 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077619136 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080413541 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071565197 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070870687 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070119111 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070407374 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077950917 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079311232 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071504792 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070491964 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079563785 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.0823853 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071735328 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079075734 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08072813 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080264137 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071514018 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072233608 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082021418 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080711071 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07815805 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078376364 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078513483 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070274653 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077947308 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078629102 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070140832 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083304215 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070569766 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081684207 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078991156 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076299048 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078139738 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079238441 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07969355 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079754593 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081282161 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068698676 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069054355 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076878436 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069098154 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068749076 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075717694 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070160612 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070226359 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.219787593 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071672291 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081302298 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069706778 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079365916 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069776436 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071506114 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083669737 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069996939 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071739985 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079725796 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072357398 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078709712 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080493349 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079730473 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070659351 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071262791 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080401078 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079957849 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070308936 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070501318 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071814122 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078489237 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078295195 seconds)
  done (took 18.933688272 seconds)
done (took 38.213696192 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.193105236 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.145940143 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.155570465 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111219774 seconds)
  done (took 2.065396104 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111703518 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100027792 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09211009 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069269927 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099177743 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06943881 seconds)
  done (took 1.952709603 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.264557307 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.183956922 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168029764 seconds)
  done (took 2.024162955 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.193834355 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.181504257 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.427569719 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254318755 seconds)
  done (took 2.564512511 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140521332 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088182177 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071419902 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086729909 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128493965 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.156767384 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097809606 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120170275 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079493351 seconds)
  done (took 2.424482234 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.13944671 seconds)
done (took 12.581760313 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.12138803 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.102656761 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.187625617 seconds)
    (4/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.240725759 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095596161 seconds)
    (6/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.079835055 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073836498 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072083299 seconds)
    (9/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100438606 seconds)
    (10/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140649601 seconds)
    (11/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.188253145 seconds)
    (12/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.185948997 seconds)
    (13/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.177938044 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080530123 seconds)
    (15/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079923655 seconds)
    (16/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.185519029 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.1806198 seconds)
    (18/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.153134635 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07572295 seconds)
    (20/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080761717 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075210453 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.201217014 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077863208 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.12317587 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160723404 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079148606 seconds)
    (27/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114768321 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074688937 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08433187 seconds)
    (30/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075624057 seconds)
    (31/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074980449 seconds)
    (32/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07679918 seconds)
    (33/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067079368 seconds)
    (34/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076583343 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105066108 seconds)
    (36/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.162106592 seconds)
    (37/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068746593 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.30553064 seconds)
    (39/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075445944 seconds)
    (40/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.109617894 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055378759 seconds)
    (42/309) benchmarking ("sort", Bool, false)...
    done (took 0.143772215 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087448891 seconds)
    (44/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.158855166 seconds)
    (45/309) benchmarking ("sort", Float32, false)...
    done (took 0.129680591 seconds)
    (46/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066050982 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.154689547 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075075035 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.221071002 seconds)
    (50/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05552571 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.068764034 seconds)
    (52/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07707795 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.203107696 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08884785 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074675183 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.156101483 seconds)
    (57/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082967586 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06914118 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076162333 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074275818 seconds)
    (61/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068945027 seconds)
    (62/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.209499132 seconds)
    (63/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.19012637 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066896225 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.0540149 seconds)
    (66/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054122548 seconds)
    (67/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.212583891 seconds)
    (68/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.160639981 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.077226653 seconds)
    (70/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113823523 seconds)
    (71/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056693436 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085787978 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07905474 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.210501247 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137586112 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078132915 seconds)
    (77/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.15892589 seconds)
    (78/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05546188 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.181219714 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069857055 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112154753 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093741051 seconds)
    (83/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.188564229 seconds)
    (84/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.222152084 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068970555 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.132399177 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145698563 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178740556 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.178853951 seconds)
    (90/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075286118 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177156333 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071666946 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09003834 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.180546924 seconds)
    (95/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.102814054 seconds)
    (96/309) benchmarking ("sort", Float64, false)...
    done (took 0.131139384 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090198081 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092801323 seconds)
    (99/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.208266365 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094280191 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070244576 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114496438 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079787029 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.057503007 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072716332 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056109778 seconds)
    (107/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.138642047 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075246362 seconds)
    (109/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083961407 seconds)
    (110/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.110534157 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055781086 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069820062 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070034704 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056269338 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07658592 seconds)
    (116/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079774046 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.078043541 seconds)
    (118/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055902252 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074166379 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.158459435 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.188094659 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.083984965 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075149755 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092465278 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092086938 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130599281 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112169862 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087767924 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090381184 seconds)
    (130/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054650095 seconds)
    (131/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099678642 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.136624771 seconds)
    (133/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.111092523 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076873075 seconds)
    (135/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075160271 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070831149 seconds)
    (137/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.08108832 seconds)
    (138/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073500633 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146083699 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076868204 seconds)
    (141/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067117731 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.056004301 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170216124 seconds)
    (144/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.057254405 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171573828 seconds)
    (146/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076260164 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076711144 seconds)
    (148/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077771432 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055492215 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077017958 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097092693 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092100764 seconds)
    (153/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05750863 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077968141 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.057767956 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077908699 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.16461375 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070547312 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.122656869 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.068527414 seconds)
    (161/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077382966 seconds)
    (162/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.149786989 seconds)
    (163/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093215927 seconds)
    (164/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090747204 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079858857 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05426923 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08290821 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08006809 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141148537 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074636363 seconds)
    (171/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069929921 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055409702 seconds)
    (173/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053577022 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139301324 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090383115 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.055064737 seconds)
    (177/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08010537 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069199522 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070810049 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122485922 seconds)
    (181/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.056138012 seconds)
    (182/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07572954 seconds)
    (183/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193144392 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.122195083 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.055880639 seconds)
    (186/309) benchmarking ("sort", BigInt, false)...
    done (took 0.344285881 seconds)
    (187/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100599579 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076248301 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070112319 seconds)
    (190/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080973709 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104183755 seconds)
    (192/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073924691 seconds)
    (193/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05439422 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.079121141 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077761922 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054435784 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068180628 seconds)
    (198/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109491762 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.152853323 seconds)
    (200/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055536973 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090840589 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069537523 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074506719 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090410859 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086349841 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053718412 seconds)
    (207/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073352826 seconds)
    (208/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067015218 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074299389 seconds)
    (210/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070948483 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068914959 seconds)
    (212/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054706853 seconds)
    (213/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054462684 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104418507 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176216988 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071343223 seconds)
    (217/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080531571 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075478173 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074641738 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136817684 seconds)
    (221/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.177514237 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094990067 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067758349 seconds)
    (224/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102464921 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.071578032 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075200687 seconds)
    (227/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070281846 seconds)
    (228/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067416886 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08737049 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068834106 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067727595 seconds)
    (232/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054260885 seconds)
    (233/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066207534 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087879484 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067551691 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166119337 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090918563 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091567972 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069299436 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057200412 seconds)
    (241/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055180236 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079893011 seconds)
    (243/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.151149575 seconds)
    (244/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068403754 seconds)
    (245/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069026991 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070175841 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06801274 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068310384 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067562149 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067968239 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066637379 seconds)
    (252/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065833113 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097741683 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053739082 seconds)
    (255/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068750581 seconds)
    (256/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08040942 seconds)
    (257/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07837603 seconds)
    (258/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055304493 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053988498 seconds)
    (260/309) benchmarking ("sort", Int8, false)...
    done (took 0.143135291 seconds)
    (261/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092913483 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055612145 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064211576 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075648461 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05546925 seconds)
    (266/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055105562 seconds)
    (267/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070213911 seconds)
    (268/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097697414 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077123184 seconds)
    (270/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176158409 seconds)
    (271/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079958491 seconds)
    (272/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066455549 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06976621 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075260099 seconds)
    (275/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055658285 seconds)
    (276/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077194987 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054710762 seconds)
    (278/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066464427 seconds)
    (279/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068361345 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067416738 seconds)
    (281/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075565984 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056551243 seconds)
    (283/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06584772 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101165347 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073095448 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067035518 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067068316 seconds)
    (288/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054053147 seconds)
    (289/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055007251 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073780776 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.108513939 seconds)
    (292/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066248416 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056745058 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070293089 seconds)
    (295/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.056395865 seconds)
    (296/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08144383 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055644127 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075306785 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092799192 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092701546 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137943363 seconds)
    (302/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071139188 seconds)
    (303/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073565419 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056824342 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069071136 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108762485 seconds)
    (307/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.23980142 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071827827 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055595272 seconds)
  done (took 31.531888907 seconds)
done (took 32.953931568 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085413584 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093036909 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077338796 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092830771 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081983905 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077603926 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075067618 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08037187 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081983586 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083442548 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080882622 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05778349 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07687269 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077069434 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076792125 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09141653 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080965118 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075978168 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076001933 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067077427 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076096376 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067919763 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069467235 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057336218 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080201317 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074255977 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07630245 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076047468 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067983927 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067791293 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072181387 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07621109 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067540333 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081610386 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075395915 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075851068 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076921002 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078664658 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069531136 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068247059 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077279711 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068583023 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074951427 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075559179 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074293256 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073260734 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075103117 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079324845 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091392799 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06960832 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077191385 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078015895 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07894529 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075319637 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072887298 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075319545 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073201785 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091631708 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075878297 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069620619 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076439367 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076222816 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072881538 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075239109 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075585858 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077539306 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078692033 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073513921 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07754602 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074107094 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069972044 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076379448 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072175759 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06849746 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077961268 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081732145 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067002936 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07366546 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075032366 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075651492 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067158389 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069731339 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069340001 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075752985 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072583003 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058979473 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07393574 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076895132 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069158891 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078233377 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077052557 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077602686 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072404681 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081966696 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069537151 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075094462 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070436964 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06994726 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071425786 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074236636 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069842681 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07230464 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079114897 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071271408 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075766277 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08180831 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070212505 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076298009 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068799681 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068856431 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082767322 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078724232 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069121579 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072499303 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068359436 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074877372 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065676485 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066749272 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066450029 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066697826 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073168542 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066350966 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068920661 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.214120392 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082816647 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069422775 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074907303 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073503319 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069906779 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076051052 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.070255264 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06982698 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071794986 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066314675 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071806858 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067716534 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075863391 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071207102 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074912501 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069107563 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077002414 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075472452 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076051385 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075358544 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06688859 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061874344 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07060593 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069650681 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069278109 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067194379 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06904266 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068232423 seconds)
done (took 12.892878171 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068373323 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.13074826 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094111616 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093632895 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084223865 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068417581 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076096839 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095104215 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06939795 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.097495826 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087265862 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085173195 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108815644 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066754446 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067875821 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071853706 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06986512 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081197915 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097167011 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086459883 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.110631552 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067745841 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09128722 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088342188 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086833443 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092054511 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069078132 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071891104 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071477192 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100514864 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090752571 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072759493 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068600046 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.095121092 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09149075 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082465919 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068149654 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082755562 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068823898 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067997841 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069539986 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.095963382 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080291115 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080482876 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072102407 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077247269 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069397657 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082451411 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088340759 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078866822 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084836246 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.098253928 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070842691 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082999465 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067116516 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084895268 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076923179 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069953418 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068641801 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075644784 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068697205 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071379209 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081194821 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080339405 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072069672 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.083820904 seconds)
  done (took 6.840752916 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085674816 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092477131 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084092484 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086280448 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067693937 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068436934 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068298062 seconds)
  done (took 2.063741057 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071210493 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090546573 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091044915 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091761397 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083967156 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088540701 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076739523 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068703023 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088280122 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069825421 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087406521 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097342911 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071733322 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075247549 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089334371 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069028518 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090580844 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068509154 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071236109 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089823955 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070617378 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097073024 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071769761 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068890512 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081676723 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068928986 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111842557 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072448396 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070302458 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071233325 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066836882 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104574125 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08092548 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075852447 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069568386 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082854554 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082240111 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067492929 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083813119 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076957526 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08206779 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.0694401 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070205938 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067497989 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072723024 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079875052 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07257994 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071050105 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073304927 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089195524 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072180547 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083311779 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073238985 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075576767 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070169838 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075329905 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078416955 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069877522 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.0865965 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070816276 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083330183 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083263985 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081720906 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085276713 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072122158 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083028276 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083902158 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073640409 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072731517 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074978384 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083195096 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06753021 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070442586 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078183625 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070631624 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090070106 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091727121 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072365157 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084042799 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071600197 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071522347 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07103155 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092063647 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076056381 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069275459 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072900238 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071982274 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06728794 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068577535 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072961386 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0672237 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070560019 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071737003 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071296622 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072142749 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083157048 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071373803 seconds)
  done (took 9.020289721 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073565072 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072625797 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070738013 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.0701678 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070313832 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069730395 seconds)
  done (took 1.960413237 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093068784 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070284948 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080339011 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072304718 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.100807602 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086466848 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087537883 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078206728 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083435802 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078865517 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086479913 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088851949 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093837647 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076194122 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090509439 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07506403 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089865582 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078277671 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081731017 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074965575 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089346846 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076031444 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076259241 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085114095 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078789584 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075911088 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082441765 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082053104 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081337399 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081632588 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076146981 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.0794699 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074992357 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084676955 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.089710763 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075104195 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076093732 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080991925 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076135319 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.081719335 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.09027256 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076423541 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077572118 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081248134 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081021864 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074687962 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.08133537 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083332602 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.089411071 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080661892 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080420707 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075313254 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07933502 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.0807487 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074758733 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080877053 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080756277 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090136943 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076101072 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075124173 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072595011 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079112306 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080751189 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079940222 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081881679 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081130975 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075005414 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076296629 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076778742 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075859569 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081497022 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072731284 seconds)
  done (took 7.317107381 seconds)
done (took 28.707842905 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.534986447 seconds)
  done (took 2.018869468 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.590128983 seconds)
  done (took 2.106300302 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.489322097 seconds)
  done (took 8.003429832 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.3770424 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472104491 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.694647184 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134413802 seconds)
  done (took 3.228776596 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.725444185 seconds)
  done (took 2.253777752 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231611821 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222068727 seconds)
  done (took 1.991433465 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378677731 seconds)
  done (took 1.896973112 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.101348985 seconds)
  done (took 2.618982225 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.234746738 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174537648 seconds)
  done (took 1.935118772 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.464438122 seconds)
  done (took 1.986826745 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.81781395 seconds)
  done (took 6.345144831 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220345293 seconds)
  done (took 1.791565904 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240123089 seconds)
  done (took 1.762162179 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.748187858 seconds)
  done (took 3.272539688 seconds)
done (took 42.746519728 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087405839 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087789964 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086245473 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083039803 seconds)
  done (took 1.845974161 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080587072 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076611078 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080172986 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076965878 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.079922565 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077058122 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078220895 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07974521 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076260175 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076956076 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076489625 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07690449 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079027334 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078193104 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075202575 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07871247 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080116885 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076336873 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07959332 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076584214 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074752804 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079257802 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078639222 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07614059 seconds)
  done (took 3.395454236 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082246634 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076902366 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078052939 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074749074 seconds)
  done (took 1.843888439 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082632438 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093272676 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091615351 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082377538 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093693713 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.089541612 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073506598 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073602792 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074573712 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081970667 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072357176 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097500295 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091045294 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081675778 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08355653 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069768861 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072043821 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.090038406 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083140535 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082522847 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074709685 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082546944 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072783307 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091995102 seconds)
  done (took 3.50902724 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089594371 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.1031404 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084107863 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093416679 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095517739 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070028036 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089789079 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095240441 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127505731 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070034086 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075083452 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069297884 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07528418 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068100954 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081956936 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109526008 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110719321 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070671978 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098244119 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068032029 seconds)
  done (took 3.284915308 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07660789 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073013449 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073986436 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069012679 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080697076 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076898827 seconds)
  done (took 1.985768648 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072155664 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072114739 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071237963 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.07178184 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075850604 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071277145 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069860754 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071879017 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071944687 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071425389 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070987291 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070429799 seconds)
  done (took 2.389260981 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185421318 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070025957 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070404634 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067933958 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072034029 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068371168 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082669556 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06951777 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094878521 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071000087 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071018827 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073134478 seconds)
  done (took 2.529043401 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195560013 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07962102 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223291262 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147262981 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1068538 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110801051 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109599534 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109165266 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133658429 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09810021 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156468294 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158202879 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104477261 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131909445 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088554618 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098745392 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146485188 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157041185 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104047977 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156709479 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137657419 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12280705 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140230868 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100259012 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103540998 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116634635 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073040822 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080287926 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160297081 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127292401 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142013037 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112478404 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091030769 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167468392 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16043065 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134575166 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142958249 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084510151 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102351829 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128318134 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185043825 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087526683 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.299610212 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111421498 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081486679 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129612517 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113956663 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.115881664 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102500155 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08929959 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139385084 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172047354 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128938776 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086923092 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12005881 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109174567 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109329401 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109782349 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167977712 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151052477 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124303567 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072950562 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108920068 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144736892 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127763516 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104557472 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119494474 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092895327 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127232504 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147388414 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118004741 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135785483 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112693805 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088058544 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117055127 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132219581 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122981823 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153364881 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120368311 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074192508 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119051463 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098311907 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082328712 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143017406 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07550453 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165066636 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09803067 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104578077 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121396163 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106315517 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106080356 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146998167 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284238848 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104649797 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070705206 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107186676 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117343476 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138925441 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087777448 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10416099 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11343467 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078437005 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128828633 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076882976 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119437729 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078215909 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119763827 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12509344 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077992209 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118830286 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102011998 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098989406 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125684192 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150243936 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087213784 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081306204 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157883439 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118901452 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100444509 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136667753 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14880102 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.09914135 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097847379 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141246866 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162316865 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088906779 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154955784 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103444753 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083130609 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086374226 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120483621 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112095656 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122913958 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081853731 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114767045 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157559703 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075210083 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094537972 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12905328 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079394901 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080489826 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103457772 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102050423 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095489512 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097275348 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.0995739 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129414439 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269237024 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106177684 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120637697 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097241025 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158373699 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08752855 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100872031 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102675091 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071614929 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127138062 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147656637 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079429274 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153852461 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.11731167 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111997671 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115424965 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084084146 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131597413 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078877172 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07166335 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136357276 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108089721 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105715736 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144638782 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112170478 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118913146 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.114444171 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126025134 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124632974 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12467345 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104505754 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08788922 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10917522 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123003358 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074572699 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090043209 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080352034 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103011523 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094354299 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084187632 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138347239 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121209431 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110148617 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109158112 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095743851 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139472663 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077138377 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121895341 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115573934 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094319591 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.143937074 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143111334 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126069711 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095431496 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128033824 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070500659 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073663626 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.084309162 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113868977 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080948621 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081292068 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108260118 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135997471 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118771101 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125692331 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116119693 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111636299 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139270127 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068902423 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11293557 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128561642 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110842458 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.096757804 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086668108 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093749458 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128474562 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098447213 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155940598 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104633119 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113658571 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137840009 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096331494 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077027019 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095307116 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118223187 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095130929 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12634541 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092563567 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084283101 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099796109 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076451818 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089596855 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11430784 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107010899 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120589392 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.105222876 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119167765 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07551311 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103928998 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111268611 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109510185 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063825986 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106510538 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139373833 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088970571 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106832931 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40415543 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081546454 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134135477 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16590737 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139923984 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086508892 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105711234 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118755313 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123899637 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116283507 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133609118 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104424008 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13217433 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108265191 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086484273 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08878194 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09595957 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103166874 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093283614 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102531493 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110834494 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096117523 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128091167 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102828781 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107851301 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11461558 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099067427 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092275061 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096621974 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166094533 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11514114 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160655001 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098663223 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135776399 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153890898 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076309024 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080446178 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078743611 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133780482 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086047888 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126450918 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108282958 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114698433 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119544524 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133487842 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094201844 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070127913 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105821687 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12779274 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120053858 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096797673 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099981872 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15285572 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.245351739 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080054718 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108294246 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112840764 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10158572 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161022087 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063979435 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102811964 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077380203 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081144163 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121858605 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142299074 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080089924 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.098888096 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116090247 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108566978 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121133591 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097232648 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109633864 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120420719 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141282467 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122914143 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089419642 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107955409 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122688625 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147628766 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100221522 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096109774 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164562384 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144181873 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151453186 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08609433 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110468505 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110876002 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106196928 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133139296 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084007435 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15334885 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082707502 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131319966 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101108378 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088327184 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124924898 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.1090676 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087023118 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138906263 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113328911 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08298872 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077987981 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11234518 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115313264 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101642091 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075357875 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281865133 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075703101 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127588897 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151912485 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083168879 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102098719 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093882279 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080654591 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102465347 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099669663 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086587473 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098367895 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161586958 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085525963 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139632887 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12823212 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108264797 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129604165 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101614564 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638091238 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078270601 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143855915 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111903676 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161141187 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098341951 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113995021 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106771416 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11788684 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136749281 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101113528 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174270537 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126351245 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112473064 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079351678 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100897488 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102114656 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086524704 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104566277 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110689727 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11210662 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092200184 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113035257 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121417242 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085621101 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098017144 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151738536 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11409801 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137816198 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131902534 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084247704 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11365944 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281733908 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080144031 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113688134 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142703645 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103592628 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098116506 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081167445 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097617366 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150591981 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074387562 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149988659 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118585827 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106038054 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109427651 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.10723337 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12481896 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103124884 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117948479 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090645535 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104889365 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110205435 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081627838 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077311805 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102863099 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107218152 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096664459 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095512366 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098975706 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144272545 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07336784 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097204018 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111732427 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13731651 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163240847 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087536398 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082871745 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116246381 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112426422 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109713798 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117841097 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079439348 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081940334 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080423768 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082090016 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.104860421 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110309606 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111085992 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107492156 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152441232 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083213676 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222812229 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094154633 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102042647 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070480575 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07888356 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095053422 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245764954 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104336156 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110113129 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152197 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094013952 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089341548 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089741764 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076127364 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086247036 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123677752 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105974017 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114957081 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099971817 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064651152 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104463724 seconds)
  done (took 57.070909896 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112183657 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083000911 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097208374 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144103504 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120944529 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198503121 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155637476 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187832077 seconds)
  done (took 2.772497203 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072190895 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09804602 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104877023 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087520043 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071003227 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072058913 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.215939653 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082672047 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068220807 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094054264 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080594471 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070952868 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.408908908 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070123414 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071924549 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064359037 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068946959 seconds)
  done (took 3.463406951 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.375927958 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621785833 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.32820917 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078403864 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.889467762 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090719819 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.130892507 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137509078 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.078788225 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.540708767 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.404364313 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129423368 seconds)
  done (took 18.483093607 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085834934 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078762514 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09265686 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091592141 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081056931 seconds)
  done (took 2.105297772 seconds)
done (took 106.239659412 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086262745 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.584565174 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055655333 seconds)
  done (took 2.341394891 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090326184 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087949767 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087912332 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08564653 seconds)
  done (took 2.034545775 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078320843 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080689095 seconds)
  done (took 1.837967443 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.21964775 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163035382 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094995258 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085762293 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082271826 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080918754 seconds)
  done (took 1.926675804 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075680128 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078139311 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074292313 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077266176 seconds)
  done (took 1.976708968 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081006364 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056336597 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05896554 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061669815 seconds)
  done (took 1.931337826 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08962904 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085031732 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082115152 seconds)
  done (took 1.933037067 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102646557 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08991668 seconds)
  done (took 1.86673915 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086468211 seconds)
  done (took 1.762821727 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095449418 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100987167 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129633526 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111273246 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134928211 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10689953 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085483713 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087191932 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079163988 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085709883 seconds)
  done (took 2.692695199 seconds)
done (took 22.550075496 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081389699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365552509 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36242435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090344191 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668641018 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358249319 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.969043658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093394694 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137415968 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071653323 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088610132 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653566346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.963551709 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324825495 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.951820622 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326120671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652858424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072468633 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072185458 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07167191 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955161238 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069607075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069803275 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070083148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649840455 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372470458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070362224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324249413 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070459832 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071239697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357536214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070898646 seconds)
  done (took 16.181749209 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.089587305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120721852 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075226071 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08534834 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071197459 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071162427 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07321114 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070705962 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11908566 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069030692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085929782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069356349 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073338887 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069994764 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090099009 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072414087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072853403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071052365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072110372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07041607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087540248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069472232 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070282941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070748248 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069933963 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081548905 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070823987 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070350969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070555571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071930598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073082808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070461146 seconds)
  done (took 4.157917795 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117292674 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123623662 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075861802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103929742 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111724368 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071926244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.139844858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094752554 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12758583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072672155 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087464477 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072285042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105015826 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073098214 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089207208 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070631955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070657887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071729782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070081886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070283406 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08851217 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069677179 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070256725 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071312187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070777574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.0829746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07052896 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070683613 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070141757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072388542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073681791 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070866063 seconds)
  done (took 4.393255898 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076287436 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078979198 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087394963 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087580543 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073424396 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075625993 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076462244 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070884655 seconds)
  done (took 2.316700712 seconds)
done (took 28.743151749 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082725772 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072418808 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074481482 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088687751 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074715676 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078242151 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068182691 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07627952 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07414507 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074461368 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07577181 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069043899 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072837471 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068328082 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075193884 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070379116 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081778219 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074389391 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07997031 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082512095 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074573988 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077567213 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079608794 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082828555 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083476323 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083113826 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08159784 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076386839 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0705699 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072518502 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078910822 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084514173 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071944384 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080565167 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069846632 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069890538 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07378342 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070002788 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080026951 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077870554 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071411453 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078079975 seconds)
  done (took 4.863766002 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091144134 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094770231 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088073487 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065887527 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070196548 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066074083 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088211841 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06109318 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061835958 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088303121 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057999495 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061073715 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06458743 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056812298 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062542672 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059465722 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063611044 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058086752 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062296785 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061516679 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088668047 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056625777 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077819089 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064801756 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058891574 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06362277 seconds)
  done (took 3.493631442 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078098284 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085096113 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.0893878 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140551429 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109916155 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079137838 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079686779 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093054553 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094062184 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068541334 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072447473 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093399831 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087794135 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074787026 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069311195 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085009405 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085310235 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070908268 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07465562 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092066357 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086785129 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086460971 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092015685 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084380419 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068415838 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07132919 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072933837 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082297775 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071278594 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077370532 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072584154 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072434816 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07113378 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080306431 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072317336 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071105497 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093960311 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078421284 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079481396 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069978921 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076347767 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070411719 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092179148 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123507457 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069167576 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075414637 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072673179 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078143974 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068797497 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093921533 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079692497 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068753362 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071817842 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068296626 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068510126 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071564114 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071181405 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071313361 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077145883 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074862277 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093940363 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073773557 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085153447 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069646555 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076791239 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068637478 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069784113 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068188715 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093082432 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070536699 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108019836 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071092916 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071011858 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077198668 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076282063 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075222414 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068797833 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084165037 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078880473 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074086845 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076395675 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072094678 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071848751 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096361945 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071693669 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070678574 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06963002 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074630612 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071635315 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070022095 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081451211 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068498904 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071702445 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085096963 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06863576 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070590072 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07429436 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073012648 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069016634 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0792697 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072969237 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070156012 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078423156 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068831185 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071062682 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080195529 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074651495 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067739301 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072675152 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074228473 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069795727 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070108532 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07116513 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070908785 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076968509 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075372643 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073320565 seconds)
  done (took 10.801541902 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160695099 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.14717535 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071889144 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.140891773 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078073407 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079504563 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.141718147 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.092728242 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069707197 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070588889 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069727192 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108746375 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106864145 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11972573 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082521588 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072095313 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093969799 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116058901 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14843152 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143908496 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090894939 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077483809 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071809318 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070854941 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07162374 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07886851 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085329833 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078382944 seconds)
  done (took 4.481864772 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083474018 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104009774 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075617772 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089586452 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089611357 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.0691863 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071850049 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070918572 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085346014 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078912664 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069689678 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074275076 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075858439 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072813985 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070135247 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076508701 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075783083 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070869089 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072614789 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073979859 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079082698 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092277931 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072914569 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070662976 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074535096 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068789787 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065192736 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083986115 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070086832 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.092515737 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067288514 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074008672 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082591379 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070560389 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06929668 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069376607 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069182063 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06934349 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071255913 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068510006 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068028523 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059638604 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068833363 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079459044 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082006261 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058662263 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073653111 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074202659 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074391991 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06713641 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072200918 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072096576 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072085274 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076560791 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073044144 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07419333 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070750745 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075090525 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076871162 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069404228 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067114584 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068156918 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07367052 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066617776 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083826803 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074484493 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067925624 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069026197 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07094927 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08198439 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069377278 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073619815 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067194916 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071157692 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073739945 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071277081 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070336311 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068248967 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069550724 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069703076 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058081096 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069474043 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05616045 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072327908 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068070963 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068394602 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069942173 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074026565 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080222938 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071152309 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074857065 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070397476 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068624163 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072002242 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063311067 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074067769 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082318881 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085745622 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071675104 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069614589 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084157152 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075626399 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068701558 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059292674 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074199143 seconds)
  done (took 9.412576085 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09337669 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072878986 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082970037 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089249764 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086550253 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076581229 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078141458 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070647249 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083754363 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075083992 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077546607 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069297512 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079195757 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078521646 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071500954 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07870903 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073229739 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083458717 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083405612 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069828784 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077724589 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080812813 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090040443 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081253734 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080102483 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081692481 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089959972 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078058956 seconds)
  done (took 3.981737924 seconds)
done (took 38.726164805 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.800318453 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.951055904 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.778394001 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.09248428 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.850285127 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.911255838 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.875016723 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.771505153 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.993229374 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.807614972 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.099529164 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.890108171 seconds)
done (took 65.665001486 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.870078668 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.913145481 seconds)
    (2/2) benchmarking "String"...
    done (took 2.012793323 seconds)
  done (took 5.62638428 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.010066853 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.348530456 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.018585552 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.772892318 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.775215431 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.085380452 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.571630249 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.28090718 seconds)
  done (took 30.554253521 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.877785922 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.995839928 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.431311734 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.467427293 seconds)
  done (took 15.526611079 seconds)
done (took 63.385122133 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.777886949 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.815420982 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.775185916 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.754152577 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.826414366 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.787842661 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.221856075 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.81250502 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.770847144 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.765400655 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.773712041 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.187171274 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.785326163 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.150254465 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.773079336 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.771052095 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.822027479 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.311247259 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.930526686 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.788742633 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.785933083 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 7.008005735 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.780646172 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.786314919 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.788730636 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.775785724 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.179185764 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.785478818 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.383438979 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.782693994 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.808916015 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.352560968 seconds)
  done (took 204.518257471 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.779467278 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.696783214 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.794768412 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.815873454 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.163863351 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.960949143 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.879882898 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.237899342 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.783311135 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.790928122 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.987761065 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.77594536 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.005584195 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.72623064 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.809496834 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.872304813 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.957719599 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.995052821 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.811512119 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.950095755 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.797328952 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.839007015 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.773832081 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.948956903 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.790592397 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.83282132 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.78657598 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.808800647 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.97313208 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.93010004 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.812445789 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.82096026 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.963407938 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.649078754 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.794298025 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.7975473 seconds)
  done (took 169.821880958 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.988613012 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.784156057 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.780325289 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.781288946 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.785166173 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.779571335 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.90559119 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899324542 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.408835931 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.567471962 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.832350357 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.778899155 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.581249614 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.786819761 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.780398722 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.848792479 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.791070293 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.778241504 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.795163519 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.812429632 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.777082477 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.781709388 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.904559217 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.791264128 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.782783391 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.788654005 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.782650584 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788274144 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.15192321 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.777444276 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.004366329 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.782475563 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.787182021 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.021874852 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.779298452 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.783631652 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.625271653 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.408280521 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.874353596 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.784538812 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.788443143 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.781471104 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.000373838 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.778813031 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.781357844 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.787705516 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.782872526 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.784852297 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924024505 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.784970025 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.908928247 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.779620797 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.264105871 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.782181927 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.783051423 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.678155915 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.377512332 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.784612722 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.786012246 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.784832428 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.781956796 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.788946791 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.581744125 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.853947896 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.788517069 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.786455531 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.787581821 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.782578711 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.031086771 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.781716342 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.57144795 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.83912968 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.019675025 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.904397307 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.784962227 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.851247532 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.872681821 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.780807067 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.784005547 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.785081028 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.783203813 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.864881075 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.780006917 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.907017397 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.780408169 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.792123298 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.783849643 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.834770167 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.851567525 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.784314588 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.646191745 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.785148568 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.785354832 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.066116617 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.847015412 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.781645748 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.783970804 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.911719305 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.903454899 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.491090211 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.785026423 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.445959677 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.917987081 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.78244682 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.786352374 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.933277708 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.788356829 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.867748362 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.787734438 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.787361922 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.818091975 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.785819206 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.844251282 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.787111613 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.160362754 seconds)
  done (took 404.106118512 seconds)
done (took 782.197900981 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.38930044 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.362465649 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.45671156 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.378927311 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.357256706 seconds)
  done (took 13.657511384 seconds)
done (took 15.378084116 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.874356456 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.877344491 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.805550496 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.876063732 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80375111 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.877365793 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.856821536 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.80863489 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84557955 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.811341333 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.844447007 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.811902752 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.79956884 seconds)
  done (took 25.606574394 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.032592954 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.028002634 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.858682993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.030507676 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.835331288 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.025178605 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.957624316 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.942515146 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.942293828 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.806527201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.800921621 seconds)
  done (took 22.975206968 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.029919889 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.039307444 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.866485967 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.030213239 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.838432665 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.048002844 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.969975371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.943566581 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.942588657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.80517544 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.80064157 seconds)
  done (took 23.029608208 seconds)
done (took 73.332832482 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.797055367 seconds)
  done (took 3.513096924 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.824033329 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.989626554 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.799812713 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.800634293 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.797739871 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.796865199 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.799795689 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.796605946 seconds)
  done (took 16.322059492 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.793070151 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.79383711 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.796480225 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.792553796 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.79503159 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.794020907 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.795427514 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.793926163 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.793928707 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.794975642 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.79586552 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.796180176 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.793633155 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.792180154 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.796696548 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.793894424 seconds)
  done (took 30.428482291 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.793906566 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.794718744 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.794463573 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.793469116 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.793741522 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.79448364 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.795235726 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.794482241 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.795257174 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.794458152 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.794859641 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.794003907 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.795013011 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.793156505 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.794058786 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.793458138 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.791782383 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.79367116 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.797870562 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.792693698 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.794428729 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.794762647 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.793359457 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.796241685 seconds)
  done (took 44.783490994 seconds)
done (took 96.771409658 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.563663498 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.67545045 seconds)
  done (took 9.955890341 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.799918041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.797754938 seconds)
  done (took 5.389819706 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.797852753 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.795697048 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.797730617 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.796454004 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.796670702 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.797634381 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.797051386 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.797672515 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.796875514 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.797071862 seconds)
  done (took 19.688584625 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.797925546 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.797479957 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.793928467 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.79782115 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.797830009 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.795744669 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.799123939 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.797563813 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.798196766 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.796012977 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.797917621 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.795931328 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.799538255 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.797139174 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.798811219 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.795591083 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.797898656 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.796367384 seconds)
  done (took 34.069041973 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.798546987 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.799080307 seconds)
  done (took 5.314794933 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.797047693 seconds)
    (2/7) benchmarking "second"...
    done (took 1.7985276 seconds)
    (3/7) benchmarking "month"...
    done (took 1.796721803 seconds)
    (4/7) benchmarking "year"...
    done (took 1.797451627 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.796337456 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.797845878 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.796089126 seconds)
  done (took 14.299835218 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.800716949 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.944827431 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.015330439 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.475008429 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.801776177 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.801606807 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.743936758 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.80414245 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.806616891 seconds)
  done (took 19.913228001 seconds)
done (took 110.354875886 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.708369261 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.793330096 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.035108269 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.851876194 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.843624111 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.091780103 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.817016992 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.059163584 seconds)
done (took 42.926104674 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.884796849 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.536270915 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.568179041 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.815865423 seconds)
  done (took 15.641110545 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.784324732 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.092102419 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.813806382 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.637571001 seconds)
  done (took 22.108534384 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.162634762 seconds)
    (2/2) benchmarking "read"...
    done (took 2.147291486 seconds)
  done (took 6.034894279 seconds)
done (took 52.397876911 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804391781 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.800749656 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.800186308 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.798524687 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.801586941 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.799184346 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.799514059 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.800640131 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.80056189 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.802024514 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.80168245 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802823625 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799881282 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799920778 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802003042 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.799840485 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8003133 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.800062978 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799718805 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801308627 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.799532963 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.799581342 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.799674002 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.80306251 seconds)
  done (took 44.938029702 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.803453615 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.801544995 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.804996941 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.800579636 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.798828036 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.803929485 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.803014903 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.800951783 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.803844135 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.802213869 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800668207 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.800511988 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.802591077 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.800771245 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80285111 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.800416225 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.803949862 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801987738 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803085883 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.801842314 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.803698129 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801264237 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.801282048 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803393737 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.801062976 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800000457 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.803009491 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.800319403 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804174961 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.801796692 seconds)
  done (took 55.785818364 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.807602144 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.813143735 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.803584716 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.802884172 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.803506497 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.804877876 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.804601253 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.806474818 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.803198134 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.803548405 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.804453165 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.8036971 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.804484739 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.804607808 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.803822394 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.804614783 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.805866569 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.804642946 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.803630455 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.803109842 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.805645063 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.80691288 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.804938858 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.805069977 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.806577646 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.804855563 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.805564987 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.80587437 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.805871722 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.805314338 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.806352931 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.804950921 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.806839821 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.806003559 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.806200937 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.804421102 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.810688438 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.814178537 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.806072088 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.806105436 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.805532894 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.805503512 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.806965055 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.807324497 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.805310011 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.804337716 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.807318845 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.806227672 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.806790296 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.807296617 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.807060405 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.805127596 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.806120801 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.8057244 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.805815416 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.805699462 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.805623666 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.805121891 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.806294455 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.805256532 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.807247237 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.805290004 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.806451658 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.806124256 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.807038401 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.806704635 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.807695782 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.807147793 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.806310504 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.806580264 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.805662512 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.805762285 seconds)
  done (took 131.754057798 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.806593224 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805775899 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.804490578 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.803928702 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804285754 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.807989823 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.803547024 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805697601 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804911319 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.808995239 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808157327 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.806147527 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805440682 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807531267 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807572499 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.804999661 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.807749806 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805746074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.809203347 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.808894474 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808008866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.807602186 seconds)
  done (took 41.471356538 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809676163 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.809273812 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.806358429 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.810701899 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.806376932 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.80940466 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.809436253 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.809566276 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811648576 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806416077 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80653472 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810499439 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.808081001 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808746409 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808564211 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.809160725 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810526641 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.809097607 seconds)
  done (took 34.28928941 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.809901079 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.809603064 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.812059275 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.80844075 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.808653983 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.812392169 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808871671 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.810960713 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.810847595 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.811540585 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.813658069 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811848114 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.812145755 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808988271 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81187066 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.809373769 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.81239858 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810735698 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814651352 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808835783 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.810408954 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812261778 seconds)
  done (took 41.571951948 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813669781 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.812826104 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.81219776 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.810618623 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.810325632 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.814825032 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.812877714 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.810675186 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.812814079 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.811898247 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810181566 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.814568479 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.810137161 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.813265692 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.810854637 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812004512 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.815854919 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.813154931 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813278921 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.812037734 seconds)
  done (took 37.980884049 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815769985 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816659475 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81465412 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815326061 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814737331 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.816927448 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817036059 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.816404929 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814838698 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815885974 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815545755 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.815866139 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81758839 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815726714 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.816627196 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817481744 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817548588 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818079726 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.816055038 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815371665 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817456965 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.817386978 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816505485 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.816937172 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.818085601 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816162316 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816379081 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.817070335 seconds)
  done (took 52.595593178 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.81647418 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.816417587 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.813374073 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.81339815 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.812141302 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.814742592 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.814399648 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.812381712 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.816378773 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813435664 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.818100952 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.816776135 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.815972319 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.817773264 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.817104654 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.817313336 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817477001 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.814899478 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.815581765 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814105546 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.817174527 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816649954 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.817601479 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814872253 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814090184 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.817368863 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813944481 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.816604611 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.817633024 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.814356024 seconds)
  done (took 56.205218625 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.836421843 seconds)
    (2/2) benchmarking "in"...
    done (took 1.837060947 seconds)
  done (took 5.411220524 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.816277752 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819909631 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.817717718 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.816742168 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.818595229 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.818431913 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.818583743 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815419623 seconds)
  done (took 16.279560598 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.818662304 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.818173344 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.818997328 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.818710048 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.818753197 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.818481688 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827809551 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.819438432 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.819751765 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.819746839 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.824756563 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.827258906 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.822259509 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818507113 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.820774476 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.819880817 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.819798022 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.820297098 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.820388777 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.820950522 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.820556429 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.822814068 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.822073487 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.816513733 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.821123946 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.830836506 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.825467738 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.820466147 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.82134503 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.824126669 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.82029079 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.817644105 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.821603244 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.821199002 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.820681849 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.823956721 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.82938758 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.822395689 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.826915114 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.823470892 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.820983503 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.818320525 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.823025883 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.823469978 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.823402554 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.823603513 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.820666222 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.818413975 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.820827949 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.82391399 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.830183159 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.820303626 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.818609301 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.824567899 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.823152301 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.833039425 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.822033712 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.82478496 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.829734739 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.832067255 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.834444461 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.830722486 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823358711 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.822844902 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83221269 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.844573749 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829962231 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.821725502 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.819840804 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.822292788 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.829096165 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.837321827 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.83295476 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.824475309 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.823201337 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.824228498 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.822400476 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.824165847 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.829688368 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.826732003 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.823828159 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.82487774 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832095353 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846911486 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.824164524 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.824760391 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.824349311 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.824938084 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.825419632 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.833360316 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.826327224 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.824156504 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.822280492 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.823883707 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.825404864 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.824993382 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.822361776 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.824087695 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.821131421 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.826169249 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.824240284 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827158553 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.83311377 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.825394014 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.826100751 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.831000037 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.82642442 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.82375428 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.831944984 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.825969203 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825381903 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.826037914 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.830141466 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.822964387 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827175329 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.834341881 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.827254521 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.82528483 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.826446287 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.825605378 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.835254869 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.851206714 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.826163814 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.825510509 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.830639648 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.837913407 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.825992334 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.830039903 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.82539984 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.823624285 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.822829103 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.827465552 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.828669334 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.825197039 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.827397348 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.82760655 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.826694554 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.826875564 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.828123836 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.826115818 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.828224515 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.826091147 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.829320694 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.832741533 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.829447898 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.828000803 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.834095498 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.827499516 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.832546118 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.828303297 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.825998371 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.828033292 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.828975475 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.829540893 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.828455434 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.829307284 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.827282631 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.829163356 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828749566 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.830636436 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.82747844 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.828161185 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.832410662 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.830390089 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.832666003 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.828447252 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.826016717 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.829211759 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.82935414 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.828357289 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.830597364 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.827866224 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.831153937 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.837921377 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.828345646 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.829373227 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.834679104 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.829153342 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.830161074 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.829813723 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.831924308 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.838117021 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.830069162 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.836351248 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.830833739 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.82964192 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.828738747 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.832849709 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.829730812 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.831141954 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.833671325 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.838298179 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.84237745 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.839144979 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.830236503 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.833749245 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.829616604 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.833769363 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.834513125 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.83182034 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.831218876 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.830317144 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.830594864 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.833250044 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.831095438 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.831436056 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.831184106 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.831317715 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.832576442 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.832502172 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.83133251 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.832049746 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.831898736 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.82858227 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.831739788 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.832008564 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.830060393 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.829217865 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.830243181 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.831147967 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.833062795 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.833609919 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.837857633 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.829185987 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.833917564 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.834025718 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.832127784 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.831467659 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.831179023 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.833985181 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.832362716 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837379074 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.83271394 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.831704758 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.83894176 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.830613191 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.830000688 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.835258733 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.832860395 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.830014749 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.834212761 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.842651412 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.831845073 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.833671373 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.834614009 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.831255679 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.831439057 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.838312907 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.83050256 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.832559526 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.833840187 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.833584242 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.83054318 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.832607026 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.833345547 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.833183547 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.833819753 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.834071071 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.833474447 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.8329309 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.834411481 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.834099063 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.835195445 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.836991661 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.843060464 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.839028071 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.834726522 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.836220217 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.835774921 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.837744642 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.833942421 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.833928416 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.833469028 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.845793575 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.845002869 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.839868936 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.836073446 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.834022816 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839570768 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.835637663 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.837839484 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.835298287 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.836103834 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.83644576 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.834611229 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.832060903 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.835301474 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.835816823 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.836218988 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.836005375 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.840397563 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.836422561 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.835546633 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.837763127 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.836256868 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.836809825 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.835097107 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.835129985 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.838659805 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.837123855 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.836547987 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.835996033 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.842737656 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.835991914 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.835815013 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.835878274 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.836504965 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.837336015 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.836988689 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.837264618 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.838761683 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.846086724 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.841841945 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.845722288 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.837439001 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.846729785 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.838548763 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.840616471 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.846124414 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.83482539 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.835388999 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.836218946 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.838828593 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.843699262 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.839630398 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.838756174 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.843953342 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.838160253 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.840058566 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.836702882 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.84018583 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.837720718 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.838320226 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.845549807 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.8399027 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.841061153 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.839169906 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.835731224 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.83861296 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.839104836 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.837605168 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.840970155 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.838865483 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.840270052 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.836579886 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.836342153 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.837688754 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.838474234 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.837895802 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.836458702 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.838364581 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.844915325 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.839028779 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842236733 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.838814317 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.84618717 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.839499467 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.845482682 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.840733782 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.840012393 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.841453825 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.841099582 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.839984003 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.838085085 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.840981089 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.840143237 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.841936934 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.842485568 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.839885395 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.842410553 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.841613691 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.839224903 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.839379887 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.846354013 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.863881304 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.839499998 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.842502803 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.837906093 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.840288055 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.844860196 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.840710106 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.838108781 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.84225674 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.850763194 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.847623093 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.838962546 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.839504682 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.84017317 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.839301692 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.841308219 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.840074211 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.841029359 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.839570573 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.840388548 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.841083925 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.843304941 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.840337526 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.840113529 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.840020443 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.842694953 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.850201346 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.840799811 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.841560985 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840953127 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.840472953 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.840807337 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.840599362 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.841966408 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.840697099 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.839205421 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.842910386 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.848297558 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.846566765 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.842472208 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.840996769 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.843621042 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.84207829 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.841792064 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842988347 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.843844954 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.843208261 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.84461221 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.843013486 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.841734611 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.83967431 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.841427058 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.840937216 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.841012792 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.843982781 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.847744221 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.841512465 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.838579491 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.842461979 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.841859452 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.839316753 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.84193161 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.847904451 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.845390052 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.853342498 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.849731417 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.848377056 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.843537817 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.843554743 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.850704312 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.840591957 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.841987662 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.841904967 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.844164359 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.841416919 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.846133129 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.842146707 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.849465889 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.842892473 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.842068865 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.848811749 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.843375376 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.843192876 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.844154337 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.847463484 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.842393486 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.840554863 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.843368629 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.841781537 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.850564722 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.846346803 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.845476871 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.845040565 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.843795415 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.844128741 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.84941738 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.84515676 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.845109734 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.841728579 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.844959772 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.845715415 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.847716413 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.842080002 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.84443687 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.844600739 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.848532302 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.853837225 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.841152172 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.847674853 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.844726274 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.844809672 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.846098857 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.846230776 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.844818414 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.841136915 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.844794421 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.847088486 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.845289626 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.847061828 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.844902261 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.844880891 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.84477171 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.845353549 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.848309598 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.856871921 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.85287488 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.842421337 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.845368247 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.845778691 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.847455807 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.846367788 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.847016463 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845752755 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.846969359 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.846325389 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.847008772 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.846312158 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.848001235 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.863265923 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.847391469 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.846693093 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.848017374 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.850828007 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.847525404 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.844354732 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.847370505 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.849066956 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.850625409 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.855390008 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.848489252 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.857769654 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.846700706 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.848386811 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.852681979 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.850832916 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.856248662 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.85069468 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.848861606 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.849325715 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.853440712 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.865454396 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.848847088 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.856892547 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.877729497 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.849719861 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.849341319 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.851282089 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.847673219 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.849402636 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.849995213 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.849903789 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.849845746 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.848959991 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.848902541 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.849488135 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.855953187 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.850902932 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.849779722 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.848313107 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.848335907 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.850270246 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.846337595 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.850287001 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.850156322 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.850209048 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.851577493 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.851564939 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.851046501 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.861666663 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.859518978 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.849854327 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.85214994 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.84935478 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.852697789 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.852425806 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.861045653 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.85635456 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.850659447 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.851016118 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.853156445 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.852187343 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.848551828 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.850994283 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.849299326 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.851666929 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.8474325 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.863580706 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.862512057 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.855571852 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.851994763 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.85274969 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.85135095 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.851982072 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.852062249 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.853496861 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.853102403 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.852067475 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.856600059 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.85122812 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.850830677 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.855223347 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.860888335 seconds)
  done (took 1096.813277105 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.850365356 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849533817 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849707447 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.848935261 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.8495593 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.849459605 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849731363 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.848944799 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.850466446 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.849853745 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.849534964 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849087244 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.84982174 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.850494214 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849402144 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.849867666 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849473063 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.850968929 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.849690414 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.849989437 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.849200951 seconds)
  done (took 40.614142358 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.853047174 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.850471464 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.85026278 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.853019722 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.850692625 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.852027612 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.850687978 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853091373 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.85402031 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850344912 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.852984983 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85377245 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.850024791 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.852651711 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850851694 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852619676 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.852730728 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.850776742 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.85422606 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.851130069 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.85360694 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.852390372 seconds)
  done (took 42.51616085 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.855618428 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.856239823 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.853546665 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.851522887 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.855751981 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.852461886 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.856314507 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.853990821 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.854738508 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.85560606 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.855076741 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.855778042 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.861812674 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.861281907 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.857280198 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.856549532 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.0021158 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.856403308 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.858076702 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.856928279 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.854507198 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.861810662 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.854933078 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.853264443 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.854264361 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.856723175 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.85656989 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.856610507 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.856460875 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.857387923 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.861183181 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.856101433 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.856509395 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.858450589 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.857278752 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.857139647 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.860803095 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.856810023 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.855001511 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.854996565 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.86615172 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.876875421 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.856586975 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.864076148 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.857901782 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.857732857 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.85960708 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.865941252 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.85488605 seconds)
  done (took 92.935975104 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.859070981 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.859986131 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.855348802 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.858064467 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.858214692 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.857992827 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.857980483 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.857532143 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.854932202 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.854797147 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.859646283 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.855459957 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.855143283 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.858860165 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.85991754 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.855137435 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.856588335 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.856293454 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.854759364 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.85558957 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.856951102 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.85890901 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.859321169 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.856577038 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.857433484 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.856550896 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.855581158 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.858949297 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.857208824 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.857789797 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.859842931 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.858910912 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.85931391 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.857561383 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.857625147 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.860576863 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.858594351 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.857830884 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.861570843 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.856684657 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.859892935 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.859848875 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.861186041 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.859307058 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.857670453 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.856915255 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.857459657 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.857733443 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.85740347 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.860357494 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.859601434 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.85779928 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.861065327 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.858107488 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.86169483 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.861474288 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.858111465 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.858671556 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.861635877 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.857757807 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.858918971 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.861400986 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.859620562 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.862589785 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.861725331 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.860288316 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.859621773 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.861823198 seconds)
  done (took 128.153859548 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.86278723 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.862609616 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.862757862 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863529254 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.864364723 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.864142448 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.862015978 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.862656648 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.863252381 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.863325154 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.864366373 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.863415988 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.863418859 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.864249349 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.865303319 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.864254657 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.864387288 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.86351929 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.865058534 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863565397 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.863999744 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.863924073 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.863841222 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.86456262 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.864629341 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.862996706 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.865473355 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.863516003 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865054623 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.864106041 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.864900375 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.864017343 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.86430932 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.863501382 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.864223931 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.864007626 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865440515 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865045219 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.864992509 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.864325327 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.86627957 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.864711708 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.865493161 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.865155324 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.866480991 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.866032883 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.866330238 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.86717247 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.865233953 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.865945153 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.8656817 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.865201799 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.866877036 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.865053566 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.86567973 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.864582307 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865314882 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.866320278 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.866417143 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.866483431 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.866966635 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.864709819 seconds)
  done (took 117.389559551 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.865050327 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.865331228 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.861554976 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.861235359 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.865214774 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.862327746 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.866289455 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.865025748 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.864916143 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.864435944 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864896618 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.863509381 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864518278 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.865409277 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.863647335 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866309221 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.861502869 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.863955174 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.865200152 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.863087947 seconds)
  done (took 39.065647924 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.865279511 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.86521151 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.864612291 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.863011771 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.866628327 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.864499016 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.866480506 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866972652 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863372131 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.867753418 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.866731951 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.866260711 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864563747 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.866802038 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.865928868 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.865019672 seconds)
  done (took 31.633087386 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.865730448 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.868474037 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.866785408 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.868662933 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.865032201 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.863919347 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.866494461 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.865565423 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.864433859 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.868318745 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.86787831 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.868911577 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.867975562 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.869453612 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.866889358 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.868721648 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.865693297 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.866505376 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.868569104 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.871052857 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.86740739 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.866237797 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.869237283 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.867284032 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.865518317 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.867832303 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.864988638 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.866007268 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.864655631 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.868556893 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.866493857 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.86730162 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.866818286 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.868170003 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.870135727 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.865598385 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.86981754 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.868339258 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.870323245 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.870049865 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.870055415 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.86757462 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.86845181 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.870418268 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.868884424 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.870499823 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.867184042 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.86861257 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.866668602 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.866921284 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.868950598 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.870221357 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.869617889 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.871560935 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.870263945 seconds)
  done (took 104.516828872 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.868809832 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.869244286 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.866676721 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.872322029 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.870032654 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.868367566 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.870250314 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.868202971 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.868629327 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.871035798 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.869274198 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.870062426 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.869054769 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.870696427 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.867556699 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.870410608 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.86997591 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.869067507 seconds)
  done (took 35.436161064 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.869354714 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.869825657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.870806441 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.868041087 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.869362865 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.872086723 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.868258021 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.870879511 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871580373 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.869437383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.869133561 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.872800732 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871856177 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.871070921 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.86877746 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868199316 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.872650608 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872636643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.871301486 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.869764068 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.87329019 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87224253 seconds)
  done (took 42.942189499 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.870772541 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.870851842 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.887359506 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.893643465 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.893049016 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.907586107 seconds)
  done (took 13.11322032 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870595674 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872683385 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.871087445 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872392661 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871479881 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870559856 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870984587 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870624139 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874104991 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87216445 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871480277 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875413443 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873116535 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872287172 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873798936 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873755474 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869552048 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87078369 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871821059 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873590913 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869565049 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872835491 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870576077 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870524991 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870861637 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870801872 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873914958 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872682318 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871611636 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875058884 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873979884 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871422526 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874249675 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873418121 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874091752 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875443677 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872324253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876231342 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874160007 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872903884 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.874525159 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875274541 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876626557 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872825367 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874549199 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872463596 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873429666 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873981572 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872945289 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875632362 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87489512 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873336116 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876360989 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876472502 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876101314 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877679742 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874716589 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875164144 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875377792 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873420019 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872406089 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877780411 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874838028 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875535364 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87563451 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874118616 seconds)
  done (took 125.437064655 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874476909 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.87501452 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873745417 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87487681 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875045456 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874428181 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874444608 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875729799 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873838017 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874864411 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877423249 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875338115 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874424598 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873758339 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874493214 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874710912 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875818006 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874213863 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875541187 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877183252 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874211769 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875223521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875193799 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875319761 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875580554 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878715475 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874524624 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876421072 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874015572 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8758014 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87540426 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875343388 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876394946 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.876369963 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87618508 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876452342 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876712632 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876958738 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8787802 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878214697 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876770074 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877747518 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876491729 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877700465 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875967542 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876991383 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875866604 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87396097 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877128424 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877972562 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877899595 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876741314 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875673823 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876944346 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876749014 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876781982 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87840939 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878717547 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87687914 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879814783 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877198452 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877383012 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879588081 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878363053 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878021249 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877674191 seconds)
  done (took 125.626636322 seconds)
done (took 2556.208971872 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.875068402 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.895740925 seconds)
  done (took 15.569289996 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.043507643 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.994057808 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.878681739 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.924936123 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.876051092 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.899816334 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.873464816 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.876614782 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.880113141 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.879469335 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.878162434 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.064632648 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.876486966 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.876876733 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.879870172 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.971223348 seconds)
  done (took 52.475217733 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.881620122 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.884477494 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.892566664 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.884544445 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.883157333 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.891054421 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.913686556 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.882927132 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.916364215 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.894261066 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.952612387 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.89388315 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.882049709 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.932298291 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.897014344 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.898253305 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.97268932 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.956680165 seconds)
  done (took 36.10751565 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.961709737 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.882825907 seconds)
  done (took 10.65137491 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.89945607 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.901985125 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.93061983 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.878962718 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.883990698 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.887609817 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.913573778 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.905545295 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.900289848 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.894101714 seconds)
  done (took 70.799440582 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.889982091 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.885713209 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.885697445 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.885443945 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.875972749 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.878465253 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.883171573 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.883105082 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.54015634 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.917613694 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.890891925 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.889475726 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.881936043 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.886058125 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.882606491 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.908379079 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.001396055 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.882773555 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.882569783 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.891415231 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.884957299 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.938211988 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.898347424 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.884154558 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.915111864 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.548408904 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.8907476 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.891360662 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.983204313 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.882995074 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.886430647 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.88645304 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.889540568 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.302237343 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.157165998 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.883542815 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.897589854 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.895679684 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.883960039 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.998451222 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.887105452 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.893309207 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.584259464 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.13788807 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.982915319 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.926592075 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.203496214 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.901407864 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.888652596 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.916760376 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.887567504 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.886050366 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.899195553 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.380240327 seconds)
  done (took 133.103266603 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.884987676 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.229290618 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.051954948 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.88260116 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.169693106 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088893429 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.881864253 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932019625 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.880991905 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.116044193 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.135399264 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.993366203 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.880392571 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.883380232 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.883076089 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.879635888 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.042603571 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.95790099 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.882641531 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.879236685 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.912046234 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126669408 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.008545912 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.883970845 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.910064603 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.095448551 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.006158351 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.988480139 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.66939422 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.882315126 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.948753906 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.884617352 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.882538328 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.880024767 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.041159572 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.980010273 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968561991 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.88321449 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879032839 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.88038723 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.553617014 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087669092 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.981922704 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.028460368 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.084461561 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.088775775 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.663564822 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.882509 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.642225524 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.049786804 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.112829153 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.119239101 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.007498471 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.884347966 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.145123872 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.881146184 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.884096535 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.135952288 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033017516 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.983588871 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.882474635 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.882129095 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.882046294 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.133916553 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.88197156 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.980657985 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.885594145 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.880973072 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.983265835 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.988549366 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.022568905 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097196465 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.915239569 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.843187478 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.426054384 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.135032762 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.953799907 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137132185 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.887985983 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.882874836 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968086907 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.733038618 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.140771149 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.140045583 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.139013388 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.922203589 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.614834188 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.885570872 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.117945445 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.11062574 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.155009019 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.094079562 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.132993411 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.213328511 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.88541639 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.88402279 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.112010414 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.023847888 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.888603408 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.233333056 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117329637 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.534251422 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.908890333 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.194694531 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01780209 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.889858038 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.529947227 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.88517963 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.118830917 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.930733493 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.886806879 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.888645553 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.106851743 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.878054595 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.886633182 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.537359803 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.948810546 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.888970556 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121545346 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.886758217 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.156158866 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.888667869 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.125237487 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.351153043 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.916259137 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.062572965 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.093505573 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.886851408 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.130614041 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.133786214 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.003786123 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.108259553 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.584181542 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.880853771 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.173285205 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.884362833 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.88289734 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.052677227 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.883656059 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.028564621 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.884540197 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.178811218 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908110872 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121136401 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.884194586 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.141067123 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.916290363 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933160299 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.882997349 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.013343476 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.881842563 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.709517145 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.037803863 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.883994493 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.876640174 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.427428874 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.87735669 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.030649195 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.115464563 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903842858 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.950556278 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.553360638 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.878600737 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961046488 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.904046303 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.274541039 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.879821924 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.133356214 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.881116124 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.877515751 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.876420838 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.121930879 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.060888737 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.879684499 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.87248307 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.789524055 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.878229378 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.878647608 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.06159062 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.234052241 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.877604129 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083749535 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882986515 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006733725 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.883560619 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.963072772 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.21436044 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.873489361 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.877282599 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.876202269 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.879652597 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.876052562 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.089465419 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.903439261 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.41840584 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.019976367 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.158439691 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.188347244 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.12998364 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.921594528 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.87837167 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.132167527 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.87604025 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.939300397 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.876521292 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.902006498 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110857952 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.877591093 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090156211 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.160130557 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.735386286 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929123375 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.878306848 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876778234 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.874081266 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.023711988 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.964947701 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.877735988 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.877140036 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.996666866 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.004404534 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.089380102 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.877852346 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.97343392 seconds)
  done (took 905.276219037 seconds)
done (took 1225.788904618 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.876782385 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.878871065 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.862825225 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.877663592 seconds)
  done (took 29.294369585 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.883698794 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.882154107 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.885262499 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.88194702 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.322689047 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.881704759 seconds)
  done (took 13.53824177 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.907169144 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.871540862 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.876044163 seconds)
  done (took 21.454503727 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.950037392 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.268477245 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.988805504 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.302878614 seconds)
  done (took 10.30970103 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.885258359 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.884556869 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.884679814 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.884742033 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.88512295 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.885354759 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.883611575 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.883897776 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.885236581 seconds)
  done (took 18.763514248 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.90018917 seconds)
done (took 99.065655962 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.012015531 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.905505861 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.993677001 seconds)
    (4/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.270513638 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.968262496 seconds)
    (6/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.993530314 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.955774198 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.029733627 seconds)
    (9/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.577902045 seconds)
    (10/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.893776357 seconds)
    (11/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.068532155 seconds)
    (12/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.126083212 seconds)
    (13/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.334284087 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.912601269 seconds)
    (15/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.047371834 seconds)
    (16/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.99289978 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.064464377 seconds)
    (18/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.514768067 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.998546996 seconds)
    (20/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.024716812 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.056565499 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.228460787 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.918857822 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.961633687 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.992558045 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.893830033 seconds)
    (27/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.455232311 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.035204771 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.256285462 seconds)
    (30/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.025585517 seconds)
    (31/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.066414923 seconds)
    (32/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.10020961 seconds)
    (33/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.026977609 seconds)
    (34/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.200427995 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.213565006 seconds)
    (36/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.391672803 seconds)
    (37/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.974044588 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.290158904 seconds)
    (39/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.888968102 seconds)
    (40/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.53125087 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.190634089 seconds)
    (42/309) benchmarking ("sort", Bool, false)...
    done (took 2.1103928 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.21256845 seconds)
    (44/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.070619731 seconds)
    (45/309) benchmarking ("sort", Float32, false)...
    done (took 5.593091142 seconds)
    (46/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.143680828 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.961155765 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.206616113 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.876182179 seconds)
    (50/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.466795631 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.621228399 seconds)
    (52/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.913403797 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.181308649 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.030321632 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.151044302 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.891790995 seconds)
    (57/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.895455132 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.145469387 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.914150631 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.907172758 seconds)
    (61/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.979288492 seconds)
    (62/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.296295939 seconds)
    (63/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.328401441 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.985327885 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.183980324 seconds)
    (66/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.031180906 seconds)
    (67/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.368061624 seconds)
    (68/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.320566509 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.810766947 seconds)
    (70/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.125393941 seconds)
    (71/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.171213836 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.733558001 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.91002996 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.240102675 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.968015281 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.911122274 seconds)
    (77/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.0622901 seconds)
    (78/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.041553742 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.057904493 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.15004212 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.870663641 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.283022379 seconds)
    (83/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.542779598 seconds)
    (84/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.979574301 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.968915275 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.904482068 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.888277097 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.886122097 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.064562628 seconds)
    (90/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.974008056 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.884421986 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.953718252 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.290904959 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.089023584 seconds)
    (95/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.959443407 seconds)
    (96/309) benchmarking ("sort", Float64, false)...
    done (took 5.62161128 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.821188906 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.908002636 seconds)
    (99/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.873311111 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.373359649 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.247162074 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.878221013 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.076671396 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.323473685 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.965415967 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.80897751 seconds)
    (107/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.181094256 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.915606782 seconds)
    (109/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.069617968 seconds)
    (110/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.823703238 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.259872586 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.283962459 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.207796239 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.183287021 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.040260892 seconds)
    (116/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.983736481 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.845643506 seconds)
    (118/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.991487711 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.059864121 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.031703099 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.880848445 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.294653067 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.936236962 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.892876767 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.786683303 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.0201767 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.964516894 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.821398694 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.517019208 seconds)
    (130/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.95821189 seconds)
    (131/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.961490294 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.8772037 seconds)
    (133/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.048074191 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.927100659 seconds)
    (135/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.889949903 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.072128969 seconds)
    (137/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.964153385 seconds)
    (138/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.872718103 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.550492646 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.143119902 seconds)
    (141/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.032053998 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.129678386 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.055456173 seconds)
    (144/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.397076658 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.888639611 seconds)
    (146/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.993994552 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.139348636 seconds)
    (148/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.907714866 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.239160601 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.910553722 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.004482591 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.892226464 seconds)
    (153/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.321692285 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.04648356 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.869103721 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.973010636 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.987590453 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.194904614 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.909861133 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.900179323 seconds)
    (161/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.907999723 seconds)
    (162/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.941236134 seconds)
    (163/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.881238728 seconds)
    (164/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.167251991 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.588639234 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.986137341 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.726951973 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.891820844 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.951869821 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.920660705 seconds)
    (171/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.988606779 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.873157383 seconds)
    (173/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.196079009 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.017420353 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.830437095 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.075547543 seconds)
    (177/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.888910318 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.325075055 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.967064679 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.866217635 seconds)
    (181/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.903131203 seconds)
    (182/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.37641384 seconds)
    (183/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.439461885 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.008111391 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.076892907 seconds)
    (186/309) benchmarking ("sort", BigInt, false)...
    done (took 6.877874072 seconds)
    (187/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.989863957 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.904349586 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.137775518 seconds)
    (190/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.485292744 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.944079734 seconds)
    (192/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.033312383 seconds)
    (193/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.179227733 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.175627242 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.967480163 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.175247767 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.237227731 seconds)
    (198/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.030376256 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.976917852 seconds)
    (200/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.136382305 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.987159281 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.867627404 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.003868367 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.880220667 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.795179493 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.972670873 seconds)
    (207/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.001802904 seconds)
    (208/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.84802044 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.110984116 seconds)
    (210/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.922663862 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.85862474 seconds)
    (212/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.34809469 seconds)
    (213/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.493164725 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.030437629 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.856086704 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.871800568 seconds)
    (217/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.862958428 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.707972727 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.058888691 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.708750984 seconds)
    (221/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.226662388 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.877719166 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.265525606 seconds)
    (224/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.192782764 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.972911728 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.969680215 seconds)
    (227/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.991527769 seconds)
    (228/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.950781136 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.791439346 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.864825097 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.266941104 seconds)
    (232/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.291629699 seconds)
    (233/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.09808739 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.818922536 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.055960355 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.858141674 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.515815316 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.577379123 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.96075132 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.845805499 seconds)
    (241/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.491482397 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.454865168 seconds)
    (243/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.114304683 seconds)
    (244/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.864268872 seconds)
    (245/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.120013125 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.117851698 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.109610807 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.948453145 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.598088221 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.213875938 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.963670482 seconds)
    (252/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.409403292 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.080273412 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.979285051 seconds)
    (255/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.023118689 seconds)
    (256/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.778910467 seconds)
    (257/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.874215019 seconds)
    (258/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.953861203 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.244378642 seconds)
    (260/309) benchmarking ("sort", Int8, false)...
    done (took 4.730596737 seconds)
    (261/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.892020605 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.824253094 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.320756026 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.892029144 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.100317132 seconds)
    (266/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.869718286 seconds)
    (267/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.003161843 seconds)
    (268/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.927649503 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.216698075 seconds)
    (270/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.862598107 seconds)
    (271/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.859534321 seconds)
    (272/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.090771069 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.546214503 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.881253617 seconds)
    (275/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.103039367 seconds)
    (276/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.874879919 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.962622668 seconds)
    (278/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.852886512 seconds)
    (279/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.968670553 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.201365281 seconds)
    (281/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.874893115 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.849462541 seconds)
    (283/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.197460549 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.939366698 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.08316977 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.104980395 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.130342714 seconds)
    (288/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.293714679 seconds)
    (289/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.849751268 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.247839826 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.986389233 seconds)
    (292/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.058840643 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.323023604 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.039703969 seconds)
    (295/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 3.19821248 seconds)
    (296/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.385935533 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.065110161 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.903096799 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.525362785 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.712279707 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.86665756 seconds)
    (302/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.875407102 seconds)
    (303/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.967136618 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.850969406 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.625658508 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.936195083 seconds)
    (307/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.886197455 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.083890315 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.18446831 seconds)
  done (took 1011.67122878 seconds)
done (took 1013.552758406 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.904851552 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890066996 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.873872866 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.894244107 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.986816278 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.902513764 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.884349074 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.877347901 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.921619224 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.925130661 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.872028433 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.899505197 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.876195012 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.875130584 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.873562293 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.888810441 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.191181537 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.906698651 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.893585143 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.885141009 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.892607099 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.872317275 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.924520454 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.900406836 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.880087304 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.874130248 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.874604734 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.891020323 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.984449109 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.874645612 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.873629011 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.879012288 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.182683662 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.900079623 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.863895145 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.89232997 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.876179422 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.874802759 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.870663913 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.896549435 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.265710467 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.906168167 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.863707575 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.863013956 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.864624364 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.869524785 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.863208168 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.868889025 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.87657426 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.876940277 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.257447966 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.920881591 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.86206626 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.861117113 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.871275254 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.86168874 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.863175853 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873007856 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.877184486 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.873779907 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.153989144 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.894515675 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.859342687 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.873097215 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.865133189 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.2819539 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.89465452 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.859180332 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.253406931 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.901407231 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.281515791 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.90645638 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.854272424 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.868086349 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.888581861 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.168140966 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.881756636 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.853340357 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.861506768 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.849618188 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.863693463 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.868528706 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.859012007 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.85444324 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.867615677 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.879846147 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.864889807 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.861767388 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.862283017 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.873296998 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.862214691 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.865702448 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.859095176 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.848382275 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.861317191 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.854861674 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.853558264 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.858994648 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.85258438 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.859407856 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.246170888 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.908964879 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.845390499 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.846795878 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.843843745 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.86132645 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.245058218 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.890466703 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.866279 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.885887096 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.842812929 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.139580422 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.874671408 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.855571518 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.843712085 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.839850282 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.832665289 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.133091924 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.263404404 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.892869976 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.837788796 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.830514343 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850732822 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.839585645 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.831116733 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.146823659 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.865813964 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.845259731 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.95294494 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.842253343 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.865863634 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.830069827 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.836984464 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.863457562 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.849737614 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.863803948 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.835134454 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848773664 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.847996102 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.830268561 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.845130144 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.844408253 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.836854954 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.838064322 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.828808101 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.866484999 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846085808 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846042268 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.854707968 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.954933061 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.832083957 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.129180888 seconds)
done (took 291.625477964 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.905817351 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.829618573 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.933271302 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.831036832 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.913862625 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.918382233 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.828427249 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.829395553 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.829503712 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.20078448 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.829219501 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.831963939 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.829314218 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.830699681 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.915513205 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.833086551 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.830028454 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.166630402 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.832658942 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.904241651 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.830320475 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.829744942 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.83318023 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.202695504 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.834020831 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.826365541 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.904999441 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.833542125 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.168483024 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.833899518 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.830125213 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.169071251 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.923917325 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.851246866 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.843792349 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.838668566 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.914991873 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.836725668 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.914181826 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.91469126 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.935328063 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.87493764 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.826559909 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.829980864 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.838261555 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.836127324 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.832626646 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.861633844 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.828992307 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.831234171 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.168836542 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.845381244 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.841800708 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.830913887 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.831569224 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.855894007 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.832578528 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.835873691 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.924254966 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.835298394 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.894235317 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.204385081 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.205066319 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.832673564 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.830669632 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.83227826 seconds)
  done (took 181.80142575 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.899827285 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.911460155 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.898943368 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.836404425 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.884322424 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.902468471 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.836102329 seconds)
  done (took 14.920479764 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.840407507 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.833724046 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.886292124 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.886526615 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.834339698 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.981643579 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.835595554 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.845928114 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.832362772 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.886339873 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.836096077 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.835244945 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.843446771 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.833333446 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.886233004 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.845333348 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.951965291 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.836985945 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.836184231 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.98911351 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.832701387 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.842280042 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.89033357 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.84728178 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.836817297 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.842004306 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.498275611 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.835555743 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.83460288 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.834808387 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.833359226 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.877485088 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.836411204 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.837977646 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.832038786 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.989175798 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.836749994 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.832881692 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.837928768 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.832040926 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.838225531 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.836562078 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.838389026 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.833369355 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.835953731 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.85792191 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.835509474 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.837764992 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.837788512 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.838036891 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.884842659 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.837195039 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.834511063 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.836025954 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.892994646 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.84494501 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.837718214 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.835150149 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.83848635 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.833898924 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.989973565 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.887329495 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.837319399 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.888655417 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.836867759 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.838841727 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.839923207 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.837253027 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.934628244 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.839109475 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.888709757 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.835620172 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.99782463 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.860608053 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.840108237 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.841230152 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.842822542 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.841012482 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.837343498 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.844255353 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.836365818 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.840085807 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.842787969 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83679361 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.835870789 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.980969011 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.964995666 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.83457671 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.851665091 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.846477672 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.835499264 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.891253644 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.840303843 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.834264489 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.8955806 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.954294269 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.896800543 seconds)
  done (took 202.792567101 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.843617371 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.847471352 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.839256138 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.857981939 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.839212905 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.838927817 seconds)
  done (took 12.820195317 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.8421112 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.8426216 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.840468408 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.840193322 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.840818595 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.840319272 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.841579292 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.839774178 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.843033078 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.839600821 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.839496296 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.844362668 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.839535026 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.838490137 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.838613599 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.837665006 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.839973379 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.836948492 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.831768521 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.832345796 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.986491491 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.833374287 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.833158591 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.832257547 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.834662547 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.829998151 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.838633693 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.832981819 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.828498063 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.834892682 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.831737447 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.829431513 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.829341709 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.834456002 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.833515174 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.828591017 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83181025 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.828378369 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.825804741 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.827939454 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.82940142 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.829858859 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.828909497 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.829090723 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.829137012 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.833291132 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.833523348 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.836945739 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.829993354 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.830805169 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.830252214 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.82876239 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.82732121 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.828028841 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.830899637 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.832348455 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.829517285 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.823830191 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.825816567 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.825224363 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.829061478 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.823266933 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.823439193 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.826601588 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.820448949 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.827676575 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.819751908 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.824210801 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.820988072 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.818169075 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.819829379 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.820830767 seconds)
  done (took 134.800396379 seconds)
done (took 548.91081946 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.962336936 seconds)
  done (took 8.692562357 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.88174765 seconds)
  done (took 8.675395963 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.403620562 seconds)
  done (took 10.159573124 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.859929834 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.863468821 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.834390583 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.827604695 seconds)
  done (took 29.161327455 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.878867478 seconds)
  done (took 8.627648726 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.85276379 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.825569651 seconds)
  done (took 15.46215246 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.899248771 seconds)
  done (took 8.652884763 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.323405871 seconds)
  done (took 9.101074746 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.850290429 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.859916674 seconds)
  done (took 15.481290541 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.815412747 seconds)
  done (took 8.566537624 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.466462362 seconds)
  done (took 11.305979057 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.842577425 seconds)
  done (took 8.695636083 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.876535793 seconds)
  done (took 8.627618573 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.934910141 seconds)
  done (took 8.684154855 seconds)
done (took 161.634324352 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.833873513 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.827837466 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.829869565 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.827132301 seconds)
  done (took 29.066722765 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.867008552 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.868231732 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.870850991 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.880193327 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.871692105 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.869188895 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.861144777 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.86173642 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.880615671 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.873200062 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.871592229 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.872240704 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.869951666 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.872281051 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.872115946 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.871856925 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.881315226 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.871258385 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.860712694 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.867480702 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.832457349 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.876706491 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.867350658 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.838847385 seconds)
  done (took 46.579707648 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.023942049 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.898647211 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.981629025 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.882375991 seconds)
  done (took 9.529977184 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.877508104 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.879628208 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.89026863 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.930230916 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.957755311 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.885973954 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.851281274 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.842684932 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.832059018 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.878178643 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.953304874 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.873481378 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.963172548 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.824133265 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.003212844 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.824197252 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.824423826 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.876954384 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.928330671 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.941320472 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.824531649 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.876428917 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.882447539 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.872822944 seconds)
  done (took 47.035100204 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.823527004 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.831743193 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.830278865 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.824212054 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.824805216 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.824847329 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.830380864 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.826006365 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.846048188 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.826544658 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.823228045 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.825651732 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.823678653 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.825930923 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.824777841 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.837915769 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.838255813 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.82434149 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.83022258 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.830986717 seconds)
  done (took 38.312356472 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.820785748 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.670652066 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.17056391 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.074746371 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.819106705 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.823996293 seconds)
  done (took 31.119107611 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.839386078 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.829896335 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.82543812 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.884260862 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.964288226 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.830117157 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.8249737 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.83950315 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.876058105 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.891005976 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.848577067 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.857079679 seconds)
  done (took 24.050578677 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.823401922 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.821547716 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.820242249 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.837376467 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.838111049 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.831852529 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.833695854 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.82265853 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.838532227 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.843634526 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.832016869 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.839315988 seconds)
  done (took 43.726746487 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910851003 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.70780226 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.457295674 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539862047 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354748436 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02879873 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.352722865 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.998778111 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.823819267 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095857784 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.392314522 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063283881 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074702789 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821817526 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.892470802 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.293518048 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119692065 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051993292 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850546773 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50685676 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007726193 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.499505 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.651941389 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.011953394 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09881272 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.017664179 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.149682658 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.850820202 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020869117 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925255898 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898974797 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.888778431 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162372923 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102231635 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023051787 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897728986 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.540743786 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.603471401 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.884323358 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.626813367 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.51110622 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.022386587 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899151952 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894559694 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.825516851 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.50916975 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070026023 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.89350633 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.59517033 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.894597776 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906109234 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983343136 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.896121852 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.712759576 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843940155 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.169641025 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.891799295 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900127646 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.461890262 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.969733793 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.606251409 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.84254735 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.996259043 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.635057809 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371782097 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.063731391 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.90774731 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909770859 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836113901 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.598251456 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029200841 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.052475591 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.929318259 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557130667 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204041317 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.561423685 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.988183432 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218302099 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.7939529 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.84476341 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135777794 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.864235653 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844811168 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.76830403 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.84298701 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176119285 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95155565 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.581221357 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949242613 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086003473 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.92332141 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932677756 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919120849 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.133882329 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.792548553 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910451231 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.436809791 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195980425 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932895872 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.085401902 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844455598 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.915531519 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161963268 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.120882658 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.245802569 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.386961015 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068365128 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914486547 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.000221456 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.915978395 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.919780272 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.196301784 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974528949 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.004154343 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054856229 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.878967298 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237849667 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956798929 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.101508775 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.52727508 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187715052 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.24957081 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.177125469 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010303378 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.933388549 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.927819735 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.667215443 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.552072807 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.153018815 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.929697955 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.511567731 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.939920549 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.933396399 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864805308 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.557439519 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.516784953 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.033592657 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154067562 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.86487171 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.357350237 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863376002 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.075989428 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.044286312 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.152830709 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.580601634 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.010496328 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19017064 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379624924 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.263491992 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074380208 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950753854 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049737625 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954167897 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.348236799 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.302914684 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.935312763 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.936398952 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.663810165 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.019989865 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944384934 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.949741887 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.744323699 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228330083 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979906458 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.955239507 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.879019444 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.960281381 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029833616 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950194566 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.955087605 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.476051835 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.699900665 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.956151614 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.606047338 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16828342 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955551986 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.606092089 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129099159 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.028216432 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221242838 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014391852 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.877821733 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.648847569 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.651362075 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947995761 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881450046 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.94775307 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954945676 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956899437 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.143985635 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.238651006 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00283283 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.663184351 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.057728676 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958161667 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.953883361 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949037088 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.471876284 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.0291134 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.519887555 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.074303165 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08331086 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.960004771 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.878912189 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.951281763 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95208859 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.948382715 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.900789847 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000320983 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.680895058 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279997026 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206259724 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.595891561 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964435507 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.641710842 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.073901732 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.013388801 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.493171632 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994483806 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.059238632 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021452716 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.958325503 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.619015606 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.715426862 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.51790777 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264373602 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.273785261 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4044839 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.453367276 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.286836538 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121922197 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182507961 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.477478992 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.01108087 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127339069 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890352862 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034700997 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.59672514 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.3067127 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967965679 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17517583 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338428138 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.546204234 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10651477 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159942667 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985512364 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.852070436 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.995432118 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.475354432 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106103592 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.461326595 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175987564 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12169057 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.481765274 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.053685976 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.950060613 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.413904038 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032880654 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.658910542 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.311250737 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.578063958 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.537457248 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318159252 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.950826229 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.394898738 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326029304 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392757118 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.040550639 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885371785 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.961048446 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.960800112 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.950486997 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.932208385 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.825462778 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.20434702 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961867074 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185471627 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.315388333 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.233113115 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.86523997 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.956885148 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953317351 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249612299 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.702712541 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200264491 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.375303246 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.548986401 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958464052 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.886686128 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884106054 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.655058051 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.961050006 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.926169966 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178933105 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.060742095 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.907740189 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40456699 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282664895 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.207795389 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.968665488 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.231471245 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235753493 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.688863356 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9837514 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.05531622 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.481953279 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.70223526 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.175552735 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.187192833 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751801527 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184481522 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.594804566 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.927611483 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.95665222 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170283199 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.175863807 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.542818921 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201275155 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.682102396 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.962778287 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334508173 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022799605 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.548526878 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.166669628 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.048328294 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965626 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03767277 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965138621 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.9651756 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.965776371 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000713818 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.553301418 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.08703406 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.971118246 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046996664 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.053545772 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.542868258 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.964576541 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24178311 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310916019 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306566385 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024275201 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.958619741 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957807074 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887836268 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093695267 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.399808578 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229082788 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.085291116 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.099209131 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982138553 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.484889861 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320990251 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28302007 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231597826 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.85305152 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958643114 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046540248 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.180288313 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967181893 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.167564129 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187832146 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278406011 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435343832 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.169887109 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.250603203 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235948911 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.336701442 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.962916618 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549648878 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.972364586 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.49543393 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.003313518 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.558877861 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246745754 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972772154 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179165207 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.984046485 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.163663271 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.415234634 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.716285625 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324018776 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.953511728 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.024179712 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242982454 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366385846 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281627375 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044259038 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973231601 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.658689511 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10076845 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.862996919 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.20647707 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.964707137 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173603602 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.675233953 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972451305 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25567518 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280221811 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.962911936 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.892497383 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005632164 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.973314416 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.187103638 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242975431 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.215930343 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973696306 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.972994402 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.777769407 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254516762 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030956872 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897772112 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.967749007 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062349583 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215462264 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985090097 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.482518331 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.667745779 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288399065 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.884196399 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987522724 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454232534 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433935998 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314863331 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.499590132 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212837015 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.524894592 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.900420514 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353052974 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.969908835 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430767519 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.355284639 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.969839821 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.539998867 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089462927 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.241737077 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296340174 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.985215347 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715148233 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.00785966 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187726363 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559023418 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.906375308 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.970983269 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.028617998 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.967188404 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.094814639 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977426958 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.923041554 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907731127 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.815634834 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45887823 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.972483084 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.961074553 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.501822946 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.59913675 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08562811 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122703361 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977455048 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.689247535 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.257798304 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.221037935 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.536388749 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.0481759 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.971382644 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968757537 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.893578916 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.164671676 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.164722573 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270926446 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.391517226 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.08994195 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971809026 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.182464659 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178261469 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.580864093 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124373895 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425930193 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092722157 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.896316874 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.680540692 seconds)
  done (took 1712.460985106 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.991579875 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.984272049 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.982071855 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.017635668 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.986852926 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.982738429 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.033221905 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.062294064 seconds)
  done (took 57.931539632 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.969160787 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.156135477 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.977385565 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.969861061 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.99162707 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.970656373 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.158543614 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.981783016 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.982600393 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.979427128 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.969222767 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.977346283 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.290705467 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.994974523 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.981023297 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.991376953 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.972384151 seconds)
  done (took 76.213404291 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.965928793 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.14227166 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.989140727 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.99345721 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.838041854 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.971963251 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.916416175 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.984851391 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.971641843 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.14088802 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.300795902 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.970382517 seconds)
  done (took 91.071006706 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.981707212 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.97154397 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.972051426 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.97262339 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.971637122 seconds)
  done (took 11.764771225 seconds)
done (took 2220.638633314 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.2031454 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.155045729 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.203629145 seconds)
  done (took 6.247128392 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.112543396 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.163513999 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.280523951 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.299098036 seconds)
  done (took 10.746868199 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.282168648 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.338954321 seconds)
  done (took 6.507367295 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.291986001 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.988615875 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.356904519 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.967629087 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.968681695 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.969980413 seconds)
  done (took 22.799625815 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.971582875 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.973722237 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.971958284 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.973894059 seconds)
  done (took 9.778823594 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.95421948 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.688947948 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.9550176 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.970715566 seconds)
  done (took 21.457940909 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.721367879 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.095399664 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.714344788 seconds)
  done (took 9.419060531 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.540938434 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.284476104 seconds)
  done (took 9.713140532 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.130167047 seconds)
  done (took 4.019254427 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.000708001 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.243063989 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.520522377 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.549027072 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.630607558 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.230339645 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.320410822 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.207078732 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.421022239 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.460816895 seconds)
  done (took 26.47397622 seconds)
done (took 142.899137205 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.525306505 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.000615484 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.174211393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.332615863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.205757805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.174100823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.18731689 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.33251564 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.023503202 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.012997372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.342632778 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.203543689 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.138845975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.993097456 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.14276903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.993304006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.19992553 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.34582833 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.014632135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.234688687 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.200614408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.980506284 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.170151774 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.993698557 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.204749884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.12604885 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.523683695 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997220691 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.152307666 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.536331997 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.129947177 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.373178417 seconds)
  done (took 171.859251608 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.97295192 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.974084722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.973602331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.973047347 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.455075619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.971913307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.973092219 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.974142521 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.427257132 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.425315967 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.973450222 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.444908005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.975681255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.973222276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.9744432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.97495337 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.600318902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.972984244 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.973264097 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.973051879 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.973574739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.272763797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.975813895 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.281255859 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.591602127 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.97366777 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.973376831 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.974252841 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.97392947 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.973600284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.975559036 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.973476142 seconds)
  done (took 212.76476623 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.935993344 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.97615516 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.975376242 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.974584012 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.975723185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.974914725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.974011318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.975630253 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.596836541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.587853391 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.976855467 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.994797477 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.980028271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.974566072 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.985682179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.975133334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.984231316 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.949322483 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.984001179 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.986518876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.989538569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.621454627 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.992245436 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.622502808 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.985814654 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.988036371 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.975697822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.989481126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.992649561 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.990643346 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.994233406 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.976200697 seconds)
  done (took 223.756031252 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.230168956 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.9808807 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.981613767 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.911948481 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.982450071 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.981804165 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.974031816 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.235586056 seconds)
  done (took 20.196069551 seconds)
done (took 630.48388398 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.439508963 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.29556257 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.162351252 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.005426287 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.26080715 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.042567548 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.001941029 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.070537144 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.633203579 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.079646049 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.677560041 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.026506813 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.755975521 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.032975655 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.127101071 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.06131351 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.549532533 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.640463736 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.183410573 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.084298335 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.177963235 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.927183712 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.087341586 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.662371555 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.781816193 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.974045206 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.061750011 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.562508246 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.014493173 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.165791982 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.760167769 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.322361281 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.018585605 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.001136987 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.056971469 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.037363234 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.267705013 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.016958754 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.129303193 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.728173271 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.085015402 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.537394244 seconds)
  done (took 107.404807452 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.973801002 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.971557349 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.970147675 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.972154057 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.973409735 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.972035943 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.971191701 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.969738671 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.972258136 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.971009666 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.971232753 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.971608645 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.970609623 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.971404803 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.970804658 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.971362815 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.974093505 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.973952476 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.971866749 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.972550583 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.973654156 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.97210826 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.98774361 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.973993941 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.974164444 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.972118298 seconds)
  done (took 53.200533441 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.985738974 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.140874908 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.224464713 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.00784069 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.984931501 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.988988343 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.005269719 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.99319644 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.988243604 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.988055469 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.096865396 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.994212657 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.004591672 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.225135518 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.00446765 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.986359383 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.986815954 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.985511884 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.147880058 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.002503983 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.007133118 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.992089903 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.006398209 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.001992569 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.98905319 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.985971762 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.989222709 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.488305116 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.997933463 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.094722499 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.04343748 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.012322691 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.401031671 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.239893774 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.0473472 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.000181782 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.988846106 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.097063058 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.997356067 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.987114837 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.006242776 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.996587244 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.2243555 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.481767212 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.0078297 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.988490649 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.496651555 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.112917549 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.032825653 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.999576938 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.228216567 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.007211101 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.989693321 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.99028266 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.025411719 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.995918229 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.989526309 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.337023001 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.001942162 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.004304378 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.995190122 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.990677362 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.147717181 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.000676663 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.139530039 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.001796724 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.99554092 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.98888523 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.224884372 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.009353086 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.478873702 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.008327925 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.989349585 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.096890982 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.148274396 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.526547622 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.003539788 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.148839511 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.416110009 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.017435362 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.000168554 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.475417785 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.021226466 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.000339189 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.993744647 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.992377622 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.992509703 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.036468364 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.008156621 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.419787803 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.490787978 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.357636225 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.019337525 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.007713344 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.990864831 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.338749273 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.004325246 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.990853664 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.221523963 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.496451016 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.010727367 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.998649811 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.469800674 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.011223839 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.010237487 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.999734611 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.230887709 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.00936873 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.035680554 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.99167775 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.998090556 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.993008821 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.010344577 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.999826811 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.99218825 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.464465617 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.121091929 seconds)
  done (took 246.46482961 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.98902886 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.009182078 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.986914023 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.99129663 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.985544965 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.991099313 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.986387477 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.987076319 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.991506785 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.987969618 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.986182195 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.985824575 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.988417356 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.986712122 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.002070422 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.993830953 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.590882577 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.991000706 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.986835436 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.01226834 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.642215752 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.994718323 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.990858269 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.986664155 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.987706536 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.989974 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.991619494 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.994399528 seconds)
  done (took 170.919080759 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.994292596 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.108532251 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.014582527 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.021102596 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.004089417 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.992454811 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.016881051 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.008400863 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.002644372 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.993454842 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.991911655 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.053930954 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.006333086 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.090468829 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.027203254 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.026102031 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.09625186 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.003492455 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.99304258 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.993207104 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.022547279 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.989831926 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.055893864 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.12205497 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.017255875 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.110455244 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.00191849 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.995512201 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.993834353 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.113005107 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.013268563 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.056668498 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.024911563 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.01393503 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.120661377 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.113922666 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.100484108 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.025131248 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.000454253 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.994027308 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.993646722 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.984252802 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.112045897 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.016323594 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.995982227 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.101948372 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.017370512 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.997678952 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.004975514 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.994800207 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.008739652 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.017329161 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.06549834 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.129676846 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.031797778 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.021924804 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.019775347 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.276947625 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.005857053 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.092076529 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.990353741 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.115501775 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.018706932 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.983081348 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.996011135 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.003113441 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.025614762 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.029539925 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.100362081 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.003587747 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.092964776 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.033812085 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.004198811 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.995944611 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.999150129 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.114022195 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.115411927 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.034562751 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.034611186 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.029068318 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.998028542 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.997366113 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.987485603 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.013979507 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.00260766 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.114942076 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.116678434 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.006489036 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.000592217 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.002251365 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.000904724 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.024002151 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.12597378 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.037326502 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.091578662 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.066867296 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.075686634 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.015501857 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.011855762 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.006460269 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.061705871 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.014987428 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.009270729 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.327497532 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.068384085 seconds)
  done (took 216.024854789 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.47994629 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.048833001 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.058246688 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.313844881 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.359596857 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.977069054 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.046775496 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.050685922 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.07387806 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.237243004 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.113450586 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.068123206 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.032475075 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.02282289 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.051020879 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.067283275 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.057257111 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.386585759 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.148679491 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.180010127 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.03111208 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.32579571 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.32088015 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.450056585 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.08206209 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.385560517 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.704710991 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.190124356 seconds)
  done (took 65.184814138 seconds)
done (took 861.1056863 seconds)
SAVING RESULT...
DONE!
