cset: moving following pidspec: 17272
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.56976698 seconds)
loading group "string"... done (took 0.512437253 seconds)
loading group "linalg"... done (took 9.475675947 seconds)
loading group "parallel"... done (took 0.174581215 seconds)
loading group "find"... done (took 4.505156457 seconds)
loading group "tuple"... done (took 2.07580507 seconds)
loading group "dates"... done (took 1.399293263 seconds)
loading group "micro"... done (took 0.200810002 seconds)
loading group "io"... done (took 0.516598942 seconds)
loading group "scalar"... done (took 58.743806612 seconds)
loading group "sparse"... done (took 13.94567325 seconds)
loading group "broadcast"... done (took 1.734645622 seconds)
loading group "union"... done (took 11.038611996 seconds)
loading group "simd"... done (took 3.828530308 seconds)
loading group "random"... done (took 13.930505029 seconds)
loading group "problem"... done (took 2.220018393 seconds)
loading group "array"... done (took 23.766930881 seconds)
loading group "misc"... done (took 1.178790882 seconds)
loading group "sort"... done (took 3.688165116 seconds)
loading group "collection"... done (took 21.945537654 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.690560341 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.150396906 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.195862086 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.267516158 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.267263336 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167063511 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159699254 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.171647448 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.574506913 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.198642242 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154161063 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422888752 seconds)
done (took 6.196117518 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.263030646 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.244563508 seconds)
    (2/2) benchmarking "String"...
    done (took 0.184941128 seconds)
  done (took 1.145841892 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.0777192 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161541397 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.11059649 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095896259 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095510753 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110035773 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094737723 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110107324 seconds)
  done (took 1.504084314 seconds)
done (took 3.711816446 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.515205099 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.884241663 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.533451394 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.179637756 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.317356824 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306773598 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265428955 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221353145 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092492153 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.107132936 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.199106768 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.423824822 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.382860199 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.987503871 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089293605 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095512858 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.153064231 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.781846759 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081353847 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108939686 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.529822285 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213523607 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116036795 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106296596 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186593611 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136059038 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159817142 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102064312 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671376667 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134402135 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213720086 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084557594 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158293748 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165418807 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.231241866 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09497331 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685823878 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200508411 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096285368 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103008965 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683259861 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118471388 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206140964 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107641793 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089480413 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184123306 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114705822 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080111199 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094511588 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103422746 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158580404 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.448285541 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107642339 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.193335617 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095588819 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693772065 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098667792 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274334113 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.129123167 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094689577 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092658534 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08905582 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160285799 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094983217 seconds)
  done (took 20.38963114 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.171535892 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.187316416 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079473432 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.160314574 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123058398 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098998117 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086395162 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080183975 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127586373 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179822486 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141220852 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.198529942 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079114045 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090891819 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.169760766 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231141347 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.129733214 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105983495 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089863643 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109085242 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124383709 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113403573 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093511139 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092897278 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172494028 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20624889 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110436423 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123194023 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091331967 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099511204 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143447128 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144473978 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094137152 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09003939 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.190167433 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108425733 seconds)
  done (took 5.379318221 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.247455187 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104404567 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.251922085 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.202168763 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.15404797 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115990497 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.179807673 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.294895946 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.228634825 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.190693268 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.176725919 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177263102 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088054746 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12789555 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097428894 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08060122 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082092767 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097081796 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.373615206 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150521091 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.193983333 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188583403 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09913503 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100403327 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362548237 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102445585 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088530885 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113495398 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065399249 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.22447902 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096242901 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.069613823 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085354861 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12488774 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116885803 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211958097 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127729461 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138397644 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097327808 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.104789262 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.207360341 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122241885 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080917999 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.133170274 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118815496 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13089074 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.110386936 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.11180172 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222092098 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088940341 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1316181 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.030398741 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199777825 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.163608775 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.08662474 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291978101 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128843395 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103519828 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111760729 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.780458552 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132517165 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084037824 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080422911 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.116848902 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080898494 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.455406447 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127388872 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.332026871 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083756058 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158926639 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099419046 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121193675 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087252044 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103843408 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111943294 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088444509 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097580947 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089779228 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081520813 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108099215 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112811401 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102099362 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082921106 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148962426 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115495108 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109545556 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125175204 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.093640798 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087950917 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130497767 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083859431 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.107711674 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168799014 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119417699 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085423181 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.129218752 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116175401 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130395028 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.106576875 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.239225434 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086631482 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126133354 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102955025 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128566546 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102256075 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082328176 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102296819 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081526689 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082260051 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162549839 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.088740661 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082254994 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106973821 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094971181 seconds)
  done (took 28.814458583 seconds)
done (took 55.302593478 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.437981356 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081702472 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081630986 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100592979 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083209625 seconds)
  done (took 1.584017187 seconds)
done (took 2.358991574 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.31675431 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199545475 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08854263 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190561514 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088133786 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197828096 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184037381 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101339925 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20860724 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086597543 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194319866 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085722849 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107286361 seconds)
  done (took 2.84813393 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.108445939 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109289981 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104073127 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122074239 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086715873 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10214741 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119971171 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109196929 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101930703 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113880835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087215506 seconds)
  done (took 1.939297977 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104198899 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106882525 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093170888 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118888525 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086757718 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099459667 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117131685 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107026114 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099921794 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113515765 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087707266 seconds)
  done (took 1.909174287 seconds)
done (took 7.467226629 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.223385938 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.851576368 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.189652768 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.244775395 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.352499929 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.298529728 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.609696772 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202656939 seconds)
  done (took 15.880054321 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.130552344 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092129429 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.190523893 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091389138 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.115617641 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092135888 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096637594 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.11458182 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09769164 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09565069 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.113535185 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091556861 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097866116 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091796698 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.109675365 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092378679 seconds)
  done (took 2.552072601 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.150101444 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.146345499 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098692155 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099761137 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.114253744 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099522791 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103503441 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116593499 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096026416 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096788129 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119434625 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099479044 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09965252 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.111558562 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099644928 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119052728 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110719132 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099233871 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116766234 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116460257 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100028977 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097303483 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115642922 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10094668 seconds)
  done (took 3.488904181 seconds)
done (took 22.695498835 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154847179 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106658814 seconds)
  done (took 1.041612751 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.170093361 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.191486134 seconds)
  done (took 1.14463044 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117704609 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094589232 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141650806 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109256935 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094456719 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.112673334 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12155202 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110814649 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094376957 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092237931 seconds)
  done (took 1.880209261 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.099702781 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100022613 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126528058 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.172790609 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119350253 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095765998 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096109758 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113051149 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097744569 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091326354 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114399879 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110136365 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09698503 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127500352 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098086538 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.112824594 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102261321 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095815042 seconds)
  done (took 2.758799311 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.095182621 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09705306 seconds)
  done (took 0.980350927 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097743525 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09432261 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096360756 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114601878 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094614999 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094848631 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.112426916 seconds)
  done (took 1.493054114 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.549204175 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.249756507 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.416909466 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.115799259 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153804509 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.522344305 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.13177664 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.13585782 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.115337138 seconds)
  done (took 3.213782748 seconds)
done (took 13.300562088 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096258965 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.248066627 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.642476406 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113942586 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091690326 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161302412 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.323856421 seconds)
done (took 2.470876966 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350637864 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.163354109 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084271775 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092961295 seconds)
  done (took 1.480238324 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.087152766 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103894561 seconds)
  done (took 0.987226909 seconds)
done (took 3.266426278 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093717671 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.123868381 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.108345927 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091725201 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090797486 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089806073 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.108800557 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091345851 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090140819 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.109341552 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.089943685 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090743149 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089217017 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.106276019 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090961111 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089085051 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105851505 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089978241 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090646607 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090159101 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107127429 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091818982 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088886118 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.106320021 seconds)
  done (took 3.156958454 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.116394435 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095365419 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.116095365 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096349356 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.097422889 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.114455374 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096482909 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09201078 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111615142 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093600148 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095187279 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.113206926 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093568698 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095204885 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109165846 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.096842221 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094459486 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091005561 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110707971 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095273202 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094105006 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109716052 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095177943 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095192254 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112765555 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095404344 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091627992 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110530761 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094922609 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095737502 seconds)
  done (took 3.81584825 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.102163781 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090759957 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093550025 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.119753988 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091948138 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.094660379 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.107978315 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095992313 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095551895 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092294214 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.114952349 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094814782 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093204033 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.111885757 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096028146 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09704506 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120594206 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095321062 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093940154 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094955169 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.115598647 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094793789 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094081818 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.113146856 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093572254 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090778906 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093859663 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.112659525 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095571849 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093543741 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.116150575 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099275636 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095016515 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.122021021 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09808112 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094187177 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099149071 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.111858886 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094685539 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089772253 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.110139722 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094589354 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093767568 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.118258407 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095021154 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096111285 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093969843 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.114139487 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095087341 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096060015 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.108804006 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095009882 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097352039 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094273799 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.116128051 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092409431 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09476524 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.109132709 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097961019 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092652701 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.109581885 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09090815 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100626861 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.095311653 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.128204129 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.102210477 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09404446 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.114812013 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096438506 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099984863 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.115913735 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10723203 seconds)
  done (took 8.077863938 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.12103514 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103935158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.114479719 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097868571 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09447941 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095075498 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118712438 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095903226 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094994156 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119174824 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096202104 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095035307 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114046989 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097164583 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095273222 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.113992142 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101820408 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095153395 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.111281183 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097630259 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099525384 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096583342 seconds)
  done (took 3.076305701 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.246057992 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103832459 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144078549 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122526873 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109495217 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.128139701 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09920744 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098505175 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113616305 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101341816 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100448817 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11419982 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110704384 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119800751 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10195032 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10152546 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114350875 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102091124 seconds)
  done (took 2.939594105 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.109152689 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098202179 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.161331628 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096336519 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093792428 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111863205 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098354419 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112870027 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112958394 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094176141 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099910102 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111480742 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095155938 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092760341 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111536342 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094131294 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094558932 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110834142 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101701233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098305877 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11654722 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101534844 seconds)
  done (took 3.124719423 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112254191 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097928669 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.132938714 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098732857 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092418503 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110217227 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099734688 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093321542 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119628424 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094311957 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09394277 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09399883 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125492856 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09387455 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099556931 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112289086 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094025261 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093237453 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110970708 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093274618 seconds)
  done (took 2.873397518 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.201460967 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132200352 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111819476 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116274654 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128396935 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109785266 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136146216 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110738879 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107803174 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137807897 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109245293 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108337598 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135940793 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114432372 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126194415 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117597094 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135205939 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117734455 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109362618 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126149955 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121801297 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108221814 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135589447 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1092686 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12511539 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109611391 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109361737 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131444392 seconds)
  done (took 4.256702486 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096216778 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095734035 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09151239 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109104189 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092332953 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091040377 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092359747 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110452549 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092952971 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090960493 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109454536 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092559462 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091292663 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090701589 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109766961 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094130883 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091976123 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108957903 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09209916 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091747601 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.108627478 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092754714 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092166293 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090884702 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109434787 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093230605 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092599432 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109867806 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094263496 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092785114 seconds)
  done (took 3.720833217 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.110138908 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104812701 seconds)
  done (took 1.029588177 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.104495821 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110370882 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091803271 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110562099 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100337233 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092833731 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119040106 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098406197 seconds)
  done (took 1.644278285 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.173318457 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.195283695 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097350709 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122688387 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170187446 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.1831247 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130192479 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.117485549 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091854096 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085180212 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.183944918 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084083512 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111657024 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09158145 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093232431 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118631943 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094483966 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10192045 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.118114919 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095083038 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097770454 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117063789 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096030513 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104344875 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107436304 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097103924 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095895132 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.123073128 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09069537 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094962256 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110274093 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094495612 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09548104 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.114991626 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095536125 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.190878482 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10198515 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089961012 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112987979 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099175795 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126633676 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.112666352 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096316876 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091442436 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113885739 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098511001 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097856147 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.111855391 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087597218 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089682564 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.111439714 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091055112 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093213125 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093669185 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.11190234 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100386806 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094300392 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109704025 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090686151 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088852557 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111178233 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090353706 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095634286 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116022769 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095753192 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093535141 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110543 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09421783 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094575268 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112811677 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094131077 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107786967 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112704931 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.098845106 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098115964 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.113460591 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092643218 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098289675 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110002264 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095565233 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097495951 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.139720923 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096950647 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088915849 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108280616 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10175708 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095392673 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.114759127 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088201574 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102839148 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.113609312 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09748661 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088187542 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092902792 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108531665 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097749048 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086838149 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113412514 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094692118 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098567432 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11739288 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094462774 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094960075 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116651508 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100054828 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092314883 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.178588924 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091037032 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107883189 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096639243 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098904319 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088224036 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.113946813 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093466541 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091078368 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108664727 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099948678 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093385971 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.114670998 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098712226 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096296041 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114169726 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096483416 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095078851 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108230715 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099426437 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102210317 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.113831395 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098491276 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095042242 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095522793 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.114687942 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098963899 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091780774 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11862485 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09175942 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094680357 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.114198933 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100783225 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094187288 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.110107388 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095190411 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094893942 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.112306512 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098815902 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095514183 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.108879291 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088028426 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094291592 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108876207 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.0967665 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10422586 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.111749113 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098159677 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091571308 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101591677 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.113182352 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10020415 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099327033 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.118639328 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10046124 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086775287 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110809298 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098610485 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09560704 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110144894 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096529684 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094429562 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.119400297 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089196089 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097960514 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086697482 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.111006914 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100095728 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096482331 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.115673813 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091141032 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131534797 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125175051 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101581969 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09472638 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113916772 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098893684 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092958436 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.117196951 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101431678 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098909561 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.10946552 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.094575974 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098576418 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108336061 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099195555 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093823853 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114503637 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088351381 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095526543 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087367516 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.117467947 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096688453 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098435445 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.117553948 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097929711 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09303422 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121420187 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091418177 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098406065 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10531968 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101929626 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104854446 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118081308 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102130043 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095720087 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092131994 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.115773142 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102915846 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095520842 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114486694 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09593056 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087040232 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108937461 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101749033 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097931658 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109352843 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095670363 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095588299 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114999521 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093772588 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087820105 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.09928332 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118089299 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090979703 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103825443 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.111669062 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093150927 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120468847 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.090463809 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092105513 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096085103 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.118935501 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095261374 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094565463 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.116992925 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10108604 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09733095 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115964003 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094203076 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10177775 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111514328 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09500851 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092277906 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096839364 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108460709 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098107606 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094814066 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111512833 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091998008 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097913596 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119690273 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100443263 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092746425 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118195411 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101599822 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101609002 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111092269 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101426876 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091221106 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106575913 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101188952 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087730349 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096614772 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.110832474 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100446309 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093352209 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11358723 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099290026 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097647203 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113385654 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101903297 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107595096 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10909847 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088547516 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092922605 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114143189 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092392945 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092712194 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.116293196 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098206238 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099762094 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117074987 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.093148132 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095705358 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.119742128 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093598069 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101136165 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.119192147 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102861768 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091622956 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099557689 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.112618112 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100516064 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08897045 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114549005 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094452792 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09434144 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.112113546 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094241757 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091697088 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.107858901 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092539146 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101256323 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.113527881 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101459354 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094489807 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.111545377 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093800618 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091884589 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.12003859 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094798759 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101855929 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09524414 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.110011483 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089374644 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100552491 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115757837 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102442188 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090249943 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119952792 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103049672 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098557002 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.114605139 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105200055 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104214439 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.120217154 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10189618 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089472588 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093855934 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120370077 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096556441 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097652876 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.117249289 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.0896392 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097394098 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.120617422 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097617482 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093836556 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.108287518 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097530994 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102254821 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.117317893 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.101806918 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097941298 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096110561 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.11099962 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100158302 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100499854 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115724869 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102075095 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095148819 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.119862682 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.094260374 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10099117 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.11587146 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.091586809 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089913163 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112297643 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103404889 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089643957 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099841672 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.120536172 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093613844 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093497509 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.119597806 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09314972 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098214594 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119318856 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.095826915 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105587708 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.115518986 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094806716 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100297959 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.119939481 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091148504 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09458642 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094463274 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123208925 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093708011 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100056119 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116234298 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101302178 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098630289 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.120437952 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101095543 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101546294 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108703523 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102767107 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098975536 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.11653892 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.095083944 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093825072 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090305927 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.116043103 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102696141 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092050588 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123535456 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102532392 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093531621 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114380953 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101969435 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095653453 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12233692 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093608196 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096681655 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109177299 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.099077848 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094453824 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.12205506 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093174414 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089410471 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120825704 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102233363 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100619867 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098583006 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.123349608 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089801908 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0900427 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.118657697 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.094803385 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10395288 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118669087 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.095508419 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094894272 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.11714353 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098314174 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102884161 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.110180173 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.094604207 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.098559223 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117371131 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096583938 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091112665 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10025131 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115492892 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098579052 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094168318 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.111031976 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095746244 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102801111 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.114966831 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.093689589 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093313495 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122623756 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096671746 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093040122 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.110301724 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103197301 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097954794 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121691366 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094917193 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097517781 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.112653386 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099190752 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103178151 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.113050761 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098238839 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095724793 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102429951 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122593028 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.090142311 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093364788 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.125804042 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101280856 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097489183 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.118801258 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096166996 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10383731 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123005968 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100394664 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090855382 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.110019324 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096902738 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090428544 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098048034 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122302361 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095902354 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114023363 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102579256 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101346475 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099312515 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.119516002 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.0916985 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103560124 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113155539 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100698601 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090075472 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109068451 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101061981 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101883792 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095077625 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117189103 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098157288 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098366095 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.113123478 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095343606 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099248696 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120104598 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102684457 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095452247 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114780431 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10053235 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106445164 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.117721213 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096845436 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103207438 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.122203295 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098766188 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096032706 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119161915 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103984107 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099871174 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102908578 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115199079 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095849525 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103522801 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124472774 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105983043 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095120278 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110630987 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101340626 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094436643 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.111239491 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.101047307 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104556404 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.123214977 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09735308 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094680995 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126286819 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104146837 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097305682 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.115387234 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095739744 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101536379 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113838275 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101562496 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093268177 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103870645 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.125169568 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103005873 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104476047 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.112218966 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10255867 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098910861 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.125206452 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099390537 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091068427 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.111410888 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100526936 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104118528 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.123391861 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101714723 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100017641 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100742145 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.118639256 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097524203 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094134857 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.125449416 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103151042 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098392751 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118290704 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.097464422 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096980121 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117754096 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104131654 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103542055 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11762592 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109695916 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103979367 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115142174 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09631711 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098100943 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10025919 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118397615 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10200876 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09397793 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111821981 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104490083 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104242327 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116778399 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104937942 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104320286 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11492182 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100740712 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105974005 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121941321 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101295098 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098182998 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100766945 seconds)
  done (took 62.7779265 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154708316 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105347646 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119580316 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099610789 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116572357 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121962208 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099498113 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100065184 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121373312 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109447187 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099124963 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119647271 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114971622 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140066477 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117382255 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109454059 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119316708 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101128891 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099520733 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12005498 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114853786 seconds)
  done (took 3.271528083 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.123368414 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11307102 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130346112 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113853426 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106142725 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131914948 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109707526 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131695566 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114528873 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106865268 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133424652 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11038814 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127623511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109152018 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107569649 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128585066 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114294352 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105746158 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131892907 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111125694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127039219 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111021921 seconds)
  done (took 3.466553015 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.137482086 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102481097 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097799225 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119782908 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102717561 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098899728 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122034245 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101512298 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108615582 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.11439508 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092110738 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094144215 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098699366 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120077534 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094094351 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098724193 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128717208 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103150048 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103564315 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118274008 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092473325 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099066971 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099509613 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.112320429 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104786479 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103807714 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119463328 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104477508 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090416547 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10125824 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.12094817 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09529756 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090902789 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111782688 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092366641 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102772753 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.12159646 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100375348 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100680687 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091070492 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.121232289 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10512937 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091916321 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.119964156 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101480433 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093210056 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101608085 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.35308423 seconds)
  done (took 6.169841522 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.137500315 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164556619 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104995181 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13771784 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136894132 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10827613 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101300433 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138615826 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100135878 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12499178 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115068285 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112759722 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128412047 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106181221 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.126548612 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106159385 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104853378 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121378707 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108926419 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10375183 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127914901 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107099027 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111628129 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132080606 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106333069 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102504719 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124207552 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106283126 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111088154 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129976753 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109168809 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126602518 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115626274 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101912538 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122816965 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10500952 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114211857 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124879623 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106019627 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100326021 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124665979 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107236823 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104436608 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135602747 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106127246 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103792291 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125981693 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101987809 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112739997 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.126741305 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110479684 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133313963 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107100031 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10443421 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127437895 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114714276 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102846338 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.123457595 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10593046 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111368068 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.122800062 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.1061915 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113225299 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.124707236 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109043814 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134613575 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106681634 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104998613 seconds)
  done (took 8.895553431 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.141401938 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106922315 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135925202 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115534632 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107102652 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128232408 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107126621 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106050579 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12908391 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111703303 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126659682 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.226145784 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126449972 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111954012 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127734249 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10843517 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10755077 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128884095 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108680274 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107301767 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127954416 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116499871 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107443581 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136877921 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118150436 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124370211 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108365256 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107683408 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136325411 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109901854 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11749235 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128989747 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107667543 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135673303 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119670444 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107223492 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123591178 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109334112 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108384656 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129956066 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105759317 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115128918 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129414162 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105650019 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107784459 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129706871 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11706942 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139307493 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114838888 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111842854 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129093799 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116555543 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127477163 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108663453 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11616626 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144215232 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115674261 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13653585 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109479354 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115393991 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137482816 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122743549 seconds)
  done (took 8.388625803 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109720137 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101329636 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100177575 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122181559 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101819296 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100323361 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120891591 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101785022 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101654157 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100316615 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123640841 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101532243 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10122503 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120714005 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101459943 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101287202 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100203779 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121256384 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102952745 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101270138 seconds)
  done (took 3.020747483 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.120032836 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119340402 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123529523 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110753593 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102576743 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128257999 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10391459 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103479752 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103498767 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125152029 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112035256 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130670009 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104537272 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108870483 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132280117 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109698866 seconds)
  done (took 2.723092446 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.13180811 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12141656 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.212861841 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105650203 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125883864 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111523793 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103686411 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.12872315 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103354312 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108401886 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.130118607 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107713088 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103461228 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.125588064 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10473986 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106664683 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101666128 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129720771 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105229659 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.216833524 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107207695 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104538278 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127917607 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108983784 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103211737 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.13085049 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110158514 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102698731 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127580525 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104940378 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105701682 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132734134 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103193485 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107507088 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126516611 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105819666 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105029054 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.124947069 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108146071 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103764 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.125474747 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106655635 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104283038 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106026087 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.125729263 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106567074 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103134076 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131352741 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105731445 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10465349 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125514867 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111307894 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107921607 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132439946 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112025792 seconds)
  done (took 7.333522854 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.12356733 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105605385 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135364941 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104492641 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103973026 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104597124 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127838773 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106066986 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105817916 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124993426 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106774511 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105704173 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126849031 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106225025 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105076228 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12591244 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102909529 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10443486 seconds)
  done (took 2.919278347 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118041026 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104862948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106861629 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12580725 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104086356 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10324013 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124006776 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103396792 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10276188 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.125427814 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106568255 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104026791 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101513095 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125494782 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105634109 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103373838 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124959274 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104653937 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103686944 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122703682 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104825993 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103702113 seconds)
  done (took 3.322985576 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.12556218 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.214822379 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110750747 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.222642493 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100481968 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122656058 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.1122271 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101311469 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140407351 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100961984 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099383355 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.121620638 seconds)
  done (took 2.465928247 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13939585 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141726851 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126866092 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105689246 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112834199 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131469556 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109249219 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107662165 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139051146 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120150807 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130138707 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117759182 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116159398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139490308 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113168846 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133904224 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109314853 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108320391 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125504235 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125173682 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108720349 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139780663 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109325198 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128716741 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109677403 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116273655 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137592398 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12153708 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107959687 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139690725 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113460322 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129548801 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117610073 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120429716 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12736354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116936403 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129491309 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124353739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112794424 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138583431 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105016781 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114660175 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140187306 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113178718 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139316879 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109732519 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114670775 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131664917 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108769678 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151322101 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114933536 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116911171 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13601896 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117980096 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136901215 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13042188 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141389466 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117909194 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113138888 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142867362 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115908359 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135535293 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117727703 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141330682 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114496827 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115983666 seconds)
  done (took 9.03524365 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15259018 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105826431 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131031598 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120853653 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137462969 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110436111 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109013626 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129709004 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110058559 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106105528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172479691 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10927227 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138902691 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118842607 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109475325 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129638896 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111215947 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1171427 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129594643 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131828716 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130441998 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1185935 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116836998 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139236689 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120478268 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134527412 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110124883 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108642854 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1317827 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110202164 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114616179 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132475399 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118091516 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12629303 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11936809 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109105351 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130701007 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114365576 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109494136 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136705031 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118366052 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145537676 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111018372 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109670402 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142016291 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110138914 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109830449 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128967887 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109357285 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105406144 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142733503 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119267026 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14277364 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118374209 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130442426 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111293445 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109173271 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130444897 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111623701 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113636256 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139163398 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110733663 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150944209 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111346654 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109808252 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140088883 seconds)
  done (took 8.998849055 seconds)
done (took 171.303900115 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.187245011 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216093581 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.198157767 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158982905 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096385935 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153602773 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12960811 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200560159 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.097439357 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096325133 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.117716504 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.100025783 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.164264264 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096240208 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119454071 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.100016731 seconds)
  done (took 3.128561533 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194471897 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.337865717 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110895707 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.123193561 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103225394 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101083215 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122402688 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102773489 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100949186 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131108469 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103111398 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097371574 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131073232 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098535833 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100575715 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12296963 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108837284 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100150614 seconds)
  done (took 3.200866533 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.130755723 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144601876 seconds)
  done (took 1.187133913 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.140826048 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218428198 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285538464 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170974285 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121551507 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.143801278 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150961003 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.1339522 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190818816 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136269422 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.1142552 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098523749 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149653565 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107983168 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139749241 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100580571 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129697813 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136766448 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115791811 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102652182 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146951396 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10556375 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.107301304 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137622059 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182093384 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136221287 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105220739 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104134732 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126888499 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115175119 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.129204801 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120918435 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112750785 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181637068 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104490272 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177540354 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130347249 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.103201809 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114736062 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122406485 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106301887 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105156953 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136442713 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100100796 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104464885 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131740732 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106553367 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103405633 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132874119 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109625059 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130991807 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108907633 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17619209 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109486645 seconds)
  done (took 8.020644262 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.885046573 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143971089 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101146492 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.023946067 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146549087 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115915467 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.864478772 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147562583 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253966576 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.896311162 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116639378 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130773961 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242159263 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257584916 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.290433178 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360640145 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.729283166 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112948416 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129446809 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164209611 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109018792 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147540171 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122237546 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517630064 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102292175 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121744584 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111078003 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109172669 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177702942 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102688185 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127451865 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173475776 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.292649597 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21013947 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124025734 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101699206 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101206322 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186198229 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273832548 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220864455 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.194420336 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098974083 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100683419 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130821146 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121871049 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098992108 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18013737 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193397111 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189435709 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107720253 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109862024 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134446179 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108283935 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178252187 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098924248 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360066713 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.384664064 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102155514 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109292481 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137107299 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270050522 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102357879 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237554384 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152021454 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219520501 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101224255 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835776312 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186899046 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102225548 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127701757 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111157522 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107744185 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12978755 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169034332 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.49920822 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110589966 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126995728 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102715088 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235152358 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101927952 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100595239 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181017101 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104072224 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132104143 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111900865 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132671903 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16643792 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269835461 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137809349 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111150555 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107264517 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137901134 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103379005 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235310533 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230098347 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177164881 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208955941 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133745794 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178335219 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163836787 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128837963 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166005431 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130999551 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113790075 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13164169 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229158667 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.13457298 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126148484 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108781374 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110663581 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159498812 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104962442 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133284642 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165724726 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554930513 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185717297 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099356608 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127675798 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113315954 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180124172 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109853416 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264756004 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111014917 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186703876 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130752771 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.101146277 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110771558 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.18120158 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109109215 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134463597 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109238091 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132534478 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258464125 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221428678 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1336538 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253966121 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177275643 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131107561 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1694034 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133359492 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189530937 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113740768 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109187179 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125654096 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822652318 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117946656 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131555625 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109343693 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183354583 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125460228 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104215321 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100797922 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122642079 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820913402 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105814718 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099914626 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12531284 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108467617 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10945447 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133028998 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108018541 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180569999 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243919033 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11118657 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13231394 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102825043 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182128231 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103055528 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102350509 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126006683 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103103167 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110223405 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130743302 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104948818 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19189159 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175190033 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234967603 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.656859291 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103076579 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102549456 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.265012737 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104184948 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328223459 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110539438 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.258046751 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162771929 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1228436 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364243554 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184752151 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185413698 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105350776 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19116623 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121189971 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11273582 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177748165 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103527175 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109908566 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178722248 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113643335 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1359774 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280417455 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102038216 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251018833 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099810828 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188757609 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12504447 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109012685 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328559689 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101903223 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139941045 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178675797 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109422206 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10340531 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.625638739 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102951025 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139146687 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109059479 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234881226 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184130635 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110748611 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135868659 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112597283 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180620668 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232513591 seconds)
  done (took 48.015018092 seconds)
done (took 64.457379567 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277368649 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178617703 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.282782479 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181693663 seconds)
  done (took 1.929440412 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.284793138 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162952466 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.257135516 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099823822 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.263647673 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099024382 seconds)
  done (took 2.10462077 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.19205217 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172364337 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150019912 seconds)
  done (took 1.452869965 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215096626 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.217920729 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.332089187 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.235215089 seconds)
  done (took 2.023809824 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.302361096 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121156611 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.129745727 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.239402962 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254951856 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.212473519 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126311357 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.179865961 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132230021 seconds)
  done (took 2.687834531 seconds)
done (took 11.134902366 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.29062387 seconds)
    (2/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.365562714 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.293096554 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.258225561 seconds)
    (5/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.32737558 seconds)
    (6/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.144471413 seconds)
    (7/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.316026144 seconds)
    (8/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.233904236 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115923423 seconds)
    (10/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.224627281 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.216393242 seconds)
    (12/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.382889598 seconds)
    (13/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158309937 seconds)
    (14/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.400379723 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.19336036 seconds)
    (16/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.292429797 seconds)
    (17/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.187408239 seconds)
    (18/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.22968977 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130501457 seconds)
    (20/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117963193 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.147480582 seconds)
    (22/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.197657874 seconds)
    (23/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077376478 seconds)
    (24/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.370940249 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.144818956 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.193349789 seconds)
    (27/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.105486341 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105341109 seconds)
    (29/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126738714 seconds)
    (30/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111147446 seconds)
    (31/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.157055216 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.239673958 seconds)
    (33/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.205727369 seconds)
    (34/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.086781925 seconds)
    (35/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189472693 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120275675 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113274204 seconds)
    (38/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.136394616 seconds)
    (39/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.159591156 seconds)
    (40/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.129925436 seconds)
    (41/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.228322913 seconds)
    (42/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.150803396 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.104348404 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.128607859 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.193301502 seconds)
    (46/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.131106896 seconds)
    (47/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.178500133 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103249836 seconds)
    (49/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.264943033 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104856332 seconds)
    (51/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.214515443 seconds)
    (52/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112666541 seconds)
    (53/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.216725338 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122213307 seconds)
    (55/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079514069 seconds)
    (56/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.233551583 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.103997349 seconds)
    (58/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.171529928 seconds)
    (59/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.134439681 seconds)
    (60/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107587047 seconds)
    (61/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.146668556 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.257357609 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105449251 seconds)
    (64/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.167777821 seconds)
    (65/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11294525 seconds)
    (66/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.297254816 seconds)
    (67/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.199771009 seconds)
    (68/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079965825 seconds)
    (69/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.112271051 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108571942 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102905396 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.147790303 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106611964 seconds)
    (74/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.20271168 seconds)
    (75/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.167630928 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120361724 seconds)
    (77/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.08110307 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.134587525 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.127312532 seconds)
    (80/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115886867 seconds)
    (81/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.146771433 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148138345 seconds)
    (83/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085503308 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105152948 seconds)
    (85/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.135923123 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.109015037 seconds)
    (87/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.133424704 seconds)
    (88/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08605398 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149584895 seconds)
    (90/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086043592 seconds)
    (91/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082205282 seconds)
    (92/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.143469195 seconds)
    (93/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.108351527 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106059152 seconds)
    (95/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085572344 seconds)
    (96/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.136349456 seconds)
    (97/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.198426023 seconds)
    (98/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142249707 seconds)
    (99/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.30867609 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101609182 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.136319211 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108766048 seconds)
    (103/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08562125 seconds)
    (104/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079500042 seconds)
    (105/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.133282187 seconds)
    (106/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085466455 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104495708 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.147272338 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128876768 seconds)
    (110/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101552075 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.127572712 seconds)
    (112/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.133028348 seconds)
    (113/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082478239 seconds)
    (114/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085716344 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.22212718 seconds)
    (116/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086007825 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112157001 seconds)
    (118/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.10609281 seconds)
    (119/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112053203 seconds)
    (120/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.132441554 seconds)
    (121/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.136937237 seconds)
    (122/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081229084 seconds)
    (123/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082097855 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08020244 seconds)
    (125/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103421953 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.135128132 seconds)
    (127/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114433538 seconds)
    (128/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079049988 seconds)
    (129/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.085598499 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.128366706 seconds)
    (131/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080391734 seconds)
    (132/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136304296 seconds)
    (133/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.108891193 seconds)
    (134/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111608499 seconds)
    (135/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081055547 seconds)
    (136/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086707972 seconds)
    (137/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.08614032 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149923439 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127117117 seconds)
    (140/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.272875807 seconds)
    (141/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085940765 seconds)
    (142/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.144036018 seconds)
    (143/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.130075129 seconds)
    (144/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079782417 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102902891 seconds)
    (146/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.135050137 seconds)
    (147/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.103969852 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115189765 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105496146 seconds)
    (150/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085760532 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.128309244 seconds)
    (152/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082220375 seconds)
    (153/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083385231 seconds)
    (154/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079057295 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.129299945 seconds)
    (156/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115237555 seconds)
    (157/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078718292 seconds)
    (158/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.082077277 seconds)
    (159/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.108841789 seconds)
    (160/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11327441 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103161437 seconds)
    (162/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.12800381 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112842291 seconds)
    (164/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112059256 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125631807 seconds)
    (166/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109806492 seconds)
    (167/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11320195 seconds)
    (168/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079398772 seconds)
    (169/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081317799 seconds)
    (170/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.079183226 seconds)
    (171/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.108739505 seconds)
    (172/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088021345 seconds)
    (173/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.085557079 seconds)
    (174/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.102585631 seconds)
    (175/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.110298175 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.082232494 seconds)
    (177/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.083133597 seconds)
    (178/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087642903 seconds)
    (179/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079723693 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.14846973 seconds)
    (181/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083810254 seconds)
    (182/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079853595 seconds)
    (183/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.081329563 seconds)
    (184/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082273087 seconds)
    (185/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.140303298 seconds)
    (186/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.081771714 seconds)
    (187/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082434384 seconds)
    (188/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085768451 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.105027425 seconds)
    (190/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.087699258 seconds)
    (191/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081386391 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087672603 seconds)
  done (took 27.490703257 seconds)
done (took 28.436379827 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.236012204 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129708924 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114033917 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112179109 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235370122 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119952582 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153589951 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115573097 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123806119 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138463125 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104585612 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125725233 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138177041 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205730837 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.140564277 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106191927 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10385352 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148945448 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129615878 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129339462 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.235087612 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105707844 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.149052843 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105566755 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235769522 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107541317 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112253284 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140150875 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126912256 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113587626 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139378553 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105686156 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129175719 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153037503 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105586927 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113401815 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126915021 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087643907 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114269167 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114236758 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150712296 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.117640634 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114043202 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.130163034 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115818145 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113097225 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127691315 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117239047 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101916942 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.139078022 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107745502 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128426073 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.13647015 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104860668 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103076207 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.12870357 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125035713 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105140417 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.150870585 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105308112 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105788478 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104626199 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.140009525 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105665489 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112686668 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.129238837 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114758697 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115012726 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.135924839 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108918933 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10432021 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.135814638 seconds)
done (took 10.249294411 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.117347101 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149006045 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.235740807 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237742419 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132845656 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146409369 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118553775 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12882618 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143362253 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124557513 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.167092151 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.137261206 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.242471158 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122066812 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120368199 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142334941 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116703653 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.114131843 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.237947277 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.153253467 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.130600173 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120531121 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155945652 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122588995 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107804659 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.167501204 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113170962 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.139385832 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109599068 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118011552 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153166777 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109218799 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11229796 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.15009016 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127185756 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119662656 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.144166149 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118672662 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110229539 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.132339084 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118551308 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125021166 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.133740966 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.122605693 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116357799 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.147148308 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116364814 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121497301 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.134209608 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118622066 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10924831 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157864935 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.122262115 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124894453 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.145410136 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122240906 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12244715 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.145748581 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113087784 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121309257 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132437779 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109943359 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110073504 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155426798 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112146757 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.145597568 seconds)
  done (took 9.929022257 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.136299977 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138711825 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143307859 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120807474 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113712381 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126677276 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.1032193 seconds)
  done (took 1.867159839 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.112352206 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.245246425 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219874753 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.244526889 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.242855347 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.256050089 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128573432 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104114773 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165561716 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.11470155 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247503245 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.274771459 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114299021 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.146383448 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.224465636 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128630299 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.222750047 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.131662137 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120088614 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.248576514 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122069274 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161659316 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119053216 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10549352 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.241509707 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105185468 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.293073354 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149268274 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115699818 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118893309 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14571615 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.185833612 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.244006109 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119034232 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138994649 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.245641597 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.217233134 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.145142592 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.259205992 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.110577101 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.242851367 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11989711 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.12044893 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.14601057 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121189891 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.233394039 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125998061 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120918208 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.14450877 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.225232578 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.143417896 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.244321028 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118074975 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119491389 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.14143424 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121821857 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127715313 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.145928598 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.226694307 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.149019607 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245493153 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.222470847 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.246476846 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.248237538 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129964316 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.24862642 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.233512201 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119272152 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113389204 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.147555416 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.249527536 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119766333 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116583632 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.239877583 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123492691 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.251243382 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.249344283 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117563143 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.142150732 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.109354327 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117789486 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.105925435 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.241669543 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145648678 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119786676 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12412185 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144208982 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120922746 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109920704 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.156130693 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11964546 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117909166 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.148877488 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119377735 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146761501 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.228178988 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.14251623 seconds)
  done (took 17.251408243 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.115197896 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107112418 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111505472 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131692022 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108285318 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.107145947 seconds)
  done (took 1.694696921 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.150651716 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12097875 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153301069 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121800506 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.192141274 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.229401598 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.26102009 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113883087 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167189934 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131491319 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255214506 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257822161 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.257380234 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12469447 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.25981135 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12185175 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.264804288 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118702015 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.154792195 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11832406 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119907482 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.150623513 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11859931 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246346766 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121474626 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122648322 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140752011 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128552037 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153029368 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.116397328 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123804633 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144577332 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.132763776 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113629606 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.259542133 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.11300053 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143017692 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123247065 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123358806 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146927271 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.258599301 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119005164 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126826117 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.149356416 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115694983 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112415984 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.149792584 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113724442 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.261757883 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123578136 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149274742 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121963626 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121963435 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.14874118 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113742383 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114290483 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.148390487 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.236527291 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.151132822 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113128356 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147455738 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12257223 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114653373 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.151055224 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122265751 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122668781 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.138785723 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122959774 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11803002 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146460005 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123630478 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121161786 seconds)
  done (took 11.934345365 seconds)
done (took 43.654291859 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.531632021 seconds)
  done (took 2.543602822 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.959325329 seconds)
  done (took 1.974286144 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.514962739 seconds)
  done (took 18.561280088 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.441088791 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.464037653 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.123592153 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171370842 seconds)
  done (took 3.216956271 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.83052543 seconds)
  done (took 1.871246713 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.336578737 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.243078304 seconds)
  done (took 1.60071543 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.720496954 seconds)
  done (took 1.758145993 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.531845181 seconds)
  done (took 2.554708742 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.297733206 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.244478279 seconds)
  done (took 1.58146377 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.652105789 seconds)
  done (took 1.688012507 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.589870668 seconds)
  done (took 20.628391018 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268143411 seconds)
  done (took 1.306407455 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290126471 seconds)
  done (took 1.331947658 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.427397424 seconds)
  done (took 4.465615301 seconds)
done (took 66.111334032 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.123062978 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119598704 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118694629 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142038982 seconds)
  done (took 1.531839486 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.13320452 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120614946 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149284226 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120811259 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126095928 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.14565487 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120633973 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122566272 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11964511 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148020356 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120870206 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118707638 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148528884 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120390126 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118419425 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147864648 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122970925 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120051036 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14638986 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121603747 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120280615 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147707433 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124496772 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123418421 seconds)
  done (took 4.150189864 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.123105097 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110778986 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112480471 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134610675 seconds)
  done (took 1.525647388 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.134851061 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133360795 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153744098 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129397928 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132783998 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156269 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119891405 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116903791 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145098726 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.130211223 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135861869 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159437423 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133627574 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.147412263 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.132626779 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115531134 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120770664 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15715296 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127599102 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.15458712 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12373611 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126464496 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149985171 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130591999 seconds)
  done (took 4.308682964 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.20284718 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.13186563 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177253187 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165063413 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.180456651 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119430684 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147374796 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.152080578 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126810992 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.149035383 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.123914694 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164605432 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150850233 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122719208 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120320701 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.151809909 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132507455 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.151847467 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.167054187 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12587269 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152604844 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.13352977 seconds)
  done (took 4.296888155 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.129897495 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110940798 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.132053991 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112065416 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123388815 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.13916794 seconds)
  done (took 1.79611198 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.116310413 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105348064 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105341413 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129669546 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.110112289 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104949994 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128543 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.107191891 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.108358724 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105926921 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129853726 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105748573 seconds)
  done (took 2.403578545 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214990738 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147973676 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28432371 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.509368157 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191281393 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163769247 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.313537579 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190153657 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.18180021 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164864022 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189089964 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191075825 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157431947 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216086259 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142772034 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.186567712 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171292174 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238020606 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169848777 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244549889 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160540973 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205486379 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193914494 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180290366 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142071825 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191945349 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122229259 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129396584 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197517446 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194290592 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179576279 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178881055 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144163263 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220806574 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264504835 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209677985 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274026903 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13538702 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.194926347 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.193734502 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262488753 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168775442 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220442362 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154221338 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130278792 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212322935 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179966613 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186826898 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.160641766 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147422378 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213512826 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181655381 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198538995 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139331194 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330712191 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161321534 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145071043 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240128005 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216821187 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204676529 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207132651 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124332828 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206032108 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219385928 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216564461 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170132739 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19415207 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127464853 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166276603 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235053181 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211736405 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160318196 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.239855378 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162023152 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173757466 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197220956 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157484085 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235541912 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199936515 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122028377 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178749694 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137063804 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127520606 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.21790965 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123104218 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244597775 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135534178 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341145606 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210545665 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157204158 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189853599 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188877933 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165908507 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175065769 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103041626 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145425049 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.191400574 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160144746 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156455386 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158187642 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166462603 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129849463 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153528024 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.15001189 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170959293 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.161712204 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166101972 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19815552 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.133130582 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207145292 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151025617 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.19073738 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170221811 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223373714 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159181534 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136103549 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249752134 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170911066 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.164775984 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175586226 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225795452 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175386891 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138707363 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193148681 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19500372 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170825748 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201510528 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165977279 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136447959 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169071639 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174149478 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189147213 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160913532 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156047578 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.167500798 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220469984 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128421789 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16882871 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184610285 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163034703 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126012544 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164223506 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138865126 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.143509918 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.176192658 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140633478 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182566847 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16818343 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193962342 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159279987 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163495721 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20054247 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135205507 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169774882 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17659422 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120881292 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.203960466 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224063282 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132976084 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181144725 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190968187 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212925353 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173078452 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159906081 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184576424 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156857487 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121837962 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190400693 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170039637 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193544419 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.21566394 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183358112 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.192523535 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190251387 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152705928 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199636264 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185310159 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185802669 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.145979342 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199808116 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171779928 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.148748326 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124852844 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128669337 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16554163 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13268899 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165190769 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183479489 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194870417 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206167044 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169224736 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166821622 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193432004 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.154574373 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161393192 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204308413 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141628165 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.216823302 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219904674 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18127859 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170092975 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164662289 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.148155906 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128793401 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.1339316 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189256386 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140180596 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163935271 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143445787 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220496665 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17441051 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178480376 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219461042 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168414007 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227993021 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122056283 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190916018 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170966289 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196754901 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184690731 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159113693 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.163477667 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221209349 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143837652 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22106562 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196813171 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182486395 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224531099 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.190877766 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133530561 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148981249 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19015661 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138959032 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190502432 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147270781 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158126346 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154365017 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.164597031 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143350188 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217719001 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145086068 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207935608 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.159236188 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202881335 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126460191 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171692528 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177393525 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176077133 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106586058 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19994415 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221223535 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15304431 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184064248 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175198069 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157620934 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.321012945 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21716539 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179516482 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164474368 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140149758 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201206245 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161429001 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193299196 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186497706 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170222996 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236762261 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171407679 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.170888859 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134057179 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149592053 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180170063 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.14039476 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180851222 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.188022353 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147504479 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220334645 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139208557 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197958408 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179605308 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.173635021 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151866186 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140260265 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254625184 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198479363 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174116355 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.194301365 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194985791 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186597243 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125332715 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155957037 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134625037 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214110125 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1317619 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206797578 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.205362651 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186888333 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204678872 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189677932 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144082856 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128207566 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195665705 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151301529 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215926688 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161259472 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.140319822 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21786887 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129748454 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130842635 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18985239 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315997172 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149911705 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203177193 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107507201 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312504755 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132205102 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134239018 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192167454 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171514796 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.162815176 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18267556 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202407088 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14306106 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192513837 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137600287 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208808419 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213185705 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171480826 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207258954 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.148176614 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193217818 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16333438 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204095411 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146647873 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.177177693 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161011145 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224234236 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205719337 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133331119 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196953861 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172310935 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199582487 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180315573 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168010186 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184164316 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15670465 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168113893 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167701019 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12757358 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189313488 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.179640183 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158742199 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178666319 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199658549 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131810424 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157140054 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149741377 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194459659 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143626887 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130518633 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215658491 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.1583232 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184617686 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24092406 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130586855 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196562765 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147499041 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158342691 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140521892 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145218941 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160934713 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17447557 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211955961 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13282243 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207645205 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167023066 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195260272 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159259115 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174646605 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.265415934 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.159340274 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193085146 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181195403 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227147046 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152430812 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204997762 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171091616 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179486445 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166387375 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177840054 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.221458631 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19512516 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168649429 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161561732 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144836659 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141300893 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163446501 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154090089 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198660571 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143697844 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.166340511 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168958602 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176622279 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.150062316 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170052468 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202069546 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180341028 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190876872 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216608813 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139100582 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206243727 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206639425 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129978968 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.195915397 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174884251 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175117495 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154108418 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.162004722 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139887643 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243094861 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126818208 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189664492 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175428393 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198576219 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173407635 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.163244761 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182078776 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170224501 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178132386 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155161694 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.155341792 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200236574 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137556628 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128563725 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202271951 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163722314 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194080862 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143127752 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.202204632 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198201931 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.152647941 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136131484 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312357241 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164098938 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224812314 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137453905 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167425492 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148773924 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189938461 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165465068 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200859219 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.133348998 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130624872 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.175732141 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157585561 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.165192861 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170418079 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216708847 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190416533 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18882737 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135284397 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281609722 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143835769 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200432943 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116564837 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.158337189 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143771489 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13664411 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17157181 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211689126 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21824408 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.191783278 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150797109 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165524287 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128261987 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.614208695 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194226759 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153437732 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198536997 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177150036 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.1050087 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142334609 seconds)
  done (took 87.050138072 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169985815 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152798501 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.169064948 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222949864 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196750851 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291231186 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230698347 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246567031 seconds)
  done (took 2.818472446 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.126765481 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.16004617 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143272079 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144182245 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111937659 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.485580543 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159450965 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122203998 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163581519 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154092974 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136259845 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.565358545 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119546613 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145892138 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123607598 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136099834 seconds)
  done (took 4.123601572 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.656839678 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525189657 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.878765624 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.275389133 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.262732774 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.207112741 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.744385449 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.203738453 seconds)
  done (took 11.885546347 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.162264339 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.153950101 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.441759135 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.282451262 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.208827083 seconds)
  done (took 2.390719796 seconds)
done (took 129.31615036 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.133331826 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126057836 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12555285 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154799837 seconds)
  done (took 1.665941933 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.202274033 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092565305 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09426919 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.11875436 seconds)
  done (took 1.648335174 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.473441829 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092176463 seconds)
  done (took 1.733834595 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.161065888 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138903883 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167523146 seconds)
  done (took 1.621225785 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.152172478 seconds)
  done (took 1.292025917 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.133159413 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132919478 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.268701449 seconds)
  done (took 1.681790603 seconds)
done (took 10.788716189 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128362288 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.927104529 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433563539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136632564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712942245 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428224187 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.403177853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178116821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176817043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13850638 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135418683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690980373 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.413233665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.874843213 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.370453144 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.904148294 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696417672 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113836913 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147174025 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114650174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.372360888 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138404808 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114111318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113322065 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720403942 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422736303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112025878 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.915516095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112467132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116275196 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428564913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11401103 seconds)
  done (took 20.936345177 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121776284 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171187738 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148464618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114833388 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116028234 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141419675 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124755483 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124720517 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205586803 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113229216 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161997443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113751648 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11868664 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140609375 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138293652 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112235683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143105261 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116500699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120720433 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141243041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135668116 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111077254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141876684 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116388352 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112230608 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161227288 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113278216 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124749487 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140208284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117530697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117033219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141768671 seconds)
  done (took 5.374142726 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.168044895 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179682407 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151089975 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15309141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190148122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115621531 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22757579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152249498 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206692663 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113896558 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134494667 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138961335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154548337 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114294418 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165901423 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114238855 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116289796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142369684 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122419736 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115075025 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162372225 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11245149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114819737 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143073069 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113749347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16137318 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115051787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126489733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138659968 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119304626 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117983534 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140859234 seconds)
  done (took 5.6927798 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.134170088 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12796771 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134652506 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164514597 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123100542 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125672991 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156229993 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123446669 seconds)
  done (took 2.239022258 seconds)
done (took 35.391046901 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.146175888 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131916791 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134340058 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.156731147 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.25693698 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122010165 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130896722 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119294629 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.157154756 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13461654 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111857223 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.149610253 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132923586 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124045389 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.258922252 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.129316056 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.263662842 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.260690395 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121836107 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127982829 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.151366409 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234585222 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.156212803 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121558244 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.251067498 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116710343 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.251656838 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124086709 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122628266 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.144259126 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.232342841 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.156210087 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.122370053 seconds)
  done (took 6.496217294 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.250602211 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153292044 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122873749 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120593693 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123133177 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150394196 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248982573 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.152422738 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122219829 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120915246 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.149758483 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228627983 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159489527 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117330603 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123496632 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11070871 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.279655768 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.152873986 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.115012636 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094804277 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.118347268 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.150100661 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.262558777 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.147227899 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123207447 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120432798 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.152261038 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.126663834 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123156194 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123613746 seconds)
  done (took 5.712213417 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.134439402 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135081099 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.166910407 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190015625 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151479534 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162352489 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141480373 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136198297 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173130277 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11765164 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130982027 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180682975 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132740941 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125930512 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143953773 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133809295 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137273427 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144683605 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124169826 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132459895 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165324079 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132062988 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137382517 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152999115 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114668006 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123093607 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154818214 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126319115 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123676116 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.15889334 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.118838515 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118973941 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145319707 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.151552545 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.121694489 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158605303 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142233198 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127349486 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.15856484 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.148871597 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119036214 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146552903 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141634872 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170832925 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.147396285 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129649951 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127235321 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.160255711 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.114496949 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134784598 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.188518592 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119399964 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136008577 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.144162714 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.115073623 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124577476 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.144951775 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120668515 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130847695 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.146376054 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141624244 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122748566 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155740141 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118968027 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126432044 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113822627 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.143991189 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119815116 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141878146 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152442853 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.153864765 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114662495 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.156401144 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129115147 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126475893 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.156830824 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116355939 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126397605 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156353621 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12228143 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128575521 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146217627 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119876994 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132606232 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.164356517 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130790413 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127233367 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.157926781 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120484516 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.117365031 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.16076931 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118049533 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121360719 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.128688438 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.146781713 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120504145 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128517267 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.156685755 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114174494 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141128724 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148759276 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116383398 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.14115043 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147956059 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121757394 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.126350985 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186756412 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121853725 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126974687 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.157598441 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117496136 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122999058 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146388856 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117145363 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133930718 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.160037303 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124735084 seconds)
  done (took 17.311955266 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.366993247 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.346423125 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188987393 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.431583721 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130520915 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.27998643 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.344360843 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.349433258 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11538486 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180551409 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178274355 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.313358899 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.148064079 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147065429 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.348080184 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.406095281 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.177384194 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152991282 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182540454 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130709723 seconds)
  done (took 6.099118127 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.144064139 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151608597 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168168168 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144328194 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126505364 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163152846 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117046102 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13715672 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156750519 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126721491 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118186731 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161469901 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130412576 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132470321 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.161829455 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148407372 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123678796 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150715749 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138823198 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121764845 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132268129 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142023302 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125528682 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167272437 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135991558 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.128676448 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144422325 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122678851 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122681938 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.155847896 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121440846 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133011853 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152783256 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107058923 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12792822 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159980683 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.123726899 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118919266 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121548603 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.148440764 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131970461 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129261217 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153590283 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101555594 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135261731 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111209543 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.160705944 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129977889 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10771457 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163465545 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130725429 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131356492 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.151062163 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.140018872 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122487666 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.16057118 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129327189 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129884788 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.150359272 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116335451 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113905174 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119312821 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.154303886 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131822826 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127323678 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.16667257 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.134023484 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116143427 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.150029937 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120551452 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119444944 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.159426819 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137942637 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125454179 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.15179213 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129391456 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124462778 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123069219 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127392702 seconds)
  done (took 11.927365926 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.148695871 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126817647 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161244367 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.154104818 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130468442 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.15064462 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128891088 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13675315 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130338672 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164981882 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131479498 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129854546 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166800128 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12751923 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126124648 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.16135672 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130451322 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.182664376 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136453114 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144663201 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.160603207 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122619661 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129451527 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.15585659 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146247527 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128787742 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172450797 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132466473 seconds)
  done (took 5.212681526 seconds)
done (took 53.917941125 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.309119241 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.525420165 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.287149938 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.291187573 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.297886109 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.319046842 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.288990875 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.29355666 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.774453853 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.258615438 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.292612449 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.294514381 seconds)
done (took 29.418846489 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.362767378 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.269632485 seconds)
    (2/2) benchmarking "String"...
    done (took 1.589359979 seconds)
  done (took 5.036097841 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.295414306 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.285142023 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.536273089 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.279272739 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.284764686 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.283959234 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.294022285 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.28387225 seconds)
  done (took 16.4236912 seconds)
done (took 27.302324786 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.348065934 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.479539849 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.527991043 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.278369318 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.286693572 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.279040253 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.285248213 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.299933201 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.291034955 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.283694722 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.679983704 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.561263934 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.29583309 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.669545349 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.280638578 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.303678082 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.288828049 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.521037899 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.284362501 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.31959197 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.256457143 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.257118284 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.333008642 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.281508891 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.283785525 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.287111034 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.29069274 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.277714415 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.465518386 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.286174891 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.314579045 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.282894646 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.289839915 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.286653862 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.281154173 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.295729793 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.459810026 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.28283453 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.272191073 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.29839914 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.47674592 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.280584365 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.285919996 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.285930217 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.280835271 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.345891848 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.270947936 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.404427172 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.294823977 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.300589744 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.312188672 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.640883035 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.286245954 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.29595807 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.279109354 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.50696994 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.277269664 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.314523547 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.297170536 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.294937073 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.282623754 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.277697562 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.309654073 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.278943833 seconds)
  done (took 148.707345637 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.28043789 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.284364785 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.278547541 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.339523908 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.282044872 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.281086179 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.281780416 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.277906719 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.279939321 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.302738926 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.279610536 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.275624497 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.281581337 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.240525656 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.288043931 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.296796593 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.281121241 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.280915065 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.300490228 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.279994968 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.306911979 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.281573605 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.291309727 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.276319414 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.311629645 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.342528507 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.287603694 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.285171538 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.287084845 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.279376346 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.308809529 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.328171539 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.829845464 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.149272156 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.283754897 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.300508506 seconds)
  done (took 83.016982285 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.280743852 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.279500997 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.283941256 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.310258306 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.280401932 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.280863835 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782161985 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.249020845 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.4188323 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.783043473 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.279207177 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.428163788 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.278062855 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.438836744 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.277574674 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.366830736 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.287300979 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.277413158 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.294524136 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.306177835 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.2843839 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.28348437 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782503671 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.293064518 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.403983035 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.443938679 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.292897006 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3104539 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.666874843 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.27807749 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306605443 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.600907058 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.317510242 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.275150749 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.522370974 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.018184119 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384783629 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.274842047 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308622378 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.281182899 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.557053782 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.277820004 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.279615641 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.281991643 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.829731033 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.278646623 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.777084386 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.282466763 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.152747614 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.274303636 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.28014864 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.215024507 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.772783941 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.280136496 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.278866817 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.282389209 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.281083097 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.277897386 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.307281453 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.217380217 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.369163709 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.280868121 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.28354736 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305768924 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.280928884 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.482548488 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.274182978 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.295467125 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.336906081 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.383336717 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779884234 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.284249696 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37496851 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.393470782 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.279746486 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.283417206 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.285268257 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.283338264 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.391434356 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.283151552 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.913813546 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.440460654 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.290161822 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.380861656 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.375332866 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.277034621 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514947249 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.280753542 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.283763109 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901084426 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.368489756 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.278260277 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.281531243 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.281433052 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.283402096 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.913663666 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775910801 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.434347838 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.280884081 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.817895161 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.283981971 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.092840487 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.770327634 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.833373741 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.285607902 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388789796 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.447201112 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.296067657 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.286694597 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.397306863 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.285756851 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.335628045 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.281698914 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.681077189 seconds)
  done (took 379.846858467 seconds)
done (took 612.749592771 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.160429856 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.108121143 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.243074203 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.116353855 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.097593691 seconds)
  done (took 11.89881409 seconds)
done (took 13.072269869 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.463281682 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.462082767 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339789737 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.465580983 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.313673 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.474508887 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.445242224 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.299638484 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.384148487 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.358604945 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.388751978 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.33232206 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.316298016 seconds)
  done (took 19.214884753 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.571205594 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.294336671 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.346948313 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.541665717 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.328750345 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.553612824 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.594126152 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.291462694 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453187895 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.305556773 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.303561537 seconds)
  done (took 18.760892782 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.563931741 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.294095073 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.349303973 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536840876 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.329189917 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.571372343 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.606750247 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.29303199 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.456839983 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.33676209 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.30304704 seconds)
  done (took 18.815430627 seconds)
done (took 57.967026947 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.321917738 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.372959385 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.314509549 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.304586027 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.302393346 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.301208522 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.30496423 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.300084677 seconds)
  done (took 11.701662609 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.302695638 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.298947259 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.299418555 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.301731112 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.299738986 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.298913055 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.298525019 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.299326787 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.29916211 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.301603784 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.299733292 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.302992222 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.29820081 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.300272973 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.30033445 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.301523054 seconds)
  done (took 21.981078721 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.306638133 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.303323843 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.302624773 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.299947393 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.30271835 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.300647059 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.304069379 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.299106425 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.302626257 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.302917448 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.299980011 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.300111741 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.298924232 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.300679076 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.303158915 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.305245351 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.302250998 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.30216459 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.306480562 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.302623347 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.304447032 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.301047434 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.300848822 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.300370627 seconds)
  done (took 32.429724047 seconds)
done (took 67.289426211 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.290510377 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.290017331 seconds)
  done (took 5.760784712 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.360097303 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.359838371 seconds)
  done (took 3.900592972 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.299435414 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.294746988 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.296553997 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.296484806 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.298893422 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.297599142 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.298116185 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.289186569 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.28992119 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.290996998 seconds)
  done (took 14.128090244 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.291611289 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.289232102 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.291342743 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.292650499 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.282487478 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.285112392 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.28317883 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.282063986 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.283324742 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.282835207 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.286859638 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.286183596 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.283729711 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.284122163 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.28299075 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.284112649 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.283239819 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.285107784 seconds)
  done (took 24.308669904 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.296254852 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.300938849 seconds)
  done (took 3.761159249 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.41304225 seconds)
    (2/7) benchmarking "second"...
    done (took 1.325684927 seconds)
    (3/7) benchmarking "month"...
    done (took 1.394056709 seconds)
    (4/7) benchmarking "year"...
    done (took 1.379677289 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.325348105 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.306042442 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.325665803 seconds)
  done (took 10.629701466 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.303104038 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.522496075 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.681628033 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.514853475 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.283745078 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.360275273 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.288669575 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.364784728 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.363461066 seconds)
  done (took 14.846782449 seconds)
done (took 78.518700233 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.281362125 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.290136326 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.282683852 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.28961487 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.580371423 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.305467448 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.273125717 seconds)
done (took 16.467360441 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.262200261 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.264055456 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.251295598 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.268067109 seconds)
  done (took 10.209546465 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.266019406 seconds)
    (2/2) benchmarking "read"...
    done (took 1.599284104 seconds)
  done (took 5.03006204 seconds)
done (took 16.408709046 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285979212 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.288729117 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.287377403 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.288458873 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.290493097 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.29074049 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.290801958 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.291011716 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.288184762 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.290421373 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.289972616 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.288675167 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290433967 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.286373677 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290042366 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285161312 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287078735 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.288846175 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.289599672 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288752048 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288122413 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287874681 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.286000184 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.287544443 seconds)
  done (took 32.09341011 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.292645155 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.288757018 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.290961909 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.289219135 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.287990221 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.290910623 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.291236914 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.289905067 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.291771642 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.290135809 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290569511 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.288924022 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.289878271 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.289287856 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290595189 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.289967511 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.291105812 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291114777 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292256269 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.29045338 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.291153892 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288981016 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.290715123 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289488361 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.292283987 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290035218 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.293115518 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.290941465 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292115151 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.290142021 seconds)
  done (took 39.885013175 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.293141922 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.296590825 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.290118081 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.292962743 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.289637396 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.289759897 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.290509245 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.292563873 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.290677722 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.292491494 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.288943182 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.295447963 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.291739801 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.294506962 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.293330456 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.292588725 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.293369335 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.291281563 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.291097893 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.290981024 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.291369722 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.293260732 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.290913075 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.293004435 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.293678584 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.294380546 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.291650732 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.295710729 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.291819649 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.291256453 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.291147752 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.293021363 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.293004357 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.294689075 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.291158648 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.294048059 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.297101592 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.298151317 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.292499143 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.293473398 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.291803661 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.294001094 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.294282628 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.294185126 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.292886886 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.295137667 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.2902055 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.294241501 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.293227386 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.295681245 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.296505955 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.294603387 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.293726863 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.296975551 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.293240297 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.295304001 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.293243186 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.294022872 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.292702175 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.294806338 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.292675658 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.295681503 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.295585512 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.29576145 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.293127924 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.296994694 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.291736342 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.295233627 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.292439762 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.296095242 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.2928575 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.294358102 seconds)
  done (took 94.290188946 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.293896265 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286500301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.286182249 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.286148879 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287483653 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.288865101 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.28732061 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286563392 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285378854 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279602722 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281992261 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282831787 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283855321 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282801541 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282961426 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.283140862 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279317609 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276351082 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.280216047 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275982122 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278029661 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275649144 seconds)
  done (took 29.400953095 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283957382 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277910913 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.276457544 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275989122 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276631849 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.275862254 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.274223871 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.275879247 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276725438 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272600121 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268545548 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268575948 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.27223391 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269874593 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270211072 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.271973822 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271037114 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.269950402 seconds)
  done (took 24.087781159 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.269245475 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.267863402 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.267713514 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.269718533 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.27128413 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.27049928 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265646978 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265793198 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.267979037 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.266883041 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.268025169 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266287164 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.268470899 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26722767 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265113047 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.264635143 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.263664795 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263979291 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266598673 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264724031 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.266553243 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266581566 seconds)
  done (took 29.02489479 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264185318 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264284214 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.262885455 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.265352692 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.264291105 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.266438094 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.263900034 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.26538028 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.264162527 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.266766312 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26629012 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.26738627 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.268709848 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.26741502 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.26404015 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2650455 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266127769 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265878009 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265743359 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.266403359 seconds)
  done (took 26.459016894 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268082733 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267782257 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266406128 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265526948 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264199201 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.266732068 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266427452 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.266799453 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266882494 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266771475 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261874901 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26339774 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261963408 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263886995 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261601243 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264432347 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264791895 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262793286 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259451511 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261107954 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262419736 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260271275 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261810761 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260633701 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.261316597 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259898878 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266184445 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2603878 seconds)
  done (took 36.534216997 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262202344 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.259649926 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.260880291 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.259932337 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.259668453 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.257374634 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.257640672 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.25650395 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256632513 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.256063791 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.258568768 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.257834449 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.258834807 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.257574691 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258187596 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.258214678 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259266331 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.258103028 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25898357 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257166984 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.257810754 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261767729 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.256233642 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25912827 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258830465 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.258943841 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257480524 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.261351736 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255826578 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.259011592 seconds)
  done (took 38.8996523 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.2735981 seconds)
    (2/2) benchmarking "in"...
    done (took 1.277665178 seconds)
  done (took 3.694273309 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.257675522 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26131431 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.257545933 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258594798 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.259786603 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.260405729 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25839965 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259011376 seconds)
  done (took 11.218545005 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.251098378 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.258114704 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.257583969 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.258777409 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.259679701 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.248881349 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258382724 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263444897 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.253321406 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.251759505 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.255518143 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.257412759 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.25436585 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25381151 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.253920345 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255158443 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.263161975 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.260096274 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.263104568 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.260958611 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262824508 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253591326 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256782615 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.26211886 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255361616 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.262768693 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260364087 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.26261297 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254175197 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.258151267 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.253305764 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.262990858 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.261673321 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.26169061 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.260859431 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.261552991 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261721642 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260748033 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.26070875 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266840768 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262502468 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.26106779 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.257699118 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.259495367 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260884604 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.265746578 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.262789652 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.260167486 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.255049865 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.257594535 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.266664361 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253622292 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.262750607 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257546442 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.259782623 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269042424 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.26880768 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.25748803 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258185771 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.264933122 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.272767939 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.268641183 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264469014 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.267467612 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263449251 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.271571445 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269192284 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.268868233 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.262890274 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.263714855 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.263457201 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272603029 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.271698706 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.267898747 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26517466 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.265575849 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259530207 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268908226 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26531095 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.269783 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.269570799 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26314627 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265048629 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268885803 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.260080275 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.268190321 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.263975206 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.265064858 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.258106881 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268828287 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.273865295 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.26472929 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.259431602 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.260712198 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26428472 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.26713546 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.257718093 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26161219 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.26864409 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.266731815 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263821666 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26003966 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.263280797 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266888766 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264509583 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.264582647 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.270875284 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260374306 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.272484756 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.271909558 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266855643 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.263410143 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.261441455 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.265650965 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256715435 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.260879896 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.265731742 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.257985888 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.270309615 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.264781364 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260098468 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.269512001 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.262652213 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.259414423 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.25286066 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.266564958 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260331168 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.261007349 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.264947091 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258219758 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.257251927 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.255767142 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.265231436 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.252224287 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262688874 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253658342 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.260467063 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.256815767 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.257117431 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.254084781 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.259848516 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.255613885 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.257449401 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.261464451 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.265426054 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.255918637 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.266927975 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.258369165 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.257064272 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.262114007 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.261199134 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256708884 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.253074121 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.261081574 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.251081972 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260439486 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.250007842 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.263183361 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256812759 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.257734764 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257541226 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.249924082 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254248009 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.262458969 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259107457 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.261055293 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.262865958 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.26111708 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.261262439 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.252989462 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.263013525 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.252996778 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.258737009 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.263700393 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.260510151 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258351326 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.25730046 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266750628 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258509021 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259287935 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.253497347 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.261346296 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.265026112 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.262866358 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.268880959 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262522857 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.260620648 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.254482106 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.256788516 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261033107 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.254446848 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.264727704 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268218081 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269501567 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.255951352 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.261702282 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251414401 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.265684071 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.262597753 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.26797939 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.26269817 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261454647 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255774447 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266001247 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.257045472 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.265779778 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.253905542 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.262312635 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.262788498 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.263477657 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26302382 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255985248 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260791947 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.263800946 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261396623 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26196903 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.255951224 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.265621918 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.254529072 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.257846123 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.265856427 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.263044556 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.266285291 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.26769561 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260502145 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267149208 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.263943873 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.257987017 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.266386806 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259834093 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.261162342 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269168778 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.264959662 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.258383195 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270134492 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.264653774 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.259315725 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.262799162 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.270756804 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.263176028 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.257729714 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.268004097 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.264125177 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.263658241 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.265261968 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256677862 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266850788 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.267699971 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.270878122 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.256943366 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.267566605 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.258116206 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.266406943 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.260309506 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.264282829 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.263161986 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266823599 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271254602 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.264769113 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257786649 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.266348551 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.267389704 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.268962502 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258778338 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.267633562 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.267124943 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.265996543 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.264634806 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.260701575 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.267394263 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.259317406 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268248451 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.259270663 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274423344 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.280896179 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269255361 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.269772188 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.269262396 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268487571 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.268763884 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.261108924 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266318443 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265909731 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.264962434 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.264829247 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.267554449 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264183586 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.270656624 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268298261 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.269868387 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.271087629 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.268700881 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.260760769 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.269532935 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.265448189 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.267245959 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.259989798 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.268479298 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.262964677 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268337477 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.268936102 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.26497297 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27418587 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271084387 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.264452186 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.264772228 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263908708 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.261261937 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264580082 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.272283731 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.262273481 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.274161459 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.261682662 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.267048353 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.26202563 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271976966 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.27814696 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.259835435 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272921575 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.268471611 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260041204 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.264084815 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.272407321 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274244487 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.281084141 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.263101549 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.271164255 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268617766 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.27173474 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.267188338 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.269113313 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269657367 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.271562126 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273651899 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.272970091 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.265180361 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270194043 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.278201776 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.271203963 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.269365502 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.26050679 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273861361 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.278659091 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.26341923 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.268656267 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.266126491 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.271510082 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.270167118 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.272867214 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.271934748 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.269870723 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274625138 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.278139138 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273364227 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.273781552 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273277178 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280277453 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275681363 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281477255 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.26715259 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276431132 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.270457543 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268300546 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.266368337 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.267317405 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.278245988 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.264552727 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.275019437 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.27147531 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.268117267 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.271899418 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280477886 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.264865947 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274985151 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283979775 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.266122769 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275285002 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.271906998 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265267566 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.275817433 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.272398782 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.26545286 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.270950164 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268644938 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278085809 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.266017522 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.275844004 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266600287 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276692303 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.27063412 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.272262597 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.274532275 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.272064587 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.265129652 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.277289293 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272899461 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.281698041 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.26824915 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273168941 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267610348 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.277565985 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.282512732 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.270529063 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279212406 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.275421339 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.26779374 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.26987834 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.27970348 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267334241 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275014312 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265832758 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270590619 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270803683 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.27657911 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.279475037 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.276877284 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265377534 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.269851131 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27836866 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.274890152 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277472487 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270924677 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.282198965 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.271391575 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.268553813 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.278047185 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.270903782 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280421676 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27052814 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.274670262 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275681972 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.277811104 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.274373917 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275633689 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266386819 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267528413 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.283029174 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281218763 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.273840137 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.272810764 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.276449002 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.274344657 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271509875 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.278494549 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.271586726 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273037088 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.279878022 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.273512547 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.270656474 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.272396352 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277565161 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280558158 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.282874198 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.271867794 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286020939 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.285642415 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284377735 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.270215138 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.276229708 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.274093974 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.281578513 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.277626199 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273131836 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283317985 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.285553293 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281041678 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279166773 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.278304461 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.273371483 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281128082 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282122293 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.275865087 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.287223112 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.273103173 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284791286 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279168627 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.280182987 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.272165542 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.27554937 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.274431403 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.277986509 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.279905059 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275947507 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.283003547 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.277427006 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286123438 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280670278 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.277219138 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.27801279 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.271830087 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28252153 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.272560768 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.280834576 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.280285152 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.273345124 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.28196377 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282101661 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275158967 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277643999 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.283645207 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.277226128 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.274247218 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.280459419 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.285305655 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288814342 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.280650482 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272761447 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.281191289 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.282985521 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28024191 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.278675995 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.275644991 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289652224 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29289725 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274342251 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.279387838 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286146301 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.289926979 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.281292294 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.281768441 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.281490026 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.280360113 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.286589495 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.282778073 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287440387 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289699205 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.281140551 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.285297897 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.279308563 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279215437 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.285848969 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293466547 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.282341443 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277508781 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.294364083 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.292974571 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282638394 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29832331 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.289428447 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.283162712 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.286889681 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275730997 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.284463991 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.280466608 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.286170278 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.284549559 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280282747 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.284751762 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.276296418 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283501927 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.28971247 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290307956 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.283979307 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.27632593 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.277834765 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.28605326 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.283071221 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.283465873 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.283755114 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.285642607 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.283891574 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.278732763 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293818732 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.298054203 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288135835 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.284353056 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.286762779 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.283861602 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.288066024 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283641355 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288682695 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.285496938 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.288320325 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.282736784 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294232884 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.284884992 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279718223 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.28283524 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279758922 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.288618907 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.291199911 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30310623 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.290081535 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.287977205 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286508582 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.288012971 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279792104 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292680247 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286673891 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.279563796 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.281099869 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289584856 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.286396034 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.285460779 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.278454795 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.291019663 seconds)
  done (took 757.931750274 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286771638 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286711548 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284147007 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286586107 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287141797 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287942951 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287726776 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287141343 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288247124 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287616394 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286713037 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287462687 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289300061 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285623215 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288716098 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286035065 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287930675 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.28844144 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287292633 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286662975 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28807919 seconds)
  done (took 28.199006866 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.286234496 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.288425922 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288245039 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29071638 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288821055 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2890777 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.288458406 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288663794 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286156794 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287197521 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.290071046 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289954086 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.287555051 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.286554013 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288219881 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288471292 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289585174 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288917769 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.289941927 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290846636 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288217485 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.291911884 seconds)
  done (took 29.522807199 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.289576561 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.292616114 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.282727505 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.292644536 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.289119196 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.290208386 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.290479105 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.288705734 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.288688332 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.283511486 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.283037796 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.284816456 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.284833544 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.29298764 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.284388949 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.294352734 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.292101422 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.292898409 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.291363906 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.29081594 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.294723117 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.304940339 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.288519416 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.282803252 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.295079393 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.290547352 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.292225161 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.288947874 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.287034294 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.293425383 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.295834273 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.285124441 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.295069375 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.292422373 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.289709276 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.291380729 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.290820014 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.292034214 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.295057819 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.289881589 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.307094358 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.291295023 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.295356638 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.305867219 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.29207753 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287128458 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.297095386 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.29162012 seconds)
  done (took 63.150835811 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.293395858 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.294347971 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.290282989 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.293254026 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.295249993 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.291231154 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.295142459 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291434538 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.294215742 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.293251964 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.293185623 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.292658654 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294811179 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.294517665 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.295396024 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.293347611 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294532724 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.291140388 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.293873964 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.292445063 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.296478912 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.295966904 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.294909569 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.295881579 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292851639 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297072694 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295034128 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.295732508 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.295679333 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.295529025 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.292823766 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298037829 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.292983313 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.297360636 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296887218 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.294653542 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.294516132 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.295312363 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.294925756 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.294586262 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292979456 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.295646097 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.297888578 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.294299988 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.294193643 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.294747924 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294935994 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.295455239 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.296126411 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.295697929 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.296063242 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.294582128 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295183711 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.2947402 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.297618513 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.294916715 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.296258843 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.298511175 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.297596319 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.297484231 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.295297377 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.296084552 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.296117152 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.295090999 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.295905586 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.298078314 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.296657423 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.299335029 seconds)
  done (took 89.235263871 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299178593 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.297648046 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29784422 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298223671 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298199116 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.297521619 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.299020444 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.297283112 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297361117 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297457951 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299123912 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298893716 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.296362793 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.300537175 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297784333 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300346 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.296721944 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298083728 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.299111235 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29845674 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.298108589 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.299796272 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.298335881 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.298697585 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.299543393 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298768226 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297572238 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.299200522 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298099462 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29989668 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298910967 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.30139493 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.300679167 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.300815556 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.299712893 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.298262055 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298267585 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300072522 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.299527159 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.298730974 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.300171748 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301265885 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299019004 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.297761829 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29864628 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.301563124 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298279554 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.300694814 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302260449 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29935297 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.29889277 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302371917 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300541102 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.301859767 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.300757525 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.302869242 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299345854 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302301394 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301727839 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.302062194 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301384995 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.302807898 seconds)
  done (took 81.74262595 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302673421 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305505684 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.304584448 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.298947247 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304359528 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.301949926 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304590148 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.301342714 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.302058562 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.300190936 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300961066 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301415275 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304490742 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302952462 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.301427032 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304500755 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301971445 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303284742 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302982069 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.301840789 seconds)
  done (took 27.230065977 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.301837313 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30218529 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.303746428 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30364018 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.302380263 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302197484 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.301553328 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302248906 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301074649 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303177112 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304254856 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304039554 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301966163 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30251809 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301252486 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302500965 seconds)
  done (took 22.020135207 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304808797 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.305416085 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.302539292 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.304431456 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.305456291 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.305509277 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.304124334 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.306661435 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.300974976 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.306029433 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.302896276 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.305580366 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.302143871 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.304049304 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.305848579 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.30275688 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.302048672 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.304399127 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.303655177 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.301827633 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.304113348 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.3061337 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.302679435 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.307473123 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.30544044 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.306220364 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.302397102 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.308148147 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.306219801 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.306952086 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.306048849 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.30908498 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.304150895 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.311673293 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.303726702 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.309678886 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.304773613 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.308573736 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.304966276 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.307281479 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.30523783 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.306923762 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.306124121 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.308087466 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.305968128 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.306423274 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.305034498 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.310827072 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.305537031 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307220813 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.306203315 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.306526534 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.308753072 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.307058214 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.307015646 seconds)
  done (took 72.990118255 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307697391 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307139959 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305440717 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.308242114 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.307951977 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.306811966 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.309496868 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30983277 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304779517 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.308052311 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306465915 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.308335517 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306935626 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309420895 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307889875 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311365509 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.306850966 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.310705973 seconds)
  done (took 24.728630583 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.307781358 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.306209289 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.310890662 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309924063 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.307358007 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.309679458 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310019553 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.309919584 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30641493 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.306959711 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304885623 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.308431228 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307626176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.308024182 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.307392352 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306365519 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.308022042 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30794031 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.307563623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310817757 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.309654655 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311059337 seconds)
  done (took 29.967702954 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.300859935 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.301950379 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.299829353 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.313148538 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.311986467 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.302099059 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.300564709 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.298194289 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.318033945 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.3324836 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.330052392 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.311177862 seconds)
  done (took 16.9064336 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311780698 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312848108 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310262145 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309353305 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309711517 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31056947 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31050891 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308932007 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311629641 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309455689 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307633978 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31165047 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310858351 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311234754 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313573821 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311824453 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310900918 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311129153 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310408133 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313196797 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310797498 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312127532 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312437331 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312458275 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312882044 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310871398 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313241973 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312323516 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31254614 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313403972 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312725733 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314376393 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310777529 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313126842 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311359573 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31378925 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312312578 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311863995 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313040844 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309859834 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312069687 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309533348 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312531873 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309253893 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31160531 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31122938 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311861961 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311499033 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312772967 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313706325 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314196848 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314669411 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315781616 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315598679 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315051669 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316988389 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314976627 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314436764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315336144 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315133193 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31626368 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316535801 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316672132 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317144278 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316106424 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318205035 seconds)
  done (took 87.821996199 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314921604 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31350522 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313518591 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312657832 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313782139 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312994994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314920035 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31509234 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314455151 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31414832 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31535802 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315124231 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316479322 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313792214 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313113954 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312915582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314151823 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315538346 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313796425 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312345106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316701699 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313430405 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315297719 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315841868 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316898019 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316173363 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315330934 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31598833 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318323997 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318761138 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316721097 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316140782 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31548385 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31527634 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316520809 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314680165 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316362534 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315843382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317236581 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317904259 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317096129 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322125174 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315887571 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31502523 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318216164 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31604447 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318138135 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318960724 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316832523 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316039336 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318740386 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31936971 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31729081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315717377 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319245162 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315888509 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316258172 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315813011 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318558991 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316166814 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318189808 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316835229 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31987209 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317158648 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318183783 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317521504 seconds)
  done (took 88.054836827 seconds)
done (took 1786.260532771 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.470329919 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.428662858 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.310346722 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.323473665 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.304130055 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.309483016 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.318218799 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303108149 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.30742918 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.311325853 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.310218429 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.501664702 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.343671883 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.308453877 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.309698621 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.407720464 seconds)
  done (took 26.760868587 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.334434151 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.320983449 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.423049 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.322426312 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.347593815 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.499346626 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.37814513 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.325758614 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.479833866 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.341530181 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.327139037 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.33968318 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.324166261 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.325416679 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.337216777 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496805374 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.569923468 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.313679767 seconds)
  done (took 29.001332968 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.733714595 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.328011646 seconds)
  done (took 5.264539388 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.342927956 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.326237373 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.326652141 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.323483433 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.329399518 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.31207138 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.322116924 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.327492328 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.321204036 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.438486513 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.326169912 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.336639101 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.32418915 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.32401122 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.331001269 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.366860103 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.478017469 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.335856654 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.330688234 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.331610028 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.32249266 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.414753348 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.364787017 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.333238901 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438039684 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.317387463 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.329375136 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.330273888 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.443329919 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.333694326 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.32668231 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.32307147 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.325092706 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.26895482 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.866829721 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.315106189 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.345337944 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.332892172 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.332815833 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.457175897 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.328500979 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.329736107 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.318748862 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.857938831 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.424416344 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.436337076 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.318973697 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.327853318 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.327453372 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.390577275 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.327648325 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.327715995 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.383523371 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.109141036 seconds)
  done (took 84.793035271 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.339471455 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.319449892 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500319612 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.333942495 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316094062 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319107817 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.320501154 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.587888302 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.328185875 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.320659734 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.628664702 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.91922686 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.32482039 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.383167992 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.35407409 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.371919332 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321919852 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.32065598 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.323068954 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.319407357 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87981305 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321324649 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.319685277 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.396827834 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358508412 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.846239165 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.318861004 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.324645179 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.335650711 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.320950204 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.898128366 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.323049825 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.376233874 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.320927262 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.602751993 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700634317 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66121113 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.327576562 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.347599636 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.321167748 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.344258737 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.838964822 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.685079433 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.322546807 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.322018916 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.834300831 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.326848771 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.332226816 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.32689659 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.590542869 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.326547634 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.324658296 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.321537685 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.323759724 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.324834509 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.376703685 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.383136582 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.851689822 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321630608 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.319893486 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.37031803 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.323916651 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331863872 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326289108 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.325807448 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679775013 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.562700247 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.326940432 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.685565477 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.887596387 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.32270259 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976305925 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.324709212 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.33368637 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.364674525 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326525296 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.323471524 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.850108456 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.346257768 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321668347 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.663499948 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.325800098 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.619542208 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.339789749 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.320831788 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901554783 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.328233161 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.368443386 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.335419259 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.327388017 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.333235225 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.32799677 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.612439484 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.379105962 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.327673178 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.325834735 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.357632958 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324788133 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.340134223 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.331261991 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960782531 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.336492037 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.329457031 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.343560006 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.326551305 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.326161913 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.329004984 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.327010888 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.610313315 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.328437392 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.349327323 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327189147 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.327175423 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.325600301 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.406883403 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.33537283 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.626586054 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.32312298 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324977026 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.328297307 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.328993943 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.347534132 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324741648 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.342586156 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.322616503 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.627447825 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.342879422 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.338078065 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.327578876 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326348174 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.347115149 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32355193 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.380604814 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.333080956 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111564395 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.369758748 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.330288588 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.330213825 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.342976992 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331861645 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.351367683 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.328227352 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.627898159 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.612662178 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.556248747 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.323844893 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.33053728 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.131816588 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.364223167 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507773093 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.349026552 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.328531754 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.614789973 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.559710616 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.335787301 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.324441287 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.334360029 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604510374 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.332890898 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.660132028 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.925678491 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.329851904 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.331764396 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.115192368 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.140228384 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.331110203 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.33296969 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.61844901 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.342969298 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.330856019 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.332783505 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.330006982 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.327458152 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.334503829 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.339390283 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.329487128 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.330684276 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.66875745 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.524953876 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.344136784 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.332479379 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.853497845 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.347799599 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328465394 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.332658294 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.330114403 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.330777529 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.381242205 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.338035867 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.357302248 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.338334622 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.337916629 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.885050719 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.329605038 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.330452806 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.528273345 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057893489 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.331643044 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.334351609 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.331183447 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.387815959 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.88462681 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.361051055 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.629277764 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.337938396 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.372365025 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330742572 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.347257896 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.884583351 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.331898884 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.332083361 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.064446759 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.327947182 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.76727738 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.331528701 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.338220158 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976769909 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.328298708 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.336011892 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.339185436 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328576256 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.64941027 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.333164084 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.344519579 seconds)
  done (took 497.133460429 seconds)
done (took 644.145446432 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.331800546 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.329206665 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.33406103 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.337560806 seconds)
  done (took 10.549801204 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.351547998 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.344225032 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.353173904 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.338399669 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.351355816 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.340309484 seconds)
  done (took 9.296651872 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.333643429 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.329731992 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.336248481 seconds)
  done (took 8.21640212 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.53543411 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.360737264 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.67475864 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.34940665 seconds)
  done (took 9.141590301 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.350347875 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.350966265 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.352908788 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.349619832 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.35205665 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.351230391 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.353713333 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.352244843 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.35536645 seconds)
  done (took 13.387809069 seconds)
done (took 51.813338074 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.36175422 seconds)
    (2/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.315876918 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.439734429 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.40669737 seconds)
    (5/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.580768505 seconds)
    (6/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.40161399 seconds)
    (7/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.479586563 seconds)
    (8/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.313670111 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.387357579 seconds)
    (10/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.442375205 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.440070121 seconds)
    (12/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.509211705 seconds)
    (13/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.480756189 seconds)
    (14/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.644992961 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.510603385 seconds)
    (16/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.512158041 seconds)
    (17/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.412085552 seconds)
    (18/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.450850603 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.420961741 seconds)
    (20/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.366629458 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.494347728 seconds)
    (22/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.31614144 seconds)
    (23/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.318061492 seconds)
    (24/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.610754287 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.447751299 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.557279732 seconds)
    (27/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.601856909 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.342950558 seconds)
    (29/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.438670668 seconds)
    (30/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.379881186 seconds)
    (31/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.411406855 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.579754162 seconds)
    (33/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.648492272 seconds)
    (34/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.548785092 seconds)
    (35/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.314987366 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.489571574 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.411141756 seconds)
    (38/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.381708092 seconds)
    (39/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.331889969 seconds)
    (40/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.40409446 seconds)
    (41/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.325242485 seconds)
    (42/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.541673879 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.486595793 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.501029406 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.673485823 seconds)
    (46/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.456565862 seconds)
    (47/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.319008862 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.446598595 seconds)
    (49/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.355801514 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.373246397 seconds)
    (51/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.441650688 seconds)
    (52/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374969797 seconds)
    (53/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.491153448 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.465031465 seconds)
    (55/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.317655067 seconds)
    (56/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.402481609 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.444304989 seconds)
    (58/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.373554326 seconds)
    (59/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.549570036 seconds)
    (60/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.410624501 seconds)
    (61/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.587895373 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.320472842 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.43483363 seconds)
    (64/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.501846016 seconds)
    (65/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.371811853 seconds)
    (66/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.495453246 seconds)
    (67/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.329809961 seconds)
    (68/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.487204567 seconds)
    (69/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.318572891 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.452441918 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.457586006 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.435433327 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.586294749 seconds)
    (74/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.317099686 seconds)
    (75/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.462841047 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.375977947 seconds)
    (77/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.318772514 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.516827243 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.403259908 seconds)
    (80/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.381596886 seconds)
    (81/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.322184917 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.423594496 seconds)
    (83/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.50392374 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.462326219 seconds)
    (85/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.379043299 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.45493957 seconds)
    (87/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.488148012 seconds)
    (88/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.32151692 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.452902039 seconds)
    (90/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.359704445 seconds)
    (91/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.645835202 seconds)
    (92/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.532810683 seconds)
    (93/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.489328233 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.496818735 seconds)
    (95/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.685378172 seconds)
    (96/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.415353171 seconds)
    (97/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.322938957 seconds)
    (98/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.432593113 seconds)
    (99/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.424508814 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.460421035 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.375169395 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.431273988 seconds)
    (103/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.548824932 seconds)
    (104/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.405232735 seconds)
    (105/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.525777603 seconds)
    (106/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.684473522 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.465374939 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.342412061 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.425481289 seconds)
    (110/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.452383762 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.447554683 seconds)
    (112/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.522432476 seconds)
    (113/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.451102382 seconds)
    (114/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.61089539 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.343607458 seconds)
    (116/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.336734709 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.374504485 seconds)
    (118/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.635539159 seconds)
    (119/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.372934558 seconds)
    (120/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.436622445 seconds)
    (121/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.423259951 seconds)
    (122/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.322975342 seconds)
    (123/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.338813975 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.320614333 seconds)
    (125/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.393637644 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.377926016 seconds)
    (127/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.433666678 seconds)
    (128/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.474513072 seconds)
    (129/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.555797367 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.362909169 seconds)
    (131/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.436876854 seconds)
    (132/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.49602739 seconds)
    (133/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.611891067 seconds)
    (134/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.379413649 seconds)
    (135/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.424739165 seconds)
    (136/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.833695924 seconds)
    (137/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.325812968 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.478600034 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.43892005 seconds)
    (140/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.376947914 seconds)
    (141/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.339361002 seconds)
    (142/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.55030045 seconds)
    (143/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.363499018 seconds)
    (144/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.342375939 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.421753878 seconds)
    (146/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.756461259 seconds)
    (147/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.324929985 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.407304362 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.500312492 seconds)
    (150/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.679786229 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.453918756 seconds)
    (152/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.618148108 seconds)
    (153/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.546761326 seconds)
    (154/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.323599361 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.582258275 seconds)
    (156/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.425953774 seconds)
    (157/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.339411573 seconds)
    (158/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.324804818 seconds)
    (159/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.715982403 seconds)
    (160/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.386220926 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.408341351 seconds)
    (162/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.35463415 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.394161986 seconds)
    (164/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.383180595 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.464020737 seconds)
    (166/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.589704485 seconds)
    (167/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.380526166 seconds)
    (168/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.325435289 seconds)
    (169/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.322289064 seconds)
    (170/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.373182361 seconds)
    (171/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.462069043 seconds)
    (172/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.591278765 seconds)
    (173/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.462305065 seconds)
    (174/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.532495134 seconds)
    (175/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.830478811 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.326955073 seconds)
    (177/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.442461118 seconds)
    (178/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.325923945 seconds)
    (179/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.436772737 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.548247763 seconds)
    (181/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.616324482 seconds)
    (182/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.325801432 seconds)
    (183/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.328858489 seconds)
    (184/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.551997774 seconds)
    (185/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.520600435 seconds)
    (186/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.37655466 seconds)
    (187/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.445704821 seconds)
    (188/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.499454102 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.5873023 seconds)
    (190/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.592411167 seconds)
    (191/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.431006067 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.351084836 seconds)
  done (took 327.49924804 seconds)
done (took 328.720023228 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380213956 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.445713874 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.357336175 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.358094878 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358639206 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.35198568 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.378040924 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.360430402 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.372791253 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.37228353 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.351079108 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.362918686 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.373088915 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.372503988 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.39316867 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.362966537 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.35627901 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.369943914 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.374119313 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.376016601 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359880778 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358994591 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.386479638 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.363954496 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367180528 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370647319 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.365737295 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.352680257 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.361724023 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.377169567 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.350490987 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.363517278 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.37699163 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.373033769 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361689209 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.371499943 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362811293 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.446372387 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.380058448 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.370802007 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.368054697 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.379466192 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364034725 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.368686597 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.372058691 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.389201553 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369793966 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.378500301 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.355480769 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.368073769 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375473069 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.373597811 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.369002161 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.367002478 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.357173004 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.377528497 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.373444623 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378812649 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.367667561 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364384892 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.392888549 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381641304 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.373782382 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369594642 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.369280645 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.378027713 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.373559907 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.378684787 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.369142455 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364630577 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363893192 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.369568473 seconds)
done (took 107.987521401 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.4868637 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.358706708 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.519912947 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.369760964 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.531812288 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.487979608 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.370639272 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.368843181 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.369460447 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.164008409 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.370072783 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.370732229 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.363615334 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.368516438 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.485946939 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.367752928 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.368176282 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.065464524 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.372021737 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.497095536 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.362841633 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.370689592 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.372365519 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.173278282 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.359843278 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.359834952 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.497697811 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.374349745 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.073779061 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.357944734 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.357369421 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.073752083 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.49777989 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.393264587 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.381494291 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.383180146 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.533489877 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.377412929 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.490113935 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.492612827 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.520558794 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.412152724 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.354704674 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.364212101 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.373053491 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.371266243 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.372220162 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.401803087 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.358090114 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.372099331 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.071177305 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.385048735 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.382546689 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.375507512 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.374973858 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.391764987 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.375812589 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.374127344 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.504810719 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.377248713 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.492479154 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.171529913 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.170324086 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.371970154 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.362410939 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.374342422 seconds)
  done (took 110.63529287 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.435367623 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.441999669 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.479305765 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.359686585 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.416680043 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.476710531 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361644647 seconds)
  done (took 11.208254233 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.37277595 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.374009146 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.415663386 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415083166 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.375489151 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.542627676 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375436646 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.382884902 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.375229352 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.418166776 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.374231645 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374421939 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.383809764 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.367211511 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.415097762 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.38080319 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.484680679 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.370574753 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.375864174 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.521262249 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377988478 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.387673529 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.417689402 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.381183863 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.376408035 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.376714677 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.155295413 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.377597132 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377378444 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.377994942 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378102229 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.436375028 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.376239861 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.368398062 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378256245 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.483997567 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.378706854 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.375317471 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.379023009 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.37121009 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.378509301 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.377265276 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.379139914 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.379750904 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.37553121 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.39282314 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.379705353 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.37994829 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.379587363 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.380054943 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.418008397 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.378281031 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.376381387 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.375009622 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.421810221 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385456645 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.379109868 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.378062661 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.377663689 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377166471 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.524603062 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.413706234 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.380640648 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.415649255 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376515252 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.37934756 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.376589929 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.377111625 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461160187 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.380194169 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.413792162 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.379009278 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.551206837 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393542166 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376929399 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.373534663 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.37332725 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378566565 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.370285564 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.378151709 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.381465213 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.37199827 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.377245877 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381541172 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380512752 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.530183577 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476845988 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.381269875 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383711505 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.377618336 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.378981644 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.4198326 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.376872636 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.380246879 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421995706 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492460622 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.422580003 seconds)
  done (took 141.549132484 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.383689897 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.384984284 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.374851377 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.395798393 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.373354589 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.36947679 seconds)
  done (took 9.526113689 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.37355693 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.38306247 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.382795078 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.37975792 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.379813696 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.383197207 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.382886625 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377357526 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384655028 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.383279293 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.380809232 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.383031895 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.380741519 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.384094084 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.382650546 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.383442331 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.381623213 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380099467 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.386144972 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383477943 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.373137658 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.380292358 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381217122 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.373683375 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.382481271 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381486025 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396123809 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.386295083 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.382447156 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.38181582 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.382615323 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.380901266 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.379891986 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.380548558 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.387323553 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.379749641 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385028627 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.382830211 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385238793 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.384696122 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.38154633 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382056012 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.383827288 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.381779028 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.376660115 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.38069032 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.387483039 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397776214 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.383416037 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.385452446 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.384868897 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.382099159 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.385329291 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.384397153 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377193767 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37645675 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.386303448 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.385195811 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.38676508 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.376436294 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.388449777 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.38345101 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381349418 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.388033838 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.385772394 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.384172301 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377533982 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387519832 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386815151 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.38672653 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.386242519 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.386353989 seconds)
  done (took 101.817862703 seconds)
done (took 375.972580854 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.696462509 seconds)
  done (took 3.944827261 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.375552838 seconds)
  done (took 3.628733682 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.31623359 seconds)
  done (took 22.570667993 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.398004904 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.398584422 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.372802715 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.366641944 seconds)
  done (took 10.785463038 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.632990382 seconds)
  done (took 3.886426918 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.382472375 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.387519794 seconds)
  done (took 6.023206806 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.574602928 seconds)
  done (took 3.828174348 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.591910329 seconds)
  done (took 3.845742756 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.388516144 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.397912018 seconds)
  done (took 6.048616036 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.358647867 seconds)
  done (took 3.612115982 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.86338076 seconds)
  done (took 21.116094691 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.394272471 seconds)
  done (took 3.64876205 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.405373977 seconds)
  done (took 3.658132818 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.879848473 seconds)
  done (took 6.132787343 seconds)
done (took 103.978953505 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.372699624 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.368369462 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.369220185 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.36694707 seconds)
  done (took 10.729067573 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.452650842 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.45104551 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.46327877 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.446028764 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.441385782 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.454920794 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.415771135 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.413739712 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.446053176 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.442983401 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.453645133 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.446300414 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.454873901 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.416478684 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.440162477 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.458891247 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.441452761 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.46257239 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.414945029 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.450843233 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.3890735 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.447112286 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.440331896 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.394196264 seconds)
  done (took 35.79138679 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.876595913 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.455843082 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.534333073 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.434148102 seconds)
  done (took 7.552685104 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.493000735 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.497999255 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.5159169 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.558917451 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.596119157 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.510572753 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.417736413 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.413753578 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.398376541 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.497920539 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.577244839 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.495557474 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.70824381 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.392792427 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.709100582 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.393915025 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.391818358 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.492750639 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.545644373 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.577029251 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.390027398 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.495615831 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.498535466 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.495025566 seconds)
  done (took 37.316215215 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.401446341 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.408672368 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.391993384 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.409695162 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.390746811 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.395119409 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.392991314 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.399587424 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.391846046 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.394591742 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.391764671 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.405628273 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.392135866 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.391807915 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.399059941 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.394102942 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.395641195 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.40029495 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.403662969 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.395077611 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.391980098 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.399802561 seconds)
  done (took 31.992095403 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.377415576 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.377256603 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.72684754 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.633593897 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.378356863 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.379354254 seconds)
  done (took 14.130622728 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.45077433 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.586626975 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.37948234 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.726843287 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.813101401 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.387388889 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38582123 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.624941347 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.909795285 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.907434357 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.437323481 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.451608818 seconds)
  done (took 20.321280174 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46923237 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388856779 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38725042 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451047487 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382349716 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384660089 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.461384889 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086141034 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.389169312 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665266733 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392023321 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466228336 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637235594 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386961982 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388559784 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.359221048 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614637597 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865084912 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385587991 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389267908 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434737465 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401516474 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399631398 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.592355756 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393298534 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390653896 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.654431379 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388580938 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671151578 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641536698 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643952065 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393561883 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667916459 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039105408 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498088724 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591729924 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398982285 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385452458 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.372880463 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.414496507 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396403458 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390364703 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.644214238 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392768773 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391713198 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397548902 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104299005 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.395661657 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.388980754 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393538921 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64723737 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476815253 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.397657057 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390609108 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394568853 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387350214 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.398604163 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521096071 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02952165 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393257487 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397575293 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.393586548 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388966922 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389997488 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026526497 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.394085936 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.398902608 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402008029 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391884864 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389902001 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419649301 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391781625 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.410914223 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39251399 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151945699 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400977097 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389386369 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923475201 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402945307 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.394600021 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619510027 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393396076 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395170381 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.393364762 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395479957 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119593203 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396825685 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.365685298 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431798777 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113699358 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594416161 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411790139 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424380039 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618414241 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.36403726 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39582713 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.399395309 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398014328 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413472285 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104205576 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389308074 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396654396 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642674624 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.607243689 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397607332 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.36579884 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881092578 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396850355 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.433564262 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397406351 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599376102 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.008281495 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654430129 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413407729 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434531627 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399265683 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182049336 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406612492 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404642076 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400084774 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674737178 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.205353226 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395156977 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474080967 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400287777 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402356803 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398708109 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403035704 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401490853 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.578704043 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401331973 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.655356897 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.401238465 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401006431 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.399352784 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409237466 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.400891003 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620601584 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408614561 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672744773 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400070757 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401641909 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392838263 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.613768082 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.398266019 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.40408194 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741604073 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402863616 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402169626 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656551777 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434116117 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515493786 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434934019 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.403296094 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650331856 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.406250603 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.409312719 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402451974 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403168602 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406664832 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.410946048 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405436278 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005145577 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382402227 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403981033 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40272409 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.418734407 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477055427 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411421059 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602808515 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.404569177 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400427218 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.417902726 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.400749643 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623150913 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653000044 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.416555578 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576187697 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.872636819 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.01000146 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417456182 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.402800461 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.401367116 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.400990772 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404589506 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403298938 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402000297 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.605480652 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662301227 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405561538 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027910585 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405323935 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405390246 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.411349495 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65608339 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.411504591 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402428872 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.403584505 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404439148 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419777648 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656625469 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623288382 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.421126459 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405015732 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.952263505 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4118748 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402909309 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40491181 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429995788 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404848658 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2410209 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.737397039 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404081044 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653814883 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408051825 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.436280347 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.403213766 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418574396 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406181826 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.411697304 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412509195 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.608623402 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408714333 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406710821 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043274337 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182316934 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957454768 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421416974 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.39915202 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408363432 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.124322526 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401245559 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405705276 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65003081 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109660162 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401641326 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874219171 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.404390701 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149130769 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66284443 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634316402 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420724356 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.41350843 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661453963 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619801284 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433155362 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408657327 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407677349 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.371087704 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948233734 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399200793 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583239398 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116459409 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405792005 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402676539 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.4704588 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.41460615 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794263775 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406017309 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409274547 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41649622 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413742763 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245108367 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410706478 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408424897 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045361423 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415116828 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.887064891 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40812941 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.614771199 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.66233274 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.643209517 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.415427742 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.413447178 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.654620921 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668085244 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408077613 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422052213 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962542398 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.263961621 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.416949191 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409226764 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190010734 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405928778 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690488192 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.410246355 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.413966239 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421896851 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410184766 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412567811 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.410354577 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418536783 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388217928 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884030127 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.410383805 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411453544 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408504678 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413639395 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.657643908 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.428167758 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.022851648 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641516612 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408383981 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439326766 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.416115723 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415627632 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.377192915 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412053267 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411188641 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420882835 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630554293 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.410611059 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.37536569 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409109308 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62274031 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410355917 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420948682 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624026592 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.414788054 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.417876998 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188697051 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437855406 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422828679 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407969931 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403262082 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446208474 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482580109 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614566755 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.671918038 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.671508125 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80705501 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421304208 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411381625 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.427743516 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495678759 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411223019 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.422919812 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.412382561 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025513758 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198338587 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.026345586 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671971763 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41638112 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423980129 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412147293 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650779885 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413986543 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690836396 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413186048 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.401561176 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429732913 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427302559 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425271021 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625365714 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689161836 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414126919 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416131435 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415529252 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.413280391 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678379191 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.628682491 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896220377 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9449378 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411529631 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417801643 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15227315 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687861489 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414812263 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419029383 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416547639 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.435320671 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.410353088 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.437305618 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413958061 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640577194 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673716187 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069566271 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.67253982 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.44020494 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.334114829 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429303724 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666443444 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254746804 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.621996075 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038658479 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131676856 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671014795 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492099908 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623968815 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.417092844 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656527183 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.415958022 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417462998 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416467857 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416772882 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.41563279 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.675531199 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038202422 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672087145 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.424565761 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.418261256 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451300159 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.623278284 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.643412034 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148839259 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631299893 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680798017 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425947526 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418307573 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042141125 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679532271 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420220077 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.41947617 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634002155 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420723663 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455290057 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.29386221 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.419082978 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958290521 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.628878312 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441207716 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428387037 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134128727 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044117575 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.430440153 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904466092 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416841699 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424939513 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697993461 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.429323899 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430124813 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700822508 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.426975796 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.433805619 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627910595 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.038110715 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178868723 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.440834871 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416501059 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.426068422 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421251399 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495314628 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41485196 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428323826 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.82002621 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422638614 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423731963 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432661598 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.423543343 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432942241 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.423365308 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424342329 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.426629834 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.396083414 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.390952731 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426734119 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550012009 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966348054 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419203516 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.043183179 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.759124889 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674344423 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431134479 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.38996546 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.429711563 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42613602 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422695586 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420140632 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433871259 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961995593 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.427469936 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.683502957 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431721629 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.638570376 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634264853 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.426271535 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627553815 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437945235 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442683485 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.392658043 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428309541 seconds)
  done (took 996.196729484 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.439840729 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.42587893 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.432128138 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.428367454 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.439518118 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.433742506 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.451877129 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.494785893 seconds)
  done (took 20.834985037 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.430161413 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.417750996 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.429505403 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.41790339 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.424264558 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.90101704 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.423593655 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.417515631 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.439861132 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.427049185 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.425390327 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.043304204 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.426532593 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.427649541 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.424376019 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.425488329 seconds)
  done (took 33.192926038 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.169449 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.449881464 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.036688699 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.466105631 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.413540317 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.419741508 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.573266476 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.410335699 seconds)
  done (took 26.229695721 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.432051257 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.430494566 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.431364962 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.432657548 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.431855213 seconds)
  done (took 8.451662374 seconds)
done (took 1243.988731715 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.4328404 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.436515121 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.432747006 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.435243332 seconds)
  done (took 7.026013664 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.398450122 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.393221136 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.399985555 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.408658933 seconds)
  done (took 9.890190172 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.101370762 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.942536479 seconds)
  done (took 5.333847894 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.948983315 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.938964407 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.940308987 seconds)
  done (took 7.120983924 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.717117454 seconds)
  done (took 3.010145804 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.379056264 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.420175344 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.420736233 seconds)
  done (took 8.512250736 seconds)
done (took 42.183383788 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.418106395 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.1751441 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.575290537 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.419360832 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.573356796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.576139551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.671772146 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.429809217 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.418663319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.425875118 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.411636165 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.57428613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.655989975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.181154197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.655330877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.182436204 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.582935867 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.426887812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.418327001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414090777 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.663397931 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.418729417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.428001011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.417850235 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.576488852 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.564220519 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.430154587 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.178464867 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419571108 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.428206772 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.560438253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.421550103 seconds)
  done (took 83.985826127 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41862304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.429988535 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.430748818 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.435228075 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431302474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.42987829 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.417790426 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.415113293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.41735477 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416194794 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.418243226 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.423712752 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.416708012 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415321638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.418391583 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.418810437 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.434227211 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.416529559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417153825 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414134778 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.417686593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.415098687 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.429798201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.432581916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.414815041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.433897296 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.439513397 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.415177205 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417465774 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426667713 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.416822718 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.429864743 seconds)
  done (took 78.819466596 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.426621664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.417349597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.425652727 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.432276364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.417178979 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.428635031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.42030924 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.417496625 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.423034452 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.421115934 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.428213049 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.418702103 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.417072696 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.418521879 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.420944599 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.416216209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.418467193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.432170785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.418426201 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423323237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.420483199 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416503623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.4189411 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.417415638 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.426941651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.420091493 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.421735437 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.418274342 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423157051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420947481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.425894507 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422797253 seconds)
  done (took 78.793854642 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.665874172 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.438823609 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.443765963 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.43108184 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.443690308 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.439828731 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.435244077 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.6685337 seconds)
  done (took 15.264131906 seconds)
done (took 258.155333334 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.432439447 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.907319682 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.463715528 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.430098217 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.444826134 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.461021919 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.635986714 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.461916348 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.624493332 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.433848406 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445908414 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.447527208 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.208594445 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.568572414 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.227820439 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.358844985 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.28890939 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.43739893 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.973864568 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.653886523 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.460396076 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.427228912 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.239444373 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.305274328 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.41010755 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.491972335 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.497092926 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.587641846 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.549329142 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.494205244 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.918739813 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.434325835 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.433039124 seconds)
  done (took 65.449007401 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.433212494 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.439505173 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.440601701 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.442088477 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.440089211 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.442579279 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.433084176 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.44300729 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.441647639 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.443088935 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.440289456 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.442339239 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.445167742 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.441512042 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.441907652 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.41724156 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.435128133 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.439670464 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.430663599 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.419418583 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.442688568 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.441222883 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.443152214 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.439595233 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.444148057 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.440805481 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.441863013 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.444917263 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.445390431 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.441280036 seconds)
  done (took 44.477133849 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.444778097 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.004965753 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.161445097 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.441067295 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.433292651 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.439155438 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.714069363 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.44399839 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.439098349 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.438237889 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.885879585 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.446313162 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.46729265 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.169604497 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.438500445 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.444650641 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.442290483 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.434852861 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.016165496 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.445994495 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.713142549 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.446078933 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.714253007 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.446339633 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.435904236 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436642206 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.441274371 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.221234411 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.453529763 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.888616641 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.183651625 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.711337869 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.149917053 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.215723096 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.18877386 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.446275113 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.443262799 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.904340733 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.436143214 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.439173192 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.714281691 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.435160816 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.173632077 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.115395532 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.446406369 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445406196 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.246427977 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.889145685 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.665321726 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.437596759 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.208217067 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.439925554 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.445880647 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.438759099 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.67097473 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.435024825 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.437421363 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.275563669 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.435528 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.711489969 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.440749719 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.43718417 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015215408 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.432784467 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.00961096 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.434623272 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.444104656 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.437872774 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.174259039 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.439439042 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.131016436 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.448674789 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.44510464 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.89546689 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.001429864 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.284785757 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.434219584 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.018544524 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.18093888 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.725163467 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.4358579 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.191669857 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.726708208 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.436538082 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.450270854 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.450187655 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.447372738 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.557873352 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.711252962 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.051303073 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.124293395 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.27205858 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.712430851 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441243053 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.439964998 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.276210392 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.444092538 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447272434 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.168052928 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.128185608 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.45054351 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.447746452 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.120503343 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.454284389 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.717733862 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.445959988 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.212936632 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.437637318 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.560324264 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.449982825 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.448998044 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.443909586 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.716078002 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.44383642 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.449280743 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.113922569 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.908473171 seconds)
  done (took 199.401893115 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.43351227 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.429744154 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.43592646 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.429271351 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.438639613 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.44422607 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.438175793 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.436962332 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.439406077 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.435826786 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.434649757 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.443538596 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.442642509 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.435612089 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.438061126 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.429670321 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.438151339 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.434725078 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.432420466 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.43532737 seconds)
  done (took 46.028427202 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.451998235 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.97580193 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.94351046 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.44594042 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.451192681 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.441689158 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.493731627 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.449168244 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.449489804 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.728478721 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.599608621 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.451338176 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.449584691 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.451345311 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.94498744 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.42375948 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.726924936 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.97716552 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452777632 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.985481434 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.4257361 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.454391967 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.439917505 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.983986143 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.743430387 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.71471211 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.499850165 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.979163778 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.450398357 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.452583262 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.983736415 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.447674843 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.447102675 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.965078979 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.449249135 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.46564375 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.455186953 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501509072 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.500672317 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.731491246 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.986685716 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.721558343 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.464549905 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.614848935 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.450191494 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.427500516 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.99590973 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.456920855 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.426577745 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.457303221 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.456560014 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.959796443 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.44608675 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.958857842 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.454669202 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.457002709 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.984299421 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.960173536 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.947095443 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.608324041 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.444051459 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.719769104 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.452663868 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.997680447 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.456178175 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.456368312 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.453600923 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.615264424 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.986324411 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.721320967 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.734384662 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.73819152 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.458220235 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.511913061 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.454467822 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.73602885 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.508512937 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.84658862 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.732989346 seconds)
  done (took 129.95475557 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.703843857 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.547237952 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.791300723 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.989672763 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.918807846 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.562449266 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.54343189 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.672153589 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.446802819 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.540474469 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.054275307 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.517198223 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.186354693 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.505219155 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.53724785 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.556309187 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.827522356 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.369724395 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.057594543 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.036785476 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.446599022 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.534784499 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.931527609 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.624691284 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.436032482 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.005320424 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.358736996 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.938975166 seconds)
  done (took 53.945217128 seconds)
done (took 540.550711708 seconds)
SAVING RESULT...
DONE!
