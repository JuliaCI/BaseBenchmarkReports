cset: moving following pidspec: 21809
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.559727629 seconds)
loading group "string"... done (took 0.514957097 seconds)
loading group "linalg"... done (took 9.414256706 seconds)
loading group "parallel"... done (took 0.172560032 seconds)
loading group "find"... done (took 4.51820449 seconds)
loading group "tuple"... done (took 2.064179827 seconds)
loading group "dates"... done (took 1.376545471 seconds)
loading group "micro"... done (took 0.197432202 seconds)
loading group "io"... done (took 0.5169003 seconds)
loading group "scalar"... done (took 57.110183708 seconds)
loading group "sparse"... done (took 13.734283014 seconds)
loading group "broadcast"... done (took 1.717601672 seconds)
loading group "union"... done (took 10.57570905 seconds)
loading group "simd"... done (took 3.558954616 seconds)
loading group "random"... done (took 13.151141688 seconds)
loading group "problem"... done (took 2.234192062 seconds)
loading group "array"... done (took 24.29518451 seconds)
loading group "misc"... done (took 1.160406171 seconds)
loading group "sort"... done (took 3.69471108 seconds)
loading group "collection"... done (took 21.855944811 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.698371297 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.151668067 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.255682522 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.20720256 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277733894 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16802692 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158749329 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.172102409 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.628097233 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208005237 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137452374 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435827677 seconds)
done (took 6.271100637 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.261194006 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240814281 seconds)
    (2/2) benchmarking "String"...
    done (took 0.190046497 seconds)
  done (took 1.147879485 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078989081 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158991158 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110569055 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096347336 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095304676 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110594727 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095324643 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110986926 seconds)
  done (took 1.500647357 seconds)
done (took 3.709874862 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.515922418 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.890413839 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.53054906 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.182812271 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.317036474 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.308048683 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.266680198 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221070466 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.095803625 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086281469 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17773695 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.456061896 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.388039842 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.966431625 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069718978 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095147947 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.156058445 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.789533369 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080909471 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109371693 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.531662523 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.214530863 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11688497 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.10563925 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186600519 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135141058 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142486049 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.107349375 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.676714629 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134916427 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215874035 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085273745 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.140754337 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.168681342 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214395301 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.112348099 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679975887 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204485117 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097152355 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103267682 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685890723 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.121388521 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206142165 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107075395 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068923652 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.162401315 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117522995 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079497447 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095942136 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.104765668 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16149365 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.465888026 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108202897 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.192980194 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095271511 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.704182878 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100709276 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.279701501 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12918945 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097207615 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093284255 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089570152 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15802933 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094840433 seconds)
  done (took 20.352956028 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.168415902 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.187638675 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078759797 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159234202 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12618655 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100635496 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085473448 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07913603 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128558128 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179393357 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144334315 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.192773828 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078034946 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091426177 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.17009609 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232472187 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128746114 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105272516 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090475588 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107770202 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124995305 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114236159 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094031244 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092441185 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17408424 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211074205 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114302336 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124896594 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09148619 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09723087 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143591293 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147011834 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09728359 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092619829 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189788815 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109869859 seconds)
  done (took 5.396034928 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.245000442 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107362433 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250297844 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.20095634 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.207393174 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084677647 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154402515 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186293398 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.180440655 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.296029571 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.237777507 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182591017 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086686032 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130563228 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097054476 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080811208 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081712088 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096459071 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.351026902 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15024566 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.195262992 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18735086 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099678378 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100953248 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363768669 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102368868 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087961596 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113987155 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06548834 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.228052363 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095515771 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.068652523 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086166392 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123606931 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115265253 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213101536 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127705237 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121358411 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114196994 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087589632 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.225141468 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120829663 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085550038 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082260427 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.133531011 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118322295 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131268758 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094721787 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.127590014 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223279578 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08869305 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.132600168 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.024350237 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199579058 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.165512367 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086627839 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292279642 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.13050702 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103328884 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112267643 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.80832948 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133669443 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085688583 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080074889 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115594532 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081117732 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.454602625 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128371323 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.532717116 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087182107 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159611326 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098685456 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.124869348 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087285932 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103819235 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111450222 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08747851 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098518152 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089033988 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08103335 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.109116315 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113881818 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103093897 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082754183 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150076515 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118910428 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.111378047 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126047276 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.093018417 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087798545 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130643176 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084436344 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.108718776 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.170504039 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119977709 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113344214 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117792379 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145627028 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094670366 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.257429655 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100982347 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128105855 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101555761 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115641582 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117864326 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083222053 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085613624 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098603191 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083900036 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150163157 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.107357046 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085492421 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08985451 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111957688 seconds)
  done (took 29.09478872 seconds)
done (took 55.563461581 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.419440221 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082117122 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081764775 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10209471 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081308896 seconds)
  done (took 1.565832496 seconds)
done (took 2.342383408 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.312854602 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200230124 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087644511 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189987368 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088313314 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199254839 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185976932 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102344296 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208670551 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086962644 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193482904 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089243494 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107528701 seconds)
  done (took 2.853218601 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105410131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10773268 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103771759 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121977962 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087080554 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102258473 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120504468 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109194777 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10155302 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113876052 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087471985 seconds)
  done (took 1.935161894 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102127229 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105477016 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093716794 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118636376 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087425804 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100162682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117621253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1070171 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100268693 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115504193 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087944669 seconds)
  done (took 1.913177952 seconds)
done (took 7.477402972 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.236814192 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.006335586 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.192175214 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.244641694 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.355038012 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.299444232 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.61354085 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202098983 seconds)
  done (took 16.057629277 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.125929761 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.194612608 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093750306 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095873506 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.111246011 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093214562 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098133527 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.11182692 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098479702 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097188841 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092204906 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109299805 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092860579 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096203442 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.115464331 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091981459 seconds)
  done (took 2.559410699 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.145502207 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142967746 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099589012 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.101083915 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.115506475 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100725858 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103656488 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117744794 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095556929 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096749659 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.120026251 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099937597 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098540129 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.112745345 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100609606 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11914608 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.112594751 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100082643 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117927592 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.1167373 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101412971 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097774069 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115061243 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100429954 seconds)
  done (took 3.494253042 seconds)
done (took 22.890758893 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150896818 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104288597 seconds)
  done (took 1.036703038 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.1653746 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184984357 seconds)
  done (took 1.137173191 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114257987 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092091533 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140443228 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104614558 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0923247 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109925529 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119430876 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109956872 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09171663 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092982141 seconds)
  done (took 1.859385504 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097649471 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097131313 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125724669 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.17095675 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119786264 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095754372 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09718223 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.116060273 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098230031 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092555137 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115711968 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110033529 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09712598 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129454066 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097128481 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.114588796 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10290357 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09583323 seconds)
  done (took 2.763937737 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092075729 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094550857 seconds)
  done (took 0.976760449 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095652441 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092824828 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093753725 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111846059 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093118756 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091341686 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108846883 seconds)
  done (took 1.477555793 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.52443776 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236959995 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.372330318 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072078656 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12484776 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.449741912 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106867211 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072180634 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093402252 seconds)
  done (took 2.878097012 seconds)
done (took 12.919458434 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092752816 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.243440036 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.637718127 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113683648 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092496003 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162976526 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.320440672 seconds)
done (took 2.464175988 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350413475 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164194659 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084532327 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0929287 seconds)
  done (took 1.484538758 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083757648 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100937837 seconds)
  done (took 0.986348242 seconds)
done (took 3.27496883 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091686997 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.091229897 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.090521175 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.142406269 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090715549 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.090475414 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.110263198 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091751113 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090989725 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.110233605 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090629261 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090583315 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.089553342 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110137233 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090250241 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090522256 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107573245 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091117223 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091770942 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089527401 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107809749 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091807296 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089556337 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.107330772 seconds)
  done (took 3.173015944 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111746984 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092756156 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112594475 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095353059 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095015059 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111840151 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095070634 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091819922 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112942485 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092637763 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095374676 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112400931 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093205161 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095762376 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092274759 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.113866712 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096265026 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093157269 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112860564 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096749392 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.095494028 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111391039 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095474498 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094114071 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113870855 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096192731 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09195648 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110630372 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095506827 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094075429 seconds)
  done (took 3.811707833 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097454808 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087559606 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090765531 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117283206 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088370037 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091147915 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106037877 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092738182 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093063421 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091369853 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110766953 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090925312 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090764296 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109806791 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093593262 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.095545728 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117501093 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091843408 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.0914304 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091324877 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111897865 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091292228 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09056451 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.110156029 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091693716 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088517456 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.110103867 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.091540556 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092986751 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089833752 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112405705 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095021953 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092152033 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119580614 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094066999 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091611705 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.114492764 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088613793 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093306602 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087142522 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106601197 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091850615 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091905745 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.116667181 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092110652 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09152636 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091074222 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.111263186 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09277396 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094228187 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.107004561 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091118597 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093194249 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.110684777 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095565778 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089626816 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090770345 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106727098 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093561318 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090067768 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.105662906 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088775353 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095672279 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090582563 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124867227 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097091639 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090203578 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.110986865 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09317478 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09689072 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.112237206 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101787783 seconds)
  done (took 7.859139133 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115562501 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100553797 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111554125 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093459018 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092382713 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091098436 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115261756 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093181393 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092421387 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11626561 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0927456 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092153835 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110776687 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0934041 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092755629 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110400899 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098599665 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09127632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091656602 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110951354 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092366644 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095619207 seconds)
  done (took 3.006412069 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240386571 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098855894 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.13994861 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124340237 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109606617 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124120113 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097035023 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096779963 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115464586 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103554994 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101796944 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115454591 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111465385 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119419229 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103558565 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103115921 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117578103 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103632862 seconds)
  done (took 2.939079461 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105163501 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093902158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156241518 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093883417 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09418192 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11341035 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099508728 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114339239 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113461779 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09455891 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100719491 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113176438 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094447956 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093759808 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112326361 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094227984 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096314062 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113886445 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104642826 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103238859 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11962694 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104140209 seconds)
  done (took 3.144083507 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110316087 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094546741 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128714704 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097278533 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092561638 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112233173 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099639339 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093803892 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119318389 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094681763 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094340099 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092537598 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126351707 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093463948 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098208696 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113002721 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094697777 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09367444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112377635 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09562196 seconds)
  done (took 2.875515107 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195497784 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127959082 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109400539 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117282311 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129727326 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109291759 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136162609 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110503875 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109636863 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138136952 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112062822 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109546488 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137566774 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11470648 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12767198 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118682578 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115803987 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136640292 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109529398 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127896972 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12068195 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108794008 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136167673 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109594148 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126341867 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109880526 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110488189 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132201148 seconds)
  done (took 4.266791474 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092523957 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0917243 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091570869 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110792401 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092969367 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092250775 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.111761117 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092442738 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093417859 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092038725 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112072961 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092851988 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092186712 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09104297 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111301385 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093363083 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092455114 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110237077 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093093546 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093038195 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092800492 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111580084 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092364494 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091796328 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11013868 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093097238 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092993255 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091944975 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112707948 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092882449 seconds)
  done (took 3.745528394 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106095327 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103252548 seconds)
  done (took 1.032530089 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100471949 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107363378 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092112797 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112572876 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.1004596 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092531804 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119477166 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101373242 seconds)
  done (took 1.650923372 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.169001097 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.191527242 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096984414 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124685934 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.171170579 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.183421726 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130522604 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118786145 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092755023 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086581905 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.184816075 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084083321 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114581785 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092019471 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093681173 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120632874 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094636597 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102357507 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119627769 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095844522 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097010255 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118277351 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096233325 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103199261 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.108371748 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097651571 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096584117 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.125565201 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091828376 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094957877 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112195467 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095003122 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096624678 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.117874926 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09611809 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.192363781 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102754618 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090260153 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11467573 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098680847 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126396124 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.115388874 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095820509 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092521074 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115075896 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098214594 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09783933 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.113326766 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087936158 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089760333 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.113704193 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090156825 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093279996 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094290996 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113547263 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101086641 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.115649955 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091980759 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091010672 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089963419 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.112232075 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091792087 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095857322 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.117042844 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095024905 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094737649 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112171066 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095515465 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095005736 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.114465387 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094384425 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109043659 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114165644 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09978629 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098932719 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.114604662 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092076024 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099536338 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112571806 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09587149 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097894324 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141791929 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097086918 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089270399 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.109015631 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101352128 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095271036 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.116768567 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088563778 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103113309 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.114808414 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096365991 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08731779 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092158249 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.111000929 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098440024 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087038662 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114207609 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095100425 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100632599 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118112884 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094326448 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09548922 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117865492 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100779685 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092221255 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.178753945 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091399637 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109914526 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09791952 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100412999 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088207889 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114424804 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093423206 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090588029 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.110977893 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099365729 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093652014 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.115742955 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100832083 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09625093 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.116002379 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097196201 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09364659 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109829133 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099373039 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102389756 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115259367 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097123381 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09441837 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095279278 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.114882057 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098697615 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091917163 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11859281 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092166573 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094075038 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.11548119 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100773928 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093794083 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.109768462 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094936993 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095083663 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.113761317 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098464679 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095761311 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110142769 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088093258 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094945184 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110161259 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095600891 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102513744 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108849994 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097839634 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091069058 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122301274 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092333824 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099708497 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09570332 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.121070974 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099830226 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087081304 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113059954 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097048062 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095707083 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110331743 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09612683 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094385573 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.121630013 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089345447 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098117887 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106029616 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093370887 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100501741 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094682904 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.117341675 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091005635 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131297796 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.128979239 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100619507 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094067703 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114571705 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098396004 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093005882 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119061922 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101144133 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099044508 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11223095 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095671436 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09925115 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110272002 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098226614 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093278889 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115970638 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088281731 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09584107 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106666892 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099929337 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097433421 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099042273 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.120063883 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098153744 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09250391 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122839941 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092040135 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098139002 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.107515149 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100734181 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104165024 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120281546 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101261464 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096632442 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112994876 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096682574 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103702662 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118086801 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.096364182 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095895732 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087119499 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108925846 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100733132 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097297261 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.111270759 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094982375 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098162498 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116944491 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09341524 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087098972 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118676902 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098881005 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091678198 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.124022561 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092350456 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093001072 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12165037 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089210103 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091687957 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116400604 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10050023 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095158328 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.114454161 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098992364 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100888332 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096914624 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.117645328 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092918886 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10273787 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113448917 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095757363 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092787963 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.117550891 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090867214 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097244124 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115278957 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093856514 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091823404 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118167064 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102168893 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099864656 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113116364 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100752757 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101735791 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100751843 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11418132 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110817521 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090695734 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.108869144 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.094090367 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088635478 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.117777259 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092821066 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10017163 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.112348548 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095591289 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098210355 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116421718 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094646385 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100219715 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12568336 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089920772 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088055383 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112490919 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096157307 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092619144 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.111055504 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09799869 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096640156 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.118669027 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10056423 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092062812 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094973694 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.12160648 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09187556 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101017695 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.121244808 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102744175 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091418667 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.119343684 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092827801 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099105315 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.108850589 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095359263 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093831114 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115092301 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093762716 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093339336 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.110141205 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089449278 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09231362 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.119813478 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095293251 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100124772 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114629844 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.095079589 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092131982 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091310364 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.121904256 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094727222 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101499669 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.116503562 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089935468 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089247238 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120783196 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095291292 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100476007 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110583973 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100390474 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102207526 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098775768 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117109313 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104241007 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102426443 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121955955 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101536638 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088181295 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.11427892 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099828078 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095017775 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11947244 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097716774 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088676871 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117193002 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101865895 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096556514 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.114875585 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089725683 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096807109 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.12101787 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099560148 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099219608 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096484993 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118270496 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091147874 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097930663 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120687931 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096276949 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101376197 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116145955 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100424006 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092731589 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119804934 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097342944 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090347105 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088280859 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.115505955 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101498297 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088368492 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.120985433 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100149576 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092060567 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113941073 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10083448 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091391308 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117811341 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101985805 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093077435 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125471734 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09765817 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094056468 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120012997 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10257977 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089365478 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093157713 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115524595 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102965319 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093787437 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.12068465 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097067929 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100067968 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.118753444 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100632916 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100101728 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.122294545 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090641866 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102230592 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118675643 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099103458 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092797149 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093185492 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.11126375 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09411922 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101592882 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.114590888 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10451958 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10147996 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114635837 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09403191 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101040181 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116080985 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102491832 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092738266 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116891342 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089991051 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097804907 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.114315471 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103626809 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093030363 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109286138 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101692651 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100928798 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09972973 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.119325795 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.1031516 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0892721 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.110177901 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098778056 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092965052 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126328177 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099199918 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094301808 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114597123 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098563634 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097897241 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12214022 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091669225 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093875041 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.116561181 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099093037 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095629365 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090337219 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.121089091 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095876274 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09724369 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.116569026 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091582687 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094380601 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123697711 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094993952 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091852834 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.113398653 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103677411 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096435477 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.113659958 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091313293 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101382074 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117846309 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103420921 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093658952 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117552181 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094850801 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098721229 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.122560073 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095331923 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096869066 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114586369 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102246487 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101847198 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089850212 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.115390035 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105486785 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100070361 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.119348898 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098642781 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094986561 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125538171 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104071582 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098065657 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110535962 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091997549 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094020693 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109842183 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098957358 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100617618 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115493002 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095315522 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100301875 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100137418 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.119574728 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100453288 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089710814 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1237484 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094324895 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099693108 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110881321 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091680372 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097909725 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121864596 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096742603 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097044012 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097720945 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.120023521 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091591319 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092916694 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.121126998 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100151206 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101231966 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116840005 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095805935 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102181774 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126087898 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098749878 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095225421 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124874058 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103287793 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096508195 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.116286601 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100349583 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102687289 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.118579581 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102923671 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094466874 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11528265 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104759494 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104418798 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125210189 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096479 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091502113 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100654804 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.116794786 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091524324 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099510937 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12509611 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104060305 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096279954 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.115345774 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105541375 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100723018 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118172527 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095746071 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095117898 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.123220328 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09592368 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100213585 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.114082421 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105683631 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104079672 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123382422 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.106889752 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091712999 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12268916 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100594042 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104800006 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097759937 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.113467296 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.093455495 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100058961 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126438518 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103921921 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100069669 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.12121747 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102632316 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097802816 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096579041 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.116869858 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104818157 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101929306 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.119170974 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099044398 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095595848 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1192288 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098134802 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102716922 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.12390606 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098808446 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107111712 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.12380919 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.097466119 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093871674 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118252467 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101175 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09737827 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101258035 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.116225188 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.09241585 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10263139 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.12559699 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097519189 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103739593 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126173631 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096798049 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099173717 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.127127477 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103826078 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099452011 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.119133775 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102622139 seconds)
  done (took 62.963390712 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147050774 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105500597 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121322573 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099901484 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116168931 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122829795 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100644037 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101375594 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122452176 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109919666 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099139262 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120427971 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115786717 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140505306 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117935044 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110368829 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120061063 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102176805 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101604463 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121251846 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115423805 seconds)
  done (took 3.286458792 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117941866 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114186776 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131553502 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113390093 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106061931 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.133530974 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109765307 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131599426 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114878339 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107702419 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13503168 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110375662 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128463949 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109104766 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107930573 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129836715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114283656 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106052367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133436182 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110566664 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127923459 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111661703 seconds)
  done (took 3.479510248 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.131293698 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103542233 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098772163 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120855143 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102990383 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099195419 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124250904 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101658396 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109470009 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116025006 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091900869 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095706266 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098014885 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121511033 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094389078 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099549548 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.131485228 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.1030889 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104918258 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.123148001 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092821123 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100104468 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.121523804 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092666683 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105598461 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104461846 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.122860106 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104341967 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091088724 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.123405862 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101894654 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093843449 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0915897 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112724871 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092129345 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103020243 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.124164155 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100666552 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100862274 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.111060325 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102286321 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103680128 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090845834 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.122540205 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101610722 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094207803 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.124004227 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100572502 seconds)
  done (took 5.979175451 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.131038689 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165964426 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.338982648 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.138843658 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138033591 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109583094 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101644787 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138767026 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101478902 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125698733 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116622003 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112916075 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128008479 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106846473 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.127428618 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105777966 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106480837 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101709817 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130138374 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103949956 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.128479338 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106227463 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11282761 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133783348 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.1065636 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103627365 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125192016 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107009788 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112159267 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130651871 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109139745 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.129013262 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115752676 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107368232 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124040493 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106798885 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114320355 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.126279341 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10553055 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102311415 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126070835 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108004083 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105738728 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138325399 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105900518 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105299091 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126840459 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102871776 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112865578 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.127264359 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110604736 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134638398 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107801202 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105028086 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128119875 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114163641 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104541446 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124302058 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106553423 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111655447 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.124587813 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106877261 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113487476 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.126052155 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109359092 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135076724 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107223989 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106538385 seconds)
  done (took 9.188467286 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135533127 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107985362 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137682123 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11682638 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107617027 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130689253 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108143776 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.129562438 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109570389 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11265792 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130460364 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227121397 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12922527 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114090528 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130386893 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109668094 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107918938 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129884568 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109824329 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108376974 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129110228 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117277961 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109024506 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13808278 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118467377 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12515474 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109205391 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108137552 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137780604 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109127313 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140849229 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.109736819 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108633329 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.137379305 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122274129 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107820607 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125180961 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109116107 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107951326 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129495628 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105690946 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115125531 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.131144575 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105258613 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127605153 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1104196 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.1162458 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139936725 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113576387 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134250106 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110637897 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116115549 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128984381 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109949151 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116017883 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144878093 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116051896 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137521316 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109293209 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116046458 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138657057 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123928294 seconds)
  done (took 8.449473739 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104324365 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101260079 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100440254 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121821102 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101985763 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100345048 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100962324 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.124015679 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100529928 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099767828 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122486332 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101449433 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100695635 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100387515 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123613504 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102061183 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10036244 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121690139 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101781669 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101007793 seconds)
  done (took 3.022667308 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111687234 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118117446 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124412633 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109435668 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103824453 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129865641 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104840247 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103429458 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102548765 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127572862 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11185173 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.132115884 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105086612 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108216837 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132153138 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110499459 seconds)
  done (took 2.728184462 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121835939 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119396486 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.212273217 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105574662 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.128744494 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111628579 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10324429 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.129204966 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103490355 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108425636 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129841563 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10824185 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104255731 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.125696301 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105711809 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105984764 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102815969 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129766479 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104499562 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.217891627 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107472206 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.127616884 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106649686 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107972161 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.127865358 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.109102861 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109589404 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.125627479 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.107498318 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104876474 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105188205 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.134849276 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103032546 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107484868 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.127528861 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106272037 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103942997 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125841197 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106793872 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103757324 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.128034691 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106416774 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105249083 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.127548512 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104262722 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10526199 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.123978149 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111442895 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105240301 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104881924 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.126762844 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109832303 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108750164 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.133357316 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112357201 seconds)
  done (took 7.347476913 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115983579 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10497041 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136683233 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103753876 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104204118 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105353215 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127559564 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106242489 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105210845 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125139476 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10579009 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106136205 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127706314 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107408348 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105785774 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.127232338 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103866874 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105331759 seconds)
  done (took 2.924574108 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110075137 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104647784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107737294 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126672681 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104132452 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103876718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125142259 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103509682 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102314789 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.125936728 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105242145 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10395873 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102432859 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126021599 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105539908 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103843905 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126444941 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1049114 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103928745 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124049591 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105738463 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10379883 seconds)
  done (took 3.331433827 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117282192 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.215903953 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110970394 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223212995 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100551822 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.123852189 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111470707 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101742259 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140959822 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100521093 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100472561 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.123917726 seconds)
  done (took 2.473275215 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133508793 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141548428 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126829767 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10608739 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113208993 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131383883 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10948768 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108423134 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140005826 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120248113 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130442237 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117405277 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116369054 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139073115 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113681747 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136312811 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110310708 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109052172 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12809313 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124809496 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110168474 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139062001 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108741326 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130461851 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110352426 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117659988 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138778049 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12120495 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130266339 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118039622 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11357999 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130939192 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117517507 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140311563 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107482504 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117821084 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130652674 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125336023 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112446001 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139482735 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106589947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134444951 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118785001 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114172637 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139436219 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110640376 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114090464 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131510197 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111003226 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15205776 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11487808 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116773902 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137803028 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117965321 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138927126 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13001538 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141924291 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118627637 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112836415 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142005218 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116853939 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136777699 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118490308 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14261695 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114975263 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116911445 seconds)
  done (took 9.07146122 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1450412 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105986865 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131547064 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121980556 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138269157 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110993861 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10926355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130648324 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11113272 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107317688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175510102 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110088434 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139466304 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118973768 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109187573 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131613436 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110306838 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117338156 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129411255 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131126104 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131759745 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11863603 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117526662 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143325571 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12078199 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136289217 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111012065 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108975494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132584973 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110730566 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115099336 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134275369 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118973664 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127907826 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119367252 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109317255 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131848874 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116994583 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109629089 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136558082 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118303845 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146322174 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111676955 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1112678 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144867149 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110826346 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108664771 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132622704 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110570158 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107401606 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144140748 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122060394 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144405011 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118032992 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131461939 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111107859 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110482407 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132858626 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11090963 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114765857 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139932271 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111257962 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150871339 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111058219 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110793865 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140954352 seconds)
  done (took 9.056501291 seconds)
done (took 171.609487064 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.177926717 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.217079744 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199859103 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.160402274 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095726881 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.154949112 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129238731 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200511477 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.097565627 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096494097 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096445152 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.122715665 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163094054 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096929328 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.121595471 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099612538 seconds)
  done (took 3.13446658 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184275043 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.337477747 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111280108 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.124309378 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103657285 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100155506 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124746028 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103786519 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.101382698 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.132308588 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102700093 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096322576 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131325338 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098429901 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10223051 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123949771 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109347506 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101564381 seconds)
  done (took 3.206262609 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121886364 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146277413 seconds)
  done (took 1.187578843 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133153288 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.217442274 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.286251817 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17251297 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122620627 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.143919138 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151438769 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137372901 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.193077185 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.138509725 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114244163 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098832179 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.15030708 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107651788 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139066096 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100768098 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128995023 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137951008 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116069579 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103154818 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147401212 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105484096 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.107500154 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13827989 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181620072 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137587485 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105813322 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103798467 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12709914 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115170402 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.129781678 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.121472925 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113653756 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182764769 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104252274 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17954796 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.13080965 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102498677 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115247938 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.123558356 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105922311 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104614121 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137974483 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099930535 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105173601 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.133049004 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105507023 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104280217 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.13300405 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109293704 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.13219245 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108817588 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17692054 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109188053 seconds)
  done (took 8.05007753 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.876289213 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14590184 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101901433 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.022623699 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147756144 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115581284 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.868043476 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148645973 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253259356 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.893855066 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118967952 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132003837 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241327194 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258133275 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.292085054 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361153697 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.72953648 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114213505 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129344739 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164243578 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110056775 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14852636 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1220888 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516824541 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101942588 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123570005 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112520381 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109951968 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180059154 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101371198 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128181207 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173910149 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29252056 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209851345 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123966339 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103037186 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10251946 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186879187 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273363417 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219695039 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195892517 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099941279 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100925218 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132045006 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122534036 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09832059 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180025739 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192512987 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190423885 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107394895 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109642748 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136628795 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108614528 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178418434 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09947212 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359852322 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.384382162 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101968395 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110235757 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136923121 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269821359 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103316534 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237670612 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.15215472 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217327392 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101308953 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827404373 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187463986 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101525824 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128462538 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110450883 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109536356 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131814162 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168869871 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.498249608 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112709441 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127381079 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103257948 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23588926 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103200143 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101376401 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18246146 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102839388 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134042801 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113572971 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133442624 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16671143 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271104467 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133280754 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113005576 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106849447 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139294315 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103359107 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233930776 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232465928 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176424722 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207013081 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133850974 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179252231 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163210898 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12976499 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165783463 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.133287487 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114837879 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130357116 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228507308 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135148062 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125732499 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109274779 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111145173 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1605972 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106552869 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13257774 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167699747 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555088254 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18768362 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.100244753 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129210775 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112871645 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180022718 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110483697 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266512884 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112121329 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185214721 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130724743 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100820315 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109997939 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181096073 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109492107 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134344398 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110494128 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132962961 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259239108 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223688271 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134560675 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254995194 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178577394 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130860157 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169390799 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134515653 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188537771 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112952288 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111006843 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126021484 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821731577 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115864559 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110759969 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13104704 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185521938 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126111466 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105121482 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101606178 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122167596 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81440197 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110593348 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099572969 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126017864 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109368955 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111854415 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133594909 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109554386 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178706092 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245317366 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111421026 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1335309 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103386458 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181206497 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103682238 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102747246 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126488555 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104360034 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11194326 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.131725173 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106119298 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193037492 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175201304 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233057416 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.656103487 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103265091 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102431422 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.263563028 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104012615 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330461973 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111101773 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.256622745 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161247239 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122937887 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363368727 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184279642 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185552981 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106199613 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190389593 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100155958 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135724792 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178309251 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104511765 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109080359 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179887115 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114947191 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136128292 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.281135134 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103746872 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251907641 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10013933 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190587307 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103405609 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131915123 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327890278 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102514104 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140831192 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.15753892 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132705369 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105462632 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.621666737 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102997245 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139463982 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109178667 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232664664 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186150041 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111073572 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136376071 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111726563 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180618285 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230782945 seconds)
  done (took 48.084588634 seconds)
done (took 64.574526694 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.271203214 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179695195 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.285883048 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180904819 seconds)
  done (took 1.929739901 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.275269068 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163990945 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.259741706 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099190856 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.26457079 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098963696 seconds)
  done (took 2.107656806 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.181078583 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172124782 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150551398 seconds)
  done (took 1.451847624 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204323016 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.219535262 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333384965 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236117922 seconds)
  done (took 2.024141471 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.298114792 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121345212 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128648036 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.240254037 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.256610304 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.213508056 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127260747 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.181269309 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.13266714 seconds)
  done (took 2.690980777 seconds)
done (took 11.149469527 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.31104549 seconds)
    (2/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.227125809 seconds)
    (3/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.155686558 seconds)
    (4/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.434096506 seconds)
    (5/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.134691883 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.22429763 seconds)
    (7/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113968502 seconds)
    (8/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.380112615 seconds)
    (9/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.439264105 seconds)
    (10/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.38155134 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.256988387 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.139617404 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.273594616 seconds)
    (14/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.21163899 seconds)
    (15/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109338664 seconds)
    (16/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.134315023 seconds)
    (17/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.183057909 seconds)
    (18/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.109124572 seconds)
    (19/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.088375502 seconds)
    (20/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119736019 seconds)
    (21/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.218822846 seconds)
    (22/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.25192568 seconds)
    (23/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.165647409 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131478393 seconds)
    (25/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.404562516 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.137535332 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086492921 seconds)
    (28/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.194429066 seconds)
    (29/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.152067843 seconds)
    (30/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.284300762 seconds)
    (31/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.156611528 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085700827 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.194662443 seconds)
    (34/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.130929513 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133642769 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112877414 seconds)
    (37/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.249947516 seconds)
    (38/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.310554311 seconds)
    (39/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.27598757 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.17502133 seconds)
    (41/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113411814 seconds)
    (42/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.137057386 seconds)
    (43/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081947659 seconds)
    (44/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.143924178 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.220023467 seconds)
    (46/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.101326347 seconds)
    (47/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.227347995 seconds)
    (48/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11864522 seconds)
    (49/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.088201099 seconds)
    (50/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.199594245 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111230547 seconds)
    (52/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112929662 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102326084 seconds)
    (54/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.214766046 seconds)
    (55/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087057343 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120043633 seconds)
    (57/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135711083 seconds)
    (58/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083052311 seconds)
    (59/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.234631825 seconds)
    (60/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.176839615 seconds)
    (61/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.207759314 seconds)
    (62/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.161519546 seconds)
    (63/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194604131 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.15174113 seconds)
    (65/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108691056 seconds)
    (66/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.13668138 seconds)
    (67/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.223855099 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132945073 seconds)
    (69/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.146774221 seconds)
    (70/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.13066747 seconds)
    (71/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176639478 seconds)
    (72/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.07989051 seconds)
    (73/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.13872198 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.107010431 seconds)
    (75/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112162837 seconds)
    (76/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079443595 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.146122343 seconds)
    (78/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.146413648 seconds)
    (79/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.166265245 seconds)
    (80/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.106761994 seconds)
    (81/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197436785 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.129935958 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.139579765 seconds)
    (84/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.168978789 seconds)
    (85/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111825616 seconds)
    (86/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.130002956 seconds)
    (87/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.083957819 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111759482 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149908147 seconds)
    (90/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110010121 seconds)
    (91/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083714128 seconds)
    (92/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189668289 seconds)
    (93/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117027996 seconds)
    (94/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.133209142 seconds)
    (95/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110727783 seconds)
    (96/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.164422436 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.083701295 seconds)
    (98/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087514801 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.130057665 seconds)
    (100/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.086984879 seconds)
    (101/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.087458832 seconds)
    (102/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081304256 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10186894 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.136935334 seconds)
    (105/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.086582666 seconds)
    (106/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.168048279 seconds)
    (107/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.10366949 seconds)
    (108/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086905335 seconds)
    (109/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.240253472 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.153776901 seconds)
    (111/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082715362 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104928832 seconds)
    (113/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.114107435 seconds)
    (114/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.087343861 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105846724 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108037004 seconds)
    (117/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.170273312 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106934697 seconds)
    (119/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.175649208 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.139108451 seconds)
    (121/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.172139682 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.114225447 seconds)
    (123/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110817168 seconds)
    (124/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103407121 seconds)
    (125/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.083385979 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104253616 seconds)
    (127/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156336122 seconds)
    (128/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.134185883 seconds)
    (129/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110401684 seconds)
    (130/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.104322739 seconds)
    (131/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11336483 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087505905 seconds)
    (133/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.086148277 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130016869 seconds)
    (135/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.080817292 seconds)
    (136/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114170809 seconds)
    (137/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.137055764 seconds)
    (138/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.088136773 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10722174 seconds)
    (140/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.082524737 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.128116255 seconds)
    (142/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103627686 seconds)
    (143/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083830025 seconds)
    (144/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082138598 seconds)
    (145/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.169048944 seconds)
    (146/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087368094 seconds)
    (147/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125483344 seconds)
    (148/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126205957 seconds)
    (149/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.136626567 seconds)
    (150/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11231736 seconds)
    (151/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.0901853 seconds)
    (152/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079275 seconds)
    (153/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.13039646 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105548371 seconds)
    (155/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086177897 seconds)
    (156/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.137134465 seconds)
    (157/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079822906 seconds)
    (158/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.148389857 seconds)
    (159/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080912767 seconds)
    (160/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.089607841 seconds)
    (161/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.127657756 seconds)
    (162/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.083000695 seconds)
    (163/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08075983 seconds)
    (164/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.08669318 seconds)
    (165/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.103795631 seconds)
    (166/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083283906 seconds)
    (167/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087736807 seconds)
    (168/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079469849 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102614482 seconds)
    (170/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.104913973 seconds)
    (171/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081726946 seconds)
    (172/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112218348 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.0870575 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.127841336 seconds)
    (175/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128430289 seconds)
    (176/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083625288 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.130707985 seconds)
    (178/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.081852916 seconds)
    (179/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083136519 seconds)
    (180/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.086913932 seconds)
    (181/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103617929 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.131050382 seconds)
    (183/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089013185 seconds)
    (184/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085691302 seconds)
    (185/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079375517 seconds)
    (186/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.106788046 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.126579175 seconds)
    (188/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080385907 seconds)
    (189/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079680756 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.129297071 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106518707 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107435464 seconds)
  done (took 27.629911397 seconds)
done (took 28.585465765 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.22812252 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13205251 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114552836 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113446796 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235590613 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121504094 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154889723 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116374641 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123635562 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.139031881 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104837282 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126237721 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138901656 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206922876 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142937791 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106914018 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104632838 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.150911686 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130186834 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129312981 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.235485748 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106393161 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148930686 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106719007 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.237038525 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107368268 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11229213 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140471994 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12814194 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113404925 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.140031076 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105799117 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129033196 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.154890439 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105890908 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114018968 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12945307 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087705859 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115215848 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115175486 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.151566162 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115213728 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112524043 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.132587339 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115944699 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113007412 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129415787 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118002635 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102409472 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.139374765 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108373138 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129502962 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.137296823 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103974899 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10261997 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129605951 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124202059 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105559317 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.150546211 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105683742 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10617015 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129104756 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116161135 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10603734 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11264031 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.129495046 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115239694 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115494636 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.136779172 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1080356 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104859497 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.137619427 seconds)
done (took 10.288075092 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109806778 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150277119 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.237166938 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.239030835 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133408519 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.148003285 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11903897 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128770431 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144690283 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124893736 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142306117 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.161667566 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.243736011 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121646389 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.121293368 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142996478 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11795572 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113402581 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.240803368 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.155635944 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.131099558 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121233894 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15662106 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124274412 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.109201985 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.160129745 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113054772 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117562883 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.13493725 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12824807 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.15334427 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109804338 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112431731 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.151250092 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127326909 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120235759 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.145885593 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117568106 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111679003 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.134547577 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118863728 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127803052 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.134380655 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.122724288 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117690942 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.148517013 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116563799 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122340237 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.135838823 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117172926 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110444408 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159492316 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.122273506 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12516447 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.146189534 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121415308 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121487845 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.14631527 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112961826 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121502278 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.134387803 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109982864 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111721709 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.156198028 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.1132174 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.146154187 seconds)
  done (took 9.981206751 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128926572 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139987643 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144232926 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.121707885 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.115157434 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127616386 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.103776877 seconds)
  done (took 1.878120852 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105577766 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246356461 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.220492151 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.245561071 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.245366227 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.257225373 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128280559 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104938142 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167407149 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114914207 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.249814636 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.275967746 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11621231 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.147351235 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.224149556 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.131385465 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.22420564 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.132580744 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119375252 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.250779973 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122438066 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1637659 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119577717 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.106050468 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.242459663 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.106155129 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.295034662 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.150728503 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114925887 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119073435 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146373556 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186355899 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.243366531 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119059807 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141514795 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.247024017 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.218323635 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.147215484 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.259737762 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.110063721 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.243634945 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119624242 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120478074 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.147469153 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122006238 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.234593818 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124328384 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.121246389 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.145942207 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.253294338 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.117909614 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.245050507 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118589647 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119826776 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.143037186 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122042104 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128233306 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.148173276 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.227395059 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.150769116 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.24837947 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.220796696 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.247598353 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.249748059 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129868829 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.249632232 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.234906728 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119267932 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11460291 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.148634434 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.252524221 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119470861 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.118312874 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.240573711 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12339444 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.252424204 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.250513654 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117418172 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.145390439 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11047253 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.119002085 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.132627216 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.214981605 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145673992 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11790627 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125085464 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146498238 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120552231 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111639797 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.157015264 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120522974 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.142098214 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.126694953 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11960388 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148466065 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.225866798 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.144708542 seconds)
  done (took 17.338931283 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108428717 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107306943 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111108172 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133310421 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107417012 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108064258 seconds)
  done (took 1.705104117 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144027156 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120417156 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154280197 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122276491 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.194057083 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.229055756 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.262914759 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140319921 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.140590841 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131753853 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.257913804 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257061657 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.257628263 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124121007 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.262391458 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12275179 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.264978284 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118523469 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.156037273 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118685065 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.12018338 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.152058747 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118453082 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.247711072 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121597532 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.149427159 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115308425 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128113985 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154778902 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.115973296 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.143761949 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.148572923 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.114513527 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.11431881 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.260664654 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.140715559 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118218191 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122878736 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.149518605 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121735193 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.260169824 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117960407 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127031257 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.151002017 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115427776 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.139963777 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.125756458 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11348429 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.261567177 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122909319 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.151591528 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122493011 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120962277 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.151487879 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114045804 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114817226 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.151092668 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.263865663 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124785523 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113101099 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.149423406 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12319983 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115433943 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.152453563 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122403743 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123778894 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.139519024 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123279687 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118544955 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.149289904 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.125147262 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.146555985 seconds)
  done (took 12.020419451 seconds)
done (took 43.914984099 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.644729636 seconds)
  done (took 2.668370946 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.955755153 seconds)
  done (took 1.978921608 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.993698492 seconds)
  done (took 19.046680419 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.44102327 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473348447 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.152934259 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151327255 seconds)
  done (took 3.243607828 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.835637832 seconds)
  done (took 1.884156424 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.32876991 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.24268337 seconds)
  done (took 1.603605713 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.722884305 seconds)
  done (took 1.766169525 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.539281039 seconds)
  done (took 2.569001995 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.290554985 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.24607385 seconds)
  done (took 1.584363174 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.649052003 seconds)
  done (took 1.693011435 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.550876439 seconds)
  done (took 20.603206528 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26192607 seconds)
  done (took 1.312729603 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286363403 seconds)
  done (took 1.339532133 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.624640053 seconds)
  done (took 4.678450793 seconds)
done (took 67.009136901 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11743562 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.120303067 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11928628 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143290619 seconds)
  done (took 1.541426361 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127451956 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121695283 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149460412 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12095661 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127206027 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.146547426 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121536223 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123801299 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120334385 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14872617 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121898017 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12000711 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148427589 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120428772 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118078639 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150770771 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124746765 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120188813 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.148644099 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122308715 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120853292 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.149028299 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123299363 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122888243 seconds)
  done (took 4.173682756 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117467984 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111865249 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113484274 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135995031 seconds)
  done (took 1.536122657 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129028748 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132948074 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156008273 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127911089 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133065604 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.158017863 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120956464 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117351082 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.146570714 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129764393 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136535032 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160034243 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132384762 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.149008205 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1327217 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115472919 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121009876 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157324662 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128624224 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.154659772 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.123232392 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127905366 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.151481417 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.131132562 seconds)
  done (took 4.325978777 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19819063 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132992999 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.179372229 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165962131 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181314489 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119386721 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148093283 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153383558 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127698516 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.150361763 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.124041989 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16508924 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152837062 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12359905 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120162187 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152451636 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133111125 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.152700642 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.167556479 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.126638415 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153126716 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131575309 seconds)
  done (took 4.319768361 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123939472 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.112041572 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.132703338 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112445239 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123498985 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140404681 seconds)
  done (took 1.808409308 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110066542 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.106605064 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.107200109 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.133172942 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.110056642 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105559763 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.131306994 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.107058474 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10588998 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10575331 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131621756 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106121499 seconds)
  done (took 2.416868011 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.333443488 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11150503 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.137643051 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114280652 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.116974214 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.109578264 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.150702566 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.111507676 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.269733896 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106824603 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.135586104 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19482904 seconds)
  done (took 2.955255968 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208639491 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149250341 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25712961 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.684412036 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165000634 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191428731 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288914613 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191296228 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.212034243 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138242908 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218935289 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163142619 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187208931 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187209943 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169993622 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159303536 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196786282 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237928588 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1457451 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241634364 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157592735 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204569477 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216960766 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153269695 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140646002 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19257697 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119638567 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156885969 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169587146 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194001972 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206595696 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152871869 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169600756 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195269595 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266040975 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207240673 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273875147 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13531126 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198621809 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.216977483 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260548264 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144338638 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222736071 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155282172 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157920255 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190941614 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18368038 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184874504 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.162773397 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145773562 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214686462 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208749335 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174339962 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165269971 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302133579 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160732285 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144312667 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255636888 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21711809 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231182807 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181731619 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.151181326 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17789456 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218614291 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243968788 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143808522 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.194870857 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126833996 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195759021 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235135808 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184770065 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189849509 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.241384921 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132750147 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202367208 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170256402 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186937173 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235016048 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174429487 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120279551 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181943204 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135045369 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155578683 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191034992 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123305446 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244655517 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161098637 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341410453 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180593197 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185167852 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164515471 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192195174 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164347099 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178281103 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10238572 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172876657 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.164389078 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18839317 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131477707 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156089475 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17017263 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.127106455 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183178448 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124866457 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199330612 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135384429 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197765782 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172049622 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.161016781 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179503023 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178279394 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163537976 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198753893 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194092632 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162161135 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133861665 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2514988 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198314744 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13970732 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20479278 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197977614 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179472386 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136711891 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195454369 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222260602 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146304107 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228656409 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14019903 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164062058 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141849164 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201351296 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163716708 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.190163477 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130118244 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193767608 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195173923 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.157285782 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14153919 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212508082 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135479006 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125007179 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166672927 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137022753 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.172675422 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150198425 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.168598166 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157112712 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195327511 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16706771 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188838098 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136361454 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204292652 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133196189 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.197888215 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151684171 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119954053 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.203376219 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226463898 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131043706 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2104949 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164138256 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213783841 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201159287 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131304455 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21488942 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12947416 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122405352 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19349669 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198908463 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165864836 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.219178238 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208030748 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166690257 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.194135702 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151065826 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19969155 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.214225942 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157839187 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172559388 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173987346 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202175269 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122694369 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125572964 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.158295412 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138288048 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158862224 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139995949 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211778744 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167784108 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20707688 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194939173 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140341292 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220870507 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12728269 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190379813 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17758965 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168138393 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.191304277 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220639644 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180698471 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172287537 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191362547 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123018359 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127349944 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.162717926 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16308805 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165907384 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137688078 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142005354 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222600957 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202608584 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150392622 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223110796 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195983822 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200937795 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150937407 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162630185 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199762034 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169547717 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.213458876 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135099559 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.16314734 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222617146 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170847713 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193517517 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19908438 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179651319 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226919419 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193725271 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132030939 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176482257 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162177357 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166946254 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16538719 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146354177 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160865922 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153640616 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.168454846 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142079468 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219758626 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144572492 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20882893 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.185970979 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175033826 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155436548 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142890375 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202131385 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147826055 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105217331 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201209754 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227536914 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151123613 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186930837 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17561455 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161764427 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.317973745 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220954589 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208046455 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138658393 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140294919 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201660069 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162768207 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194381324 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215186701 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142634868 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239876493 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173325273 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.173888413 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132730142 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179699317 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153677951 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.169531513 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153625252 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.192681883 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146567047 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221694638 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137643601 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201066426 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17728406 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.177737753 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151283144 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168978827 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255174263 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170055795 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205019091 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166024238 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.196136748 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185463303 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155222041 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128952494 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132812102 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216552907 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129768615 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20893744 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195095561 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211490077 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177110664 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193684231 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144229266 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129354642 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198081548 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149495586 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216951518 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166115071 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138965636 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220198816 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129861757 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131599349 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19164758 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314327601 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149106084 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2063667 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107734018 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.310281904 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131277763 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132640479 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191396428 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199589444 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136325795 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185305476 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204021289 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142411337 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193365131 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136196179 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211192556 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213601958 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169917293 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207158634 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.148049943 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194928275 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190768081 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177781473 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176272056 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.150638109 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160605023 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225237538 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.209070684 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133573911 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200787823 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172772687 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20234394 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176264301 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170588865 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18467647 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159727985 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168502876 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168194361 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126564673 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191356979 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.169192319 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159811498 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179121557 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202561923 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132309847 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157408944 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149465107 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19722025 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1426426 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133386979 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217511323 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.160661424 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186988159 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244173323 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131259621 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198123619 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149181761 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16050867 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142029269 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144835877 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162572648 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176446304 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215465815 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133704267 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209614153 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166880498 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196786879 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160517323 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174936948 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.267302104 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.160030963 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194360635 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183073944 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229027443 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152858041 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204854467 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170241549 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180354656 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167189422 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179134346 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219765629 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1971513 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168178536 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161788325 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144985277 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138836137 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.166379577 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153125566 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199780952 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142800801 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.168445827 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.169247765 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177197331 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14893988 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172412306 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203449073 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182918478 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191677955 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218237236 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139091252 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207112748 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20982818 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131245336 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.197281353 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173065578 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175466722 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153080796 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.164976287 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141451598 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246001734 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12763757 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189479444 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177001473 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199305264 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174112052 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.166247939 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181341615 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171199901 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178893186 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156603657 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.155803322 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199394938 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136480393 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128330266 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203319606 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163028836 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.195094429 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144379868 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.205492546 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198872398 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.154230593 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137527786 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315519963 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164620712 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227345453 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137525145 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169242114 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148948591 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191219273 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.167069735 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202982459 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131696596 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131305073 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.175314787 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.161166839 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.168896587 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170231125 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214420555 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163026449 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217161736 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136153486 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284105141 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143546113 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204705283 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118030617 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.655769435 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144264347 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136437056 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173355057 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210404052 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218524565 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.195367124 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.149603835 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167292467 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129433348 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132392434 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19639187 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153775 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200132038 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150133989 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.134593251 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142946241 seconds)
  done (took 87.529799283 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163792821 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15543731 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171965903 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22440135 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198296489 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294817076 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.232505671 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249149673 seconds)
  done (took 2.84143247 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121140455 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161981064 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14268498 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145999483 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.112086934 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.488321111 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.16261921 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122563069 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163382231 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.155519096 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138082251 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.576933764 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118004283 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.149349716 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124239859 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137787465 seconds)
  done (took 4.161672153 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.744146792 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546103074 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.059861082 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.284376836 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.265212199 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.2097944 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.790285605 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204830198 seconds)
  done (took 12.249352127 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.168283049 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.160735205 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.453214153 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.311671478 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.186724571 seconds)
  done (took 2.434347725 seconds)
done (took 133.339194726 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125806857 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126726196 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125636425 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156088524 seconds)
  done (took 1.675188919 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195418793 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092657963 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094781639 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121357357 seconds)
  done (took 1.65688221 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.468470967 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092460487 seconds)
  done (took 1.74297197 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.155119399 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139203289 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169042588 seconds)
  done (took 1.630856689 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137932523 seconds)
  done (took 1.292197015 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.133146556 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132706313 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.273549748 seconds)
  done (took 1.700637949 seconds)
done (took 10.860501666 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123486544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.92953166 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.440045734 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136696377 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713774303 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431385286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.426497055 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17794656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176772056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.14117084 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135838844 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690813883 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.443390534 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.877562879 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.397641616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.904634307 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695142044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114347295 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148061203 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11416077 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.408319915 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140361842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114747402 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114108687 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.722157889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423770111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111597244 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.917885823 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11197906 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116494308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.430853119 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113250574 seconds)
  done (took 21.093694009 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115375646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170951696 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149185115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115139017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117446498 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142135122 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125117632 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125213702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207393062 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113254458 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16436495 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113295001 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118549631 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.143063148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140229298 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112220769 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144999212 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117015026 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121169957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.148108983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13637581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111789008 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.144512445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116528731 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113576777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.163260929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1148298 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124905148 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141914379 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117505081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117909128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143576561 seconds)
  done (took 5.41972871 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162557966 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180104223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.152018628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152455855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191029381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11604103 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.229436 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1532598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208681447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113572796 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135697768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141761889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154989132 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114828854 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168130899 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113418972 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116490305 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144221556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121296845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114833989 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164988542 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.1128798 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114987708 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144617376 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113708143 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16344503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114771864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126790828 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140919973 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118895981 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11960913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141703559 seconds)
  done (took 5.727378829 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127565908 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129038394 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135007012 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165757448 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122978432 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128414025 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157736816 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123504648 seconds)
  done (took 2.254050255 seconds)
done (took 35.661654512 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142552289 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132695447 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13497555 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157554556 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.25832923 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122511187 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.13093983 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.120491786 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.159646054 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135462824 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113330371 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151546953 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134179938 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.125139743 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.260015603 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127738739 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.265743195 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.262749283 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.12070493 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128361215 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.156250176 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234421812 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.158863729 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122043463 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.251478023 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117245937 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.252884335 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124784332 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123216236 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.145636807 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.231377057 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.159427235 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.122926673 seconds)
  done (took 6.542639938 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.244815152 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.154193829 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123825691 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120995998 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123288003 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152065522 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248661309 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.154960247 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122373543 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120314783 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.152517515 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.230721482 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159721994 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118048833 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123897931 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110877518 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.281545448 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.155264679 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.115344569 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095643307 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117473341 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.152148113 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.262865796 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.14920156 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122333372 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121491332 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.154458894 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.12742535 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123139739 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.124358939 seconds)
  done (took 5.744804467 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128182393 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136372375 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.168144524 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191487668 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152374242 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16607876 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141914736 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136830959 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174340245 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11598554 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130196057 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182883957 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133385442 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125864137 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146403082 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135273926 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138944556 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146617003 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124476665 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133440427 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167344986 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133800244 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139322404 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154297112 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114774974 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12341784 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.156719795 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127141099 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12440451 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.161730548 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.119925674 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.120275668 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.148328255 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.152521933 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11726711 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.161007914 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142344382 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127879898 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159309383 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150039708 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118683345 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.148878326 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142628842 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170669766 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.149263545 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12916595 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127921833 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.161313585 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115614123 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134672148 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.189278223 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116808902 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.165618918 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117067046 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11490773 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124024539 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.147073002 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.12041736 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132498045 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.149279322 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.142113625 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122730301 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157683286 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119316475 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127774929 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.145552138 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.116941601 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.11998332 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.173025632 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126075386 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152373464 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115446341 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.159004733 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128268526 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.1263718 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.159244463 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116010415 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127071859 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.158119113 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122497359 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.1287798 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.149956437 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120574166 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132770202 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.168060038 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131295167 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127876617 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.159931744 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120852424 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.117808763 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164639117 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.119219487 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120776665 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.160573186 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117904333 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120803253 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.158160961 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129024805 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114749739 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141381245 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.151358284 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116664739 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140365895 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.149814334 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122642205 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125656729 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187507304 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116824878 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127009054 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.15983225 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117307114 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123607471 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.150341101 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.116616705 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134228118 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.163312561 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12485632 seconds)
  done (took 17.424005925 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.361520321 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.348298547 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191072931 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.436228017 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.132455874 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.279288111 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.346399055 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.349779412 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116422935 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183455301 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178306964 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.319225929 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.150546281 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.14643564 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.349959458 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.409608049 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.181120248 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152002746 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.18421914 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131554147 seconds)
  done (took 6.144021431 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137622062 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153129477 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170560299 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145159776 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.128258765 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165257974 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117266285 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137941447 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.159277129 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12704653 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.119224571 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.164232151 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130452376 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134426649 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.163679854 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149425725 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124005798 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.152593772 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.140128739 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121042973 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135492323 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144471186 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.1263067 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169668737 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.137185724 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.128507289 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.147189895 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12231184 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122485887 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.155598843 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122048119 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134195967 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.15488551 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10692738 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127716422 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.161095784 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124754626 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.1196712 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122155045 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150321372 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131799511 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.130405372 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.155196643 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102107379 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134890573 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111732957 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.162074573 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129867352 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107096796 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.16696658 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129974538 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.13061022 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.154257507 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.14026776 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123879518 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162981308 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129212477 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131296173 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.151751771 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.117308642 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115941509 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119778321 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.156898237 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.13109597 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129085737 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.168626404 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.133827636 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.117029083 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.152481219 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121062531 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.12011872 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.161542448 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137255599 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125454049 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.154255789 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129428416 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125102131 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125703514 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.13008181 seconds)
  done (took 12.024346973 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144161398 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127439344 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.165198055 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.154140506 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.13086529 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.152521667 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127870038 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13730972 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130685695 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.166700705 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132213383 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130559191 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.170037434 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.128592799 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12726393 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164083303 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131556424 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.185381737 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136971439 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143639909 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.164729315 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122845463 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128984633 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.159396457 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147072155 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128000592 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174838346 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130697485 seconds)
  done (took 5.255288538 seconds)
done (took 54.309102348 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.354608531 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.530723174 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.307976981 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.306247981 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.337275102 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.315710848 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.308075415 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.308619037 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.760275978 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.280271869 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.308235598 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.308449068 seconds)
done (took 29.633518979 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.410234506 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.836276534 seconds)
    (2/2) benchmarking "String"...
    done (took 1.601173673 seconds)
  done (took 4.635261385 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.296753671 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.299421288 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.561054366 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.300273527 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.30077087 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.305009758 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.301699115 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.302975315 seconds)
  done (took 16.568545028 seconds)
done (took 27.112429121 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.286927771 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.491334201 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.553247476 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.284344714 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.30302293 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.318127058 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.301146186 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.333997325 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.31206221 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.28364502 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.724303849 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.559730826 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.315774955 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.670947078 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.281591309 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.307983686 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.326512101 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.550810406 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.307687382 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.334420123 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.279762776 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.290909917 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.307683954 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.30724805 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.312179708 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.306150143 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.292436821 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.308225761 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.502438807 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.327846185 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.337793745 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.304714202 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.293436816 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.316936832 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.307470975 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.316068835 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.50163105 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.317341345 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.286538499 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.324565257 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.502254463 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.32273458 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.304449786 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.303674293 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.282175442 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.359874473 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.303725605 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.421544293 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.325625552 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.318939486 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.323512802 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.670882732 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.31254438 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.316700798 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.307469058 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.544845546 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.327839007 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.371846363 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.331251152 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.314537815 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.306149247 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.302744216 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.31198469 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.321276942 seconds)
  done (took 150.097590519 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.304781018 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.30943496 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.309277528 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.310718225 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.308595615 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.310011532 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.305698345 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.304039188 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.309044356 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.309265263 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.31064194 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.306705262 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.308952533 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.26162094 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.314258272 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.329481686 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.311705923 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.327778899 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.336736596 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.306203545 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.315247983 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.31029653 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.327180274 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.309296567 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.314983519 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.393774882 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.354892088 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.321168445 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.318346314 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.307185343 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.313200761 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.314591044 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.960002519 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.158668153 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.317899404 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.338650958 seconds)
  done (took 84.073420401 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.306771081 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.30799111 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.306708929 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.341100183 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.307183878 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.307495491 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.305393093 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.898361527 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.914822412 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.273219468 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.44995154 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.772421108 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.310314253 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.605199916 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.310568739 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397794497 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.319357481 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.307972859 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.322044368 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.33479666 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.308154053 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.307393752 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893864149 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.317607346 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.335411038 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.487939699 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.320431675 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337171887 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.697725867 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.304760902 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338784012 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.639613831 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.354649093 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.304379803 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.679774352 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.482397598 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.418131374 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.305578108 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337849532 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.304406609 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.587689493 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.305656107 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.301981542 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.304572186 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.305831065 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.983235104 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.309842256 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.886112524 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.306133808 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.306214462 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.305012331 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.304905441 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.270595163 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.052647958 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.307344652 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.301968265 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.304463106 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.304555673 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.301471668 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.335255042 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.252403239 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.398630892 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.30150026 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.305714564 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3341452 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.300977332 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.496089662 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.303684706 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.020018448 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.361840988 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.399451423 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.870887412 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.30216369 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39757649 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.419353595 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.303972546 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.302009319 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.302707313 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.301193319 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.414803572 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.30322295 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.985433096 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.479811076 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.319343127 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.691082203 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.404467056 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.302578521 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.652213547 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.30578127 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.301541584 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.053344615 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.400650533 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.30275818 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.304482484 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.304019837 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.985903666 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.871306285 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.572363512 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.307952467 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.056095063 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.309449953 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.16548065 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.864217559 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.966325008 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.306611776 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.414058743 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.481883773 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.321613994 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.303056641 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.702216189 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.307795973 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.363018423 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.308280614 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.705330856 seconds)
  done (took 385.983018824 seconds)
done (took 621.35605304 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.173686033 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.128838139 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.274328858 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.129991472 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.114149686 seconds)
  done (took 12.021473939 seconds)
done (took 13.223814509 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.497430603 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497044868 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.366243717 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499860574 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.338298978 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515884939 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.47885966 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.3254619 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.415850504 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.388716821 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413484466 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.359020541 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339110968 seconds)
  done (took 19.635586312 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.60373082 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.314422972 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.374677719 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573388755 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.349050546 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.608981643 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.629413372 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.314996749 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.477492767 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339707287 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.323261156 seconds)
  done (took 19.11050018 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.600895776 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.31519054 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.374231452 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.577404112 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.350606494 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.602197036 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.632689389 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.317087479 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.471681008 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.352720525 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.324412638 seconds)
  done (took 19.120333025 seconds)
done (took 59.068909133 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.343275213 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.401906243 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.337425771 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.322502068 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.320502094 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.320412924 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.324498327 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.321334645 seconds)
  done (took 11.892174335 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.322379197 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.320130943 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.319143508 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.322133902 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.319696829 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.320629586 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.319775041 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.321537814 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.319836282 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.318492242 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.319854648 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.318753644 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.320238059 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.319811772 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.32075079 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.321850678 seconds)
  done (took 22.328820884 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.323466005 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.318699519 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.31831469 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.319415745 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.32016719 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.324386041 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.320631165 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.319970164 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.32252466 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.319596443 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.320198264 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.320177325 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.319813787 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.322484761 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.321722892 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.321025126 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.320365248 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.32022328 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.32363595 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.319870014 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.322427907 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.322906055 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.322493987 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.321678189 seconds)
  done (took 32.908161938 seconds)
done (took 68.333045341 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.30719616 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.326325281 seconds)
  done (took 5.834780969 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.380656434 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.381303582 seconds)
  done (took 3.965373366 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.321493989 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.321276142 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.322182759 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.321546428 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.322669534 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.320428348 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.320854821 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.320975148 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.323575822 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.322298756 seconds)
  done (took 14.419485314 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.321780698 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.322106535 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.321999643 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.320689681 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.322643387 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.321288425 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.322358852 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.323839671 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.322689065 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.320445622 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.322173103 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.321409067 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.322511185 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.321508034 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.322739392 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.321107491 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.32174001 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.321048196 seconds)
  done (took 24.998485958 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.336342463 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.340579413 seconds)
  done (took 3.878727122 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.450848225 seconds)
    (2/7) benchmarking "second"...
    done (took 1.362510336 seconds)
    (3/7) benchmarking "month"...
    done (took 1.424650022 seconds)
    (4/7) benchmarking "year"...
    done (took 1.417502284 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.36213308 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.340800668 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.3625242 seconds)
  done (took 10.922828762 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.309994108 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.610715605 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.788849796 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.462256529 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.300107758 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.323101175 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.286817295 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.321418575 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.32591292 seconds)
  done (took 14.932519941 seconds)
done (took 80.155845168 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.311673528 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.356358823 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.335332858 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.321835137 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.663687989 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.315119743 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.311293172 seconds)
done (took 16.818392368 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.292682567 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.292324263 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.290121051 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.319511459 seconds)
  done (took 10.396006842 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.319710878 seconds)
    (2/2) benchmarking "read"...
    done (took 1.631510783 seconds)
  done (took 5.152575057 seconds)
done (took 16.752488278 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.32278943 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.321246855 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.321290086 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.322085094 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.320845692 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.321241755 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.321780768 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.322197073 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.323089376 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.322853844 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.323414669 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.321897544 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.324217174 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322476675 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322104163 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323315241 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.322574191 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323538197 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.324459343 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323450319 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.323246431 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322810151 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.321973217 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.323542956 seconds)
  done (took 32.945914397 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.322112249 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.323194484 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.323430934 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.322979656 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.324318093 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.323208314 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.323418465 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.32223539 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.323551185 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.322407861 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324504562 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.323972707 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.3235019 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.324992973 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324222041 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.322620556 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.323303465 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323460654 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323908693 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.323665642 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.324389501 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324352651 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.325701225 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.32542311 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.325740884 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322777391 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.324674313 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.322223418 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.324040532 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.324782825 seconds)
  done (took 40.918489609 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.328380493 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.328727953 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.323551998 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.323012802 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.324692505 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.324471779 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.324555608 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.324350824 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.326004377 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.324712695 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.324176228 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.325394298 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.326103454 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.324211674 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.325388955 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.324970105 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.324540818 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.324174993 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.325713243 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.323666112 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.325249613 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.324791829 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.324871172 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.32520284 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.32559375 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.324976171 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.326673755 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.324935621 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.326239671 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.326750625 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.32493134 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.325815674 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.324831872 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.325356461 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.325284316 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.326316398 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.331088222 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.33199803 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.327519505 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.326402437 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.327335877 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.325909961 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.327302538 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.326510063 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.324880476 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.326069308 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.326366429 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.325898025 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.326139476 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.328617889 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.326695665 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.32762783 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.326885313 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.327257571 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.326689207 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.3273917 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.326288977 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.326686707 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.327558452 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.328167816 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.326787604 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.327430167 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.327667102 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.327738087 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.32814087 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.326078117 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.327119234 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.326950567 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.328414478 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.327436445 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.329243839 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.327211039 seconds)
  done (took 96.6994863 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.327867079 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328438536 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.327487707 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.328183185 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325934142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.327702315 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.328583617 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329072434 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327134416 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.327662019 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328859656 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.328473057 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328151814 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.32835229 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328448093 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.328429193 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.328838903 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329288342 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.327936462 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.32945806 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.329794688 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.329873251 seconds)
  done (took 30.432010409 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.327557427 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.329031119 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.328960084 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.331344205 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.330543527 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.329247975 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.331380588 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.330582152 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330037129 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328829624 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330219763 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330837371 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.331916427 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328337116 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330738064 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.331738394 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330151251 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.329841743 seconds)
  done (took 25.150160705 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.330417521 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.32959187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.330904705 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.329554642 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.329883639 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.328586796 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330687517 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.330514339 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.328485902 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.330949556 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.330649103 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330185587 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.32993336 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328614557 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330860527 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.330128704 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.329924891 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33126147 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.32929027 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.33080305 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.328070612 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330089361 seconds)
  done (took 30.470512185 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33108501 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.330774479 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.330311301 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.329700851 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.328436947 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.330985409 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.330399108 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.331326567 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.33273287 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.331525726 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330366326 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.329992637 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.332098974 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.330499534 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.330408545 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330263406 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.331638203 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.331458355 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.332285671 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.330258371 seconds)
  done (took 27.826731549 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.332454436 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329833652 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.330412258 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.330231577 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33200942 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.330368766 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.331327468 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.330991696 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.329869779 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.330847056 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.333215451 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.331707961 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33060894 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.331741326 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.332550277 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.331353391 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.331466129 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.332641749 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.33252933 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333470912 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.330088108 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330091209 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.331863254 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.331557708 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.331856525 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.331459246 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332151786 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.331484215 seconds)
  done (took 38.49126711 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.331903553 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.331056037 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.332514615 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.332206582 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.332033756 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.331227841 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.332777447 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.331475746 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.332216935 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.330886871 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.332666599 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.331643908 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.333661224 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.330536584 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.332684916 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.332467373 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331012064 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.33224199 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331697807 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332384708 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.332929157 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334839544 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.33148802 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.331095109 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331786475 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.331027382 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331279414 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.334260966 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331271174 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.330610548 seconds)
  done (took 41.170523087 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.351373383 seconds)
    (2/2) benchmarking "in"...
    done (took 1.349634034 seconds)
  done (took 3.911907911 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.332113806 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33223511 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.332309209 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.331040845 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.331792837 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.331927093 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.332316218 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.331500308 seconds)
  done (took 11.866197675 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.325327151 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.331694017 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.332594147 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.332274487 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.331983382 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.32546619 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.333209428 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.337245573 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.326150346 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.327286192 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.329993646 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.331571606 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.3286803 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.327996547 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.330694378 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.330992724 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.334265602 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.33334014 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.331301368 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.33286211 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.333246622 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.329299675 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.331929583 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.335968776 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.327521056 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.33555291 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.335336733 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.337746892 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.326566938 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.333670636 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.32902764 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.337944651 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.334119721 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.333033909 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.333432035 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.334079589 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.336145877 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.334448981 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.336328144 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.340173226 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.333291482 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.334260997 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.329134391 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.332137315 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.334273611 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.336355604 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.334509715 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.332845036 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.327889643 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.331976599 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.337847515 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.327566995 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.337224413 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.332712583 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.332246358 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.33849564 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.340369022 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.329316488 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.332269151 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.340263717 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.344969313 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.341883336 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.333679354 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.339764008 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.337494029 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.34673072 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340363014 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.342597299 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.334655336 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.33375319 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.33522202 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.345332983 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.34728438 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.339370448 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.336070031 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.334638062 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.328796982 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.337392311 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.336392055 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.340856746 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.341219051 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.336611063 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.336942747 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.343389863 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.331021038 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.338369648 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.336240866 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.334929553 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.329229646 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.34062561 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.342976047 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.334873936 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.327916333 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.331889706 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.334470707 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.335351168 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.328470448 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.332648079 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.338359391 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.335116448 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.33427816 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.331453955 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.337211351 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.339894788 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336805033 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.338644591 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.341799989 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329487874 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.339202456 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.343250382 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.336528613 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.331707339 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.337046596 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.338773601 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.331073073 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.33544447 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.341977047 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.333445156 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.341099301 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.337479279 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337358367 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.35038552 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.342349936 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.335881003 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.333640104 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.344614667 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.336443447 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.336125976 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.34261727 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.338119756 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.335355621 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.333830342 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.341385793 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.331776566 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.340848812 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.333168354 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.340040023 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.336265303 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.336645378 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.333311301 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.337282492 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.336593863 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.337369887 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.339975733 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.34185341 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.33520882 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.345454253 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.337344956 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.337365416 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.339406039 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.341685875 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.337804923 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.331031993 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.341080259 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.332522237 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.339329082 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.332220313 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.342936424 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.336866424 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.33853382 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.337808503 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.330985808 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.335256373 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.341701853 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.339043799 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.339924863 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.342525811 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.338287013 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.336920698 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.332484979 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.340150442 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.331111468 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.336810023 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.3426399 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.340511607 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.339099467 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.337222325 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34611177 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.338279153 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.339710367 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.334070265 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.338968568 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.343935048 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.342611363 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.346541273 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.338430851 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.340472205 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.336653106 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.334783902 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.342129771 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.334520862 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.345288752 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.34528781 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.349361453 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.33673415 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.340389117 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.332818667 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.340274562 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.340486993 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.348463322 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.339456104 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.340101783 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336116439 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.342353446 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.33551102 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.34417906 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.331671292 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.341339318 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.340010301 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.342448073 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.338394404 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.335540646 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.338095528 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.343595592 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.339865438 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.339557779 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.335099125 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.342850402 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.333821845 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.337490354 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.343656975 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.341986794 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.343620249 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.348228972 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.338936916 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.345860264 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.343365179 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.337175061 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.34247353 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.341650956 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.342839495 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.347226268 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.343675863 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.338369702 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.348044188 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.344489578 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.336731279 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.343358031 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.349258336 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.343100815 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.335247792 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.345673928 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.341260899 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.342646331 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.343086833 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.337035386 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.347597386 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.345873407 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.351420365 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.33739443 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.348101416 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.340142361 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.344374529 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.340075838 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.344769868 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.345842373 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.348295996 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.350466619 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.343670366 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339302564 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.346761742 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.342972181 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.344010319 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.338204347 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.347548892 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.346145158 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.345789834 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.343949917 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.342263586 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.34431185 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.338014429 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.344545363 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.339470662 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.353049633 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.360730409 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.346965567 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.349880151 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.348526458 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348565849 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.348082758 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.342570864 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.341201314 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342012611 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.340879227 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.341131597 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.346395877 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.340361454 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.348285214 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.344609996 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.34912561 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.347315526 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.345575051 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.340588933 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.348384887 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.346016284 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.345825801 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.338809378 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.348145177 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.342426526 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.349274773 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.347632175 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.340924096 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.352104864 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.351895819 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.343220041 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.345224999 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.342724416 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.340656136 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.343510881 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.350751511 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.340930191 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.351053024 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.341651549 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.344674945 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.343392019 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.352356 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.356509396 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.342030857 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.352115605 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.347420971 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.339994089 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.343801777 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.347898972 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351242386 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.357650602 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.339833324 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.35141958 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.349620098 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.34870365 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.346938825 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.348252241 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.347222295 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.347492119 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.354651402 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.354434778 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.345134937 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.351857509 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.358244652 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.349374664 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.349132169 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.339095435 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351025226 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.357136048 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.345149389 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.349913342 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.346120031 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.350440187 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.347446447 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.349166513 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.348012887 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.347781941 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.353881467 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.354593311 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.351556116 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.350018635 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.355482928 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.359482508 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.35500294 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.361707673 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.345265593 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.354709257 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.348837593 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.347176986 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.346952724 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.347112187 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.352343457 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.344712528 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.353660943 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.348968757 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.347312834 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.351638772 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.355745567 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.345567222 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.352978648 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363577288 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.343799775 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.352762776 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.349134329 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.344225155 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.353580377 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.351029383 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.343489827 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.346753668 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.349562123 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.354371144 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.345244847 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.353918913 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.346268079 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.354159332 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.351189536 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.350069676 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.350836733 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.351727744 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.346462189 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.353355467 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356876481 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.363035461 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.348275711 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.352740342 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.347827318 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.358517955 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.363453459 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.349871739 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.357021238 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.35332715 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.346595873 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.351365534 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.357826314 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.346823805 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356635809 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.347116662 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.349752286 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.351271467 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.356355197 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.357490966 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.357066758 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.3481173 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.350327508 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.354401862 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.354258141 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.355176624 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.350400385 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.35945627 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.347799139 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.347975695 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.355960749 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.349004006 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358624114 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348126197 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.352027381 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.351781374 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.357525786 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.355005482 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.354435975 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.34727872 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.35085505 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.361885517 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360656584 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.353958931 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.353102301 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.358128496 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.34994065 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353617401 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.3549944 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.350783484 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.351592482 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.357275224 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.349610871 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.351640456 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.350283108 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.356487578 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.360625139 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.359579866 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.351242688 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.361020505 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.357418669 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.356966489 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.342235819 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.346176495 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.345729815 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.351226493 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.349040578 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.333443288 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.347694479 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.347747884 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.343883178 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.341650853 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.343129645 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.334058551 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.338937261 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.333824185 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.329646795 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.34014652 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.330609851 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.342956949 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.334133183 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.334945677 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.323961783 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.325765844 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.327483039 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.32797924 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.333665665 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.331744029 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.336415007 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.331445138 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.338108301 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.331706608 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.332485452 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.33342143 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.325240811 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336413396 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.325743878 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.333907438 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.33452888 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.32769916 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.334259464 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.332041557 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327614243 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.330970377 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.338077587 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.333668348 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.327669823 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.330775776 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.3371532 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.344226547 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.334605607 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.327601623 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.331328925 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.338504599 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.333595188 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.333643761 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.329363052 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.342760459 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.34682123 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.32950408 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.331061131 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338364995 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.344738437 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.334957833 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.336848078 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.33238043 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.333291387 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.339879646 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.335145807 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.337049623 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.341603996 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.330936162 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.336788787 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.329440795 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.332855481 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.33691779 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.346479483 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.336917053 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.331625571 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.345297603 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.347245692 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.336804002 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.352116078 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.344050045 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.3357034 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.341963977 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.328324903 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.339767589 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.332560415 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.342647223 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.336563513 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.33687962 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.338080257 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.328766801 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.336618182 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.344878661 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.346599994 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.336574817 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.330806354 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.332012833 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.339710884 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.337945712 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.338367014 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.336522968 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.338086028 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.338972152 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.332343345 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.347786687 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.352783394 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.341631216 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.338050187 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.337708085 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.337616036 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.342307003 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.336851653 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.342405392 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.338688371 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.339481471 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.336642161 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.347698706 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.338609438 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.333037248 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.333651064 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.333803501 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.34283649 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.345223876 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.357173005 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.343525502 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.343095955 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.340196624 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.340889733 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.333032647 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.342783048 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.338757468 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.334909465 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.33538773 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.341497964 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.340575857 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.339350929 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.334967742 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.344306136 seconds)
  done (took 800.865673211 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.338874569 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.338433524 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.339899244 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.339902535 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.338956142 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340049077 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340310454 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.340632625 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.339343949 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.342254927 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.339848979 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341088168 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.339692283 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.341059017 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339351681 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.340526371 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34233774 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.340079272 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.341955914 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340163857 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.341522788 seconds)
  done (took 29.363018264 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.341259676 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.342458479 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.340461279 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.341275921 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342592777 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.342021847 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.342857064 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341470677 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.341673837 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342298444 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.342897621 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341861293 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.343168168 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.343088111 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344080994 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343666583 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.34388831 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343921234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.343852467 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.343273819 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341993914 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.343583227 seconds)
  done (took 30.755782145 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.343543422 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.34413712 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.338147412 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.345184185 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.342966835 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.34258429 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.34359615 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.34185305 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.341937811 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.334021432 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.335251889 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.335715774 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.338843608 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.345671337 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.333304408 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.337382315 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.332309575 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.334329684 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.333316785 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.333466868 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.335649122 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.346659392 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.330351647 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.320841826 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.331286614 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.330660129 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.329356298 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.328931061 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.320860562 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.330935663 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.326420403 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.316281434 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.327521325 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.327160125 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.319219504 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.326872885 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.327324458 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.321675519 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.321920243 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.321416777 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.334901979 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.323370974 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.326585889 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.334317268 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.32156848 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.311272914 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.322253606 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.318278217 seconds)
  done (took 65.131900586 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.318857331 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.317069233 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.318787971 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.312733819 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.313353417 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.313160224 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.31355747 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.3134319 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.312746672 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.314421269 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.315852372 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.31046483 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.310003137 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.310549237 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.310133247 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.310069749 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.309281204 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.310211435 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.311225041 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.307588415 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.307549563 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.309331199 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.307144692 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.308693328 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.309082021 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.307791386 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.309225753 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.3095101 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.30906855 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.308796267 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.308948347 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.308891922 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.309480024 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.308257475 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.308670855 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.309068804 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.310880688 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.309493933 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.310125826 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.309323599 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.31042381 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.309495594 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.309713823 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.310263374 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.310272558 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.309474485 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.310474831 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.308990131 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.311907297 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.307877451 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.308111393 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.3083198 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.307632476 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.308328004 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.308455011 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.308152241 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.306940272 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.305609457 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.305761991 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.305973521 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.30589772 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.306211006 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.306606403 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.306917907 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.303280507 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302266174 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.304153442 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304280521 seconds)
  done (took 90.244711284 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305065546 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.304774786 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303416276 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301951332 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302496372 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.302340389 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.30315365 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.302642553 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301438285 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303163436 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303514502 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.300713192 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.301179501 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302299283 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301338723 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301747177 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301997491 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30136064 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301985126 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302043947 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.302022413 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.30198853 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.302797753 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302997342 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.30244272 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.302015462 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.304448379 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302660911 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302533668 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302754458 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303774416 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.302441572 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.304091899 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303551394 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.303164241 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.303315891 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302749903 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303824701 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30462381 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.302763915 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.303466903 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304101688 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.303435977 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.303106502 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303623339 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303587243 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303358906 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.303834054 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303953248 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.303304682 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.304463994 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304411346 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303622357 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30469071 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30621527 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.30369365 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303581395 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304169371 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30527972 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303915265 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303479078 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.303681545 seconds)
  done (took 81.985491404 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304042822 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304497131 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.302927769 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.303068042 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.30290276 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.304742507 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303727206 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.304059006 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305646427 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.305123157 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304560981 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303956306 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305572295 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305115531 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.30355606 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306269216 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304434749 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.30499025 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304026897 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304315536 seconds)
  done (took 27.27456584 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.305500005 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.307372644 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.303357679 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.305584015 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.305883274 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306118819 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.305974798 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306693237 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307016306 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305852169 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306905849 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30787015 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306161697 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306411865 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.305966777 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305459487 seconds)
  done (took 22.08618432 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.307765186 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306951151 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.307499125 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.306914635 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.306813082 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.306114484 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.306550131 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.307111809 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.306961119 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.306531364 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.308290445 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.30583112 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.306819633 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.308330803 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.307552487 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.307497279 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.307137257 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.30673332 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.308327978 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.306973743 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.308416874 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.307761504 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.307192352 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.309046976 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.307770235 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.308912912 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.307090128 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.309503932 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.30764364 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.308049512 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.307871102 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.307458796 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.307661463 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.307423545 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.30816506 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.309216553 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.309645802 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.308627241 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.308885012 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.310103602 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.309229198 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.309272262 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.308773146 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.310016724 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.309405307 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.30946599 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.308772541 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.310874925 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.307836383 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307583368 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.307604395 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.3073365 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.309936903 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.308319979 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.309155148 seconds)
  done (took 73.133235427 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304967278 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304495341 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.303618915 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.305844165 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.304460312 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.304896598 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.307636002 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303773629 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299487017 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.30116549 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.300997849 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302112274 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300674406 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302714729 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303457706 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298401066 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.298892851 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299166732 seconds)
  done (took 24.635128031 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.300189616 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299474696 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.300097962 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.300247523 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.300936897 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.302143805 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298684153 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.300670983 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298619193 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.299497696 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298782376 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.299609068 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298225841 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.299108662 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300434159 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300233833 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.299806121 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29992131 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.299384175 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298766121 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.299648755 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299401399 seconds)
  done (took 29.77697143 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.290672328 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.290314888 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.289818441 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.306552966 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.303433074 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.290472253 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.289943916 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.291516929 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.309833175 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.324831084 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.31924589 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.303876574 seconds)
  done (took 16.793955236 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300906772 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301555092 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301809753 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302724943 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300987578 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300774564 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301032322 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300333437 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301724754 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301727349 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301220353 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301399416 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302512302 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301815588 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301629443 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30288795 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301592109 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301607267 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302374628 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302997751 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302363401 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302180195 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303119557 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302058501 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303766527 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303648956 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302745179 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301738105 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303502849 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303933189 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30302547 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302499512 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3026757 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30369213 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303852663 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301687499 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302988201 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305492195 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303495254 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303606775 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303817263 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303257228 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303517649 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304321249 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30282277 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304215122 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305208368 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303508915 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303948707 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303454178 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304701982 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303878222 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304187358 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304027529 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304577699 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305485711 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305341146 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30450492 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303669963 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305397925 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30546554 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306734924 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305796899 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304521844 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304965131 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305965378 seconds)
  done (took 87.199148166 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304408061 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304727215 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30543232 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304865411 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304822314 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306092115 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30553041 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305106641 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306699848 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307394243 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305137165 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306846785 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305965369 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307130574 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305786807 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305269759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307337731 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306555414 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30540263 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306615143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306770364 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3072849 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308663251 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307449667 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307504703 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307661128 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30745708 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307324697 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307453201 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306009974 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307893858 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307323887 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30822858 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307365348 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308578205 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307487769 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308383717 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31481767 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308115981 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307125195 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309047338 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308413227 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308589341 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307768675 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309777107 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309263858 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308792434 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308049158 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30873704 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308089024 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308990565 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309605142 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308821106 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308475785 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30905743 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309205119 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310049362 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308057375 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309138247 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310736924 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308000512 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308361617 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309163098 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30947886 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311020923 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310879197 seconds)
  done (took 87.501565232 seconds)
done (took 1847.834058347 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.466226602 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422540784 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.300832386 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.308483639 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.299567891 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.29749443 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.308613873 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.300740319 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299639132 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.300015106 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.300281097 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.494517719 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.335838912 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.300596249 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.300816252 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.397422863 seconds)
  done (took 26.625438063 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.3239101 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.316818147 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.418709662 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.319848102 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.339223828 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.49672046 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.377708779 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.317446938 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.475756575 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.339620312 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.318242985 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337815282 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.315975938 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.310898679 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.338737852 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.493893391 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.566167299 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.308462917 seconds)
  done (took 28.908085569 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.737512089 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.326367602 seconds)
  done (took 5.267182989 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.337636385 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.317619718 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.319117492 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.313940073 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.314748339 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.308523918 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.316075683 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.316929054 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.308504565 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.43167639 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.324426204 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.330017121 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.317286987 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319817 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.32518123 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.362696811 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462876861 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.327245861 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.327322013 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.324946035 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.316302084 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.414572487 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.356874052 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.32501349 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.432259428 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.316335989 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.326828166 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.325418963 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.436707207 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.326395014 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.317962709 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318327369 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.318875585 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.265954072 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.85572422 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.313911684 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.342113186 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.326776872 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.325371008 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.467809475 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321601631 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.325698471 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.311090747 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.853760008 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.427320579 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.433021791 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.313940172 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.320654665 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.321570147 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.383401859 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.32102766 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.320796368 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.377568504 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.120344313 seconds)
  done (took 84.495013174 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.354271262 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.313350343 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495907484 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.335226329 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313319597 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313474417 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.312200432 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.583109536 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.315332189 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314772691 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.620990866 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.917977266 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313928529 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.377342808 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.355536937 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.370375596 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.317433123 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.312632858 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.314701756 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.320161645 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871691339 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.3153461 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.314382151 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.389905544 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.354850203 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.83815734 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.313810278 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.323355363 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.315644003 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.31287812 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890146071 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.326947859 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.369321207 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.316847442 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.595560761 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68749775 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650752365 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.317850627 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.332899022 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.316428554 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.339372788 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.83017863 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.673090111 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.314702046 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.316302785 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.828165715 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.316012467 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.316884645 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.320769687 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.585248749 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.314982524 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315840867 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.316868883 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.316736477 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.315995202 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.377923665 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.37257916 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.840564876 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31702179 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.31708498 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.359312276 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.317988848 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.323493414 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323747546 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.319312425 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68085833 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.542089592 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.320846966 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672989872 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.881525876 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.318034441 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974413943 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.317936915 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.323632632 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.348326575 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318212564 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.33233124 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844790068 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.344332712 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.318554567 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.657884637 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.326897783 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.618599611 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.334534064 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317591775 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891523424 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.324218535 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.362664071 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.31964592 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.331333751 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.318934753 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320611307 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.604541189 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.354369165 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.317540808 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.319601126 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.338351777 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319882045 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.334409086 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.319821404 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.95757614 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.326690813 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.333503374 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.321084116 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319080035 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.320081162 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.321561249 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.320642891 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.601545384 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.320450876 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.340553108 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.322325231 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.320518714 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.323018586 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.401791589 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.328807583 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.619746771 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.326102797 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319936954 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.319678887 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.322419604 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330110868 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321733951 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.341746478 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.318340861 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.623703403 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.337368701 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.336021609 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.321787313 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.31964172 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.340189752 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32309712 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.375068959 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.324956486 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108583113 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.370656488 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.367363738 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.320054825 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.332581982 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.321334383 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.345136239 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32243272 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621945556 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.604328052 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.543514056 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.322020488 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.321733427 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.126680132 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.361353005 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504019493 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.342727762 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.322619314 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.6030528 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.539281864 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.325522003 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.322562241 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.326313226 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601660854 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.332344662 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.636596099 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.9237926 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.32851023 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.334469246 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.109479411 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.136230731 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.329103436 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.324737294 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.617289653 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.339022806 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.323223542 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.323341828 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.323721602 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.323356192 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.326598112 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.32362137 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.323366911 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.323615735 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.66549194 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.516142503 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.340053475 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.324658088 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.850559453 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.351896876 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325609353 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.337931739 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.324010392 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.324767947 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.380454489 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.326558338 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.351721921 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.326282562 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.332050351 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.876501983 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.329450456 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.331960859 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.519618388 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056681777 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.331931677 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.326783629 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.32696405 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.392362556 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.877078754 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.344232701 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.625807312 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.343158903 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.366983225 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323258095 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.34446832 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.883827656 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.333845098 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.32498501 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.058286994 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.331588442 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.759481828 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.327262058 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.335282383 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967322582 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.332539115 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.328440582 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.332353813 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324609174 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.645715678 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.326130187 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.337977942 seconds)
  done (took 495.831020052 seconds)
done (took 642.318490385 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.327525294 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.326412862 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.333843726 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.332817479 seconds)
  done (took 10.54058607 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.345512628 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334003621 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.342936799 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.334542186 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.34304855 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.333594048 seconds)
  done (took 9.253404875 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.325667348 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.327620261 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.332758158 seconds)
  done (took 8.206255164 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.53072972 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.34488505 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.676642569 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.337426657 seconds)
  done (took 9.109877493 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.344515918 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.344795815 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.344040952 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.345115133 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.346854586 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.347121447 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.345887002 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.346189096 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.345087329 seconds)
  done (took 13.328763208 seconds)
done (took 51.65866594 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.359954358 seconds)
    (2/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.458776719 seconds)
    (3/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.3507588 seconds)
    (4/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.607159894 seconds)
    (5/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.413382737 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.414777157 seconds)
    (7/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.363828788 seconds)
    (8/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.53865374 seconds)
    (9/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.331325917 seconds)
    (10/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.652361538 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.3292621 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.405675325 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.623631298 seconds)
    (14/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.410366301 seconds)
    (15/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.433919806 seconds)
    (16/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.538138939 seconds)
    (17/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.539921404 seconds)
    (18/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.445475564 seconds)
    (19/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.536868416 seconds)
    (20/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.357482556 seconds)
    (21/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.323999565 seconds)
    (22/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.433735873 seconds)
    (23/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.538096633 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.412869697 seconds)
    (25/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.578045702 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.364770883 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.57631903 seconds)
    (28/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.490498734 seconds)
    (29/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.331824701 seconds)
    (30/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.40469124 seconds)
    (31/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.417183438 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.584005946 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.61119279 seconds)
    (34/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.347114709 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.435176211 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.403020859 seconds)
    (37/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.473456284 seconds)
    (38/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.523959971 seconds)
    (39/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.425825504 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.432379871 seconds)
    (41/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.421275016 seconds)
    (42/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.367136489 seconds)
    (43/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.47693785 seconds)
    (44/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.447245044 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.678030748 seconds)
    (46/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.444438958 seconds)
    (47/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.514966311 seconds)
    (48/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.380999965 seconds)
    (49/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.450243063 seconds)
    (50/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.511862003 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.572801172 seconds)
    (52/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.367257725 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.414169854 seconds)
    (54/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.312600939 seconds)
    (55/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.314531886 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.446740923 seconds)
    (57/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.36769948 seconds)
    (58/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.506717841 seconds)
    (59/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.407824582 seconds)
    (60/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.396001551 seconds)
    (61/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.312338245 seconds)
    (62/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.317946492 seconds)
    (63/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.702276384 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.577111609 seconds)
    (65/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.404424485 seconds)
    (66/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.487367717 seconds)
    (67/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.327380123 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.432317879 seconds)
    (69/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.427584142 seconds)
    (70/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.681165574 seconds)
    (71/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.753219563 seconds)
    (72/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.320517416 seconds)
    (73/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.421545543 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.352100878 seconds)
    (75/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.37797344 seconds)
    (76/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.408867532 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.489450716 seconds)
    (78/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.451781952 seconds)
    (79/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.315188288 seconds)
    (80/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.574906211 seconds)
    (81/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.829716028 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.418116521 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.48925618 seconds)
    (84/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.314837529 seconds)
    (85/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.375920309 seconds)
    (86/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.353185464 seconds)
    (87/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.373122108 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.447268848 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.421577829 seconds)
    (90/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.444451586 seconds)
    (91/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.628096691 seconds)
    (92/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.314607653 seconds)
    (93/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.504456864 seconds)
    (94/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.431020296 seconds)
    (95/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.37507793 seconds)
    (96/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.31375442 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.339238637 seconds)
    (98/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.331251451 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.579858353 seconds)
    (100/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.680139973 seconds)
    (101/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.31378553 seconds)
    (102/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.3153334 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.455363133 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.369285789 seconds)
    (105/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.495654778 seconds)
    (106/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.314245356 seconds)
    (107/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.368637403 seconds)
    (108/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.496930531 seconds)
    (109/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.420524586 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.416597354 seconds)
    (111/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.431390785 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.336643142 seconds)
    (113/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.359304403 seconds)
    (114/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.61713632 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.464502122 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.447576169 seconds)
    (117/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.545887966 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.483385269 seconds)
    (119/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.314452393 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.465944348 seconds)
    (121/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.314819639 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.452170631 seconds)
    (123/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.578700118 seconds)
    (124/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.397849291 seconds)
    (125/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.363592593 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.4511453 seconds)
    (127/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.608602182 seconds)
    (128/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.608377498 seconds)
    (129/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.377623809 seconds)
    (130/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.315941831 seconds)
    (131/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.386942471 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.315702072 seconds)
    (133/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.501243656 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.445832944 seconds)
    (135/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.410170212 seconds)
    (136/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.403783944 seconds)
    (137/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.40824438 seconds)
    (138/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.651174188 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.337610628 seconds)
    (140/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.537637796 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.444873642 seconds)
    (142/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.457123924 seconds)
    (143/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.541932743 seconds)
    (144/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.416434901 seconds)
    (145/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.499609267 seconds)
    (146/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.837599463 seconds)
    (147/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.472789016 seconds)
    (148/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.429052127 seconds)
    (149/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.378549241 seconds)
    (150/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374356454 seconds)
    (151/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.318047605 seconds)
    (152/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.3164519 seconds)
    (153/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.345235279 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.506153116 seconds)
    (155/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.56156711 seconds)
    (156/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.407018638 seconds)
    (157/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.317490603 seconds)
    (158/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.359205238 seconds)
    (159/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.327679616 seconds)
    (160/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.319049937 seconds)
    (161/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.521442421 seconds)
    (162/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.486039723 seconds)
    (163/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.31732113 seconds)
    (164/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.352145889 seconds)
    (165/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.418267328 seconds)
    (166/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.523356216 seconds)
    (167/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.550032879 seconds)
    (168/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.318877168 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.437028041 seconds)
    (170/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.402220744 seconds)
    (171/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.319105572 seconds)
    (172/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.379391908 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.325813755 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.463647546 seconds)
    (175/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.453556937 seconds)
    (176/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.611390212 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.495799884 seconds)
    (178/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.317593125 seconds)
    (179/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.502178864 seconds)
    (180/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.69307665 seconds)
    (181/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.453512731 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.58908583 seconds)
    (183/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.518365664 seconds)
    (184/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.502624817 seconds)
    (185/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.319700041 seconds)
    (186/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.460152679 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.540495062 seconds)
    (188/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.321877291 seconds)
    (189/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.327053906 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.471729291 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.489734044 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.46512153 seconds)
  done (took 326.629784335 seconds)
done (took 327.849620126 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369172356 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.447002067 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.34963988 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.350120506 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351670542 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.346887803 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.371821596 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.350304552 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.364665699 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.364335444 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.34392755 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.358309261 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.365663876 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.361426802 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.384281672 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.350922306 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.350194463 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.360651288 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.367405021 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.367351171 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351844508 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351391524 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.378292937 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.352905168 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358509297 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358517437 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.355598824 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.342292532 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.359800866 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.366645993 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.342230422 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.358195952 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.368646454 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.363357936 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354214403 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.362253517 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353502738 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.449216593 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.373222856 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.363715303 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.360435745 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.370034653 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.359150068 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.35820022 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.363933975 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.381172187 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361007174 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.367644097 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.344149216 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.357107731 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37452226 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.364446733 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.362913216 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.345973179 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.34439434 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.38428281 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.364566434 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37279941 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.358921538 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354338516 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.386339155 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373090457 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.36429304 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363378071 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.361298535 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.371133126 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.363346148 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.371211598 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.362087497 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356901301 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35682829 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.360505303 seconds)
done (took 107.413520631 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.476050904 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.351396586 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.50803271 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.362368357 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.520409644 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.475800293 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.36237173 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.362887343 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.360697543 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.154308711 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.360700206 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.362375161 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.353787808 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.362733239 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.474212628 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.362303881 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.364045171 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.052619119 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.362744177 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.491819919 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.353395571 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.362720987 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362592409 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.159949742 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.351512551 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.348917662 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.489545877 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.363902499 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.060998237 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.347971511 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.350868909 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.062911943 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.49230972 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.383233644 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.373637967 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.371988074 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.522882584 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.367762533 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.480756456 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.479406528 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.515375884 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.401717272 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.349224679 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.353595205 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.366981807 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.370241027 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.364316119 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.394221069 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.353697738 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.364649201 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.056129943 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.374741389 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.372940197 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.365081419 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.364922042 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.386030281 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.365239398 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.366854258 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.492178797 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.366624557 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.481006679 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.164986643 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.158788893 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.365067259 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.351930285 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.367260154 seconds)
  done (took 110.041108468 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.428220497 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.436720303 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.46757006 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.356357225 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.407409251 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.467453359 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.358246114 seconds)
  done (took 11.161159647 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.365082935 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.366118733 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.406408647 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.405068394 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.367789703 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.530150038 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.367057618 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.368709094 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.365255049 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.411506559 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367160434 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.366970117 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.376988443 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.358887698 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405261461 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.370259194 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.472456535 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.360098693 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367186386 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.516333503 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365168764 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.376795716 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.41074063 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.37095235 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.368429748 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.368850586 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.142560486 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369465108 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367051666 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.367265412 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371003386 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.428790724 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368467984 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.356188542 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.369107787 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47421495 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.368572167 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370373305 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.368005889 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.360675781 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.37062663 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.365340268 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.369709301 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.367509063 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.367655459 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.384341136 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.370358273 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.368087607 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.369212064 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.370871122 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.407668049 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.367644706 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.366081485 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.368390536 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.410685655 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379250625 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.369573168 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.370851735 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370040717 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369327675 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.516027891 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.408478539 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.368931564 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.410618181 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369862867 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368760038 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.371789999 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.366770108 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454112553 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.366699133 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.409517197 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.371753262 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.540675068 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.386683704 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.36953991 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.361239273 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364516261 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370302015 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.351022731 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.368131531 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.367644762 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.365353505 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.367088514 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364992915 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371123246 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.520988072 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46880581 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.372065819 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.379980713 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.370898332 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.37197699 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.415173412 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.366977984 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.371375818 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.41270382 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.480399762 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.414677967 seconds)
  done (took 140.65938992 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.372366581 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.37521166 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.366312039 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.390489269 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.36295735 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.363928185 seconds)
  done (took 9.47458687 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.365172436 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.372373967 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.370963681 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.372561357 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.373509719 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.372840325 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.373764248 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363428358 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.377222463 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.375113685 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.374926866 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.373802671 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.37286977 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.373589922 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.372843696 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.374349564 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.372747434 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.370614447 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.373668682 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372785517 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.359149688 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.373840377 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375174861 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366932163 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.37638105 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.374778322 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.38328917 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.375850311 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.373882283 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.367583204 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.375821662 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.374527391 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.363535683 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.371477175 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.377713909 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.368652424 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377695446 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.375680383 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375387368 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.374804741 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.376368205 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372874359 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.375747049 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.377133598 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.369208045 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.37160012 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.379760513 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.392335373 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.375354852 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.37611919 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.375559194 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.377493767 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.379379887 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.375124378 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.368590781 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368213829 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.379582254 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.372722668 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376720416 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.371359906 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.381359887 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.375505623 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369687306 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.379965579 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.380200532 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.377728388 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370784184 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379330777 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37573944 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.376923799 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.379126998 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.377808988 seconds)
  done (took 101.19399464 seconds)
done (took 373.763846772 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.878478103 seconds)
  done (took 4.128242089 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.370466691 seconds)
  done (took 3.621325567 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.316188028 seconds)
  done (took 22.567477567 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.39316483 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.396905229 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.380353124 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.364704921 seconds)
  done (took 10.784464794 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.645017994 seconds)
  done (took 3.89361748 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.374030666 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.386894116 seconds)
  done (took 6.007259017 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.560666189 seconds)
  done (took 3.811994329 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.610590172 seconds)
  done (took 3.861089721 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.396408678 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.389879341 seconds)
  done (took 6.047329738 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.339423972 seconds)
  done (took 3.587288733 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.074769812 seconds)
  done (took 21.328188641 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.388398239 seconds)
  done (took 3.643203569 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.408322036 seconds)
  done (took 3.662742376 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.891179547 seconds)
  done (took 6.144288153 seconds)
done (took 104.338221093 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.366546962 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.375025552 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.374114832 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.372601402 seconds)
  done (took 10.742286491 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.444959914 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.446542222 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.454941583 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.441794396 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.440266821 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.44778581 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.409101813 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.406923188 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.4371676 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.434489962 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.450608938 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.44105212 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.44886606 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.408669267 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.43423513 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.450778375 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.437518207 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.456596686 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.409498667 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.440251909 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.383020002 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.442549753 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.437370481 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.383845082 seconds)
  done (took 35.643065206 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.868206387 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.445397039 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.529721358 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.425735291 seconds)
  done (took 7.523566656 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.489208768 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.489723361 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.505572873 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.550233055 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.571131157 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.503652287 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.411637835 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.406710229 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.392371602 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.488625912 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.566141668 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.488308222 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.703467721 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.38534246 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.703347449 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.38469015 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.384900135 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.488530275 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.538589194 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.568242498 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.385444688 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.486797563 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.492567366 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.489494362 seconds)
  done (took 37.130943207 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.39407655 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.402567109 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.386433937 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.401523078 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.385187628 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.387189061 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.388826221 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.393397355 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.387184914 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.385346857 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.386901807 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.399801657 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.385863915 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.386295682 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.394224338 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.386942719 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.387652658 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.392915077 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.395234254 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.38688868 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.386514863 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.394522051 seconds)
  done (took 31.853799465 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.371386192 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.37051006 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.723964652 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.626555343 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.370987686 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.377081785 seconds)
  done (took 14.096559057 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.446530475 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.581358529 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.378757211 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.721506319 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.809761795 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.384660326 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38009632 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.619680679 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.913267925 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.912216819 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.435082837 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.44875002 seconds)
  done (took 20.289415626 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.386673168 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.380056568 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.393087603 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.395032227 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.432875189 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.382722759 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.38785748 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.372212052 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.440368944 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436481154 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.384567098 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433980012 seconds)
  done (took 22.085753594 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464742448 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383192756 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383147719 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450765173 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382370442 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383071397 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.443561048 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.075728332 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.391569477 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660475582 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391388631 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473235597 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631444467 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384744514 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389524186 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.36510908 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618485023 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862515061 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386758546 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384224182 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432220065 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3975813 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398567279 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587328525 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394004855 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384967544 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.736811675 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383858631 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663852748 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644456989 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646963978 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39429689 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661090239 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030407391 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491553858 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.586412464 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389728082 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386949115 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.366806301 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.412276452 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398601059 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388300484 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63766047 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395801747 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386763229 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386060431 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092469505 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.394957995 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.387472386 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38821504 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641059141 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478731775 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.392976242 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387748617 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401990436 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387096811 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.393622099 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516070231 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028548443 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387559575 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411340356 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.38800341 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382265459 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390421416 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032147748 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.397013713 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393532778 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393988518 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388883804 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389506074 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414619056 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38820846 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.412366669 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387823486 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15945473 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398199079 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391579435 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918449963 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397328614 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.389284476 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616015691 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388440879 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38967086 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.38891337 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389363433 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125434012 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39852842 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.358513512 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431583425 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083291999 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594229771 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418414469 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418762688 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612476362 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.358366588 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391471653 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.394799471 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393524731 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412900072 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090073629 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391470421 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396839443 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641688073 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.601158144 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40215342 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.368328931 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863547422 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40386703 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.41903479 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397266339 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602107648 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.009561542 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65207195 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410922667 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433260821 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39221304 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184377482 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396951879 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.396211993 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39939367 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669356643 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.216209481 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39264959 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467067392 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39190727 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391640184 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391817929 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395269272 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392706582 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.574456799 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410313827 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.649036558 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.402479941 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393275703 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.394783032 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413069714 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.395004326 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613704827 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394696083 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670774258 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391690727 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394386726 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393436097 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.612801214 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.408965981 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.400012306 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.735989745 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402004464 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402574306 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650319879 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434871706 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507187979 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426681038 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.402311822 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64251301 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.401521605 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.40061536 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393903787 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396231854 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398994566 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.403392079 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397330483 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022794706 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372984123 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402819935 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394602847 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.412310032 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471075282 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405231212 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599502858 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407175949 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393024981 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.404110173 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.400597387 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624459859 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651633861 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.415694676 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571951364 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.860702923 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007834439 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412973197 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.395703083 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.396581276 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.396495359 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397627596 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396668762 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397669064 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.601744426 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664609251 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406931098 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.015493052 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401760262 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398800611 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.412112057 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653124427 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.415671526 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398179123 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.39778802 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39814842 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425121585 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.66097644 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627716763 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.416019723 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398670917 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.917839892 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4078287 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39971736 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399969676 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427343459 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398881457 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2327179 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.74113751 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38951239 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654753389 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40810822 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.437253134 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.399914257 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400449733 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400415011 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.410669703 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427852261 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.604594185 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408754447 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401985257 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043282469 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173236531 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960955195 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414678323 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.404830544 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408882477 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106615701 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40055106 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400081686 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645691301 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102675754 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399670491 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87092035 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.411310879 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161685005 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658418103 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636311055 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399801233 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.40839496 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661265973 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622446466 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428987443 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401329429 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409903013 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.37072761 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941229213 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402221582 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588391552 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105967413 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400552703 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41239462 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.466625683 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.402695801 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796705513 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410490143 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403161162 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403929956 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.429629637 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237958798 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410464525 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403025867 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045671308 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408026265 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.873986462 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404597661 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.610412603 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669733376 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.644843249 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.414255219 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.404527211 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.648971558 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661701303 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414318379 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41198712 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973061596 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.261096053 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.413389378 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404781346 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194328031 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419728123 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694698666 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.422971928 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.41978101 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414720258 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405241618 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405881949 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.406243005 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411966968 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383502614 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883021728 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.411347194 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413316139 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408694617 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413257781 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654134549 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.422368591 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.021657342 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635635206 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400010044 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441059153 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.41131748 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408179001 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.383757217 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406456532 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405906414 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418113008 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62735233 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405640617 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.375975233 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486630939 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618323872 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406040225 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410714227 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627579781 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.414127286 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.409245822 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181156311 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438591591 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409248725 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407579185 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412177874 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443711172 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480589302 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612902347 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.671251982 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.674440671 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812533479 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412145333 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409970997 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.42276085 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488884701 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415415205 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.425261714 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.407889942 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023934229 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184239545 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.031019385 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669367616 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417888039 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419089423 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408781197 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649565762 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408778953 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684946536 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408706316 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.410653571 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448092092 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412746408 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419252898 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628688734 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682978483 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409034208 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408355501 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409911793 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.409518339 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673740744 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.629965833 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892644424 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942752378 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412530528 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413892091 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122540908 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684809541 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410808206 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41020251 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410091653 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.434513051 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419247103 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.418052761 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421826768 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638611316 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668975088 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079761032 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.667453874 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.446496529 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.338996091 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423146819 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666369076 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24929363 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61876942 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042253451 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.132656847 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666206459 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488156125 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619566006 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.419105286 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650866738 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.421033622 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41362448 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415101669 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413644671 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.412894347 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.670539525 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041579819 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668295794 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.420485573 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.421046375 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439291797 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.61958445 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.642272132 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157992967 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63547163 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675986051 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432307572 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412732011 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040675933 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675897231 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422415425 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.419961623 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62981053 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420645977 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451072292 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.28913988 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.413659093 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950121952 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.629805089 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436685835 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414822482 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142778511 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039157125 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.429352975 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906052857 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417207098 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418109852 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699649356 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.423868039 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431645323 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706164502 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.420711918 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428649832 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632477637 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.03962933 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176286165 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.437098427 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417632045 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.418804083 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416919967 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477173156 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416891649 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42842082 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.820594192 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416551075 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418119953 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431498575 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.42978283 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427851807 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.424626472 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418112069 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.426212937 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.391799043 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.395224288 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430371804 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550578454 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965593457 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419372869 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.062297513 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.755323488 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.666574296 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430380055 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.394907552 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.425195024 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418635726 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418608094 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418132388 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410903713 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959133804 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.419424032 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.704138849 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.430636501 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.631240703 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630454188 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.430605304 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628023726 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427055351 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443206543 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.389076829 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418846813 seconds)
  done (took 995.06216506 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.436280568 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.430573254 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.435160873 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.413439096 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.443205241 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.433521092 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.438347411 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.491150091 seconds)
  done (took 20.812383591 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.409185426 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.419408551 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.423612224 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.420041225 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.424370263 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.905406509 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.419121166 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.419024883 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.432836755 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.421584859 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.421220276 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.045135363 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.421008473 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.423806974 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.423725736 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.42863028 seconds)
  done (took 33.150487629 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.173600446 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.450542884 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.048701686 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.469067103 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.411473485 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.426771281 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.575339412 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.414949483 seconds)
  done (took 26.263440691 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.425509564 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.425787399 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.427150856 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.427760552 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426701546 seconds)
  done (took 8.426189656 seconds)
done (took 1264.335060023 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.428373283 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.428089591 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.427891892 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.429005084 seconds)
  done (took 7.006538552 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.393476778 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.392108631 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.393322761 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.414321352 seconds)
  done (took 9.886773663 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.10517862 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.941767988 seconds)
  done (took 5.339959326 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.950076388 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.940550648 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.937077431 seconds)
  done (took 7.12220499 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.699563333 seconds)
  done (took 2.995348616 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.374857415 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.415767828 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.421148358 seconds)
  done (took 8.505260872 seconds)
done (took 42.149862046 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.413754907 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.176618432 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.647196148 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413253551 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.575254572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.571253258 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.664126341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.425490924 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.418654438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.42837197 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413461404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.628130793 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.651811405 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.175358799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.651490673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.174623741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.574262076 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.419066485 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.416561419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.41472616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.665520637 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.414386037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.427476829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.424071631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.579949258 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.561672324 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42338137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.176032862 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.415714747 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.416695883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.567017038 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.4163193 seconds)
  done (took 84.036753583 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416085645 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416913809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.442551441 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415708591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431382319 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.424826459 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.417537716 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416277079 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.417589054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416301753 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416102467 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.416646494 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.419945301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415929226 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.41961525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.416868715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.418073435 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.423256188 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.439372457 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416457689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.415868525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.425069648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416709399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.44590399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.432182001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417670004 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.436443805 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.416818441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.416764276 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41789086 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.427322771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.444460615 seconds)
  done (took 78.827149045 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41629919 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.4177076 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.423273346 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.419452042 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.432688036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.446012727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.42150443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418468137 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.427147266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.430875247 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.432203418 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.418591225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.434098754 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.417165976 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.422287152 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.418221761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417782945 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.434411103 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.425806656 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.419272945 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.420804483 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.417213008 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.434280424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418509883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.426650764 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.420501028 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.418760524 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.423057538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.418244268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419077715 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.430403615 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.430082798 seconds)
  done (took 78.870353499 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.660837295 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.434353712 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.436892301 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.429992657 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.438143324 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.433198385 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.430310123 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.666466611 seconds)
  done (took 15.229614172 seconds)
done (took 258.257933709 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.434684629 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.910199507 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.459017356 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.430664893 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.445953604 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.459486217 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.634962037 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.456526456 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.621852291 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.438732438 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445101711 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.430870988 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.228484357 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.568453433 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.229715518 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.359264728 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.308412992 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.439485936 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.979954787 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.651824145 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.458463128 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.42332744 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.243896133 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.321303741 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.401974106 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.492017783 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.493119124 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.585857523 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.55282822 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.491084593 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.914117778 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.434082823 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.434012958 seconds)
  done (took 65.480550459 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.428753114 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.438523031 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.438988926 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.440022536 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.438334296 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.439174111 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.429523628 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.440253175 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.438944891 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.439128375 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.440030859 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.439977342 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.440955382 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.438444106 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.440365341 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.412004972 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.428669309 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.440316961 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.430652053 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.413199204 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.439260771 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.44019036 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.442210215 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.43954906 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.442057092 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.441069144 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.439395809 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.440816746 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.442360095 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.44112775 seconds)
  done (took 44.407758539 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.440036292 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.987279898 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.17177872 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.43744055 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.43308356 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.43647491 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.720436531 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.441451483 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.435807165 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.43666556 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.892241498 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.444827667 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464101807 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.182141793 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.437261102 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.443226845 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.44258536 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.434478508 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.992964395 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443699447 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.718156836 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443914266 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.720447901 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.443417609 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.43758691 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43541375 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.439698411 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.224203856 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.453687398 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.895359657 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.207151994 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.722809135 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.155869532 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.230229931 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.211471134 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.451397089 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.444428249 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.902106505 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.437259836 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.434064619 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.717763367 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.441865611 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.184902046 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.115770645 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.453226611 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.444241688 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.251252448 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.896903092 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.67651097 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.44198706 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.22210963 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.438697057 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.446055039 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.43731296 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.676558098 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.438939725 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.436011665 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.292166958 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.439930642 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.719582283 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.45410451 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.435924007 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.991141371 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.43767473 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.986899447 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.43881926 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.44476377 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.438059976 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.189062538 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.440437501 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.134710388 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.453243948 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.444860755 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.899744557 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.991616037 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.301781536 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.439259965 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.0022532 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.192877307 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.73882789 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.449342384 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.203239152 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.739632636 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.448951649 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.449102905 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.44930517 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.445883869 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.510089847 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.717259833 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.060596558 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.128323166 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.298851905 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.724001032 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.451439649 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.43860025 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.29694318 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.446845774 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447933411 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.185390576 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.137743242 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.455349984 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.447666007 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.12281521 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.459346458 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.724327218 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.451221821 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.230457583 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.440465502 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.559520433 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.448055517 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.44555103 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.443391526 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.725520654 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.441904366 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.449433656 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.119846011 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.929356466 seconds)
  done (took 199.786119219 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.433131302 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.440908046 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.437318672 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.434093927 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.432924205 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.440992567 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.433573019 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.435280315 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.439713566 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.433518443 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.434187491 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.443869978 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.440478388 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.434217831 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.443124743 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.432841239 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.43501533 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.445186106 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.433973687 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.436121458 seconds)
  done (took 46.052399256 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.450477398 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.999947844 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.970524411 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.458195805 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.450007973 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.441716491 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.497229292 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.45256578 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.451530954 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.738504906 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.615361699 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.451355569 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.450318332 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.450884779 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.970522149 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.428325177 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.736597952 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.995811175 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.451465192 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.997181928 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.423243425 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.451761825 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.440098171 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.002521844 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.755309031 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.72583167 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.499362068 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.999803294 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.45231777 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.451364717 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.000842962 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.458830985 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.443294159 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.985303449 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.453255969 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.464769909 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.452156424 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.502463476 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.502033067 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.740868139 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.004483484 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.736999042 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.463518349 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.613680511 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.454769468 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.424501131 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.008742175 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.45374223 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.429539832 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.455047034 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.460366765 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.979944721 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.453095216 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.981487696 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.461577209 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.454348406 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.000946072 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.98040665 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.979034801 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.622419812 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.445530433 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.729260795 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.454772569 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.01124521 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.456493155 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.454637761 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.454728741 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.618198083 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.003047471 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.730923789 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.743597216 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.74379899 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.457025627 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.511814311 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.456239393 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.743249985 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.511975146 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.846807825 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.743640241 seconds)
  done (took 130.514708444 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.727125599 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.558743868 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.820088084 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.017084548 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.943204775 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.585859572 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.560178583 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.691954461 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.451656409 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.556634729 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.08841664 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.537847497 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.194874167 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51260949 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.552231601 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.567810818 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.850630007 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.415030245 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.094372714 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.067892626 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.463126903 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.545083815 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.957579255 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.653965235 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.443191671 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.00962887 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.37670058 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.95967493 seconds)
  done (took 54.520658929 seconds)
done (took 542.062222691 seconds)
SAVING RESULT...
DONE!
