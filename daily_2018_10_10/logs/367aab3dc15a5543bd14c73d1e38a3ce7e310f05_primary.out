cset: moving following pidspec: 20994
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.235929495 seconds)
loading group "string"... done (took 0.461684723 seconds)
loading group "linalg"... done (took 7.567364385 seconds)
loading group "parallel"... done (took 0.169842617 seconds)
loading group "find"... done (took 1.151581071 seconds)
loading group "tuple"... done (took 2.088629135 seconds)
loading group "dates"... done (took 1.337686609 seconds)
loading group "micro"... done (took 0.244281452 seconds)
loading group "io"... done (took 0.65226329 seconds)
loading group "scalar"... done (took 41.441132821 seconds)
loading group "sparse"... done (took 12.476184384 seconds)
loading group "broadcast"... done (took 1.114043414 seconds)
loading group "union"... done (took 13.692031208 seconds)
loading group "simd"... done (took 4.780929979 seconds)
loading group "random"... done (took 9.638900967 seconds)
loading group "problem"... done (took 1.97656997 seconds)
loading group "array"... done (took 22.598804928 seconds)
loading group "misc"... done (took 1.436466513 seconds)
loading group "sort"... done (took 3.583390275 seconds)
loading group "collection"... done (took 19.435974765 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513224167 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138141078 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132109822 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146832995 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204240915 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143409728 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156661817 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113137919 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.968616344 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18213118 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154127046 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51242284 seconds)
done (took 5.113864633 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.326558886 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093625436 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103205166 seconds)
  done (took 0.870212528 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076762847 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144817498 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093849373 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078001621 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094520776 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07763191 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094728507 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077724674 seconds)
  done (took 1.340537779 seconds)
done (took 3.296856907 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730547691 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275488442 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202149845 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461723288 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197459924 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213038862 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671568268 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.353130688 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251837981 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100346813 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14384889 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387769204 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135737984 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673302926 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089871844 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122630306 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176957289 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440891053 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082744731 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110652963 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116636009 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140765882 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.12838514 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090813571 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185670632 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083330198 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194863477 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108403575 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080549316 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289371842 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200802703 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680107215 seconds)
  done (took 10.836375095 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110832313 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13274493 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097369248 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13902467 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134177086 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099462828 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083911451 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095667212 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12133856 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176142503 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114380525 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136702747 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094808229 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08159703 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115204375 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242840578 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119186952 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104056183 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100703512 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103175034 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12078199 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112120496 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108109575 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092659 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166246629 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221190093 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113045022 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125496998 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097516406 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115068028 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144652834 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143008998 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09382862 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080640973 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171516001 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124301507 seconds)
  done (took 5.126669467 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187261198 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12024898 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167641636 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162689835 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14024052 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158443023 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113290614 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245841311 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.107256256 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163651998 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139402742 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115649356 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080219531 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098469931 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.153444827 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095804585 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.641099322 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162639944 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134884358 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114186791 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102260864 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083573322 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364017868 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103138484 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080273841 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098712278 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065524972 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158721158 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099237166 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.14581533 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121259146 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081579565 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134879325 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209179698 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108885475 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133857232 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095595146 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079079087 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178453187 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104044092 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077128518 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097596179 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101130281 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135992136 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132943419 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097993379 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096530632 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20370795 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080131241 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114730133 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.961385837 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181470074 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090084829 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09517816 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322660753 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100731809 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097171922 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076944803 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276550625 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18387959 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09731785 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079764146 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096915501 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080443852 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.415472235 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084439957 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.785006231 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084466263 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105841157 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.076767456 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09841069 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079488155 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102828197 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102385093 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09789646 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096460706 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080999135 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097307197 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078916482 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099434062 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106572002 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085681461 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096753532 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14711718 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094146353 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097216353 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12813964 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099128768 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07778384 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130650688 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098818226 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080833348 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132892486 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098215075 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090607231 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099321004 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142401277 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095720595 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181930895 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094029935 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076505244 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124432416 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100590983 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129879652 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112651639 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081685997 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102620865 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077347773 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094912973 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15860413 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080824122 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09738936 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082589697 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109601893 seconds)
  done (took 22.641557633 seconds)
done (took 39.284202132 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327188557 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102643446 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101038551 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100929312 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100315629 seconds)
  done (took 1.480050504 seconds)
done (took 2.201528835 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289561973 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172419528 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094413297 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166906571 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09372894 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17369622 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159899458 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111298985 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21843146 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077126307 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16312372 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093982181 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07661596 seconds)
  done (took 2.643387606 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094955351 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114438869 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082368744 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110883478 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076112144 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110656922 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091594352 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117155176 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109006817 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084400709 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093062344 seconds)
  done (took 1.809101223 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093914762 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11184116 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081665593 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109908895 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07622486 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109938384 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091284713 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115029432 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109284878 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084680698 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09254402 seconds)
  done (took 1.797780518 seconds)
done (took 6.967337662 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090601491 seconds)
  done (took 0.80709697 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.919726638 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.992913615 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112182296 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149260332 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298664742 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191968042 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476846528 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124363262 seconds)
  done (took 11.191599682 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.114094283 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.112987469 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103324535 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081720212 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100462971 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08556939 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100381266 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099178451 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081987665 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101290973 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083228994 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101985436 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10210347 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08317491 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102233458 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083372493 seconds)
  done (took 2.323410221 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11848445 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117631679 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106025066 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.1086328 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086517743 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103795697 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105959487 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088869422 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101824211 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10284879 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090686082 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10427109 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10366752 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079424849 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105991477 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108128086 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086543526 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105068074 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105759838 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090536363 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106589424 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095013889 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086563504 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106450024 seconds)
  done (took 3.246314779 seconds)
done (took 18.289758091 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159274527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108561768 seconds)
  done (took 0.992837009 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094957184 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112388608 seconds)
  done (took 0.939774907 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096719551 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095534894 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122657869 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.1089601 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080084583 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095876852 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118869529 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079735221 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095640525 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079665746 seconds)
  done (took 1.708758081 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081847427 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108577355 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102084857 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095343107 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104541361 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095034693 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086626556 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098389605 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108995518 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076663794 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10260346 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113846103 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085751045 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115998237 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104693702 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083458284 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102338066 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09812909 seconds)
  done (took 2.499607346 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078687129 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096417423 seconds)
  done (took 0.911264171 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080615815 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094582589 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081044472 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097038431 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093709647 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076046782 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094430855 seconds)
  done (took 1.352526997 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.469162739 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134695503 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251434635 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084867814 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119612705 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301428773 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097009709 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084333272 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102647303 seconds)
  done (took 2.43734253 seconds)
done (took 11.572026216 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09315047 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116798526 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111971119 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465349157 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106216166 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096937541 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159649353 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250342158 seconds)
done (took 2.142242373 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.14979863 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323091876 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113491939 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066724566 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094747573 seconds)
  done (took 1.344030416 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078878295 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099343295 seconds)
  done (took 0.92043845 seconds)
done (took 3.159823067 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080653791 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096109811 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.111467867 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095804718 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079214924 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09785091 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078466139 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095165359 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077445264 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096044404 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096099778 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080424703 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.095835213 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.080474968 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096317876 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077813782 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093972019 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07959463 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094104579 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077163084 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094007175 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079899994 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094087735 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078191765 seconds)
  done (took 2.903373071 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100240434 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098382143 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102590559 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085761999 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101762748 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086073489 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102573801 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097158573 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085719384 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099330654 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100383916 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084090124 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099652095 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08339351 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099013569 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101209168 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085469237 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097768358 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082398321 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101328381 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102687595 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080457198 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101572359 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102302016 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084083032 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101909707 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083613212 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09744091 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10265152 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083700495 seconds)
  done (took 3.582686991 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084522074 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093891228 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0776176 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101451067 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078620744 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096681604 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07789197 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096006424 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078922319 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094483115 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079898464 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094796396 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077958435 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096541858 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078841569 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098846933 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108342128 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078807829 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095255828 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078406507 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098251266 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078010019 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095423903 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078375645 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095083849 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077417343 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096210894 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.0774268 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095257791 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077502533 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098039567 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081585101 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094536963 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083997342 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098077877 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078318028 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098032708 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094521429 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07885709 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093951452 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078718612 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095133803 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078457081 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101027865 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078926305 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097068142 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077863749 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09689672 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078181287 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098833545 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077012765 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094840552 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079856942 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095251706 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098725226 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077543988 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095379649 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077077363 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095846835 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077766674 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094812262 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077021435 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097953777 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078953711 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11051726 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084760045 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095047011 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079242387 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095913422 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080409051 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097719012 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108644963 seconds)
  done (took 7.140840204 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083400045 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106290045 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080094276 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09663215 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076700092 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095304178 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099089334 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078212658 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097826206 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084826772 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095241491 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079732051 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096387165 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107801448 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078911161 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096808994 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08592785 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093366795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078380315 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099327322 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079547327 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098878863 seconds)
  done (took 2.742359859 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20838465 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104428304 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141634708 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107752165 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082397405 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105778646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102991523 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086991914 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102262824 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083667414 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099580933 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101611852 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083900829 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100163821 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100143943 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084441279 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101615961 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084451844 seconds)
  done (took 2.639399229 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092326377 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098266329 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102918848 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098557393 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098324884 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083018157 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103901232 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107449488 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083465216 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098294117 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090679317 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100311519 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100796212 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081471572 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10046299 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080818267 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100125779 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081397009 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108421329 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104309405 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104443011 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091181228 seconds)
  done (took 2.870222221 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096687414 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100054569 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117228523 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083965005 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094837156 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079126984 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104547467 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080443445 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105712461 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099952221 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081151884 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096897343 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086898691 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097553769 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102711321 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081529588 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100698246 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080571938 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09956987 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077689616 seconds)
  done (took 2.628036924 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102753817 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100283364 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099205865 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09158178 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10005348 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082261261 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109346448 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099801132 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082789388 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125763279 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099892519 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08276573 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109617742 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105923528 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100340499 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091264899 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108773409 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109103543 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083353265 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099263137 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124801732 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082573075 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.218560072 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099167069 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082728494 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100177134 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100446451 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088055214 seconds)
  done (took 3.642367657 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08192669 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098737239 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078818242 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09618274 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078381699 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096254775 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07821712 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096149586 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081249149 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096275528 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080825429 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097995994 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081429231 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097991667 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080901829 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098484478 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083745433 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096019689 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078524965 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095788411 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081450057 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098602101 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080905095 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09613977 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078495383 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09862732 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078936969 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095905321 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080938603 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095199192 seconds)
  done (took 3.423934277 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092137206 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106080308 seconds)
  done (took 0.963567634 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078742058 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115214593 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078253975 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102442495 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086363674 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099376775 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10721922 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085876024 seconds)
  done (took 1.517901573 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096530637 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110175011 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083530732 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11179948 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109697053 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095293146 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159394215 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100701873 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088012493 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097346696 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111935836 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08099752 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104477594 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082013209 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104805963 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087646437 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097392037 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088084333 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101765708 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097943644 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083708495 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110348599 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083626664 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09563203 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082720074 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110208459 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108538819 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083151804 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102422627 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107801639 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087542763 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093097359 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081926651 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100038095 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07958129 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108168183 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111661373 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084407601 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108224308 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083772144 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110461771 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094654209 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086607144 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105375969 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091716727 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100189466 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082640894 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094201019 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09641185 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084061948 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094910771 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081901835 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093543663 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089058085 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104095975 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112281064 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080073261 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101811814 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08482715 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101714222 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087797982 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10129823 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083925597 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098282543 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106337981 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085875354 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106584255 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077583511 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093796456 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08000364 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108923026 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122191903 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091002567 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101524888 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083733266 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097146688 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10260614 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083879971 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106748698 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089786793 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100000043 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105939298 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089769913 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099333468 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083903546 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108685618 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097341642 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083885976 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096687942 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095872806 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098025993 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079943747 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096253055 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108120269 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086334427 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099676718 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079660336 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107723732 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078560474 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100887325 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083945949 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100883883 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108773289 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088562755 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105957297 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10639377 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089259694 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100372767 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085770191 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096756683 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083451981 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102060244 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106046665 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075518759 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102615818 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083320652 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100363095 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089367356 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097901615 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081917361 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107558553 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107013159 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081275395 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096295384 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084522141 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100305601 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086729801 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106890532 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098469467 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077482827 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095143455 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086188381 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100975525 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087029575 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104887828 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103830585 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076306969 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098499402 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086982975 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107687864 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099580925 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082540887 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10435242 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082979253 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099671956 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087338571 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102813482 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081078605 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104388895 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102299614 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077656853 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103817355 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08466422 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098523824 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085726666 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103873782 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102410462 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083096449 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098626364 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088295104 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10124506 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080638013 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099425286 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098637089 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091527903 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102273086 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077437815 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097389719 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090055755 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098272569 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082293302 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099035339 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102398016 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083324372 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098061871 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081691821 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101363596 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112415553 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086617776 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101777499 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087560871 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109728561 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082566303 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103305582 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099648391 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082950412 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101567581 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089436675 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106089894 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106620568 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08522274 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097296715 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088280864 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107823305 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081548578 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098915944 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081678803 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103800795 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.1071093 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085780925 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100616008 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080672009 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101431416 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104983432 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085327038 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099742129 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081889717 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105411344 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081474211 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107495131 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101980776 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091887409 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104093294 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077537101 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104147539 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098533086 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088970564 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095680608 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080604286 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099221549 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084040848 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099610599 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085200707 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094757079 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089964018 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108196567 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100621717 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081545341 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100799147 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090289013 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102485524 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085339374 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104131699 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105893656 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095048888 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099823084 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08532733 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11035829 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101558687 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076455211 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106252722 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080933591 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100467633 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080947078 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099737353 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0854905 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110655524 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105231851 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076803704 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102869016 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081356232 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099378571 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077965652 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107158296 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104031852 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084529174 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109229512 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084088645 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101886506 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104573233 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082945053 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101464551 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083226086 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10430487 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082989075 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10306958 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08166814 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103089654 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099129055 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080874084 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102516992 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082214771 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100962967 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088459187 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102386397 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082858981 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103644389 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101634854 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083711049 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10174254 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08242989 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103979064 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083179764 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101139482 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084721477 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096475985 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107950634 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083008351 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109033077 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082873997 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097818426 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087803649 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.1048585 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106202982 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084812747 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102699719 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084242597 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101140377 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08584374 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109100328 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099089515 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091822243 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106819208 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083460452 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104634591 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083117297 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103086571 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100057284 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084910215 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10223573 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0827333 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100759553 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08790531 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10408111 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083029936 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102902944 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102608532 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083198702 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10270218 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077311478 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10029676 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082476549 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101920817 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090612135 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10226526 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104120069 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081801562 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102950135 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082239228 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09793639 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090972288 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111477623 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103139514 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091252972 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101302208 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084782626 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110827617 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094738305 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080845097 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099561401 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080588994 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110047359 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083543557 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109369261 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100198889 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082110166 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098893264 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084105713 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100727735 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077264928 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099698344 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086365377 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103789766 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081730928 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101926292 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085213932 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102943741 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109185878 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082257264 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103736053 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084276092 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099738232 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081215735 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100234356 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105369606 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083909365 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099614445 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081034146 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101329869 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084454602 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110388761 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083126 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103623998 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089954583 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102136655 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104309236 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087586796 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096177352 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085718924 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100911866 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083625899 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100690407 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105163249 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087104056 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102931574 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090948001 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101513917 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083769344 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102644537 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099662703 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08344121 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10198319 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083970564 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101687626 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085444624 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110352585 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081158712 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104256939 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101513046 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083751728 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10774043 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084236322 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104413015 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110033799 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086045614 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103840962 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089909016 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105729562 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087050031 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103662235 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103239243 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089193722 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100251137 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091575473 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101773598 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084061444 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104003686 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081022198 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102259793 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101378118 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083060003 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106520337 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084225669 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101779633 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08268041 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099764529 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085016951 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105874766 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109467969 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08592911 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104982139 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078004267 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098725919 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084640085 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100187246 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085052563 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104427396 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108128499 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085189153 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102935508 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082138234 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109635464 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108276329 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087602226 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101192505 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087747032 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103003513 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085027264 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103064067 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084224717 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103880954 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108081728 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085340976 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101125542 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091602183 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106172859 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08555736 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10429551 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103134386 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084063314 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097129412 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08443271 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105338081 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090420569 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105077206 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102097747 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093203277 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101525918 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083968481 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106315436 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082331225 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108925083 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097349375 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084589134 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102778253 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084584006 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097425401 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083103223 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099889164 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086441136 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101014386 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078944202 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112336865 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109494607 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08544944 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100872347 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082501366 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09789243 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078862287 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101491803 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084931443 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104121412 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111282095 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082347905 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101357087 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079117759 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103246385 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08611509 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10594957 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080911239 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097820745 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101395196 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085488853 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109039974 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082235323 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103014849 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087490798 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105302372 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080734458 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106708424 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098690985 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086677601 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112993911 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084427749 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103664107 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107366293 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091486974 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104103139 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079318372 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10338589 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085731468 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103295696 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104113283 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085251845 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116262858 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086503921 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101846978 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082343845 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105147084 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101741101 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091012787 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105265076 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085419115 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106956853 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085034108 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112092131 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105199241 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089271729 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105237412 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086305204 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101270743 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102346287 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082008168 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101731984 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084908465 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103644298 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088975749 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111603167 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100903775 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093379445 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11089259 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088148235 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099273968 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083225069 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102181259 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078858175 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103728392 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100680362 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082119597 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101144866 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082991795 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103618668 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089573397 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104707217 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084721393 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.1032182 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096746334 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08612507 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105182968 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084773252 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099576037 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084301532 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104163953 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089503688 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109411416 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103969703 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085439976 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104631483 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085257444 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098075057 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091095799 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103026886 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086520849 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103325685 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084324191 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104939059 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106465601 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09011073 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105114013 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086015036 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116119692 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105973864 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081352594 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101211408 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089124549 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101014965 seconds)
  done (took 57.592227034 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146431597 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08054613 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098104571 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078972749 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113838505 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099352923 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079654495 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099307622 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080595898 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101929183 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078631197 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098099369 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108455261 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1247402 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093235248 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103707014 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097894524 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081462695 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098696889 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080463852 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108645327 seconds)
  done (took 2.867224603 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10514783 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116533757 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114787053 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118958248 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089577005 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114629279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113996863 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115232117 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099879266 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110745857 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118484596 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114536805 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091507013 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110755429 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110484314 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093447294 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119501385 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109604142 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115995612 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094422175 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112602702 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114567909 seconds)
  done (took 3.220460919 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084061348 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101831571 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085329765 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097833231 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083765234 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098431195 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087325862 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101680967 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087128584 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101469078 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082017878 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101170029 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104163083 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078725454 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102216539 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081072599 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151898146 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10680569 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082533379 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104017486 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098101025 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08540778 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097694151 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079749779 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101612912 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088317297 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103049567 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081708123 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10236139 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082699502 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102711313 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080955667 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104800459 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103281968 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083048712 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101356704 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083758406 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103222534 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079627485 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10094527 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084770325 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09884595 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084341382 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104495489 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081228406 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101576689 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08446875 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102939726 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097415492 seconds)
  done (took 5.445217536 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104847344 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160168571 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085817588 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142162776 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120165896 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112149166 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087652988 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141904109 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102609348 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082259772 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122595335 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120862286 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103440145 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090072674 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110853596 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103773156 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086016018 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102707654 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108718824 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085221912 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108719514 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090706122 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12102121 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118048542 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108179341 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083570134 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103287861 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108439948 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096775872 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10939949 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108579273 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090041696 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121942039 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108526218 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103093351 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086131004 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121845698 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103664922 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086670606 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100973812 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087254726 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108938278 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109386114 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122141798 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084247214 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108894086 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083180359 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100206451 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117197285 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086803147 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112731224 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119563934 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107427544 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084791499 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108909123 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120170775 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084667277 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102926722 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107017038 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097895744 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101416946 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107903251 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.098645997 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106212572 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110927252 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098492312 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109119006 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108327832 seconds)
  done (took 8.107150566 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092704888 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110674639 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119911398 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121981524 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091733664 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110604194 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110477854 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090802842 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110557278 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116550195 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110899774 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133847338 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086087156 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114566366 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109983923 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091622648 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11190901 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110202585 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09061408 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111028529 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110905765 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120215091 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091101209 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12109927 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140930625 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105020124 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091469575 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110428728 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121225993 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110772484 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122805566 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090926915 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110908694 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121408411 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124219489 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090828814 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103117942 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110306408 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091433985 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111131462 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105142901 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119877062 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091368197 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10539847 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110442422 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091756339 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121214082 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124078071 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113942085 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09732036 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111321762 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120461324 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110399919 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090682742 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120605533 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14591991 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120940216 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120718674 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110333192 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120692068 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101200899 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128512023 seconds)
  done (took 7.658420534 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107880077 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115214102 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118138707 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100379165 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08220681 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108874065 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082740027 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102295075 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114533391 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095014674 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117167038 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109210515 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110931353 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09744541 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109107588 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111641746 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089416888 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109081516 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115207141 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108647373 seconds)
  done (took 2.936298206 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093404082 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.1239389 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08452214 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113148727 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107991327 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091431217 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106982072 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107342693 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086325087 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108270309 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096865809 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116190192 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105469232 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091482859 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116591922 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111738545 seconds)
  done (took 2.49321348 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096308369 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117377167 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120824124 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084760248 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104218433 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08087474 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106362662 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100769726 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08163213 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121952315 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084914634 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108398216 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104598416 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083244513 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101363244 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088382884 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100825573 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082456623 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104927878 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121080546 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096184296 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104460586 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105179601 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087831134 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105864991 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090236144 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106203693 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103082163 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083995664 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105153526 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085597907 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113197061 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101558896 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084219799 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104016886 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082872398 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.1044899 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085169712 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108006069 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105005962 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083922561 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104784472 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084958755 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106808398 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080377006 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106459294 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10148954 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090815063 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102934286 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084970568 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105589604 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106942979 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086707731 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117035814 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088472995 seconds)
  done (took 6.245109836 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099186296 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108911386 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080203397 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103382146 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087815038 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107852579 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108731093 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088026737 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107209363 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083173814 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106861828 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089423962 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106761581 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108373742 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087498242 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108617663 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080258497 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106396345 seconds)
  done (took 2.60907674 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091710554 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104494741 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09244917 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105241222 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08500644 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108385758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079997694 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104656185 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103423614 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085270376 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104356299 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087600555 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103660134 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087552523 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105511829 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084746893 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108159892 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103200438 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085783342 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10148161 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087236974 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103408329 seconds)
  done (took 2.963428092 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118329091 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124763736 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092138785 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229060197 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104337817 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132715469 seconds)
  done (took 1.642333848 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109190269 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120637011 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10584844 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107360508 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115355176 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107426187 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087513196 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107776418 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117880037 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101625765 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10808105 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118498218 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118593967 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097097113 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115727387 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115167779 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107931739 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087084813 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105706529 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128238614 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087562791 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117178804 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107446533 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088070778 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107768453 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117950871 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117542159 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121899384 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087444364 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118274628 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11525491 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087970592 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118451021 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122654049 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108598175 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098922329 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108478905 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128358127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114264918 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097493782 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10915595 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115586102 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097662172 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113617906 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118103103 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107485092 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093704013 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107475969 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107520626 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135622691 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094783108 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118053229 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115442353 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119025461 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118196354 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13569391 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102777524 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117743539 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115745165 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1222085 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117837246 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094691671 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117470771 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123126147 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116465666 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117986333 seconds)
  done (took 8.149240485 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103170056 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12644552 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107750472 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122724676 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096435826 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108519404 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107421621 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088101522 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108023909 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107287131 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152207586 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088806338 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118546542 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118931599 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108444705 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088319778 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108251778 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11743428 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086640313 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136210675 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108820025 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118111361 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117714835 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097456287 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123289509 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115049927 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108629121 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088932504 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108338276 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108565434 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094579609 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109391098 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118534748 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086832164 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119229791 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109672424 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087682289 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115439216 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108131396 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115093534 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097725023 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128517673 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108391907 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107135093 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122121397 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088664032 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109321821 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08769075 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108721862 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107128107 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122748786 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103770417 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122581856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117854653 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109113851 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089166237 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109953999 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108046226 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088599045 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116137026 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118433597 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108098494 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136168759 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088264078 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108791317 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118925353 seconds)
  done (took 8.036660245 seconds)
done (took 154.76227426 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097811239 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136080736 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095470718 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168372702 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10703889 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119620991 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1379621 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098063779 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106739345 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085572612 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107077778 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087748582 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.1712582 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08569805 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106520003 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108114906 seconds)
  done (took 2.663198164 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19995586 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255926322 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102731854 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106110606 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089269328 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111206966 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104755598 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091781654 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110440187 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085787832 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10951139 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086914869 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105842144 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086050527 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110591447 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088432896 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106357397 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087751596 seconds)
  done (took 2.889146209 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113269285 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15325482 seconds)
  done (took 1.122835233 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119229954 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179764526 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296884383 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15586018 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119311248 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12774305 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156978042 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131203999 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19802677 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123460179 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122116481 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097569509 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140167197 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115708921 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094571508 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11892083 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14218622 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093565693 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116299731 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116454534 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116995411 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106247234 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116599754 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093423126 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182113632 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120400925 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085204773 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107832454 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11609247 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094403261 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113727709 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126374268 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099012213 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175451181 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103032136 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17799882 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097904532 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11209759 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11502144 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091296454 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118411481 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118379729 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104747802 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118346334 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087444804 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119263833 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105702183 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085259113 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115230071 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097980136 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114983123 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113394774 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156349836 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119232786 seconds)
  done (took 7.543880813 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.796434205 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164853117 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091217121 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886563958 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139407837 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103945634 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.781412485 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13303661 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23767966 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762607371 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134133064 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12225515 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229757175 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238682687 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959120686 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313031578 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673481376 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102416738 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14993915 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15385828 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119003895 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138016357 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130202983 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431485557 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09525934 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112413992 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117249931 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100841831 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160200642 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12598352 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115398135 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178291641 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270927408 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186138451 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116303679 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090793664 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112140596 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171370542 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267884986 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217029022 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181723364 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087662924 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111109566 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12196774 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111589505 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10943319 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165845832 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195664964 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173178888 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092377096 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121869986 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120191432 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121318021 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167063487 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121291162 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.30271109 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313232679 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112309716 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121229525 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106875759 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265958813 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124117758 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224759164 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117527108 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213688448 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112423882 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781925363 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189601086 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090532005 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118499473 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119646141 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095005621 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122214445 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168731377 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408864501 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12434645 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09438906 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111760736 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207977771 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125344511 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111386979 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164262504 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116701931 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099536445 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12671837 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123852265 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17221914 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.234416068 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125493401 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119807465 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094692134 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126592234 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117369733 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215306573 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221137524 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163526168 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213278278 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124607515 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186438992 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169069406 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099620139 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195670869 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098776358 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126881953 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123737949 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218622953 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146633426 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122944913 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095489906 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11935253 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149559006 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128560096 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097775804 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192026656 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.462268558 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168402238 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109991122 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128080315 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099246074 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18310977 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096896908 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263847006 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122458377 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170143828 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119867641 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088307148 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120678852 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165479494 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123659326 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121276077 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102167176 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119779371 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235316177 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21997326 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123510597 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222389694 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184104635 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120340319 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172570073 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12251577 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168906722 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121377603 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121330203 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095186448 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799584724 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124666733 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099118652 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117388433 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187504899 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111895641 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103201411 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12490869 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109007156 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782349546 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.1280417 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121296575 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102109473 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119252468 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121408064 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117248034 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09566889 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163565999 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232669154 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122448512 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12028358 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103615277 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183357075 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095838539 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126420781 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125360324 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126109417 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100907917 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116519992 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124615919 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171512951 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163383221 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223313361 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.591131786 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090517143 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126201177 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230646272 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089467793 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290093862 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121256727 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22757824 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167638447 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121801234 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314263871 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168082162 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188919341 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127474668 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175058959 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088256785 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11985808 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165690714 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112757518 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11774875 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165287198 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127278687 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103025575 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960338592 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112414907 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231868139 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109244649 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172018103 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116967846 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100447983 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298108926 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111793925 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108630582 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186735458 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093210734 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126465384 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.870762618 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103812233 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123156993 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119467976 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224018879 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166074955 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119255661 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098787694 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122368137 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164396524 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212136058 seconds)
  done (took 44.434832887 seconds)
done (took 59.502719806 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274779732 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213181275 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260593272 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173536877 seconds)
  done (took 1.876624054 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169888053 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148393937 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120430246 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107504219 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149756675 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085768329 seconds)
  done (took 1.663671494 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.352748833 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270587031 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239248971 seconds)
  done (took 1.748954233 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289684452 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251596547 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356369327 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420008277 seconds)
  done (took 2.321185307 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208953824 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132564481 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111896342 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105112877 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197294404 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250200416 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14181602 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20161894 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122363051 seconds)
  done (took 2.402004168 seconds)
done (took 10.896349488 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.244652538 seconds)
    (2/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.161015178 seconds)
    (3/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.259287772 seconds)
    (4/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.110741672 seconds)
    (5/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.174256122 seconds)
    (6/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.212864264 seconds)
    (7/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.150096275 seconds)
    (8/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.25497965 seconds)
    (9/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.12341692 seconds)
    (10/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.152861494 seconds)
    (11/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.222744431 seconds)
    (12/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.223608831 seconds)
    (13/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099062204 seconds)
    (14/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.249560942 seconds)
    (15/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.124975882 seconds)
    (16/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.116630606 seconds)
    (17/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.211967296 seconds)
    (18/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102239834 seconds)
    (19/286) benchmarking ("sort", Int8, false)...
    done (took 0.210302434 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094883438 seconds)
    (21/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110197384 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112676147 seconds)
    (23/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115591488 seconds)
    (24/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102279616 seconds)
    (25/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194290705 seconds)
    (26/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112865276 seconds)
    (27/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097956672 seconds)
    (28/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.171324053 seconds)
    (29/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.149255244 seconds)
    (30/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220678135 seconds)
    (31/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.170702962 seconds)
    (32/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11407385 seconds)
    (33/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.211976094 seconds)
    (34/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.18709564 seconds)
    (35/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119399311 seconds)
    (36/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094969002 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138362889 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 0.225401654 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135863731 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094972767 seconds)
    (41/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141437229 seconds)
    (42/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166852117 seconds)
    (43/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067126174 seconds)
    (44/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117178099 seconds)
    (45/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.231491727 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085672641 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12667883 seconds)
    (48/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11539389 seconds)
    (49/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.179288772 seconds)
    (50/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175470121 seconds)
    (51/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118593907 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093891039 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132938188 seconds)
    (54/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.116938001 seconds)
    (55/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.164225477 seconds)
    (56/286) benchmarking ("sort", Float32, true)...
    done (took 0.233437251 seconds)
    (57/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.182992014 seconds)
    (58/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092244748 seconds)
    (59/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183242631 seconds)
    (60/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125810876 seconds)
    (61/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.156679279 seconds)
    (62/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.188935181 seconds)
    (63/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.174130946 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112503393 seconds)
    (65/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09502069 seconds)
    (66/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090134475 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112620021 seconds)
    (68/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089538294 seconds)
    (69/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.148146834 seconds)
    (70/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118527087 seconds)
    (71/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110049317 seconds)
    (72/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.221336125 seconds)
    (73/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075634399 seconds)
    (74/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.184018184 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096616593 seconds)
    (76/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118161398 seconds)
    (77/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110309237 seconds)
    (78/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.174187153 seconds)
    (79/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.089124664 seconds)
    (80/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.166949871 seconds)
    (81/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.174081753 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086029521 seconds)
    (83/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116006131 seconds)
    (84/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086834217 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109771878 seconds)
    (86/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098641764 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108952413 seconds)
    (88/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.070595095 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 0.109530777 seconds)
    (90/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089491147 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183604859 seconds)
    (92/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.152879336 seconds)
    (93/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.119909924 seconds)
    (94/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173352913 seconds)
    (95/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.130565364 seconds)
    (96/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112513659 seconds)
    (97/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.183647153 seconds)
    (98/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099486074 seconds)
    (99/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090241728 seconds)
    (100/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090015862 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109009034 seconds)
    (102/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.136843465 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.114964286 seconds)
    (104/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162250181 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095311819 seconds)
    (106/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119814224 seconds)
    (107/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.0675909 seconds)
    (108/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067589885 seconds)
    (109/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.10482982 seconds)
    (110/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.0940929 seconds)
    (111/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.108974662 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087015032 seconds)
    (113/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11005416 seconds)
    (114/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.194664878 seconds)
    (115/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.084368073 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.181753915 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119731435 seconds)
    (118/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095454223 seconds)
    (119/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.157532629 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094821425 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.186602323 seconds)
    (122/286) benchmarking ("sort", BigInt, true)...
    done (took 0.23499833 seconds)
    (123/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.171960905 seconds)
    (124/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101226886 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118214154 seconds)
    (126/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188001489 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094326092 seconds)
    (128/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.1058837 seconds)
    (129/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068487404 seconds)
    (130/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083015371 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11958351 seconds)
    (132/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166907847 seconds)
    (133/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096868224 seconds)
    (134/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.203060707 seconds)
    (135/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091023773 seconds)
    (136/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093181414 seconds)
    (137/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.124668304 seconds)
    (138/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068768171 seconds)
    (139/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136971298 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086286321 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11697673 seconds)
    (142/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068554388 seconds)
    (143/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118455481 seconds)
    (144/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086672185 seconds)
    (145/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.08922925 seconds)
    (146/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.135192511 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110881657 seconds)
    (148/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078429043 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121218551 seconds)
    (150/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.112392161 seconds)
    (151/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.175100923 seconds)
    (152/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.106660029 seconds)
    (153/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066899835 seconds)
    (154/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093199698 seconds)
    (155/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090977824 seconds)
    (156/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099967351 seconds)
    (157/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.149945037 seconds)
    (158/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078106111 seconds)
    (159/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174174437 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.13588672 seconds)
    (161/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067448925 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068724093 seconds)
    (163/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141900761 seconds)
    (164/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068118063 seconds)
    (165/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132993661 seconds)
    (166/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.143725827 seconds)
    (167/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114595941 seconds)
    (168/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122806532 seconds)
    (169/286) benchmarking ("sort", Float32, false)...
    done (took 0.17440188 seconds)
    (170/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094489449 seconds)
    (171/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12255178 seconds)
    (172/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066910502 seconds)
    (173/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091424156 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094097583 seconds)
    (175/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171991471 seconds)
    (176/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184024205 seconds)
    (177/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086848562 seconds)
    (178/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066545053 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120340647 seconds)
    (180/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115481332 seconds)
    (181/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.067943969 seconds)
    (182/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135462343 seconds)
    (183/286) benchmarking ("sort", Float64, false)...
    done (took 0.149380778 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137299316 seconds)
    (185/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173889921 seconds)
    (186/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113629057 seconds)
    (187/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.092004685 seconds)
    (188/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092714556 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.223871378 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111094637 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08583566 seconds)
    (192/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111551425 seconds)
    (193/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08942268 seconds)
    (194/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090299366 seconds)
    (195/286) benchmarking ("sort", Float64, true)...
    done (took 0.23379421 seconds)
    (196/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088084145 seconds)
    (197/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.066697248 seconds)
    (198/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119439477 seconds)
    (199/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112554769 seconds)
    (200/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101485772 seconds)
    (201/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076633984 seconds)
    (202/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.186115821 seconds)
    (203/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.09109028 seconds)
    (204/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067246318 seconds)
    (205/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085167721 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119385527 seconds)
    (207/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067886121 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118824573 seconds)
    (209/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067443818 seconds)
    (210/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.122235697 seconds)
    (211/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.146064654 seconds)
    (212/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119015603 seconds)
    (213/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.318451314 seconds)
    (214/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092435938 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086852175 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117472276 seconds)
    (217/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.121705047 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131045407 seconds)
    (219/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138042627 seconds)
    (220/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.110930177 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109208691 seconds)
    (222/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076493886 seconds)
    (223/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091276043 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08703337 seconds)
    (225/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066740518 seconds)
    (226/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.090342488 seconds)
    (227/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067441802 seconds)
    (228/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110923306 seconds)
    (229/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.077078375 seconds)
    (230/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117250761 seconds)
    (231/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.126008036 seconds)
    (232/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091750161 seconds)
    (233/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088531668 seconds)
    (234/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.155627131 seconds)
    (235/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067780132 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110616472 seconds)
    (237/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099596187 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119314788 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096375137 seconds)
    (240/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.090355111 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086534471 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109608568 seconds)
    (243/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076960125 seconds)
    (244/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.077081347 seconds)
    (245/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116953069 seconds)
    (246/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06766395 seconds)
    (247/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121861053 seconds)
    (248/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067438806 seconds)
    (249/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180300813 seconds)
    (250/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067618791 seconds)
    (251/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112749912 seconds)
    (252/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08762293 seconds)
    (253/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109671655 seconds)
    (254/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112419497 seconds)
    (255/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.101862045 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09492456 seconds)
    (257/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091053387 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08559951 seconds)
    (259/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067200095 seconds)
    (260/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.091018997 seconds)
    (261/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067820555 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108734798 seconds)
    (263/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100887827 seconds)
    (264/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090126438 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095256156 seconds)
    (266/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118695096 seconds)
    (267/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086826927 seconds)
    (268/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113163642 seconds)
    (269/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067247482 seconds)
    (270/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122775455 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093111719 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109959381 seconds)
    (273/286) benchmarking ("sort", Int8, true)...
    done (took 0.222668841 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086490013 seconds)
    (275/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067829806 seconds)
    (276/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11346786 seconds)
    (277/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086228515 seconds)
    (278/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.092091703 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093856835 seconds)
    (280/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111252703 seconds)
    (281/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093281217 seconds)
    (282/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.092777182 seconds)
    (283/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088463666 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.110746666 seconds)
    (285/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100678331 seconds)
    (286/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110842594 seconds)
  done (took 36.127388748 seconds)
done (took 37.016178523 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100066793 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148923164 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096059009 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136574513 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123052594 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091471021 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119006737 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099232704 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123444061 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124791361 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098701423 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09394102 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096474862 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120434866 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096794497 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138482837 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124753557 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094310699 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119227954 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086238995 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118753118 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086878649 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112644538 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069888627 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12183383 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093707369 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116401243 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120269183 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086962783 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110146972 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094027007 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117417439 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086572883 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124529839 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092954052 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119136571 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097286517 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120118207 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113208237 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086306893 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118399238 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087169627 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116591387 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094514794 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116260569 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09259049 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11988159 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099767936 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1391575 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115655477 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09538788 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121950439 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097527645 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118213877 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090591419 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119337761 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091996637 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140971393 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118829533 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091863979 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118254442 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094853651 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116855172 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094799376 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118969025 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121574514 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097959152 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116644493 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097029207 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116331782 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086673553 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119310552 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090226466 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110296813 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095809227 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120952565 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.10974536 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092487738 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117392553 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092218025 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110114766 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089978872 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112559657 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093489815 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113768825 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070217457 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115224815 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093361164 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110546439 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096966849 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117139592 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094208336 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112428532 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098549194 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110350676 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092829021 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111648025 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087163244 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113469126 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09084675 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110999706 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089822052 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120566623 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113244851 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093962337 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12399551 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087128262 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117406944 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086732271 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110909861 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101996805 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121839345 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087210303 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116228798 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086846151 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119508497 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088010002 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111507725 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111094575 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086986234 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116618427 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087663513 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114283605 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094352583 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124795112 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087230354 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11451516 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090259689 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110803586 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092992989 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110851159 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087516107 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113481974 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078202837 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113589334 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087137508 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118566062 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090538321 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120755401 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089052533 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120443914 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092204134 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117476487 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116911059 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.08680851 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074627646 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116928732 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090362855 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113173807 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086974693 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113250144 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086940556 seconds)
done (took 16.959235791 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087709963 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184678488 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15137704 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143232806 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107538034 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112685588 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123716349 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118278758 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114375837 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143807895 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110404639 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132065493 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148393572 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086750394 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11225613 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091598993 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114059465 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102605998 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146566883 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132895204 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164271206 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087451798 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148290795 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136290488 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121538424 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105641713 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112606349 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092297725 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115403772 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112699627 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132623619 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115616692 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088276962 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135441084 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105699119 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120357536 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088337253 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119430127 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08748376 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112374892 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142251906 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13426367 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092956205 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118194231 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09190644 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114925621 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089849266 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121668574 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098699493 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116470413 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126488619 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157054089 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09192483 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122503185 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08696234 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123588797 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122100023 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090049843 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112496948 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091268597 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11328171 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09128297 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127427886 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141900112 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092247115 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121569358 seconds)
  done (took 8.639063794 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104820412 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14018036 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106146043 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131086294 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112124018 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089186751 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112938295 seconds)
  done (took 1.744618892 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089495237 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135767435 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11213465 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137329823 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133363185 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11191043 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12391777 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088838695 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13318119 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115372673 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110073836 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150468076 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.115961179 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097087362 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138426599 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089076594 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137706805 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08940865 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117581219 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136742055 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09246828 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135496448 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090891635 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114658427 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103542428 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113877581 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163354916 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094160041 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.1163304 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092824294 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112478992 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152963834 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103559077 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125453335 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08924129 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129779238 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129741283 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08763772 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126757972 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095035323 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12790697 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090763852 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11533215 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087489796 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119680486 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124809109 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.09340482 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.13156691 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092914664 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13512646 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090052688 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128474911 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089219249 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118983957 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090630611 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119905254 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124381866 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090029212 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13469151 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090827264 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130973808 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105314366 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128549966 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131507918 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092134737 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128030299 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10310312 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11756144 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091010494 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11731911 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131217413 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08783188 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11547306 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100103286 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116577127 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112693034 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138172837 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116456124 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10008295 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114467883 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089900545 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114789535 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112893922 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118433202 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089714169 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118129366 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092617672 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112898337 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087950054 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11788667 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112301212 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091300975 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118311089 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090161384 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117456182 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106137782 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115630389 seconds)
  done (took 11.868325574 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090000509 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115370959 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093016671 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.1160403 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090786284 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115673263 seconds)
  done (took 1.583656353 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117613796 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11786002 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105803329 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120948261 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156998092 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105134032 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130272596 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124766788 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10865468 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127616577 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129573752 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10560547 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136144825 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122192912 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104906758 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121221176 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129401899 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099828132 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128551067 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097588381 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137694755 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121048136 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096634852 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132548792 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118047218 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096116195 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126110005 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104262066 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127136709 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123822388 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097469939 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118674748 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096505639 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123659864 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13129918 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096311241 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121505269 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119357278 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100535962 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118546993 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104947186 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121671157 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127630753 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094548458 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124685419 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121749068 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094331708 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126101144 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.105740321 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122725704 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121223469 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095431873 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121132204 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094890277 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123050599 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124829353 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094244004 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130660772 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123419772 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096649214 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119157598 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094561228 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124511538 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118740786 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105652712 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120304679 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096817662 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122576639 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122583559 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096773493 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119868471 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093056959 seconds)
  done (took 9.26627052 seconds)
done (took 34.049823699 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687210929 seconds)
  done (took 1.649388703 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.828341716 seconds)
  done (took 1.792236427 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.555391221 seconds)
  done (took 17.547741934 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.492370008 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.576352709 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.981931187 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179407426 seconds)
  done (took 3.193723343 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.942493334 seconds)
  done (took 1.923852294 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282247967 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236069421 seconds)
  done (took 1.484763543 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.771253883 seconds)
  done (took 1.748730897 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.425924779 seconds)
  done (took 2.39313365 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324829193 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184094236 seconds)
  done (took 1.48722993 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551224935 seconds)
  done (took 1.526601361 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.070350113 seconds)
  done (took 11.050947036 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266207606 seconds)
  done (took 1.258544491 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300143037 seconds)
  done (took 1.28401746 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.457423668 seconds)
  done (took 4.43810712 seconds)
done (took 53.753566627 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.0992498 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127087584 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102557573 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12479985 seconds)
  done (took 1.427610921 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101819453 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.1213972 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101660804 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120713302 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127242345 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096194744 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124381141 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101576694 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121170299 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096940276 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121757158 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120044821 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099800781 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123056822 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093689696 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12463092 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124970477 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096511801 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124630191 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096607746 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119127175 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098892145 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125337608 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095108085 seconds)
  done (took 3.661084934 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100465638 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120019455 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096551976 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118729106 seconds)
  done (took 1.4279609 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100277683 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131386572 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106155006 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125641428 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132108061 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.107150414 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11833183 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092342957 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11961111 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100828468 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115782978 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139142814 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106766819 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125470606 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102152451 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11542444 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092316764 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131749043 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125616618 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101215639 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117982938 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099698338 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115076001 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108887129 seconds)
  done (took 3.718744496 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171292787 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127732141 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139697612 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095733429 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159846322 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141523485 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088330658 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140646471 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088273302 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131681901 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118365037 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134091389 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129620139 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089221126 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114530819 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088817374 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128718141 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129229984 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09149953 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127831442 seconds)
  done (took 3.430918162 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097694993 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117801588 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088582451 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116751192 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099920653 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121248904 seconds)
  done (took 1.634227887 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092350575 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114863218 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090403693 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11479124 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09474739 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115554608 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088995951 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115059605 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090491593 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115370917 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089819486 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113213731 seconds)
  done (took 2.226967657 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.507170064 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120479999 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120574868 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088848214 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122273277 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089853333 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130343054 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092309213 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142254246 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089791008 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116285792 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094046131 seconds)
  done (took 2.704703108 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23705896 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12608107 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283443099 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364251352 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156778158 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165394862 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279801783 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162371822 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19923523 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151358597 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231248707 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199270591 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152494159 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191636194 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138079832 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145538937 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191396676 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252482306 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152540812 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213678319 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207329773 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167368354 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180917519 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151987849 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112508259 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193744954 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095498452 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13014319 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235324314 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179950399 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190278726 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161302979 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147385235 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237884454 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2496297 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197194338 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278544246 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134192754 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166808493 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143520619 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265243602 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139179443 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233994004 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155989467 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105331773 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221668989 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166482821 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178189146 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146684798 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139812902 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199623117 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243697012 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194064316 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138981074 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298835197 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147943979 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158650675 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190064818 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251532936 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227561025 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191696984 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121700946 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188582783 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192172891 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212359259 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.154338078 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184129625 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148562588 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184128242 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189905178 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16697173 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205698974 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180313779 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139212901 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171615385 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173566342 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175488994 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259264174 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18655031 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12356721 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171850341 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150977284 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131292346 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169162856 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12665564 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215649477 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143806762 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165082817 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20884703 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160122061 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162313633 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222831326 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185031542 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149635934 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084395681 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154776629 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154955928 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177789733 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14083493 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15967615 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157947938 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130291649 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171336799 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097879413 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211515999 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092644907 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174334069 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211793952 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100097384 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162912943 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153494347 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151818505 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178548534 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200160332 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141171718 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13425884 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212222281 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180915311 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143000747 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178422311 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228935295 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118103868 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148609606 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229267006 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21791742 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140488097 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230330723 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153772543 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10878082 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134220861 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181938265 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156634788 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162616124 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133276141 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184969488 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234187169 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099361766 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139759405 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196803678 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135043257 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132750013 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15535248 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147979308 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111245711 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142844429 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146417289 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178104762 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179353817 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156059129 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167094164 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151019651 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250830285 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140381816 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.15184652 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122300976 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121257587 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193980543 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227594641 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104336417 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233710476 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17324215 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225125106 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170730935 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108263916 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178300425 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130997232 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120003586 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195185887 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169531067 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164052924 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197534657 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222515416 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181791187 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.210178679 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167961012 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175797805 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166293486 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156477572 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111655256 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161559716 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15942249 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124142739 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140114918 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107844424 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150292063 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143494923 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133318329 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198268835 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17055084 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217353385 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159183312 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148794561 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181526519 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102716493 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20319383 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17965222 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145994495 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199415355 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193202758 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213786921 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117606133 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229406124 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093365767 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12562088 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142806919 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170490064 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134482987 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109157124 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162211171 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181950419 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208341481 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173853885 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207961649 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201397604 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192846412 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09555308 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169434886 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184824384 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204151376 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154820307 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139656222 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151872844 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178366426 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155545984 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257204993 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169492048 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176021406 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234360087 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124079541 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131649035 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151820369 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179046787 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154352158 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176361614 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147563065 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139460113 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16052734 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103150242 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187811721 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187004939 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164759094 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188837946 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150091016 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212629796 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101080944 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162328434 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16093098 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16747261 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109547803 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176468202 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204131759 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147281456 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166772951 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215739904 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105217913 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311372213 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235490967 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195252847 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139404551 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155993392 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161716356 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164676208 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172788002 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18033411 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159741163 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189030531 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159296859 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136937226 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139533026 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122505454 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153164785 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.1340024 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149261006 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178575606 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138874808 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189124845 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155460068 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161694335 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172827111 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151385588 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144313832 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123170522 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245604857 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183586676 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240022034 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151319659 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179287531 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206782289 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127052601 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130975268 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106951912 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178973136 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137532846 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19121831 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214835724 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20065773 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208344156 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179838686 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112381239 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121481017 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158718012 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170854894 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228630941 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122452135 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147303002 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231726907 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109343725 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133082961 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168079141 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287697021 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14589127 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194227072 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108566521 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281151392 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126487175 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106131204 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164521203 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236614787 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136359799 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.150589297 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168742992 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162264435 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164322593 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149626075 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218065184 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212907085 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226910939 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185669095 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105007936 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157490549 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202873308 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193618315 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157176257 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11010447 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234536044 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196338191 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222380181 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114268905 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167983233 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195576155 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13123371 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214407685 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135334146 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208054878 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134663518 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1916842 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154198736 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138333855 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17789408 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214709182 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114533237 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215014006 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184343492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135163922 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10556451 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166088963 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206511264 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154345214 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100922961 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182526742 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126312827 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191982025 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264585724 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13427283 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156222317 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146371126 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108707956 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154949452 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158464467 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139462846 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163043066 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206383938 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136057868 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192270615 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230346692 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172136248 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174814436 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146710905 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693678882 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130578841 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196517055 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147945281 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208239427 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152393521 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174222846 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160849137 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170698036 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222889224 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160968697 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233419806 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193718429 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17937309 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133429153 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159114794 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156465064 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145919545 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15400741 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168043256 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161181636 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.11872393 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.207895591 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166736877 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106542823 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141737225 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227347769 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121753089 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213815611 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179968838 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111790997 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201876795 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188107693 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132234873 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181798054 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238474317 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114562165 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149573727 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135189783 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151654657 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262616411 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097425999 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218744609 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185643455 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159891455 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170319655 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148036742 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19322005 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158211976 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213529799 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116717362 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158986588 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159047608 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138941962 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129815671 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156394952 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169049991 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.123338793 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186726914 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139833456 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195131364 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125089152 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145956391 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283400888 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178593085 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244733091 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107282314 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137304195 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164163447 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150864207 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177836382 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1795732 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136435345 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134472592 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108423623 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156293497 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111469646 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157319606 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191226527 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1650223 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23473051 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136631156 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278046032 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114052503 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156547945 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114368046 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105351507 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150831141 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145514573 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155314939 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192833521 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263136926 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147912172 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132914186 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121755537 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127190966 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135413241 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163464951 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164840866 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182087088 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145256675 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081593725 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156979408 seconds)
  done (took 82.717428953 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164518029 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132990301 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147556615 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201351256 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176845777 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269975586 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210207655 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252914716 seconds)
  done (took 2.636864471 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093915849 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145667595 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157355132 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133062484 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092150487 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12029771 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343526515 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132059875 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116848655 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.12225453 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174853121 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094185399 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.547678574 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090877721 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119504811 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107429338 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093336662 seconds)
  done (took 3.759306435 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.153414077 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.497489565 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.933545362 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194806695 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159517908 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.11780987 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.706241343 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095744907 seconds)
  done (took 11.941922696 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11512574 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136485438 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123343788 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152942954 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140438109 seconds)
  done (took 1.762600046 seconds)
done (took 124.02547127 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09714188 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127172621 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098059644 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130065155 seconds)
  done (took 1.526066173 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094404915 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070944813 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100847266 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075518437 seconds)
  done (took 1.424070871 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189022067 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167193699 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.382217776 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071930861 seconds)
  done (took 1.569649991 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114483479 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131937948 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104037618 seconds)
  done (took 1.441213943 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105970327 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129546922 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103291483 seconds)
  done (took 1.427288726 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106243124 seconds)
  done (took 1.193747388 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108094026 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136855914 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109207101 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136855611 seconds)
  done (took 1.579235777 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097940114 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126615121 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110044671 seconds)
  done (took 1.421629536 seconds)
done (took 13.023387461 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103328288 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422464943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412771178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110290645 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.745200753 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381388604 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.062020178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146165204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165037812 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093767569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138728929 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694922084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.05337571 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377969064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.011696116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376738256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679868903 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120989259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091635841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121723545 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.045160705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092223705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12167551 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092660126 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704236691 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397818928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123120484 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375719718 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092486115 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12606065 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383059304 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123744548 seconds)
  done (took 17.066886407 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095407317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173819779 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098443136 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123852657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123113755 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094805479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12440113 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093464324 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179613906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122349633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110630289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121787262 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125036131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095827891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143129355 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092516451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124736255 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092498081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122015338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094531091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140242595 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120881257 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093927007 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121435399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094315166 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13579673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095079175 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121582668 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120251389 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099970646 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126854011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095499163 seconds)
  done (took 4.807978463 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141208859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183524273 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128094685 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126791377 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168095141 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12376208 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199439108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11793853 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181951192 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122835773 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139209665 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093739834 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156123712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12229516 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114424797 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121117146 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096692248 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122290298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092942754 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123763712 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139575752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092923819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121971904 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093307108 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123152499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108501221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123632206 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120223473 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093876249 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127142696 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10004672 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124098412 seconds)
  done (took 5.142358418 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097683276 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126361674 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108912262 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138153686 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095029817 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125643341 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097410636 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124145194 seconds)
  done (took 2.008976665 seconds)
done (took 30.118009675 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111953721 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126768496 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107245605 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134867599 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102675943 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132582042 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091328742 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133883073 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133863994 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103507044 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137097423 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092608959 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122528051 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09182196 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134879743 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097726501 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132678024 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102340135 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133554946 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131391117 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095625623 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133370276 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103104849 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133235635 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104191427 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133424693 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137826383 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100383395 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122393266 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095148476 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123922824 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104166591 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124196696 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105881904 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127861263 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097658257 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124067868 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094403394 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133654201 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132581767 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100246217 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133578923 seconds)
  done (took 6.003569591 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108020842 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139383433 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10478272 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081337913 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116639307 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080120708 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138442035 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079493005 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110121043 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107519222 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074145546 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106076363 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078531427 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10175722 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077248042 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075519375 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108339455 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075799011 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075925375 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105808888 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08025001 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072825524 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108062622 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078904808 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074626983 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110065296 seconds)
  done (took 3.572439142 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100901963 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133976583 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114206725 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183541516 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161410007 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099400052 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13192663 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140028731 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109694727 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119876588 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096660355 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149511735 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110015293 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130164299 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092809362 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136746055 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136802468 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094696396 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128239194 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113151761 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139076777 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102832762 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141569945 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132864905 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093072976 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124162577 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097631787 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135331436 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097844115 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131763739 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096625108 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124983825 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122508445 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10498009 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125950941 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093933332 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14166077 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103006056 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131905198 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121317137 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100922318 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122421203 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11446104 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161631758 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091846712 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128987809 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123862419 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103493152 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121460036 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111353395 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130924679 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092176196 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126103616 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092009797 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122008702 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107115962 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124280805 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095231543 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131716431 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127414582 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106699722 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125051718 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108973429 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12215342 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100398823 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122664422 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093462663 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12106705 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144385045 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095117904 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16195738 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093628965 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124693747 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101592273 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131307211 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127593183 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093178372 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137427777 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10240509 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12593556 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102308843 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126652003 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095793674 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141107513 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124125948 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095542335 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122351058 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100240322 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124627688 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09416895 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137177803 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092241013 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126366993 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111176957 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121894236 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122659979 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100301381 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126577041 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092821017 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136002321 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099171858 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124291493 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132692633 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093427371 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124854287 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104030193 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127492704 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092128984 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128582796 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100033639 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12371282 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094782976 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126064764 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094728634 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132383082 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128907624 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098315541 seconds)
  done (took 14.846818666 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228660545 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215855193 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206977883 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.293158405 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135907629 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115469584 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213203135 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156154973 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124781356 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161626471 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17244907 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182788587 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.13901332 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.212179523 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171906307 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09342986 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142954452 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134384571 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245003751 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259808614 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144393762 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.104317253 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16129728 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161142428 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137962068 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102494093 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140717122 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134905357 seconds)
  done (took 5.81600281 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109041143 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156026394 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099073968 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145129379 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149500877 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093533281 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128057565 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094634265 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135317315 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137322706 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093207694 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129676962 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100407211 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132551288 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123503957 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103391558 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132848359 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095538404 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126552433 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097610155 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133541922 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101661552 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128093915 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122163709 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103182701 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122138276 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087306444 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143116252 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122889062 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116729347 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121225687 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102146482 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137288314 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094445915 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123951984 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095583453 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126352266 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096069141 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125910179 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091521007 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123756058 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078060488 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122301382 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13681182 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100425754 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08017396 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130747844 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128930268 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094843901 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12095058 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096875918 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126708955 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096848969 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130952907 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095930321 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125108757 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096461683 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116202692 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10027074 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125822547 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084573874 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121458807 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099730239 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119376409 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101415248 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12791844 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091976592 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126007868 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097123105 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129715292 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094961027 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130050934 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090986472 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12601178 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095974354 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129189123 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.12600239 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092821248 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122538426 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095115805 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074890663 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123969863 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074241329 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126549369 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09212402 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122828369 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095974252 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130687576 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138237879 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09601686 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131994978 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094666173 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123408847 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097012277 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113701977 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097105027 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140207138 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14121328 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094397139 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121910563 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107846061 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126545914 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092964142 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106914628 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103020405 seconds)
  done (took 13.003856851 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131017264 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154869823 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124872851 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112044962 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157271516 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158056911 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102242751 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130945659 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095705934 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143756334 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094490141 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132360231 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094176014 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138246982 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157306415 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104807024 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126125307 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108832839 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128396596 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169112153 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111546892 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143085122 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110368216 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124217284 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130097721 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110406574 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161346514 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108408423 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137625236 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142391612 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108745613 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161383123 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143209464 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098426294 seconds)
  done (took 5.491137701 seconds)
done (took 49.829787331 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.229276424 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.415725828 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193264142 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.090687278 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.242563804 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.226545776 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.206699661 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.192557402 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.736275714 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195257166 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.462323199 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.802205968 seconds)
done (took 60.116065414 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.295586344 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.3538401 seconds)
    (2/2) benchmarking "String"...
    done (took 1.513055739 seconds)
  done (took 3.986298451 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.801310373 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.123790174 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.45399466 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.193811822 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194471423 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.4803928 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.906175483 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.56206799 seconds)
  done (took 28.034857837 seconds)
done (took 42.240047815 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.191384908 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.222549106 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.226930968 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.173902814 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.305781281 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.239286943 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.481941734 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.196684308 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.214240175 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.177233302 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.221658841 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.193566508 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.201236389 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.499838215 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.199901232 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.199267157 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.20798468 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.689140398 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.601314268 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.196993086 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.224255021 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.252423923 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.225953775 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.19686017 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.224124378 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.19936413 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.219602099 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.203127339 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.725065813 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.200192257 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.206622731 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.703374568 seconds)
  done (took 190.34309278 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.195437024 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.193266765 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.273168111 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.239387554 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.712445292 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393027287 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.34478483 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.883104556 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.213940801 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.199473543 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.478890552 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.196327681 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.556768374 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.257780895 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227450817 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.259215705 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.494491144 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.540946315 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.232980244 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.363994888 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.218847882 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.538119213 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.481260491 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.411539314 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.205779135 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.231368374 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.217729708 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.220096188 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.390108933 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.407339906 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.232967619 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.201290913 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.823134199 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.049305037 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.209100617 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.227749305 seconds)
  done (took 150.444804522 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.196926798 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.197334517 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198705506 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.230317797 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197561638 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.761011803 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.770085669 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.71230054 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.405066153 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.589615761 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.483225185 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.201504793 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293786737 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.212747777 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198361871 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199082258 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.214680005 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.242194405 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199251452 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19918752 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.774093976 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.214675353 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.31770436 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.378458995 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214854041 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230638778 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.589452387 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199392689 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231572293 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.531690587 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.248030666 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198399024 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.578970541 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.749773769 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316659909 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200081459 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231664952 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.199873939 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.479622502 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200154877 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199238605 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200517506 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202696129 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.881750439 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.203294959 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.764095737 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200215788 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.144084302 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20014286 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20130177 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.979238032 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.904857861 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220893264 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200462404 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.20340958 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.1998493 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201504102 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.233385469 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.81713105 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.298276349 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.218642028 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.204114659 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233704006 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.200524153 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.460102944 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201934836 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.572964786 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.276612356 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.3102558 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.202311835 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.776722488 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20527451 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301189932 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323553526 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.202880291 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.201339301 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201593147 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.20081058 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.312198501 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.203257356 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.609426615 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.378705351 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.219654386 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.583477924 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303081305 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202718875 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.628058576 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.206818863 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.202648777 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950477186 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300309674 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202886567 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203332928 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203016198 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.609265099 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.780692378 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.462238706 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.207462795 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.815344123 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206636236 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.202613151 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.628166231 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.75901388 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.905418382 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208238926 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316903656 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.380432616 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.221321293 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.203826205 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.58576056 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207048838 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.261714414 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.207948786 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601441546 seconds)
  done (took 367.150199782 seconds)
done (took 709.06037553 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.808799213 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.804317023 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.91616201 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.794708911 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.7658748 seconds)
  done (took 10.219387055 seconds)
done (took 11.349947734 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.391225314 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.39042093 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26379451 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.392030458 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236532513 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.409327304 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369749139 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225716404 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.305890112 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.285757674 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.305284993 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258131003 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238922698 seconds)
  done (took 18.20284911 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527338237 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.519919045 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268422076 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529150418 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244893022 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520085581 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403815611 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416200076 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417071036 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23898344 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218645344 seconds)
  done (took 16.435778547 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526999849 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528918745 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272027248 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.518182913 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247129988 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.526610967 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397357372 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41896138 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420724502 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238721662 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219588702 seconds)
  done (took 16.446764683 seconds)
done (took 52.2164964 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.216370886 seconds)
  done (took 2.348618928 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251350684 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.415690837 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.232476286 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.224780515 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.218073869 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.218143946 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.225395713 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.217768635 seconds)
  done (took 11.137081161 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.213311441 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.216642294 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.215010478 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.213579079 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.213579548 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.216939002 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216590802 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.214289322 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.21386449 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.217015977 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.214570806 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.215903565 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.216915522 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213314236 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.216384921 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.214766652 seconds)
  done (took 20.576652475 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.216545297 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.214032248 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214275575 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.214330056 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.215336113 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.214896249 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.214935097 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.213756449 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214574902 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.214578282 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.215494311 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213495984 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.2149402 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.214546577 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.215663738 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.215389588 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.214019544 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.215483029 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.219518335 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215633708 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.216581735 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.216441487 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.215441821 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.216116822 seconds)
  done (took 30.302539536 seconds)
done (took 65.498775883 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.831152229 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.872226072 seconds)
  done (took 6.837824467 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.218013487 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.218241673 seconds)
  done (took 3.572367123 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.2186024 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.217606331 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.217200213 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.21756616 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217475381 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.218443283 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.218388362 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.218017785 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.218233255 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.217246647 seconds)
  done (took 13.314291683 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.2191003 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.218179791 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.21774121 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.220057454 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219182674 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.216601222 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.218577622 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.219001935 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.219214759 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.217135332 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.219896544 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216423167 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219059366 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.217566311 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.218479328 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217814969 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.217674233 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.218070503 seconds)
  done (took 23.065790309 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.219921742 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.220165537 seconds)
  done (took 3.57690921 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.218167254 seconds)
    (2/7) benchmarking "second"...
    done (took 1.216745522 seconds)
    (3/7) benchmarking "month"...
    done (took 1.218566971 seconds)
    (4/7) benchmarking "year"...
    done (took 1.217620343 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.217348338 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.216266092 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.218595865 seconds)
  done (took 9.661765807 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.22039526 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.394756462 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.497028065 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.792621063 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22161657 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224643608 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.103074134 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.223880827 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226134368 seconds)
  done (took 14.041510707 seconds)
done (took 75.206642161 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.230648337 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.230006098 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.466848565 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.233861417 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.249450833 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.512794215 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.220713171 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.346668415 seconds)
done (took 37.630275511 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.222331223 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.196574616 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.954267532 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.19887073 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.28351654 seconds)
  done (took 18.772358621 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.251007377 seconds)
    (2/2) benchmarking "read"...
    done (took 1.550184111 seconds)
  done (took 4.939907052 seconds)
done (took 31.07383468 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222439903 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222367519 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.218897092 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.220916002 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.222414217 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222784733 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.219485099 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219789973 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219605031 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.222258147 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22243794 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221470858 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.221468467 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.221998026 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222781929 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21953189 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219842175 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222818054 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21944297 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218999835 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219237916 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222680542 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219567386 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.219483352 seconds)
  done (took 30.442919718 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222110571 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.222113026 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222715898 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.223607444 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.219944397 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223360754 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222568766 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.220387251 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223239599 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.2244006 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220830208 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220676663 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223482439 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.221764161 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223197485 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.22171459 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223792528 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220986348 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222079184 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221700103 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.22459243 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221772421 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221292889 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224471056 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.222742883 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221230042 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.22466098 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.223109031 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225332118 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222468494 seconds)
  done (took 37.816217833 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.229124911 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.2317923 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224583822 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.225057026 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.22428642 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224847985 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225315216 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224228266 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.225337616 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.226246163 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224982432 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225423757 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225080641 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.225528653 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.224823079 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225345272 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226339251 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.225384034 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.224616492 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.226014446 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.226324221 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.226280391 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226329828 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22655673 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226269049 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22640529 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226535351 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226055596 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.227099391 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226193499 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.22653647 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.227327692 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.226835295 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.227725141 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.228853689 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.227227225 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231308821 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233780127 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.227271365 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.226722043 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227073319 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226588787 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.227215849 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.22821681 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.227168211 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.227172833 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226814754 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227183039 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.227381687 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.226539702 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.227220567 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.228318753 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226936738 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227698082 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227499952 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.22779296 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227071243 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.227778047 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227851041 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.227745598 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227505899 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.22816215 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.228605486 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227929938 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.227500758 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.22815674 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227887767 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228845205 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.22857044 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228364016 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228606475 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228296514 seconds)
  done (took 89.491456596 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.229030976 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226394673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225910843 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225837314 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227195875 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230007028 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226067217 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228959496 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227784855 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229078027 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229846354 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.227152134 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226107436 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229503271 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228904935 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226766224 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228219883 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227012908 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229361783 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.230304465 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230456872 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.227385943 seconds)
  done (took 28.163293211 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229839107 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232718297 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.227050013 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230185791 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227644614 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23040722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230644771 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232649664 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231002675 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227993957 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2283441 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230264612 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228111929 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228458353 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228828044 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229012914 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231381126 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230615906 seconds)
  done (took 23.282113755 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.228427866 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.228907567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.23207393 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228309241 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.229161359 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230939964 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229337758 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232268642 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.23038337 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.230737404 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232158158 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231551112 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232526458 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228923164 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231865248 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229996345 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232157561 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229801619 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232058401 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230109788 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229760413 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232203138 seconds)
  done (took 28.221040172 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23247424 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23209338 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230048222 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.231722576 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230225305 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23276902 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233148945 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.230933717 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.234857241 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232185706 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230717207 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232482988 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.232483032 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.231738819 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231114299 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230960084 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233009665 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231772008 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234210206 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.231173248 seconds)
  done (took 25.788137937 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234835002 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235758523 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.235188896 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235400179 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23569388 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.23540696 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234797185 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236412665 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23601785 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236388416 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.236240834 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236117046 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235640124 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236259087 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235234748 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236128144 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236053167 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23615162 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235529801 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236173981 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237304457 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236892824 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236054437 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237533085 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236820468 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236563536 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236608978 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.236563761 seconds)
  done (took 35.760841354 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236947825 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235674761 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.232917616 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233171957 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.233893652 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233211983 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.233233303 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233421593 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237144208 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233418534 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.237058651 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236929703 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236506555 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.236511305 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237934533 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.23732576 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236158604 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.234486832 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234683036 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234873738 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.237097653 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237003844 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237984758 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234154392 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234621685 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237552278 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235512673 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235011379 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237790338 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23368454 seconds)
  done (took 38.21977497 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.255699144 seconds)
    (2/2) benchmarking "in"...
    done (took 1.255360303 seconds)
  done (took 3.664077141 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235061364 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237926539 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.237303821 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23472087 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235606854 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23897974 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238646652 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235965157 seconds)
  done (took 11.047778813 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.239191283 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.238765886 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238968094 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.239623688 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.239750034 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.239009212 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244626437 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.258301951 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.239606181 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.24068567 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.246279018 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246663459 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.242099444 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240315875 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238738087 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241701356 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.240347039 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.240485419 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.241588398 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.241049591 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24099277 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242024868 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24146853 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.237372687 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.240609622 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250469914 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.263576712 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.240083966 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240507923 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243845264 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240400884 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.237925424 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.241344682 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.242143754 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.241858489 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.241537486 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250261501 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260967449 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.247745398 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262055135 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242767792 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.23955706 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241497936 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.243340229 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242765611 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.241261306 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.244080912 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.239488178 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241750605 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.245429784 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.248313047 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242503199 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.241041644 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245700488 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.243443774 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248592204 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.262433112 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.246285413 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.25168799 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.253473907 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.275019361 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.268166433 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245293611 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.243825539 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25354645 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.267176557 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24992433 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.260920181 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.242112169 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.244057555 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.249346735 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275845445 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.269732465 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.244795536 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244671556 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244989249 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244197733 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244565465 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249911501 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.266439939 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.244480635 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245126183 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260254403 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266868066 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.244337924 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.245033073 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.245005597 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.244879198 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.245701345 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254571009 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.265086915 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.245186945 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243938143 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245297536 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.246323628 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.24581413 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.244737813 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244919374 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.243707076 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.24485978 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246545453 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24893516 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.254447312 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245362274 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246885468 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251614314 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.266979066 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245835387 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.251720777 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.246660421 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246069382 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.247724469 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.25216738 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.243163719 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248966442 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.253298225 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.246662282 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.247882173 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.247727914 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.24767162 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255384963 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272653237 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.248330357 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.247054592 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.252197846 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.259038427 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248745684 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.250302105 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.247635273 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.245284656 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244901658 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.248554179 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248583041 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.248130818 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249117888 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248867025 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.245250318 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.248674445 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.248615036 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.249189439 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.249525461 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.249713367 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24970369 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.250578908 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.248751022 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.250434801 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.253762311 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.268760928 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249167397 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.249062176 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.245605421 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248722755 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.249806017 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.249530437 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25013852 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249099625 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.248365948 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.251360211 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250202938 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249638131 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250201371 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.249977341 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254239268 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.249321549 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.252822461 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.250039951 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.247724219 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.250185224 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.250558672 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.24980031 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.251726026 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.248453047 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252472431 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.259521951 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.250097515 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.251183921 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.252540741 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250647129 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251333465 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251721659 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.254430841 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.259236237 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25219295 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.258150657 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.272191476 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251684327 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.251968104 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.251780975 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.250473355 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253301179 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.254188597 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.258577328 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263930816 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277202022 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.252939878 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.256138034 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.252837698 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.256865974 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.255230912 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.252706824 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.252693341 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253403413 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252902239 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253538987 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.254706001 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.253773428 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.252259842 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.253027343 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.252755324 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.253845966 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253795244 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.253940763 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253339928 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.25119394 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254012493 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254122371 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.254127204 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251341034 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.252442721 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.253517581 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.253551883 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.254529705 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.260924571 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250877206 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256040242 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254979804 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.255098889 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.253239303 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.255160995 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256782908 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.253913838 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260633617 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.27475091 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.254991815 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26108892 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.274310175 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253746124 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.257018442 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.254867304 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252239247 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.257281816 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.263236503 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.256590642 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.2559328 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.25567779 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255630904 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254943623 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260379683 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.273282806 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.255037873 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256024792 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.256106409 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.253759993 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.256854173 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.255753553 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.255955355 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257889872 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255723038 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.257013963 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256701483 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.25615261 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.256253092 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.256988896 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258993711 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.264856861 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.260126255 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254837846 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258859872 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.256950859 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261130684 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.257050164 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.25767301 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.256671257 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268518086 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.28289307 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263269389 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.277883907 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257605112 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262871547 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.278411197 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.26144508 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256976448 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257742291 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.258822918 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.25766959 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.256449444 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257776922 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.25893587 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259350772 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25924977 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263960602 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258999312 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.258117049 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.258773133 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258272025 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259464822 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.257798512 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.259469948 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.259479407 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259630225 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258225916 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.258318763 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264801265 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278344819 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259369571 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.258555569 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.25895878 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.258250269 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.26017535 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.259374243 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.262295492 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.266685033 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.262187787 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.267103586 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.260898676 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269785629 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.260379687 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.263125041 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.268588353 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.257331696 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.258530452 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.259459531 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.260498868 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266017949 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.280718483 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.261733768 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.265014161 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260957743 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.261292011 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.26068073 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.261766066 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260980513 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.261897043 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269630414 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279813833 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.264340279 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262878387 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.258591792 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.261797335 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.2614576 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.260549465 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264589531 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.262494493 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.260978887 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.261395455 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261327927 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.263105497 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.262384219 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.2624044 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.259250451 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.263083642 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269000333 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282971134 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267210562 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.262273758 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26978047 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.283079301 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269661339 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.283210862 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.262625872 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26329014 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262871495 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264024017 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262137273 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.263146381 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264047069 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.263330703 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.266985599 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.263590118 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264280584 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.264223441 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.264442287 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.262637446 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273636259 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.287299055 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265146524 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268495807 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261820773 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265356465 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.269499151 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.264559739 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.263497936 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268162459 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275106726 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272308613 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.26627003 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.264784076 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26709387 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266557134 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.268423522 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.265771724 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.266067764 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.26616075 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.264593029 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.266313583 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26734972 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.264063879 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.264895991 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266125707 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265342507 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.275118466 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.286456015 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.265438281 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265499776 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.266237805 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266281895 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.267126088 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.265949761 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265019073 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266590024 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.268053569 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272852058 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.271859711 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.268326104 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.265302252 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.266350143 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265572555 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.26588368 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267676925 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266314774 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266636685 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266453951 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.266988657 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265993558 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.266459536 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267895276 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.266504442 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267413477 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268829435 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.273563854 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267274791 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.264632848 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267321174 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268086487 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266855073 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.266803624 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274143371 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.291218368 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.278061693 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.276106688 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27202622 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.267920335 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271097405 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.275819518 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266520679 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.269543352 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.268179365 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.268978537 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.26866677 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270762013 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270373548 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.273869898 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289460436 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269115376 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276534582 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.288807752 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269972643 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269655027 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.273010579 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.26811076 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.267871903 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.27021338 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.268342152 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27605516 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.289088613 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269944395 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26947263 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.267674286 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.270618712 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27430161 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269575574 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.269876923 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.266981482 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.270197817 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270554557 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26959452 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267192764 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268632605 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.269581639 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272753951 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.276304636 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.267573294 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271468752 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.269873664 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270490218 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270698397 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270139398 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266973879 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267954837 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269684982 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271556388 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.271766157 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273183028 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.270464584 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.272296508 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272066397 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270790816 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272799443 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.281286962 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.280187096 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.269119653 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.270779496 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.27211383 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272465996 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271720214 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272033202 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27136052 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.272725653 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.272879319 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272585619 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271891415 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.27513444 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28749658 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29251825 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273139923 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.272764887 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274782761 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.272529548 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270052376 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.273251536 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.273976688 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.277053391 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279934988 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.274059869 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278463126 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291961319 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273893722 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.277710497 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.276471288 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.280368218 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.275807347 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273514156 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.274153502 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277865881 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.289451886 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273741532 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284365291 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.302609681 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.294013874 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.274584928 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27567892 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273326046 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.275066391 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.275572839 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275209887 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274583444 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275074255 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.275430176 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.274854013 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279071554 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275660597 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.275804778 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275455783 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.274242274 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27518545 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272869892 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.277206264 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.274834656 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274437919 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.276160232 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.276248235 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.275257836 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288495641 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.301689883 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.27615418 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.276808827 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.27364141 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.278420629 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.2785167 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286876535 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.283650404 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.278066845 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.276653338 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.277117736 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276956854 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.275040326 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.276013646 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275663694 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276280893 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.274182787 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.288795706 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304065358 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.2811746 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.275759531 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27777271 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.276991897 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277959802 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278256862 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277385814 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.277537104 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.279559172 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280328396 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277188796 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.278081222 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.280134517 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.284829175 seconds)
  done (took 753.087673544 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275493383 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276440955 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277233109 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276977298 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276286192 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275764113 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27607227 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276246305 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27591924 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275838875 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276533618 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275710091 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27607444 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276204018 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276612513 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276739858 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276305797 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276863675 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276021988 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277289265 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277121641 seconds)
  done (took 27.995068485 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.279404706 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.277056657 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277332826 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279009355 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276595345 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.27940504 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277218463 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279106034 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280436234 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277451596 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27962316 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279896762 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.278371302 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.278126334 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277315065 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279776498 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281253751 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277630304 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.280421998 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278055445 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280684926 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278444331 seconds)
  done (took 29.324866604 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.280545368 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.280935094 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.279225511 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.278372626 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.28074751 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.277670603 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.282111965 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.280841967 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.281011662 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.281638299 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.27950259 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.282361227 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.28789225 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.285471509 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.282042281 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.282078006 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.424691491 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.282300756 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.282928165 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.282603287 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.278992179 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.287199735 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.300745403 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.27898751 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.281188132 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.28133205 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281950995 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.282115928 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.282099177 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.282694545 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.287281046 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.282866695 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.282440532 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.284255584 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.281127555 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.284098255 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286826488 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.283820034 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.280089828 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.282951556 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.292830195 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.303119918 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.283751422 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.289367536 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.305492994 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.283622161 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286416959 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.291471503 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.281522753 seconds)
  done (took 64.260024514 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.284374316 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.284320122 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280830447 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283412738 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283749109 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.28328434 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.283855453 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284398497 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281976102 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281812418 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.284853159 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.281819202 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280867332 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.28437852 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284344811 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281571723 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282057851 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282050327 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282272514 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281968714 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.281746547 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.284416755 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.28409398 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.282164009 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284441476 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283017325 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28275421 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.284902145 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.282765306 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.281943676 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.285164995 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285387613 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.286355232 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283771335 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284015239 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286965859 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.286104406 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.283123926 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286561455 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.282878036 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.286055355 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286037572 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.286372614 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.285753873 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283668428 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284745864 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28371018 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.284569518 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.285127123 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.286477498 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.285800088 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.285122056 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286643772 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284658301 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.288694123 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.288993033 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.286373989 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.285371005 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.288207718 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.285710138 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.284422372 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287353544 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284945987 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.286541571 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.287067555 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.285690114 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.284709384 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287276245 seconds)
  done (took 88.545306979 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288818006 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.288610229 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288964865 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288236111 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287782886 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.288104794 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289011398 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.289174003 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287925999 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287886352 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288394335 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287997457 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287960636 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287972855 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287911002 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288261944 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.2880474 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288820067 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288759843 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287759504 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.288882349 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288757484 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288468284 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288466357 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290102319 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288096455 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288935931 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290291033 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289041648 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288950216 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289364932 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.289835594 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289314133 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290027063 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.289793424 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.290231895 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288665269 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28982838 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.290691993 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.290128684 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289791222 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290217749 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290054043 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.289909832 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290448841 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290466562 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290527142 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.290576549 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.291355747 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290913106 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.289804446 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291098619 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290228377 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290508438 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290732859 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.290960178 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290392615 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291006021 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291097712 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291495775 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291041689 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.29133368 seconds)
  done (took 81.149708146 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291665432 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291888446 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.288782608 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.289205595 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.291535486 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289119101 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293097789 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.293433237 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.29244825 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292852347 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293480841 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289209372 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290166703 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29271776 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.289992299 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289662463 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290022584 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.291111397 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293169217 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28982429 seconds)
  done (took 27.025933437 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.289912642 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293526124 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.291400674 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290597118 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.293805456 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290867489 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293005364 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29424435 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290847366 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293424709 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294147139 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293850802 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290863892 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292130282 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294603752 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291657686 seconds)
  done (took 21.883037911 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.292593632 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.29349328 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.293784337 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.292906714 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291020744 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.291119297 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.294121744 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.291349572 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291869829 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.294554441 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.29399168 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294271386 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.293119786 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.294326701 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.291968053 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.294890472 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292803151 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.291926715 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.295133506 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.294523513 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.293315845 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.292899875 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.295802374 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.294881212 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.291509442 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.292800525 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.293450997 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.292574899 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.292638321 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.295068487 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.293515339 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292739725 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292549985 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.29282164 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.295274592 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292994168 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.296726965 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29635413 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.296734255 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.295989071 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.295994892 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.293326717 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.296346104 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.295294778 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.293911368 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.296342736 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.294481104 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.294927689 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.294133203 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293840567 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.297478494 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.297316184 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.297398372 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296969141 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.297615919 seconds)
  done (took 72.386027626 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298050256 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297258717 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29444145 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297792227 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296913392 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294764807 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297046991 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295573911 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295386262 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297393459 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29656841 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299311235 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295410633 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298201072 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296800392 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297909243 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295859448 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296016059 seconds)
  done (took 24.550003934 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.29566469 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296925069 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.298999552 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.296649401 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.295536042 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299093056 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296361823 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.298943747 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298366406 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.297657482 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296715546 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298611106 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299148455 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.300118658 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297417473 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296683102 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.299585702 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299640693 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29815995 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296757613 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300237881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299558119 seconds)
  done (took 29.765723631 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.298717014 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.298677294 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.29802275 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.31517817 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.316744011 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.321336715 seconds)
  done (took 9.058056534 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307452631 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299816768 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297066735 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301100786 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300044145 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297519 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298142546 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29812245 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299638924 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298256083 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298136363 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301176974 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301041856 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299172649 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300432124 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300156494 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298204669 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298535169 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299026259 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300839043 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298793762 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301279585 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298851626 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299699975 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29986885 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298599444 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30217628 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300571436 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299460363 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3013707 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301336066 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299241108 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301971711 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300120644 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302474019 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301519746 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299494123 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302755347 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301724977 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300116978 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30247692 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302627309 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302334921 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300614983 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303598925 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300911956 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300564372 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300307519 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300584455 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303597028 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302618343 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300381747 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303207545 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303056034 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304232471 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303317441 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301644515 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300487486 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303355766 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301544325 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300897594 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304679941 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30158805 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302607021 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303622439 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301255637 seconds)
  done (took 87.096656767 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301464803 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301632316 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301180091 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302351999 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303576634 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302441924 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301766594 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302664224 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302088381 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302648328 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305261115 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30256911 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302384245 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301507269 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302148299 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302975169 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302804974 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302011389 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302585924 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305523029 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303528311 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302508014 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302792474 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30383611 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303065922 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30499049 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303662305 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30403505 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302958967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303262778 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303044943 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303974854 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304218357 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304196194 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303881822 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304501807 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303443078 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304470221 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303413537 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306769576 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305249749 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306967162 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304922094 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305152121 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30489588 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304563608 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304962739 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305046637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305728281 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305132281 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305800327 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305934324 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304810622 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305623747 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30474996 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30560918 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306966929 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305100679 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30620144 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307587127 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306060457 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305989035 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308747623 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306537431 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306025277 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306179683 seconds)
  done (took 87.295750072 seconds)
done (took 1756.461728917 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.47076923 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.424825611 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.306433704 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.330257628 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.306594062 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.328227568 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.302982267 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.306076669 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.306876471 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.306875103 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.30652784 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.495006421 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.314762927 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.306744628 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.30595664 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.401238184 seconds)
  done (took 42.739604473 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.337024723 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.312307189 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.430242278 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.331930901 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.335284001 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.507486753 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.369056737 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.311617096 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.493850437 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.356089284 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.966524884 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337537382 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.312079521 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.488837019 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.33088768 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.506097813 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.575816787 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.972252043 seconds)
  done (took 30.495195366 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.795787331 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.30558652 seconds)
  done (took 9.321768372 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.332820587 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.312293524 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.313274324 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.310545903 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.317068971 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.30313917 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.311824198 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.307348315 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.247491916 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.440721636 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311924178 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.320355624 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.329194113 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310086895 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.306371508 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.348670165 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.468007587 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.307801917 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.306357489 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.314579976 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.30965689 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.401868204 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.352514392 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.306629518 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.441547069 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.209328744 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.3149138 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.316992569 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442892984 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.307103699 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.307534643 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308407372 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.309585267 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.228980681 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.858766233 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.323983907 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.33368311 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.319189211 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.306728105 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.452784391 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.309108203 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.313974661 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.312623243 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.844239407 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.44011326 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.426753068 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.594119019 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.329481643 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.310155919 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.371538018 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.3089588 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.309301174 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.353045576 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.099611725 seconds)
  done (took 111.220742714 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.338197706 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.690230604 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472099743 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323083803 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.129253332 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.96368757 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.318584722 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.606515358 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.322974302 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302620099 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.602115403 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.83161469 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.326777099 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.331297581 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.844124731 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.355990955 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302106562 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.208048827 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.321651444 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.302537402 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806540955 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303842235 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.305129708 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.46188778 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.341854233 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784547768 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.798882135 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.886130408 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323691806 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.30268891 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.788305973 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323808503 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.313917579 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.30860347 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.572702914 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.674547282 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664910768 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.330199318 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354536328 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303260043 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317528229 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.766320473 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.67848234 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.335362789 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30341491 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767852719 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.321814312 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.308950104 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.307491935 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.511909029 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.993282502 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.304100148 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.728341226 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.302772265 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.670220852 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.301701934 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.348895366 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.809071527 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322621155 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.462255454 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.329857792 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303443308 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30545916 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302889739 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.30661552 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.674830349 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.665357896 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303037735 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677482922 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.80814409 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.326192157 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.858232143 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.238069284 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.320119115 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.416979383 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303148823 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.978414813 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803963858 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.333441237 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304108199 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.644280643 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.322496876 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.589553851 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.321266182 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305927417 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811805745 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.308306166 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.363280372 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.304840223 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.325691888 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.068990351 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306581881 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.598555453 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.341345501 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.304855157 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.304958046 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.319492581 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305512723 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.30535176 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.308065947 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854855304 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.32595732 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.294716638 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327499109 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306284024 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.30578266 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.308999772 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.306731283 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532133438 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.742691921 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.328081425 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308159481 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.306539626 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.327705183 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.47258107 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.307802347 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.623248194 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.324258798 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306474952 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.306715252 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.981914514 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354645221 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306017453 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.325562399 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.224503615 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.522417814 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.326981108 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.324903153 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307628193 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.324677733 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.594585696 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.326094999 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.383885317 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309211676 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023779483 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.352268423 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.325465599 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.647514875 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.311055017 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.30718356 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315907589 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308365087 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.595671627 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.576495619 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.583057178 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319392589 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.310126722 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.008584341 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.350694964 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457319458 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.32790679 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.308517939 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507778863 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.764322242 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310459618 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.965003359 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.311212334 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.530470416 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.313899867 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609367186 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.815894406 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.330630223 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311175223 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.034259197 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.016025021 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.128030144 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.313054697 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.5925665 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.256321409 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.791567671 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.310214157 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.310948747 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.898513993 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.310726443 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315537326 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.309920827 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.310318044 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.375227907 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483272612 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.603770432 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.314995283 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769793586 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.347301199 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311134183 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315767127 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313366725 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.659548894 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.39322946 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.315031808 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.339237101 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.313451107 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.318770134 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79304205 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.285647891 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.312940176 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.464834498 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966583126 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.331448095 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.312036007 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.899000366 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.542122064 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.872514386 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.39655722 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.634399908 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.332451515 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.350922614 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.068127806 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.367684085 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83408048 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.331896748 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.312970998 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.939511775 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.335758968 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.662740942 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.313394712 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.312514225 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.89756158 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.332911371 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.315997484 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.631873633 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334370863 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567669156 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.313429646 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.316485929 seconds)
  done (took 1107.438925752 seconds)
done (took 1302.436142678 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.312684487 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313345162 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.297746038 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.320120206 seconds)
  done (took 26.473557131 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.330758309 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.318655629 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.320184144 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.317352289 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.322102294 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.318277845 seconds)
  done (took 9.157198132 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.383576344 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.31221483 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314401782 seconds)
  done (took 19.240399936 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.531103486 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.636789097 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.662873985 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.55985424 seconds)
  done (took 10.618747748 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.321867968 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.321622039 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.320637356 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.323108065 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.332443462 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.333257726 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322957474 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.324485782 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.333145921 seconds)
  done (took 13.16144803 seconds)
done (took 79.882095911 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.727865939 seconds)
    (2/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.417213574 seconds)
    (3/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.903568121 seconds)
    (4/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.421548716 seconds)
    (5/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.444819373 seconds)
    (6/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.802184604 seconds)
    (7/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.1721183 seconds)
    (8/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.376507606 seconds)
    (9/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.364677782 seconds)
    (10/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.317070995 seconds)
    (11/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.296256907 seconds)
    (12/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.264443284 seconds)
    (13/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.4171214 seconds)
    (14/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.296165542 seconds)
    (15/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.325188209 seconds)
    (16/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.572496511 seconds)
    (17/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.346894647 seconds)
    (18/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.374503895 seconds)
    (19/286) benchmarking ("sort", Int8, false)...
    done (took 4.34731419 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.345972113 seconds)
    (21/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.423038016 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.914283223 seconds)
    (23/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.096714372 seconds)
    (24/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.574534759 seconds)
    (25/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.320461101 seconds)
    (26/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.379372979 seconds)
    (27/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.341408967 seconds)
    (28/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.162712943 seconds)
    (29/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.331922581 seconds)
    (30/286) benchmarking ("sort", BigInt, false)...
    done (took 6.315397741 seconds)
    (31/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.317436739 seconds)
    (32/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.381242841 seconds)
    (33/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.29769588 seconds)
    (34/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.419527128 seconds)
    (35/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.331037917 seconds)
    (36/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.405732195 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.964921619 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 6.316621233 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.784552018 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.427893326 seconds)
    (41/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.586866456 seconds)
    (42/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.296353075 seconds)
    (43/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.330175237 seconds)
    (44/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.346466116 seconds)
    (45/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.316887423 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.105876768 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.724096264 seconds)
    (48/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.832642224 seconds)
    (49/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.55615669 seconds)
    (50/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.297413211 seconds)
    (51/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.353379834 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.4319461 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.581468071 seconds)
    (54/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.423730774 seconds)
    (55/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.71819097 seconds)
    (56/286) benchmarking ("sort", Float32, true)...
    done (took 6.322208131 seconds)
    (57/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.557843674 seconds)
    (58/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.438905665 seconds)
    (59/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.43384852 seconds)
    (60/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.78040917 seconds)
    (61/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.313447193 seconds)
    (62/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.299732031 seconds)
    (63/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.355105015 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.377272373 seconds)
    (65/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.348526725 seconds)
    (66/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.30356886 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.279886368 seconds)
    (68/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.582870568 seconds)
    (69/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.369910641 seconds)
    (70/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.367902524 seconds)
    (71/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.318343153 seconds)
    (72/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.132534847 seconds)
    (73/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.913042361 seconds)
    (74/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.563157949 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.75731904 seconds)
    (76/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.361650805 seconds)
    (77/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.335011493 seconds)
    (78/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.301757272 seconds)
    (79/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.602402181 seconds)
    (80/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.704064936 seconds)
    (81/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.731360997 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.220406679 seconds)
    (83/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.349977279 seconds)
    (84/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.5385889 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.296932301 seconds)
    (86/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.333276383 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.048453117 seconds)
    (88/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.304986067 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 5.539469714 seconds)
    (90/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.406584584 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.341876173 seconds)
    (92/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.692711931 seconds)
    (93/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.963063868 seconds)
    (94/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.743209739 seconds)
    (95/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.987061633 seconds)
    (96/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.435359594 seconds)
    (97/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.833048618 seconds)
    (98/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.425062606 seconds)
    (99/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.317470687 seconds)
    (100/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.389857898 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.68210421 seconds)
    (102/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.438377404 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.790546696 seconds)
    (104/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.324032128 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.523134865 seconds)
    (106/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.459430364 seconds)
    (107/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.304466596 seconds)
    (108/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.392556574 seconds)
    (109/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.825966449 seconds)
    (110/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.351875561 seconds)
    (111/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.331992044 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.684213145 seconds)
    (113/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.355913373 seconds)
    (114/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.307562279 seconds)
    (115/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.320305947 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.841480622 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.366744394 seconds)
    (118/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.351267389 seconds)
    (119/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.570089031 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.604654629 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.789425121 seconds)
    (122/286) benchmarking ("sort", BigInt, true)...
    done (took 6.326419074 seconds)
    (123/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.307333569 seconds)
    (124/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.470191747 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.112396869 seconds)
    (126/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.424226856 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.606727285 seconds)
    (128/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.321977198 seconds)
    (129/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.85774736 seconds)
    (130/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.325691939 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.458778578 seconds)
    (132/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.313860445 seconds)
    (133/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.414601001 seconds)
    (134/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.307055415 seconds)
    (135/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.308678236 seconds)
    (136/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.353463024 seconds)
    (137/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.33768255 seconds)
    (138/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.311383113 seconds)
    (139/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.870608433 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.119033402 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.353731297 seconds)
    (142/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.343310539 seconds)
    (143/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.432849788 seconds)
    (144/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.78901781 seconds)
    (145/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.432979782 seconds)
    (146/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.325693077 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.357244598 seconds)
    (148/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.311606829 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.39075889 seconds)
    (150/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.194042041 seconds)
    (151/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.226843769 seconds)
    (152/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.932760631 seconds)
    (153/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.311286987 seconds)
    (154/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.371182393 seconds)
    (155/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.931554134 seconds)
    (156/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.673003536 seconds)
    (157/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.690506386 seconds)
    (158/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.187300102 seconds)
    (159/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.602895715 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.282034404 seconds)
    (161/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.309414409 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.314547838 seconds)
    (163/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.172129484 seconds)
    (164/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.322147057 seconds)
    (165/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.91914858 seconds)
    (166/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.513831484 seconds)
    (167/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.347186687 seconds)
    (168/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.336602927 seconds)
    (169/286) benchmarking ("sort", Float32, false)...
    done (took 5.340456669 seconds)
    (170/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.138005528 seconds)
    (171/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.417023763 seconds)
    (172/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.153347846 seconds)
    (173/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.316696567 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.357002882 seconds)
    (175/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.553513825 seconds)
    (176/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.142105568 seconds)
    (177/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.432581698 seconds)
    (178/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.830867371 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.371412905 seconds)
    (180/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.456761825 seconds)
    (181/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.975173926 seconds)
    (182/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.377362333 seconds)
    (183/286) benchmarking ("sort", Float64, false)...
    done (took 5.660247964 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.346220364 seconds)
    (185/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.109980205 seconds)
    (186/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.81277482 seconds)
    (187/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.915133886 seconds)
    (188/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.367972182 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 5.435903145 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.007916095 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.389056019 seconds)
    (192/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.453272396 seconds)
    (193/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.49948405 seconds)
    (194/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.410289422 seconds)
    (195/286) benchmarking ("sort", Float64, true)...
    done (took 6.34975899 seconds)
    (196/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.346003312 seconds)
    (197/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.549061769 seconds)
    (198/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.473490856 seconds)
    (199/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.381523091 seconds)
    (200/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.691100988 seconds)
    (201/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.820677567 seconds)
    (202/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.330675865 seconds)
    (203/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.312789417 seconds)
    (204/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.329141416 seconds)
    (205/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.251505745 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.990354803 seconds)
    (207/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.318810574 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.544857465 seconds)
    (209/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.312706095 seconds)
    (210/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.361250035 seconds)
    (211/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.106759451 seconds)
    (212/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.359949752 seconds)
    (213/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.334402269 seconds)
    (214/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.33786602 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.240889134 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.355629474 seconds)
    (217/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.717880168 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.901298497 seconds)
    (219/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.364393792 seconds)
    (220/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.910873544 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.373553463 seconds)
    (222/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.699593923 seconds)
    (223/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.854412625 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.7489603 seconds)
    (225/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.330742673 seconds)
    (226/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.536709296 seconds)
    (227/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.979758621 seconds)
    (228/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.335457167 seconds)
    (229/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.157141379 seconds)
    (230/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.447736271 seconds)
    (231/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.741656417 seconds)
    (232/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.315985029 seconds)
    (233/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.348423271 seconds)
    (234/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.162500099 seconds)
    (235/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.222666397 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.552747647 seconds)
    (237/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.391071431 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.365253942 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.726018743 seconds)
    (240/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.521625308 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.763101475 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.301978551 seconds)
    (243/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.738123834 seconds)
    (244/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.714296822 seconds)
    (245/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.360821598 seconds)
    (246/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.313940302 seconds)
    (247/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.359725093 seconds)
    (248/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.324344998 seconds)
    (249/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.125358889 seconds)
    (250/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.746973786 seconds)
    (251/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.415642745 seconds)
    (252/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.333371942 seconds)
    (253/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.418395139 seconds)
    (254/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.418846668 seconds)
    (255/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.93353327 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.443149063 seconds)
    (257/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.950175866 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.417521129 seconds)
    (259/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.315286177 seconds)
    (260/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.592323626 seconds)
    (261/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.319624463 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.454563985 seconds)
    (263/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.059426679 seconds)
    (264/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.334583279 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.17930122 seconds)
    (266/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.34509574 seconds)
    (267/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.130775484 seconds)
    (268/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.451313874 seconds)
    (269/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.320968655 seconds)
    (270/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.361070165 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.377289549 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.291036835 seconds)
    (273/286) benchmarking ("sort", Int8, true)...
    done (took 6.335584515 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.037051188 seconds)
    (275/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.254054543 seconds)
    (276/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.416070101 seconds)
    (277/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.876050876 seconds)
    (278/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.320038652 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.378121006 seconds)
    (280/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.336507608 seconds)
    (281/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.155949144 seconds)
    (282/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.317348475 seconds)
    (283/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.354940917 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.268630394 seconds)
    (285/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.061946744 seconds)
    (286/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.356283888 seconds)
  done (took 941.911222492 seconds)
done (took 943.143295192 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.370139979 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373808172 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.347482283 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.369778617 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.466649601 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.371728902 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.358080129 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.35004646 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.395389543 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.39724954 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.353045951 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.3717348 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.355948768 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.354628146 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.348174749 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369601072 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.441034373 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.354936153 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.371648545 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.358646133 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.373054853 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.354515406 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.398373311 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.371462567 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.352831332 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.352799118 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.35874867 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.374077206 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.46755139 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.358088653 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.352521437 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.366986299 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.44086907 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.348848428 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.34520579 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.375263452 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.369010627 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.360446989 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.355646382 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.3877931 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.868168678 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.374865848 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.358891448 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.352756198 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.351921385 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.356464635 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.358264026 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.356361635 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37156309 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372383379 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.853902552 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.38914703 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.359591566 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.352164903 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.361684703 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.35650337 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.354902112 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375200855 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.376928803 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375277159 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.428816853 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.356378234 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.352871526 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.374076015 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.365632859 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.889902796 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.364303645 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.356550656 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.863163403 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.375374116 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.889183426 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.384481442 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.353762735 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.371716566 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.389768674 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.438724117 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.346546954 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.352670927 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.366408825 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.357029835 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.361723809 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373574292 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.357500367 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.353930179 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374900265 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.375236215 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.36278132 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.360376005 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.361606771 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379400676 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.367821234 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.3710813 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.356850351 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.349530445 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.362960668 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.357307583 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364396323 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.362565821 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.359524442 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.364586459 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.867006282 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397038525 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.351324537 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.351631963 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.354483049 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.375821843 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.865489869 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.380785521 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.376179424 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.401663923 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.356762682 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.431525533 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.364476904 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378890795 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.363093952 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.358706896 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.350139647 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.433803047 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.859669985 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.395113144 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.356779116 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.360783423 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381467274 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.35700867 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.352452793 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.449191278 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.357635199 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37823154 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.483298707 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.36687169 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394191993 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.361026139 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.358948924 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.378595585 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379827504 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.394142098 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.359394689 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380720788 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.379560412 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.353715562 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.373890636 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.366879073 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.35737911 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.362317789 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.350351853 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.379089984 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377084266 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378064641 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.377492803 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.484350832 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.354199085 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.438571192 seconds)
done (took 229.93316398 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.414702131 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.353290587 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.44496204 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.35440588 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.45411257 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.455195506 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.352582368 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.352996704 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.351920909 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.730845271 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.3516837 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.351472666 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.34717292 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.352852706 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.437332482 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.354428596 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.35284352 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.697361641 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.355498066 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.427194544 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.353068703 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.352484933 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.355209763 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.73530932 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.352133585 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.352171659 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.428389135 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.356255741 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.700042554 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.35123119 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.354762535 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.70098887 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.446703047 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.373002344 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.365618985 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.362176848 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.455756363 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.374785468 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.43442701 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.435696459 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.447134575 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.394787528 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.350393903 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.356695368 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.357755874 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.356350653 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.354071668 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.382643417 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.34875887 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.354662946 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.696612114 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.365929442 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.364424583 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.355696806 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.355282969 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.377505543 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.355538455 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.357848133 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.44785412 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.358157929 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.421782214 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.73780533 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.735833879 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.356941151 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.358733903 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.356906026 seconds)
  done (took 149.901491307 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.423696796 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.432859974 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.471643196 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.375024811 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.408375396 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.475808717 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.374413328 seconds)
  done (took 11.225513289 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.36413775 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358958772 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.408877538 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.407253848 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.358814112 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.546179311 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359410882 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.370718655 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.356760608 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.411425643 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.36157456 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359597677 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.366282993 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.353096706 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.406743039 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.369676771 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.473745921 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.35937406 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.36048272 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.519299205 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357908673 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.367331924 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.410417198 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.370032347 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.362388803 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.365590091 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.198857479 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362572268 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357755467 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.360124446 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358151839 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.438412814 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.362247562 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.357078451 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358752189 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.476800862 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.361391787 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35824244 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.361557061 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.360232897 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.360973685 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.360075072 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.360323856 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.359061776 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.36171631 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.382958496 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.360509454 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.361786611 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.361611815 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.361522084 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.411229742 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.362386416 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.360023968 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.359022837 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.416729444 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36877688 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.362176688 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.358922839 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.362579405 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359430647 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.522124718 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.408859479 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.36219659 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.409496159 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362218841 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.362945332 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.362623455 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.362870926 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416536473 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.364279968 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.411071661 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.360741887 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.549338902 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.384938587 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364381431 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.364778221 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364989306 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363959666 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.355224774 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.36783465 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.360996176 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.364116323 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.36777392 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361307741 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361633209 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.545547614 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473077902 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.361928356 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.376451856 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.371686724 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.361490238 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.415811581 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.364583649 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361725767 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.41475586 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.477908016 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.416592842 seconds)
  done (took 156.377293092 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.368588059 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.371309143 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.366833245 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.386431374 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.384277837 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.363515731 seconds)
  done (took 9.510673807 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.366295454 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.366703633 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.365808315 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.365613333 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.365632037 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.366668063 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.365641607 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366290861 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.370308239 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.365983139 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.366744827 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.369627133 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.367890741 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.366507382 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.367965759 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.366285602 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.366355551 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364087795 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.366100699 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366179289 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.471377715 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.368279101 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366395288 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.367150835 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.371776872 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.366813788 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375447994 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.367599598 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.366225997 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374984994 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.387526935 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.368879695 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.368429466 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.373560483 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.371910268 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.367739777 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371521805 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.370989475 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364987573 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.369647215 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.371783528 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367754457 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.367448332 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.372006934 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.369787676 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.373369589 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.376893815 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376218169 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.368407898 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.372017291 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.372840563 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.368462497 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.36981903 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.373406968 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.370157088 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39139642 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.37743692 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.370480844 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.369479247 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.369714836 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.372049636 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.371720209 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371040451 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.374356726 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.367314838 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.373258094 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370698187 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.374619905 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371149617 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.370684655 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.374996565 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.368618296 seconds)
  done (took 101.026968139 seconds)
done (took 429.303567197 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.837222347 seconds)
  done (took 8.112333894 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.496757246 seconds)
  done (took 7.774428158 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.8334165 seconds)
  done (took 23.11584129 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.380736998 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.43763984 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.374701399 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.369044979 seconds)
  done (took 26.838730869 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.868415932 seconds)
  done (took 8.145530225 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.363091243 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.380323857 seconds)
  done (took 14.020376808 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.474840938 seconds)
  done (took 7.750650564 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.083778197 seconds)
  done (took 8.365366429 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.388369295 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.389980988 seconds)
  done (took 14.322038404 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.344892574 seconds)
  done (took 7.622288385 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.741269427 seconds)
  done (took 12.018918152 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.375274135 seconds)
  done (took 7.654235696 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.388273224 seconds)
  done (took 7.665753011 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.777725579 seconds)
  done (took 10.055166886 seconds)
done (took 164.738820306 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.365867675 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.365899961 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.364806836 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.365259304 seconds)
  done (took 26.739177279 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.40502739 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.406179533 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.40710548 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.417149932 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.409873253 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.40681354 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.398124711 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.39846783 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.418096873 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.410319639 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.408978051 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.407023856 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.408277182 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.399145688 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.409366634 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.409135844 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.417189733 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.408792219 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.400299396 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.410124218 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.374034472 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.418207266 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.410907377 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.373954153 seconds)
  done (took 35.010798861 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.900291016 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.44762097 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.526540155 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.425036877 seconds)
  done (took 7.577689866 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.425924904 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.426893962 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.438642359 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.478073394 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.50476432 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.436638352 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.399186116 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.395357879 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.382237747 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.428416662 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.503943791 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.442689849 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.523499169 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.373249887 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.566444051 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.374690697 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.375204718 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.42705481 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.478516152 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.495286516 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.375046595 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.426550765 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.431487261 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.444357352 seconds)
  done (took 35.834917814 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.375599547 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.393360106 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.375055656 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.373470411 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.383201247 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.374558223 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.374967848 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.376018135 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.374743448 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.380810644 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.373335815 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.387550231 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.374189977 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.375155728 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.381100189 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.376713149 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.38179541 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.375511345 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.375272633 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.381155382 seconds)
  done (took 28.844146139 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.36922069 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.222738003 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.72033643 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.624466272 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.369204192 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.367989892 seconds)
  done (took 27.956016873 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.451694463 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.610839573 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.376565977 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.768319696 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.876091503 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.397114426 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.375652596 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.633717662 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.987035311 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.975722725 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.440908796 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.45369504 seconds)
  done (took 20.629798587 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.387395664 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.373499602 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.388502308 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.389170074 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.434461098 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.400263308 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.383581801 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.370744609 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.438687642 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.457815193 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.400933925 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.43859606 seconds)
  done (took 38.147846973 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458646353 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.423187717 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.394071802 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391678681 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.097287538 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58564414 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399163798 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099427121 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.398201414 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646933664 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373097759 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478244131 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628619454 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373831642 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396295324 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.399497699 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619822356 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896219902 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376830388 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.547080439 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398992699 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387016545 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.627024752 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623743278 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609221282 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.356879835 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.634316344 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.148542422 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683226443 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391464706 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385014126 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374612292 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649410465 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050572074 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49331299 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604798302 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404386799 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.920359821 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.370374232 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.54404973 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378452468 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376479197 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385044478 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375619279 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309403009 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389825638 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115882603 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.401226687 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.086586683 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375011554 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654774457 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47480073 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.379543329 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.949250037 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429462948 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.402526914 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.381516623 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470771721 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97015857 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.92856956 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388932914 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.313584595 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383055285 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.560416611 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023522016 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.400915035 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.38057618 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38104075 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312257347 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.55019191 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394091832 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547135129 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.403259538 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.093597689 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172651758 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403090088 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.30844816 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947735768 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39155422 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.316288736 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606608429 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153155858 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316424096 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.326920012 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312259574 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124624158 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390216872 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.821458799 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399096892 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.129303146 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630695533 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418395288 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402342375 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603489822 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.260499592 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380850038 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.382513419 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531040411 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40115093 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107617231 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334233743 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.38346696 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635168842 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.590697609 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383161228 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.411112264 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89643523 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415931914 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.398014575 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383331783 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.612096647 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.013272966 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415079751 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963029387 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401316471 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155756792 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147768865 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39087687 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.386841023 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392287367 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674161583 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.170666885 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.263450849 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448762999 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381853229 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381463407 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.586131406 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229367556 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.272220916 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.594224858 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419406912 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.395228673 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.382239885 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343275877 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.378698495 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395304097 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.158361605 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605882758 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383164159 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660574407 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31629822 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547446532 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.443343292 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.606585576 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.643708977 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.405169072 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641604129 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382477006 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388718547 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396346712 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400603109 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482142957 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404053262 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.396829404 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64290215 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.387013944 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.386187443 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.584506131 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.16142195 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382816798 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.388680287 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389950349 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000638995 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412395354 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384598224 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.277868036 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.398220578 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450893191 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388186634 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614420645 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.767927793 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415436998 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.389853532 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.380939322 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60863706 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393803071 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.583367549 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465341827 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.881600324 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021665553 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416472245 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.31979182 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.096249516 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.078124097 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385701332 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.573505837 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385051582 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617221821 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422472497 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386061706 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.999172227 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405399537 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.583609336 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.390491195 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396024804 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.391232518 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385540719 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.764056743 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.9844664 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38752122 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.402031668 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529120891 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.399872738 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320608071 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902703113 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392467496 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387360943 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.163264501 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421293738 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.592416692 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22287284 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667215352 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391050335 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669269006 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.679250454 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.419461386 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.391349881 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391236347 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38910731 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.405988285 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413461289 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.399164532 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.598745679 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.892480214 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957416113 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173318109 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970579475 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.746284383 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.408493858 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.31720398 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125669909 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342944715 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.047961841 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645205389 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145166784 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36543039 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891531836 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.672971778 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238282537 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673978365 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622707674 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.730254753 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.41987846 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674806955 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604867811 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42480895 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396245754 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321909214 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.907534282 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982105156 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418817563 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467566758 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131290612 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4271619 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.166719787 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.452451999 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.170457017 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818561522 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.954210147 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.784134817 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39292213 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40962068 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242924392 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412410284 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916768315 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041157948 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.41961174 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.891706468 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348529729 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62314091 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.425468636 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.388222858 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.069343445 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.390639778 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.646250718 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675948614 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330649441 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39751012 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95707715 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.261488402 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.396854424 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392289525 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163353177 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393536496 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705380102 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.396520151 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.799080844 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416225349 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.326677539 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327434949 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.085561228 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395511924 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395356694 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91801911 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.400809089 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394069494 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417362518 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243258106 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648267899 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.406438893 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.011548406 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638924621 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393449353 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438134849 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.396897168 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398679629 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.375692158 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.2753184 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629819922 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.49961802 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618530657 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.436447403 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.754959646 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.479378083 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605839477 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.29632146 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394309191 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652793956 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.123499243 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.412315017 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174865608 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442770457 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400670253 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45535862 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394753314 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434126923 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483331255 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62773446 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.428258157 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.40606674 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827160496 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420577553 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396201163 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.407874322 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489729489 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.002218194 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.791852487 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.170258099 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027284856 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233456094 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.049535747 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701310555 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400099092 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403935596 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329128329 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545029775 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.920337024 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668779605 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551453551 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.396504918 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437258626 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396486272 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397496232 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612091808 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670065568 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.264606894 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412496623 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.063099715 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.554496473 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405860456 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.608398592 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933441903 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000799209 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523043177 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402846233 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133685163 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69120208 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.490081863 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396364773 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991318707 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.398789983 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.164507335 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.402588061 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405252244 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54455012 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68088905 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091125609 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.427354685 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.557101656 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.169823425 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.723827368 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65694869 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.905895934 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.63420431 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05231094 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.179513429 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666816917 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468395216 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633130948 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.534164004 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545297212 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.400856547 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.304531361 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398809311 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246049047 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.108322886 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.408580428 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028529428 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68340473 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.40220958 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.405301309 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42358582 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.408007679 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623385262 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154952874 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628495483 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409012643 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40027868 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.972031534 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03165161 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706255442 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339755689 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.403465996 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661849863 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.660067474 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42611617 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.852007501 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.110306467 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999603104 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.448537549 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421694739 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398896933 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.155969161 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039253908 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.817031977 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955246134 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064754894 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408922091 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677853201 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.406605158 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402212234 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680896219 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.403984441 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399909462 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658879721 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.054156202 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2435259 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.405526668 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.750792966 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.341828667 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.629477891 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402332052 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33889894 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410385705 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.843603778 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423152741 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554816011 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413588552 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.406509153 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414575327 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.138272501 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.742061888 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.407491329 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.401622649 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.398959943 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413858485 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500241799 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992840895 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429548634 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.079236286 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.758012076 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658576399 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406207359 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.386953713 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.405657538 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403427201 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.129461525 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444966615 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412081738 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005355918 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.413268234 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.417799991 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408136569 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.620352274 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615912248 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418493433 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640288012 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428109265 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423534395 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.303859006 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.221182837 seconds)
  done (took 1693.309071365 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430618927 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.427016236 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.447181332 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.438192852 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.413875761 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.444071208 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.487166347 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.488681891 seconds)
  done (took 52.890622046 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.405494227 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.566970123 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.437102621 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.404001927 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.435653866 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.404560946 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.902216306 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.430416036 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.417292196 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.415314422 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.418238653 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.410576497 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.098647884 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.413419181 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.405130865 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.394363662 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.415687912 seconds)
  done (took 66.696579691 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.003624269 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.736210281 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.747143299 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.420991365 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.411027575 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.435136238 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.735551967 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.425421449 seconds)
  done (took 55.230061348 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.421857277 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.422296896 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.4240533 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.423601306 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.423221455 seconds)
  done (took 8.431001095 seconds)
done (took 2098.577867261 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.410439241 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.412484639 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.410027564 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.411944825 seconds)
  done (took 6.960212318 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.387796783 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.13623665 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.391985706 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.406185421 seconds)
  done (took 18.637610381 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.439055925 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.430923954 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.175940765 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.064249908 seconds)
  done (took 5.557807585 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.159060774 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.171717563 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.154409392 seconds)
  done (took 7.802082158 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.406943291 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.40969728 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.412325233 seconds)
  done (took 20.545575576 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.705859929 seconds)
  done (took 3.023250458 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.554765491 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.605225313 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.770598158 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.757942311 seconds)
  done (took 8.005565079 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.794989413 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.791545369 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.601354088 seconds)
  done (took 6.504949968 seconds)
done (took 91.223952693 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.462571606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.434162042 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.61617689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.439206637 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.768537376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.616591862 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.875057342 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.404341592 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.944677359 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.93630808 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.439008463 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.795737701 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.823424299 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.437039037 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.823293763 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.433711166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.636503283 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.51238705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.126855253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.322583394 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.871956139 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.076809146 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.265671266 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.101280433 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.634965487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.569647057 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.671619115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.428064699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.300068218 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.689623536 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.571356736 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.408500477 seconds)
  done (took 196.755536682 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.409140288 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.416902724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.410574074 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.408877772 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.41134622 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.409178197 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.410908635 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.427920372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.427033925 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.426940945 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.410733735 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.410405702 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.413362596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.432024675 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410314077 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.430005339 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.424619368 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.4224669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.410348197 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.415634616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412109829 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.436775144 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.409951859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.410894622 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.411389522 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411203681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.423261641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.410410782 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410105532 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.410397952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.428014722 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.410927791 seconds)
  done (took 206.644807618 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.409785342 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.411373775 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.413143426 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.421302538 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.416438744 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.413934456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.428879884 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.412117709 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.415056834 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.411323681 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.429095986 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.41271005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.415452959 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.429171932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.412511454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.411722085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.417190796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.421034268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411784567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.412541947 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412771013 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.431270417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.44758649 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.411276213 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.41269435 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.413995769 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.446804825 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.411859596 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.445592386 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.412250658 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.431013604 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.429986698 seconds)
  done (took 206.755246194 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.610808008 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.421041735 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.420622745 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.355695129 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.420560654 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.420235096 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.417581895 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.619159089 seconds)
  done (took 15.006932861 seconds)
done (took 626.480827202 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.773457216 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.484200368 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.628847835 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.442155214 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.253825606 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.460849018 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.442642417 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.622735737 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.360998194 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.629880076 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.705576064 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.456387381 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.852209772 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.43933997 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.706746712 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.546087406 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.322595696 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.442469244 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.769891879 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.034219793 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.716009349 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.936597171 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.642832682 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.360559054 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.867832659 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.955010565 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.196425486 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.310427553 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.459339661 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.775780992 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.128218808 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.455557636 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.507938638 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.507342652 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.564584759 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.544376201 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.431564377 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.50530513 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.647804862 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.693778165 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.020817747 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.17979306 seconds)
  done (took 96.106406985 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.406816734 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.406993319 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.40563255 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.406861273 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.407090644 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.407329107 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.406787568 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.406863737 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.407022381 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.406777207 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.406576718 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.409110633 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.406234913 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.408869114 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.407096993 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.406298048 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.407390717 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.40906568 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.408173005 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.407422996 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.408655791 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.407427865 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.408630594 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.409832696 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.408479957 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.408604289 seconds)
  done (took 37.923579158 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.426342272 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.681225731 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.862944363 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.431581584 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.426826353 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.429963959 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.511376609 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.428374343 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.429341438 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.429507244 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.586669937 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.429680832 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.463677832 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.891904982 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.428952253 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.427454261 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.427694168 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.427569903 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.692030545 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435737481 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.532951258 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.428463566 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.510863552 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.437012593 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.451406172 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.429193726 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.43152817 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.022878577 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.447363336 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.58717223 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.287986314 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.511354323 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.95698648 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.895397563 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.288599743 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.433536127 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.428565538 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.592530208 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.429590271 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.427979448 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.512172865 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.428446605 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.8733594 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.109592189 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.448879064 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.429431646 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.046968903 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.611472372 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.699041997 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439746702 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.897772337 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.432157885 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.431304517 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.430689382 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.699911382 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.43964708 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.429772511 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.050359232 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.454625107 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.512739393 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.431237086 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.429819598 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.699296764 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.430138195 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.690444723 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.431407765 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.439326194 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.451256687 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.879090799 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.433564692 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.13637903 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.449225906 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.431453463 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.590712633 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.690185366 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.080939112 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.454651679 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.70417585 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.972924969 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.531592029 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.435892787 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.019465982 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.5362247 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.434576636 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.433999401 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.433437824 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.43270888 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.477649666 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.511787445 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.068535592 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.142487157 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.076041059 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.536213238 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.445532264 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.433169711 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.05335124 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.453823907 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.433359247 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.873178043 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.136830777 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.452043785 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.440024638 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.136228177 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.453843946 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.517323083 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.438121905 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.885764224 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.434423822 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.479649096 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.434308432 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.440343605 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.456810033 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.517149575 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.437540018 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.434915536 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.10398811 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.618024415 seconds)
  done (took 188.917717008 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.438469295 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.427475998 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.435619519 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.426608594 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.42803579 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.434723358 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.427037617 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.426991176 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.432175228 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.42693814 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.42834021 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.429982675 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.428985201 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.433727777 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.439874786 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.434798229 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.038888896 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.427244855 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.428740525 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.428825705 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.245607919 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.429482175 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.429659281 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.445548264 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.428966111 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.43010189 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.433003663 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.451694129 seconds)
  done (took 154.85289636 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.434917132 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.039655103 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.456972197 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.577407264 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.459792325 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.434054383 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.575719178 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.499271017 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.454753577 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.434473472 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.434148052 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.758778209 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.439285159 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.987607519 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.642729896 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.5954571 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.988679682 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.456137113 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.435901325 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.435134751 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.578059695 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.441631128 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.759639848 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.039335516 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.458149646 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.0571642 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.425635748 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.438658079 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.435985436 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.071079562 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.458923204 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.773289214 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.522992062 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.501047657 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.086230827 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.012036217 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.008595453 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.598361967 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.437491243 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.436314014 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.437216799 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.421701315 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.043953604 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.458209969 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.438776686 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.033068508 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.4582203 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.439668695 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.445273874 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.437814136 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.502330438 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.522005004 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.785863214 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.051006627 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.540165931 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.451124266 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.579263236 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.845813535 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.441781636 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.989318094 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.421727956 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.049156619 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.459143192 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.423115091 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.439711379 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.444017183 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.600860686 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.580941196 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.992214872 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.458597014 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.994138618 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.619289449 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.438823242 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.438426551 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.441086365 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.050300909 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.013707909 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.619849074 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.583664698 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.651722776 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.426426857 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.439675795 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.424195148 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.522533692 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.439080131 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.051236433 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.014117213 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.459829521 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.441710623 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.442955643 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.443638725 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.632569891 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.070904666 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.543639787 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.983782344 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.787140334 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.770243136 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.443039795 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.504769775 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.459252816 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.769973432 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.442954238 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.503315842 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.916635345 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.770822262 seconds)
  done (took 172.169996077 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.691927664 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.708626507 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.537190455 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.593644051 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.055269604 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.027646923 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.76837484 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.591948984 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.557526317 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.710728006 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.646826773 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.5324274 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.666236998 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522670695 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.204503733 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.533217938 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.555781481 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.598022058 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.604053872 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.487934332 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.13161414 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.735588506 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.642789195 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.373901501 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.54010223 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.243272119 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.028030363 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.976028866 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.619868517 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.785274792 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.988498823 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.593742392 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.440644537 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.170766886 seconds)
  done (took 69.209147791 seconds)
done (took 720.503342023 seconds)
SAVING RESULT...
DONE!
