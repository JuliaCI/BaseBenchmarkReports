cset: moving following pidspec: 26871
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.391384587 seconds)
loading group "string"... done (took 0.574196773 seconds)
loading group "linalg"... done (took 7.299334193 seconds)
loading group "parallel"... done (took 0.164074236 seconds)
loading group "find"... done (took 1.166685217 seconds)
loading group "tuple"... done (took 1.810690217 seconds)
loading group "dates"... done (took 1.253904542 seconds)
loading group "micro"... done (took 0.22109907 seconds)
loading group "io"... done (took 1.022038133 seconds)
loading group "scalar"... done (took 38.769219314 seconds)
loading group "sparse"... done (took 12.225814101 seconds)
loading group "broadcast"... done (took 0.953704321 seconds)
loading group "union"... done (took 12.790151155 seconds)
loading group "simd"... done (took 4.505049701 seconds)
loading group "random"... done (took 9.089939869 seconds)
loading group "problem"... done (took 1.838523255 seconds)
loading group "array"... done (took 20.835825979 seconds)
loading group "misc"... done (took 1.681510381 seconds)
loading group "sort"... done (took 3.340113499 seconds)
loading group "collection"... done (took 17.45817141 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526030041 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125856805 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119022241 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120665852 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148462107 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113236739 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125918041 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086449695 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.810111117 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148779584 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117160542 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431055328 seconds)
done (took 5.192381672 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175696881 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083193109 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08425563 seconds)
  done (took 1.308635011 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068697102 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122505924 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066762826 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067611044 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06793965 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066686909 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067212935 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066855221 seconds)
  done (took 1.668237103 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07412032 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069792469 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066629902 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068039257 seconds)
  done (took 1.422190211 seconds)
done (took 5.79665456 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.794622413 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204687884 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187805207 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413416727 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130784592 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159373656 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641673935 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.334043479 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.195287753 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082612005 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109366147 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329302335 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113173878 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63111333 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074847931 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091157604 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139985076 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.403585879 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068140296 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082768591 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089266818 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12832288 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08540981 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074426877 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145694095 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06751771 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136892628 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079986669 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066939068 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214199111 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172809885 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.650556831 seconds)
  done (took 10.282137512 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097001726 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096441428 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068897875 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122746912 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097221776 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069872043 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071613897 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068145357 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086757006 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128638056 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08863619 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102134027 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065684663 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068757895 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085583385 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204089753 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080512494 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081670399 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071086651 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075156025 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105598607 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078459838 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077410954 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077480883 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130756768 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183416561 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100260266 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098857032 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066892686 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079522619 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115347663 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125347625 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067352153 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06609512 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123770539 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095217615 seconds)
  done (took 4.601933668 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.005609351 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144501606 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092412415 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135015805 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06526325 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109638792 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065747379 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083742214 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.213117429 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.460338641 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.594041856 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.115492599 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11428425 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107572439 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069534031 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070494602 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065368301 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067410035 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.500160374 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096238245 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107320298 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081472081 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069916252 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069127338 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.353215029 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067737783 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064125668 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069089856 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057753602 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12577696 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068147198 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.94706166 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127350595 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066385193 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100674524 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162208973 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090017547 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.276954945 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068980349 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064854049 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15341492 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.06968484 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067145183 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084468489 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103502833 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113771654 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066345976 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068040669 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164639727 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064821919 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079410973 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.642704004 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152080619 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076636154 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064994222 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254898956 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088711474 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070138258 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064707325 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181660868 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135269339 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065248419 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067154013 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067151502 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068530463 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069058459 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367486731 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066215704 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.064235237 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070797057 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080314721 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070306772 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070009748 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073070346 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072928312 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088073734 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06763653 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075433804 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066622032 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066356838 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067391282 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084117448 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.375046575 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067300734 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068797251 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065963314 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089692306 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097478985 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06709363 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065260443 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100321508 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068806216 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066433891 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106544381 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064144868 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067218979 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083946636 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069727986 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113278755 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066332091 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192928296 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068418651 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101212993 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072750209 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101537487 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084277255 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068312249 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.418688203 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065126664 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066038311 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068377834 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065169037 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067753033 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066477768 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079042633 seconds)
  done (took 21.370619999 seconds)
done (took 38.40261342 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242039375 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084714536 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080540273 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074008441 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074604007 seconds)
  done (took 1.78987001 seconds)
done (took 3.004191409 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124840035 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100790277 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065180172 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097753793 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064633691 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102259529 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101123152 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082430877 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101250241 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064588915 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09865677 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064653308 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064410833 seconds)
  done (took 2.370117315 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084801714 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084686622 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071756969 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084816131 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06570702 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085854809 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084726186 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092002664 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084169319 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075273198 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065414335 seconds)
  done (took 2.087345552 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08296999 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085298523 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071684439 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083037254 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06495515 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083500353 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083916027 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089496172 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084476424 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076266419 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065785289 seconds)
  done (took 2.075473892 seconds)
done (took 7.737645063 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079215829 seconds)
  done (took 1.275525018 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.60256136 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.103160785 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082271046 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112555274 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190968662 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119263099 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27286554 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088323633 seconds)
  done (took 8.951448092 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089760019 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084160312 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074305684 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.0734178 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073859189 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07371835 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070226447 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071814437 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071995662 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074255785 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070462998 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07145616 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072304762 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075059017 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071347111 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072854606 seconds)
  done (took 2.459903433 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092806914 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09186963 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074175573 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074658297 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072889578 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072123521 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074490924 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07336 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071138518 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072294599 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074440785 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074296144 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071655835 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064888786 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07400286 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075828519 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071276513 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073888659 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074626497 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075471151 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074502068 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064346553 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071426385 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.0737134 seconds)
  done (took 3.089744363 seconds)
done (took 16.982526751 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113654267 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072402069 seconds)
  done (took 1.38904203 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080998062 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082900157 seconds)
  done (took 1.374617051 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083872379 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065899492 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091400712 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07792484 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065910124 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065448899 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088163969 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066207115 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065818673 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066174601 seconds)
  done (took 1.943819666 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06886292 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077746822 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070555414 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082053538 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073243512 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064263387 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071583352 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068026312 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077284284 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06345273 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073428678 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085175084 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073384105 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085227247 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072555123 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068498013 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070474461 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06759058 seconds)
  done (took 2.526422078 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065542939 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.0672171 seconds)
  done (took 1.344801074 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066753957 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064039074 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066446954 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066385257 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063973124 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062334346 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063582728 seconds)
  done (took 1.662756285 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388316935 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113979485 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.319443104 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073747787 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085040831 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258397799 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065804272 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070721346 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072193601 seconds)
  done (took 2.702697342 seconds)
done (took 14.162054605 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080600732 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08756128 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09634193 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375420648 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091553368 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06579092 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114051492 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187618824 seconds)
done (took 2.326647952 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214206787 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.6374635 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.409061699 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204392262 seconds)
  done (took 2.47105419 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344499155 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087956391 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060453647 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069416609 seconds)
  done (took 1.790659153 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066938463 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06989883 seconds)
  done (took 1.36293272 seconds)
done (took 7.064795432 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0659463 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066575079 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063490995 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065880764 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063610363 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063011287 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066273761 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06682843 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.066096422 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.066014869 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06864817 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084165893 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063478815 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065331837 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073760615 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068388523 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06607008 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064182039 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063611536 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063788073 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066283999 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063694944 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063816768 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068114882 seconds)
  done (took 2.85730339 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083997327 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066475783 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071103506 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071669805 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069725844 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071055371 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07110292 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066270365 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07073219 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068370136 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06901305 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069365742 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068096544 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069662555 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068327578 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070059126 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071514746 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066209007 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068884097 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069645672 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071658541 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06584892 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069353933 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071325855 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068960559 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070661206 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068363637 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066101365 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071243267 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069280123 seconds)
  done (took 3.328572531 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070405371 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062989707 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064686399 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070956079 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063586377 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06458301 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063511737 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063997793 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064121627 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063359643 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064496992 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064035711 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064146423 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064349296 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064324399 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067277456 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079423998 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063574378 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063361596 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064155977 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067165513 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063423411 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06428309 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064158552 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06334093 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063277836 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064039492 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063496429 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064449089 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064178519 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067147123 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067641142 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063182635 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071837852 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067411477 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063807445 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067652496 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063491504 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064181164 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063477274 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063196517 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063262747 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063324624 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070667338 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063531821 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064953632 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063999977 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064531705 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063934978 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.178513995 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062887717 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063424178 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065394794 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065394975 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068025167 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063277429 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064545101 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06337656 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064690517 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063351501 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062856635 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063224036 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066241584 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063944982 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077965517 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070619571 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063886361 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065228415 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065132746 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067430701 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065894187 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078967998 seconds)
  done (took 6.06293591 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089490502 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08684293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064859369 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065270633 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061466269 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064833544 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069876814 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063946208 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065521867 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082062313 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066846204 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067256677 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067076747 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070464998 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066999239 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06779211 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073313833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062944725 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064247859 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068030114 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064485103 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069847638 seconds)
  done (took 2.769742241 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155552289 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070721775 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105097684 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075366976 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069770999 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075134709 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069891802 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069887054 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070692478 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069064238 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068203985 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070000404 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070261542 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068155106 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068114367 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067872718 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069638148 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06720058 seconds)
  done (took 2.621163906 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076035289 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066262915 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087116709 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066340998 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066430333 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06852771 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070515677 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074328988 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068177478 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066454965 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074088206 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070315176 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070762293 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068319749 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070178288 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067857428 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069971267 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066895497 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074377659 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070992303 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07051641 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076313128 seconds)
  done (took 2.802640353 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079570457 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068260261 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081624004 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067725999 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061889878 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065016615 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070467743 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065458891 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070703959 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067850843 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065702741 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064851827 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071046531 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067549368 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070569165 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0667388 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067504874 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065675403 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067400372 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061175347 seconds)
  done (took 2.610679332 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08611891 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068029804 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06825672 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075431258 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067454152 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067840894 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074734758 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067332277 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06762801 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090080721 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070306291 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0697489 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0768956 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072252381 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067989983 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075833112 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075681855 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075187203 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067604752 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067391251 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090395353 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069923237 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078002059 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069599965 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068860183 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067382897 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067948759 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072116433 seconds)
  done (took 3.280056642 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066310532 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066168192 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06328784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063417539 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063390686 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06337469 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06357369 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063990056 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066001112 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063378796 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065912832 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066228823 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066058054 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065712295 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065505843 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066017648 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066124875 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064212146 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063756579 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063708961 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066022989 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06613072 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06619884 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06368216 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063700842 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066314713 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063857567 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063419341 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065838145 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063717 seconds)
  done (took 3.192437347 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076312378 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072688186 seconds)
  done (took 1.398001774 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064145553 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080127109 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063088659 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070247659 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06960566 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067261104 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073306789 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069503024 seconds)
  done (took 1.802425733 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08302965 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077973632 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067648894 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080820669 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076971896 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083973675 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134959075 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066890216 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073646903 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06508623 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080003113 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065704117 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072590538 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066301479 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072272033 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07276851 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063978127 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072406653 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068472801 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064772582 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067857372 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074808955 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06899541 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061717395 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067214179 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089323098 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077459396 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065625339 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069299129 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074358916 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071681244 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060100943 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066365513 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066670695 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063648735 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075945664 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081005829 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069411462 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07467166 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067553402 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076115328 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061271175 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070875783 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072737237 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076674213 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066612665 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066545519 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060986313 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06482198 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068270953 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061353516 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068932102 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061185154 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073281947 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069642268 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077482656 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065790912 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06846411 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069981179 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069468429 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072650056 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068141243 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069123739 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065519328 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076060713 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071035131 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076249927 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062154764 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061915142 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065240048 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075813887 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08893369 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072625934 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067944561 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068420409 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064601788 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06976233 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067318488 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072305654 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072767391 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066733454 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071385961 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073243749 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066308319 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069698061 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073972232 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064669828 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069020441 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064640687 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082664123 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065543628 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064234211 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064353993 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076818063 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069864679 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065893807 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064513737 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073903602 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060482635 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066703961 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067655847 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067437196 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077109086 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07106824 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071037141 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074326114 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073477265 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066279425 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069240143 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061851212 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066458824 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064489158 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072510918 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059477099 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068078935 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066505153 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065487787 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07346073 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063909464 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064630352 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072609597 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071072338 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.189518939 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064571275 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070340837 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067106133 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070112238 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075778016 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065063368 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062763259 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062134934 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070529251 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066455618 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070448273 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070398426 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069401673 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06145359 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065120675 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07127659 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075813012 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066983512 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067906798 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072482382 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069039508 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066592781 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073728264 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069694549 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066248723 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073538169 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067566783 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061763621 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069708846 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069700394 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065540774 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070904472 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069390247 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069593498 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067384448 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065328598 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073422369 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067263714 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066369794 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06740925 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065742682 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077662632 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069181031 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061346321 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063193922 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074880209 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064866697 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065711037 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065593532 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068485317 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067528359 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064631666 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066515751 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068583524 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076185203 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071238187 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067401822 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072335406 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078698835 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066493357 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069456313 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065872025 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066970304 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066784599 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075590527 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074744996 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073654023 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070889368 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065332575 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07467678 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076329684 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067249083 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065317066 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067082175 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072451291 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074131413 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072944911 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069658838 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066477796 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069089956 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070204174 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069224685 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066287805 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065249049 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072178049 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064699077 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073111852 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067231716 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077873583 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071064603 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063045284 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070478448 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065308528 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073824016 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061807123 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064826677 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066164355 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068546984 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06594409 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069456466 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060576576 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073645723 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074200939 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067032223 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065887758 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066104377 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073203351 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067797894 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070471374 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069404042 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071433139 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075830179 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064697203 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068704073 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075674648 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065025474 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059547893 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07085708 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063567762 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063998765 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06437304 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063570431 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068093145 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072495183 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071699202 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.188009156 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07035034 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065459023 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066435479 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06209828 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071965489 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06984893 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067541658 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074072734 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066830211 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066988191 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070972821 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066147022 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066981279 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067981443 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069840823 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067308507 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06859689 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066651884 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070275973 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065680998 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064614727 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068610187 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067252269 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067897565 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072007765 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066457957 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067386171 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069587207 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067664885 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06741583 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067535298 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066691585 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070365602 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068525356 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06732561 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069675298 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061618164 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074473651 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066370275 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074436623 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067287817 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063554374 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073748802 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069111686 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071718601 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066893456 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068141062 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067949635 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065801559 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069856338 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07428885 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065152912 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077556806 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074161015 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068035908 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069976358 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067731645 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068767878 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06678769 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067917808 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067671905 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06797674 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066439466 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071677466 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069555948 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066437298 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068320241 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06729988 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067704867 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067852071 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061289021 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066254479 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06621942 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066354575 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076113738 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067068709 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066958003 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065702073 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068453721 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065862273 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063533022 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07705336 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076475445 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068692149 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07517578 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066240557 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06849605 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078658396 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061646932 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065541438 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065163117 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064689436 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073955191 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06740382 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075752203 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066534783 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066168674 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063392544 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068093095 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064816857 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061051696 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064454219 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070110352 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065651397 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065879365 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066325897 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069166135 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067818018 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076349938 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065928088 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067828933 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066626267 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063153712 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065689348 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064960869 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068196781 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066323114 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063826136 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063192287 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06528251 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066237245 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066695158 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068156135 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067041179 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072293769 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065387311 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068720838 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067909983 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060019489 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.200909603 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066872864 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067270728 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066502938 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07082402 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070912006 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067811449 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076383818 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066701633 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06721389 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066514141 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064599531 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067155454 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067116948 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.0666504 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066818412 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068312805 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074070324 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064847478 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070262924 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068137709 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067277779 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073374647 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067931731 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070132758 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073632007 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06734822 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069761418 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075719638 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070647385 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070569996 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067072937 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069263836 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073877339 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067669461 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073474455 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067311815 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068008027 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068788505 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.0649869 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067120943 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066404319 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066737961 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072376637 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067934052 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066244479 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066487162 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064850457 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067601295 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070294302 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074062263 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070178016 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070796903 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061685043 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064258631 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067573802 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065412972 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06948369 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068852537 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073151068 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069634414 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067314632 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065937131 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07593361 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072385068 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071478962 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065399825 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071349365 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067962111 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069458174 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067942412 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067153857 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068699532 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070968321 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069053231 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066330557 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074664138 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069990463 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067077318 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068556895 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068119353 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067353554 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061714689 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066758542 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068725521 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071345444 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069398891 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067426884 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077242427 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064746746 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067039511 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070143647 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066344811 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072130122 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062266727 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068981099 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067500556 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067584665 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062158194 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066211507 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064837539 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069545862 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065918775 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062125245 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077951056 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076391769 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069992992 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065959711 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065866082 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06188097 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061868828 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066137489 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068332549 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068740399 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076278198 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065536249 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065230333 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061422003 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066355397 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068133224 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068380752 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06280986 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060948795 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064784769 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068955278 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070652207 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064089339 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065427857 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068829104 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068262446 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.195134735 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07055344 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064162189 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070472338 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079783795 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067466442 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068177243 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07309746 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074550654 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067598113 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061553222 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066905954 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070727279 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068016777 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068964461 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067975595 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082691798 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070649214 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06610763 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065897058 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070211284 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066807701 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075822344 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067940419 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067269204 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072430732 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069210789 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075505922 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069995881 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073886812 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071264303 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070465756 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066217688 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067994643 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065033743 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066994986 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068167174 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067795147 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071744576 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074908819 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066724114 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077722447 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075482892 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069302586 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06401934 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066374542 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066382712 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062469957 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068511799 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065793703 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066747618 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06514691 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066512445 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069151394 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072617685 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067560365 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067351053 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066763996 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061016096 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069551119 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068734115 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067917044 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063694782 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067749323 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067822992 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071230102 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0704968 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064590608 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069306165 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06827342 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068124353 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062038827 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07345637 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066055129 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068949412 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065528595 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067002644 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066779548 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069615019 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071635071 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067607295 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06897399 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070436691 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068430943 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063555631 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063633186 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072001089 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064644316 seconds)
  done (took 42.776004569 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10128235 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06329625 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062783388 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062197906 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073299484 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062560126 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061972398 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063565063 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062901895 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065556856 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061985231 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061753097 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070315253 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077656002 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073191193 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066556375 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061716214 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062884804 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061969276 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062604757 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07071201 seconds)
  done (took 2.750393355 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074801461 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078355069 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076084904 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081716789 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070547067 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070662562 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075220139 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070555744 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077893902 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072735417 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078765226 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070495309 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072834187 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072614953 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072554023 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070701042 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078635361 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071183148 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070557015 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075079513 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070557642 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075491205 seconds)
  done (took 2.950242693 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067837049 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065500882 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067989167 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062148475 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066393919 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060652935 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069116318 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063799193 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069087188 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065774076 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06505173 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065860654 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068265555 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061534053 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066540588 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063757308 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107952631 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06922634 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066243961 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067074601 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061295729 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068561668 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061220297 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061627166 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065472142 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069029688 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066131965 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064340256 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065303667 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064816424 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065588063 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063220729 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06795865 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066331181 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064696591 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064799744 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065166268 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06547706 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060741795 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063940573 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066826035 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061517751 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066484116 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067454363 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063786221 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063342154 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067284698 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065828996 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060664455 seconds)
  done (took 4.563364676 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078334684 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108568393 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067730671 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091487676 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080529008 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07206341 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070024125 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089673972 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063823759 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064101134 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081259177 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078414831 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065024501 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070349764 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072460422 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065070139 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066216009 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064461923 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069253083 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065095691 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069042954 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072071202 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080113155 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078406612 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069178082 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06475693 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066971865 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071875439 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07897951 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069312476 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070016113 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070637082 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080628247 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066627194 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064579878 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067457493 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081098313 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065297609 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068318557 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063168898 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067733887 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069279357 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071979967 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081282411 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065437034 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070243801 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065253091 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062546323 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077087051 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067457737 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073634815 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079247106 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069153269 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065194723 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069864081 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079508212 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065021068 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063669131 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06799865 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076498265 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062781485 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069083635 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078118049 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067123444 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07173852 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078252506 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070264754 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068631434 seconds)
  done (took 6.344125742 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076929191 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095581246 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083155006 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083344971 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075616964 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076000058 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075563586 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075431122 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075160358 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080312613 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075653051 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115428128 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071054511 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077343297 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075333168 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075511335 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075245085 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075251568 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075764464 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075449562 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075578113 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082447046 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076265641 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082660103 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079587109 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070980426 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074781769 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075519771 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082767947 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084254059 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07934499 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075525124 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075621138 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083001623 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079408814 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075269083 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065536673 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075050755 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075211912 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075134469 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070555651 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083076762 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074867597 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070574646 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075472562 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075433545 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082571732 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079540573 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078152117 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079495853 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075269058 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082940261 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075320431 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075313215 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082479012 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084809647 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082699253 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082818293 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075217945 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082819121 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081985878 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085414566 seconds)
  done (took 6.216464739 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082850071 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07470444 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081206909 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061191426 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063874918 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071404914 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063658503 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064209712 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073766533 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07368128 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076299703 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071809208 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074194179 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075855632 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071470053 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074751224 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072025522 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072281508 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07379334 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071600431 seconds)
  done (took 2.792316367 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074527489 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082410004 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06700563 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071146573 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069156396 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071552708 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06801914 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069231932 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066899332 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069343234 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075881834 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076317768 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067145838 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071615323 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075976401 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071015704 seconds)
  done (took 2.487404939 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08351515 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072696689 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079360598 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066395653 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066890659 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062367221 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065887428 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061146435 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062232972 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077907109 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065759952 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076920026 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065716152 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064596267 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062559211 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070804479 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062243693 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063268075 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06550954 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077731628 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069971928 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063887877 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068562275 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065472634 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067895005 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070314132 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065096278 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066556797 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063348116 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065547415 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068494099 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069709034 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062554942 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06336736 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064216619 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062903998 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06538503 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065933446 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070761543 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065344454 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063746656 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067302011 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065634331 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066136025 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062026535 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065643127 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061624917 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067751628 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063309909 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067656239 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066253827 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06764479 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066237176 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072285151 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068165682 seconds)
  done (took 5.03120513 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079518869 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069383069 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06162312 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063377709 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069246204 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066732218 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069009203 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068043879 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067452505 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063564336 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066898163 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068611603 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067174671 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069355715 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067439786 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069634012 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061279869 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06677276 seconds)
  done (took 2.568667093 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070838686 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065454796 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.0734804 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065876241 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065962892 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068289223 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061715702 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064574965 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06456676 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066088139 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065754524 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067811544 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064160063 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068370962 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065332296 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065551223 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068092621 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064611289 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066309847 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061606122 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068572202 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064127179 seconds)
  done (took 2.805689778 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093988549 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082692113 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140187999 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078720964 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084411736 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071325126 seconds)
  done (took 1.90108807 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090125531 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099760273 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065808554 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069684027 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075797009 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069504156 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069804164 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070061117 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077665627 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076174719 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069599734 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078055074 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078117654 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077687685 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075481293 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075621679 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069947881 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069742478 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06615652 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083184989 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069837252 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07765643 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070049043 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069278272 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070197225 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077108566 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077873836 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075786665 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069909075 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078143355 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075415223 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07008487 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078011849 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075339453 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068946115 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07796426 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070463339 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083494824 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075228097 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077516951 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069436455 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076140559 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078457772 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074818595 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077852774 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070234034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075146883 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070128872 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069958583 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085639694 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075592277 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077536118 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078209934 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078650616 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077895434 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085735427 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075924467 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077197074 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075456561 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07560946 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078211442 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075675602 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077769616 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075825979 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0761952 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077266498 seconds)
  done (took 6.336496351 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102961776 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066901466 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069939765 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076484469 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077714981 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069938295 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070523583 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069902505 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070211159 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067706427 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107759095 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070064474 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077606462 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077703811 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070191116 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06985557 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070254611 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077182896 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067355897 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086285625 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069804945 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077894633 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077345869 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077448895 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076694641 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075822045 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070331238 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069891519 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070042053 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069982228 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074415651 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070307995 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077595693 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066176562 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078202074 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070353734 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069343015 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07466938 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069983296 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075828392 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077223704 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083271947 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069810149 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070504665 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07596506 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069888075 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070272676 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066803646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069598869 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066799399 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075511721 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075824791 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075707581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077406563 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070887033 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070487266 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069935996 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070166116 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070028428 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075977232 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077398901 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069995241 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085992116 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069977161 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069920643 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077667355 seconds)
  done (took 6.249778301 seconds)
done (took 129.722646852 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.192057478 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165900668 seconds)
  done (took 1.705585833 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06992476 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098827619 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077576334 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127693822 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067680719 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100768421 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099297904 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077565249 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066560974 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06578689 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065998953 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069003143 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13166244 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066118408 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066079178 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068888632 seconds)
  done (took 2.67980123 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100001329 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163041425 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102889867 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065432069 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09933213 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072817052 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064776055 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075871661 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071162798 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065334696 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07301274 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070224611 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06535636 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071008605 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071022308 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07309777 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064966766 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07295653 seconds)
  done (took 2.804520755 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099814737 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090691028 seconds)
  done (took 1.556399086 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156099128 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106049206 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146264538 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35266786 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165137231 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.14819885 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14367446 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143273336 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1171767 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138646625 seconds)
  done (took 2.976774058 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098790527 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155249801 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26490788 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118016068 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073187756 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09438338 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119294591 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078453802 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080713848 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080420082 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080386952 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075823819 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100276482 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073552922 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073841566 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076257083 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102938778 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072588152 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075342061 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076684737 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100930396 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065640178 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073606358 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073075524 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077739498 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077639005 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066369299 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065913504 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076628841 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075268689 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077305605 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094887438 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077047363 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106054499 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071167534 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106992491 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077086473 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073681337 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074795266 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074022883 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078692534 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078894998 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072784938 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076600423 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065499838 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076872863 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065985621 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065608292 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077944864 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06680343 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078528247 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077749326 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106105387 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066675997 seconds)
  done (took 5.998742142 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1032806 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106609009 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071980537 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112175993 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102649995 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072793564 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102918726 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095757979 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104188312 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070385636 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067978973 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070216217 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081877113 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083027711 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114675895 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107704403 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07418324 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071911468 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106564302 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105142662 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068621391 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097530775 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091703748 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10385006 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067813879 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070460953 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068446814 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070388778 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077156521 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078676651 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069972934 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08101413 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084473625 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078186969 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067141547 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069423649 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068218013 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080227282 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079724712 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078799709 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077647507 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068043978 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068138349 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069865918 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069943622 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067687498 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078539642 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080370892 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078339805 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070143888 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070397766 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068603947 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069613504 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079980902 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077657393 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08081801 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079677359 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069408317 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068500461 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072448379 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080767406 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079026302 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079607491 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069548022 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078894968 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068640912 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08000622 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084850531 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068941247 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07033267 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068462139 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069475055 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069841895 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078136895 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078306179 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069779631 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070371204 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068600788 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080224162 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078287105 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068674738 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076757378 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067518957 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068383931 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069514745 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069497792 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077182286 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080122305 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069719936 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06829955 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069305968 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068741996 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067590578 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076624382 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080069594 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079295281 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07777084 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069259624 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077997977 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076929077 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069006185 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078248564 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06772882 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069728171 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068669562 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077239764 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076336999 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077586275 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.19754849 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069426615 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078915577 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081026349 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069402418 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079309045 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080990653 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07944518 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068817902 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082669452 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070080974 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0800118 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070960096 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081025994 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069881555 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080327727 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069438515 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068676876 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070411402 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079915662 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073086466 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069117744 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071536814 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070219454 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08012211 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082737205 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071535829 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079111042 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078815865 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070933121 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079568913 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069763456 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079658231 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070382286 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070702649 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067898596 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082234638 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068845829 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069175646 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070261708 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080837199 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068839875 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079596981 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078337359 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06836534 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0817989 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080501557 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077432509 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081179147 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070904692 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069999525 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069651331 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069858655 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077816521 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080961507 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070912169 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069443351 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078506317 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079543818 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068183159 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079820536 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079087947 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079603698 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068985241 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070227079 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080269053 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081144463 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077955598 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078414815 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078547909 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069409487 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078205687 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078109806 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06796236 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085318485 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068528208 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082559131 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078636261 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076329483 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079026763 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080208852 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079950411 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079588729 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083562835 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068528149 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067960937 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079654789 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068610027 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069796776 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078670904 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070874734 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069659372 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08335528 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068833113 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080120332 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068023709 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078942475 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067492344 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070105512 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082890095 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06723768 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068959202 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077980735 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069481158 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076045465 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079160293 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07701344 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06696444 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069871837 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20923115 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079880432 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068755444 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069041953 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071293867 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079091624 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077451517 seconds)
  done (took 18.717040363 seconds)
done (took 37.809815743 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21398449 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154667322 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183656814 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119483901 seconds)
  done (took 2.139060951 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117294934 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102040636 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092933203 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066514536 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099858068 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066066312 seconds)
  done (took 1.946525482 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312419404 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212676936 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190234143 seconds)
  done (took 2.111899282 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202492318 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190527095 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423623907 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265655097 seconds)
  done (took 2.595824188 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146245641 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089775648 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068131643 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08527091 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135369487 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161780028 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101087312 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126717174 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080373396 seconds)
  done (took 2.450187489 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151336875 seconds)
done (took 12.805567871 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098931632 seconds)
    (2/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075392731 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.130865226 seconds)
    (4/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.218094611 seconds)
    (5/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.157600286 seconds)
    (6/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10377162 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.122423971 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083182621 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.102572177 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.208202544 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.166682786 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079437833 seconds)
    (13/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07577927 seconds)
    (14/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070214762 seconds)
    (15/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08094176 seconds)
    (16/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075324976 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074657988 seconds)
    (18/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.217978961 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077222713 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089824883 seconds)
    (21/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074334526 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101803083 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.220491932 seconds)
    (24/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.167471792 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.230484499 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117343401 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.210282731 seconds)
    (28/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.172677094 seconds)
    (29/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.117832078 seconds)
    (30/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.163423987 seconds)
    (31/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078307647 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.0766794 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.205283365 seconds)
    (34/309) benchmarking ("sort", BigInt, false)...
    done (took 0.190129279 seconds)
    (35/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.175071232 seconds)
    (36/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.157899028 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092822465 seconds)
    (38/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076114006 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064525122 seconds)
    (40/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081644552 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06876191 seconds)
    (42/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.162838369 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071637046 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113617977 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063889211 seconds)
    (46/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06912078 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.182155787 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050997164 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.105977523 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185400809 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.14435752 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07422219 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085883273 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075806785 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092669003 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090105638 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067264163 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114842406 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140799955 seconds)
    (60/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164789244 seconds)
    (61/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080687641 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175006633 seconds)
    (63/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076652436 seconds)
    (64/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.184418216 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155400569 seconds)
    (66/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.178400638 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125318614 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193893911 seconds)
    (69/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073775555 seconds)
    (70/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.183514495 seconds)
    (71/309) benchmarking ("sort", Float32, false)...
    done (took 0.132836798 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066858679 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076208424 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071961128 seconds)
    (75/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091214665 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155462017 seconds)
    (77/309) benchmarking ("sort", Float64, false)...
    done (took 0.13085087 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09448403 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080266535 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050716436 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.066277241 seconds)
    (82/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09041671 seconds)
    (83/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.191070916 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07670182 seconds)
    (85/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.205391156 seconds)
    (86/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07124502 seconds)
    (87/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063780324 seconds)
    (88/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054207536 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169760612 seconds)
    (90/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077101173 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.184108289 seconds)
    (92/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053041006 seconds)
    (93/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073065719 seconds)
    (94/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084165446 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064903644 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067718101 seconds)
    (97/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.115317137 seconds)
    (98/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051403627 seconds)
    (99/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080498762 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09569535 seconds)
    (101/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.1868992 seconds)
    (102/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.0745432 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.14640382 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068759756 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093594398 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.077779793 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051442294 seconds)
    (108/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077713759 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073946294 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06599372 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182488004 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066282115 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054193211 seconds)
    (114/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.071985635 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090922879 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14880543 seconds)
    (117/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053283866 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09065691 seconds)
    (119/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198381913 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124637189 seconds)
    (121/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050975265 seconds)
    (122/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.216956734 seconds)
    (123/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079593108 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.140467875 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074496956 seconds)
    (126/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08139982 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073299363 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05162985 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051861037 seconds)
    (130/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.109822312 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103064814 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072717673 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072669186 seconds)
    (134/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101520711 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072748916 seconds)
    (136/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155025248 seconds)
    (137/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074681037 seconds)
    (138/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.156330755 seconds)
    (139/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086447564 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075277519 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072012854 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064471874 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121296167 seconds)
    (144/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070725639 seconds)
    (145/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052316366 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066151974 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073426986 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.161637883 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067009479 seconds)
    (150/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109682242 seconds)
    (151/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068456704 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051041413 seconds)
    (153/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051551861 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.154318113 seconds)
    (155/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067055409 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074262517 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092664947 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065499074 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050994717 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068175519 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068439272 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069056797 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051449789 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073098048 seconds)
    (165/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051648558 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065604914 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.298115226 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130921621 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053014417 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065366626 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.183181228 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050796307 seconds)
    (173/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051894676 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.092734824 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091582421 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068112154 seconds)
    (177/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107698547 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073445807 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051719297 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136177126 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074678515 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06798185 seconds)
    (183/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07404611 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052512582 seconds)
    (185/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.111812854 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051309315 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051115664 seconds)
    (188/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087249768 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088575194 seconds)
    (190/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075504781 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072503983 seconds)
    (192/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071961594 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063937685 seconds)
    (194/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070322086 seconds)
    (195/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081965126 seconds)
    (196/309) benchmarking ("sort", Int8, false)...
    done (took 0.142272467 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087908854 seconds)
    (198/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073383642 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17554254 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090792838 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071339089 seconds)
    (202/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148292056 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064720537 seconds)
    (204/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06483104 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.137989897 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05057394 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066576081 seconds)
    (208/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.11036351 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050639841 seconds)
    (210/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050198271 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074087223 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073653775 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.085275215 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08967511 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.076626167 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124834248 seconds)
    (217/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06163048 seconds)
    (218/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071015568 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171076739 seconds)
    (220/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071655832 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.106054354 seconds)
    (222/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069992924 seconds)
    (223/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071884738 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091463556 seconds)
    (225/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051391989 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064124414 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070363463 seconds)
    (228/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051167918 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051034481 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06484079 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.062877294 seconds)
    (232/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050252496 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051864648 seconds)
    (234/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050802011 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064125284 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065710828 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089103163 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064888618 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078774746 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.160915215 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14112273 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051228735 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064301581 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093175176 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063690049 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111216342 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071103794 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067426426 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067556141 seconds)
    (250/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.049618076 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052215893 seconds)
    (252/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.098579471 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063677178 seconds)
    (254/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068282245 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051249131 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.062917491 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145785736 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064017839 seconds)
    (259/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051454131 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13652908 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071060401 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070645344 seconds)
    (263/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064430599 seconds)
    (264/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062499141 seconds)
    (265/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.050230983 seconds)
    (266/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061070227 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072691403 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050416458 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064868056 seconds)
    (270/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064544126 seconds)
    (271/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.0500931 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.049697348 seconds)
    (273/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068973936 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064275708 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085296425 seconds)
    (276/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064813053 seconds)
    (277/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052673921 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.19213781 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049512386 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.049805889 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075499978 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07139173 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085551324 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179418767 seconds)
    (285/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.049758847 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062849943 seconds)
    (287/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070418717 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062820712 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087035213 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093978846 seconds)
    (291/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050254462 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071882151 seconds)
    (293/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064709124 seconds)
    (294/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118099491 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063930026 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094872743 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.063052661 seconds)
    (298/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053946579 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052300894 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070301608 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064006422 seconds)
    (302/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051730374 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063828769 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13955228 seconds)
    (305/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173696745 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05198091 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069651493 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064880201 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100455974 seconds)
  done (took 30.827004531 seconds)
done (took 32.241664211 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09017048 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094717486 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076604744 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095855572 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083526764 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078764806 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074843243 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.0810444 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082586454 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084777874 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081281276 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05592588 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077192122 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076903402 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076825368 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094048404 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081473024 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074662049 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075191296 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066310278 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075168987 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067042767 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069070831 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05527366 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080084887 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073518605 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073357364 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075586462 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066922563 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067027265 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070358633 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075189985 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06621874 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079684863 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073454727 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074337595 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076314581 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078492244 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068733589 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066412502 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07620195 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066341665 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073717407 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074665644 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073515287 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072441899 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073832453 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078780788 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093208401 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068093176 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075272102 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07724843 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076340466 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073399442 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070549073 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074215754 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071777721 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092055873 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07488309 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068442612 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075093095 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075046119 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071924997 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074011361 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074287356 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076584915 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076752268 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072292935 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075789107 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072829863 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066078961 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074110423 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070429954 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066330587 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076889271 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078645657 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065011544 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073112204 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074036532 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072003655 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065190216 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068373801 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068007948 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072757247 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068570307 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055459804 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07065355 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073146 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06588962 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074514666 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073711392 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073901661 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068366219 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076703856 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065855149 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071753057 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067078069 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066502376 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06854474 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070541932 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066430543 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0687532 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07604625 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06786388 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072646283 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079896654 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066521303 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073304597 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065293755 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065772782 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080962741 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075372665 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067190518 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068937068 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065562798 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073672325 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065578184 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066239321 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066158351 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066103988 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072329447 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066811571 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068274849 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073866187 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080038726 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066129444 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069417177 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068256866 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065932846 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072575473 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065663155 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065941397 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067625917 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062882162 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06738887 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066086621 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073662378 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067499815 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073712692 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.202566535 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07516495 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07232873 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071806754 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072393375 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065693686 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.0598026 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068490077 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068226761 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068681944 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066446202 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068360936 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066114922 seconds)
done (took 12.810338959 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067169556 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140038373 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09791438 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097185476 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087283534 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066990429 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076776807 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102163583 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068309601 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10287628 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088826012 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086683377 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115449801 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065975041 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066489939 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070276395 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067870451 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082841904 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101783856 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08736274 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116700451 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065906459 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093737786 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090406074 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089111983 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095048331 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070242059 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070436689 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070197226 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103200048 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088752519 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070811787 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067813343 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099243221 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094268175 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084821131 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066780903 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083693098 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066479262 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066803809 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068358973 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100306198 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081438038 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081403487 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070643205 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07006964 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068004328 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084291931 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090889422 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079860836 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086933176 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102312322 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069172328 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06635711 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064776156 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087209908 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066153632 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070288957 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066634937 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068835165 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06644034 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070148347 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081605729 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08140831 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070873208 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080940188 seconds)
  done (took 6.910743029 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085081778 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091603696 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084008229 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084605155 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066082366 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066602265 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066334002 seconds)
  done (took 2.095448019 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067967212 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089559487 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090220988 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089794112 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08162425 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088319332 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077148115 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067367123 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088151636 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067777459 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088622928 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101222715 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070550947 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074702169 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090831839 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067349178 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091513418 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067127443 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070531574 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091037571 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068947675 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096096593 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070687027 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067770781 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081315733 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067347655 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114968391 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072088574 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068470071 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070236791 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065311399 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108040077 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081738025 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074708803 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067160129 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08228126 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082007547 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065795228 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084048305 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075664613 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081599832 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067160822 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067913635 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065066698 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071747853 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077483033 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068556241 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067615802 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069964728 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087221406 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067844374 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080722411 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069613456 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072659412 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068636569 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073929745 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077130258 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067860676 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087297275 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068144841 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083699357 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083489299 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080633097 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083023356 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06908859 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080331601 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081177851 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069318533 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068810354 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070074496 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083347304 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064914075 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069380749 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078064564 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068796361 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09018579 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090205463 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068669383 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079961712 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067269359 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067378669 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066962088 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090357362 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072184725 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066847477 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071307748 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069884844 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065597585 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065749 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070697523 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06497457 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068658711 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070172631 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07025541 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070185345 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083811419 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069690515 seconds)
  done (took 8.919289704 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070071263 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068772588 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069273735 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068320967 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068263713 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069621792 seconds)
  done (took 1.987325956 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093712264 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069888824 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081451238 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072369211 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105376862 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087475138 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087357633 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078989256 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083857758 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078709927 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087362286 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088572061 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09314308 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072534733 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086935383 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072175461 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087418347 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075013984 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079081939 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073089336 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087124682 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072865618 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07312195 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082510261 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076500614 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072033993 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06813807 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079052262 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078795576 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079060634 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.0724206 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076767264 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071206534 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079004823 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087426901 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071406351 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071933312 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077439971 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072805775 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076534158 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08865511 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073184218 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074835988 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077283039 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078816085 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070606365 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077748842 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074985576 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.0870926 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076958369 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077421932 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071821937 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075843369 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077302242 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071195516 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077944329 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077312786 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087391761 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072629712 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070666467 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068926962 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076216177 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07873307 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076034418 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079163433 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077536496 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070750367 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072519608 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072892027 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071859394 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077284521 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068994343 seconds)
  done (took 7.162010946 seconds)
done (took 28.615645085 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.53280224 seconds)
  done (took 2.077793457 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.61768658 seconds)
  done (took 2.18645748 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.398116194 seconds)
  done (took 7.966443094 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401774904 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.525529757 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.721698151 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131812807 seconds)
  done (took 3.38642366 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.704363391 seconds)
  done (took 2.280153913 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215861332 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202334339 seconds)
  done (took 2.000656105 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376073631 seconds)
  done (took 1.943840594 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.137637068 seconds)
  done (took 2.706921723 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257364076 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175641528 seconds)
  done (took 2.001837641 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.477136505 seconds)
  done (took 2.045218317 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.895327134 seconds)
  done (took 6.466541486 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213620309 seconds)
  done (took 1.828074282 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239983822 seconds)
  done (took 1.81351557 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.724415403 seconds)
  done (took 3.299677168 seconds)
done (took 43.578835465 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080132197 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081416993 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082129897 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078712523 seconds)
  done (took 1.883877987 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07765508 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073830362 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076762768 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074186105 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077651046 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073524144 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074749023 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076729681 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073669592 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073839647 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073250766 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073227408 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075860411 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075007328 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07250856 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075731272 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076915304 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073885098 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075857069 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073166927 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071228192 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075507959 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075880025 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072595726 seconds)
  done (took 3.370188754 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078520721 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073775104 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075693932 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072897953 seconds)
  done (took 1.884854709 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079820684 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09574394 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091114282 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079394152 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093652287 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087665969 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069842201 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070229383 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07116593 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078187416 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069049425 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097707333 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089485107 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07883832 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080861583 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066451342 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068686031 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089101241 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079300759 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079071882 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070940118 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078432465 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068615505 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089888855 seconds)
  done (took 3.503026478 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087251724 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10628595 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082480952 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08973701 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09289016 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06609428 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088218354 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092655022 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127706478 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065925321 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07099271 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065932915 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07334528 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065798389 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08170296 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108451532 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112093005 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069516387 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098187088 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065995076 seconds)
  done (took 3.298752646 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073130145 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070059286 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066184654 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069913418 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078262103 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074114043 seconds)
  done (took 2.023441055 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068903986 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06831722 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068879349 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06790942 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073087098 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068151207 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067083089 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067983919 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068362078 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067694637 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067577551 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066319226 seconds)
  done (took 2.405887023 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202267357 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069633908 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069034525 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066398761 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07090683 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066541923 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081449973 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06820393 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092555254 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067746111 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067813941 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068494184 seconds)
  done (took 2.578653637 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207218287 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077196551 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23987216 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151017915 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111489997 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116402812 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11324478 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114489644 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142380438 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101623403 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169966986 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168434157 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108367844 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138305496 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090141573 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101418297 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155308495 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164183123 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106670962 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168645071 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146324161 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127429765 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154109077 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102197496 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107339366 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122880902 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.0720891 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080402727 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170722872 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133805581 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145224255 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11120872 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093066111 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177868988 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172488799 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142589122 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149688872 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085358051 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105805286 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135901142 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202724339 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089466183 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163969779 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11034744 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220071134 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134781814 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121699397 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122458903 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107171987 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091088216 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147288331 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184293319 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138516703 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088411183 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124813466 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114952732 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114890241 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115188153 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184814987 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164172415 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129829024 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071792995 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109094131 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154894281 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134560717 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10993184 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126652604 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09248325 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136120116 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156921082 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121849873 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145427578 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117821893 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089618235 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120477545 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14171204 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128184517 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161917879 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125378826 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073769578 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124986066 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102605992 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081489518 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146309754 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075856116 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177992155 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100616596 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110563024 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125916163 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110827396 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109949266 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160843061 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146269324 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103817404 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065826366 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248385457 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123261258 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147033023 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087669877 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110966595 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11956709 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078515978 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138434459 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076773436 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124721401 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078256937 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127696204 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13210168 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078084529 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124753938 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104869805 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101582864 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134662797 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162386857 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08817028 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082769723 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171977528 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122747882 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105151363 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146889029 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158634784 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10302336 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102131767 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150679733 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18021036 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089872098 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164552339 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107062366 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084039447 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088675902 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124788141 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112876131 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124591027 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082528127 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119499111 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170212071 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075423648 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096460978 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135547355 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079551827 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08207733 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106717158 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106412348 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096897494 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10154305 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104241973 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137072089 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124774929 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1067365 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12463028 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099378307 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316419878 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088699845 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102817538 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105403829 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071689141 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136874672 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158398664 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080062767 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164748758 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124232779 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117481751 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120338515 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084743048 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141443651 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080916858 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07127607 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144903639 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11161723 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109963709 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153330897 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117000826 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127201499 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120413431 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134861433 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132617679 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132780644 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106108187 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090400418 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112952101 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126792566 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074080702 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.0904585 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080715679 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105034318 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09734486 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083325457 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142107234 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124961088 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110541143 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113142994 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097181123 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149245348 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076573706 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128702046 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120178297 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097101584 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154288459 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155158083 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132903972 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100043837 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137812268 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070863163 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074393168 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088942889 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123926149 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083025497 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083682232 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116872346 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.294613516 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13223602 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138805495 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124924818 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122395417 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158014881 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070971837 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119056323 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148403088 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12334372 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104758787 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091095801 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099850369 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144698641 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109231717 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184411307 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118671314 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124392629 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154946243 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102317402 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080269482 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104596625 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137091823 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104886252 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14493928 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100918873 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08886642 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110822205 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075217104 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099338861 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127649232 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118891716 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136038407 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116680482 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13337644 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078190922 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115959788 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122707556 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123109745 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06468753 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122122769 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163390346 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095672426 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120616298 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155219858 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079442298 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135595805 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176617152 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145791046 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085821378 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108901256 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119932171 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128325946 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120541843 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140096745 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106714 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137658452 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11155749 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090177775 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091293931 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096889328 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104200166 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094422767 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104015611 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110742363 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094219199 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128185689 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101432156 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108223966 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115939486 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097703025 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090001596 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094936222 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17427062 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116596628 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166351895 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098919105 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141672497 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160090902 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07400479 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078449723 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077284728 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137965601 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083870322 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127597695 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.105780269 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116071335 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121615869 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139797342 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093970263 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068386223 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107658651 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13018256 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123227643 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097197078 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099473383 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154872895 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097999474 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077191007 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108923823 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111515843 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099509288 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160051624 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060655042 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101734194 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074509729 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07785015 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121845044 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142340052 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.341787306 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104974636 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124903282 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117070355 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133006433 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104462759 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112708092 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131354523 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153584511 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132690114 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093728853 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114842176 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131917127 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162013493 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107999836 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099322737 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176484227 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156573459 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16385163 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089634028 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117580008 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116896544 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111445788 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1413433 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085086305 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166479924 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083598759 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138665776 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104836419 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091463907 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131297645 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110385349 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089502839 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150212059 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120060257 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083274079 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078765381 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120718404 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12199476 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107346632 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076893543 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14060699 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074523665 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135232784 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162582632 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081757222 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109629124 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10032466 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079714338 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106164651 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102616894 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088664147 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100610043 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.326218617 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090203379 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154098521 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136091667 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114512844 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138817344 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104086435 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642771437 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080024836 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155551176 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118404513 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177227186 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102584815 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119524806 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111103887 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124440698 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145569742 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105244051 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182370841 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13519851 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117403426 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080306465 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103495923 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10522645 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088634399 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108960497 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115280522 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117217564 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09347593 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117125514 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1265014 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083725646 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097508625 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158050551 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117873855 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145146143 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141704918 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086592348 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119596663 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139158485 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080745385 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121644878 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154314805 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107688525 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10121047 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081661771 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101344273 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16055829 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074059598 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160295983 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120329643 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11057252 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26173966 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113990118 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132811792 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108223676 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123802661 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09279908 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111787193 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115391532 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083455669 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078159974 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106321483 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113002187 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100642217 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097794629 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098318369 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153833712 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072969965 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100978053 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116475212 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146367751 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176605632 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089997505 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083883104 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120339969 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115793583 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114712402 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12163841 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079970649 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082652297 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081715488 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078466743 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10966612 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11326058 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115211751 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112712345 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164570347 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083966595 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231062784 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096250558 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106028116 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070284751 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078937252 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096792991 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098930937 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108250043 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110817291 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160335085 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096986542 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090957249 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092285292 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074733763 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08386709 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130497248 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110937194 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120362675 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100469966 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06311607 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109343038 seconds)
  done (took 59.433920306 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110744044 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083809986 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.094977128 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145612227 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12347455 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204217756 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154680872 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189619682 seconds)
  done (took 2.842849505 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068915319 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096795432 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103492743 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084317608 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068120815 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069243307 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233421929 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082482905 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067681231 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099429158 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079115249 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070031131 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.431778356 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069475771 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069146701 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062930711 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068019493 seconds)
  done (took 3.537315971 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390002551 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615863962 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.354024671 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072929485 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.484746157 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084950618 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.164907741 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129061331 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073657926 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539326335 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.399714507 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124811317 seconds)
  done (took 18.157344578 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075784187 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071152765 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085022219 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085563239 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074239474 seconds)
  done (took 2.115010717 seconds)
done (took 108.664204791 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081692641 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.605546591 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053387834 seconds)
  done (took 2.407922286 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084796055 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087832168 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086793511 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084125905 seconds)
  done (took 2.073317617 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074884362 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076316015 seconds)
  done (took 1.875084661 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23510315 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165341402 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096594161 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084083464 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08039487 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080421182 seconds)
  done (took 1.97647942 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073752107 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076645906 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073836385 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077554447 seconds)
  done (took 2.026152242 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077547622 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053082104 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055163709 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058203725 seconds)
  done (took 1.968414408 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08877297 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079882885 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079401505 seconds)
  done (took 1.974351012 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10315506 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086985621 seconds)
  done (took 1.916130933 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082003451 seconds)
  done (took 1.810437699 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101258886 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102624162 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134156016 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111949808 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140883684 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110849853 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085569208 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086533973 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07770631 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087325684 seconds)
  done (took 2.765709528 seconds)
done (took 23.093702721 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080105793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368461255 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362036151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091934487 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669404553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358158028 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991272755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093947046 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116159279 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0686433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08577635 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64868422 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984932049 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324016892 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970027687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319385406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650405558 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069226641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068850163 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068950723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979262579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068813004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068817521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06950535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.661233336 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373045066 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069141996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319350336 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068622566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070644422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356470937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069291113 seconds)
  done (took 16.278558196 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070818674 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120981579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073879105 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084939081 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071930009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070697893 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072270281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07031337 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122766233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068719679 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086579229 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068773793 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.090316485 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069527901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089077532 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068837919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070152284 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069413404 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069133654 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069312675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088419129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068448569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069981286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069172848 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069215846 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081617929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069563446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068642219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069110526 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07104689 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072065421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069629779 seconds)
  done (took 4.185748899 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119839908 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128665342 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075402677 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106888677 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115650916 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071217219 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148755046 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095286518 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132047207 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068552244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085694396 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069286075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103015402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069928645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089654319 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069878744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069909292 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069616612 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070494175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068951476 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08912085 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068862322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069249293 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069824318 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068691589 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08281208 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069493796 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069483906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068989786 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07103097 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071878965 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069347694 seconds)
  done (took 4.440565133 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073565718 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077166708 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084630469 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086414725 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071293449 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073394224 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073762048 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070644575 seconds)
  done (took 2.359308075 seconds)
done (took 28.998597065 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079989724 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070077156 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073709975 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083776902 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074259937 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079790624 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067830854 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077096056 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073357507 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074097711 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076476492 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069121284 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072097491 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068008362 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074791055 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069080302 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080122908 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072728952 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079894156 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07981128 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070756431 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07459732 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07645845 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080051829 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080223617 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08020841 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078474349 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073459227 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06961555 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071412422 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077938373 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085343919 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06902242 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080503351 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06904026 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068187097 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072284533 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068784829 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080254585 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077594929 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070237337 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07746312 seconds)
  done (took 4.874477936 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088591727 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094713431 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085469435 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06246146 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067944623 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066898146 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090638483 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060935559 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060532782 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089252716 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056336817 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060837254 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066755856 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054100152 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061262653 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057942005 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062805183 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056051687 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061042199 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060350089 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090431499 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054267434 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078604565 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064708216 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056815235 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062541881 seconds)
  done (took 3.527222722 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.0759252 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086007975 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090643725 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132494044 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106797629 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080907947 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080407275 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096599371 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08985852 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067815151 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072324132 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093985794 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091178899 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075657654 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068856472 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087479876 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084685144 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069616114 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074707853 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095363288 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088302357 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087064408 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097225492 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084935262 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068108855 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071672728 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073409701 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082724259 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073336917 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078088237 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072422228 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07242959 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071742978 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080692373 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072330721 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070870922 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09403372 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079090354 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08041172 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069389291 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07688089 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070169389 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.10558926 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128467248 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071401227 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077940166 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073247982 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079076507 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06894236 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090184708 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080267322 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069034284 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072118591 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068043794 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069007116 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083202339 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071940152 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071055433 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077758556 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074807671 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094939557 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073436535 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085213108 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070958323 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078356481 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069008184 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070328105 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067860551 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09763775 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070565149 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113826649 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072750716 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071095882 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07852209 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077696079 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076483791 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069912461 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085409371 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08328941 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076433605 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081509276 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075238561 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073957723 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094301742 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072862117 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073891813 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073501008 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07566937 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072121945 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0705078 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082769373 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068214582 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07253857 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086146494 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072547076 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072908579 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077215054 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074910102 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069215652 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080486066 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073373129 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069775448 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078648084 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068470675 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071947945 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081808359 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075198968 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06733743 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072887147 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074542037 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06952611 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070578412 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071172398 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07036234 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077723136 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075469662 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073504064 seconds)
  done (took 10.972345526 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166090043 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159187378 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070891075 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151105198 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077557683 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080249066 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153702182 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096261732 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068764319 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07040919 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069743631 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111973378 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107700635 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117528557 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080136523 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068992311 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086801224 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116523703 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154609973 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149511706 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086350086 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078743043 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070828522 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070242771 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071410872 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079338262 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087113141 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078449239 seconds)
  done (took 4.56374535 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080906049 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106680115 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076466506 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09268517 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092165047 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068620412 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071589394 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070796216 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082947778 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079230349 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068376684 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074544033 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075614443 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07219031 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.0699654 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075930398 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075816112 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071293994 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072263136 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074962331 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080139581 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093508373 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073204984 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067874561 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073933859 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068666845 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064365246 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086032404 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068932771 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096918155 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066609173 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073789641 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083655796 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070263587 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068964187 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069035687 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068346369 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068348337 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071486404 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067064687 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067571234 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05842164 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068068842 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080186826 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076028555 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05779022 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074040511 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074566448 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074219968 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066120318 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071619106 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071397472 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071392377 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076901888 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072828668 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074508588 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069914618 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075806019 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078016946 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.0687041 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065877245 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0674449 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073436083 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066069671 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077690205 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073751808 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067045242 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068261943 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070808568 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075822494 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06865738 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072950015 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066431736 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070621263 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073426817 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070995597 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.0705173 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067307519 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068685692 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068869897 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056614934 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06862403 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054193019 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072064225 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066653519 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066861994 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069190015 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073830278 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080753611 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070322353 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074730423 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069882632 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067976103 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07182443 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060780854 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071529874 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084761648 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084201499 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069111993 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066566484 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081889392 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074467789 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067781594 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056720817 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073895292 seconds)
  done (took 9.404671832 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091912343 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072475791 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085318222 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091918508 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088595986 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076896854 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079266328 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070983134 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084443497 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075101822 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079192705 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069418182 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079494697 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078846252 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070741809 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079048271 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073376734 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086283941 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083832777 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069248558 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077462062 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.0818831 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092310065 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083025131 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082741326 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08312544 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091931151 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078881394 seconds)
  done (took 4.052919103 seconds)
done (took 39.137908452 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.831273907 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.001282168 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.825206073 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.201194175 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.904373831 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.047418999 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.032195851 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.820628935 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.028682451 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.856369257 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.051246465 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.94845134 seconds)
done (took 66.313038164 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.902673231 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.96439201 seconds)
    (2/2) benchmarking "String"...
    done (took 2.063397568 seconds)
  done (took 5.787769374 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.125364113 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.389519029 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.072866876 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.821148805 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.827576943 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.164102814 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.620759479 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.331717813 seconds)
  done (took 30.989101309 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.948180296 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.056645717 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.513194339 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.545721329 seconds)
  done (took 15.87368614 seconds)
done (took 64.520384696 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.835663758 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.859790976 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.831603662 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.805840755 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.881635907 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.838239005 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.459060226 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.939956291 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.823502738 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.809870439 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.823966757 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.265917616 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.838461228 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.364076733 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.822457722 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.833615272 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.825490789 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.351252442 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.985369098 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.840466081 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.845272035 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.879108593 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.828935279 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.847760061 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.8340779 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.825549948 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.271685328 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.826859511 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.450858364 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.828840858 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.853799227 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.88755449 seconds)
  done (took 205.978028127 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.823995399 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.761841767 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.807983681 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.85330144 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.31145245 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.012396961 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.947591999 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.341340716 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.830792837 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.854912663 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.027663352 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.829139631 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.054669672 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.780246622 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.855467076 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.830426085 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.975122225 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.066647667 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.864370172 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.997576839 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.83015079 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.963959533 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.907059143 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.000987417 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.868047603 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.853478186 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.856937294 seconds)
    (28/36) benchmarking "trsm"...
    done (took 7.028702324 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.019908926 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.965576748 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.825724804 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.86480512 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.055519786 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.701867824 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.835564169 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.853859471 seconds)
  done (took 172.022594829 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.238432103 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.825174311 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.823388561 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.823751678 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.83712592 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.825317289 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.946035608 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.952896593 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.435980639 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.867639972 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.878834147 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.825127143 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.666486981 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.824325654 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.891509164 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.83701811 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.824323598 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.825475636 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.839814997 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.851039479 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.828384088 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.825259372 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.95159633 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.83727938 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.39663311 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.831759811 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.825319467 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.830922317 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.1966336 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.826127399 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83176097 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.086306353 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.826560341 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.825778434 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.723358179 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.577885663 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.909401649 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.827394471 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.832429313 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.826426541 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.046125686 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.826831664 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.827571052 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.829639655 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995529777 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.82987526 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.948003095 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.830192291 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.338775553 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.830517881 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.827382004 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.8805156 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.529993857 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.827379754 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.823632771 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.826102452 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.824128225 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.824467161 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.830783053 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.583426402 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.900106523 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.826333281 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.825520662 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.828741874 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.830717826 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.826991423 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.878614845 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.828509541 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.912550321 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.882606566 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.064216347 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.94788809 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.828844031 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.892946219 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.919732024 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.827298347 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.824512281 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.825504611 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.824249077 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.906774217 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.826695834 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.974399732 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.833145834 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.827567014 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.876392374 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.898348198 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.827364006 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.717666695 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.830838965 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.825871186 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.146909087 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.894953352 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.829743087 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.826803195 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.826993311 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.826431606 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.989373218 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.948923316 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.628647677 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.8314945 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.678438885 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.834843023 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.998845974 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.830573101 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.00867952 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.832555222 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.909489359 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.83497945 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.83002747 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.827727749 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.861844964 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.829535814 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.885554672 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.829229775 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.202516775 seconds)
  done (took 407.861990457 seconds)
done (took 789.919987561 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.516800268 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.460108614 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.572646663 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.488689279 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.456797479 seconds)
  done (took 14.262608298 seconds)
done (took 16.029723853 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.916096609 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.920824647 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.852506109 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.918471461 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.848949101 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.918311877 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.902402098 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.854647407 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.886354679 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.854852177 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.888264059 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.85444338 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.841883017 seconds)
  done (took 26.225740625 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.06501902 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.059766021 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.902174396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.057775974 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.878831233 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.056858388 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.989434374 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.97962904 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.989787313 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.846364751 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.844216258 seconds)
  done (took 23.440742502 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.063286007 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.066280892 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.907725096 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.067386413 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.879222454 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.066861302 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.992527913 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.981598321 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.982069421 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.845964902 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.843662641 seconds)
  done (took 23.465618985 seconds)
done (took 74.899062245 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.840572785 seconds)
  done (took 3.609257873 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.872083911 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.021173261 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.84668055 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.845068967 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.839797496 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.840711761 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.842694468 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.838824863 seconds)
  done (took 16.717494917 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.838209731 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.839008655 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.838946254 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.838738304 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.838534803 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.841321389 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.835790175 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.835755385 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.83592284 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.839598728 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.836417333 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.839215846 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.836464639 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.839004813 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.836309493 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.839819951 seconds)
  done (took 31.178989529 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.838369814 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.836578873 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.836855789 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.838051717 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.836836115 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.839061808 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.838908519 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.837250329 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.837846432 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.837275432 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.838676861 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.837610267 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.837209756 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.837402191 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.83742299 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.840693888 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.836840282 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.837972474 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.84202899 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.836896775 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.838413947 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.839569705 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.838333173 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.838019302 seconds)
  done (took 45.889831042 seconds)
done (took 99.165945538 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.776307774 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.231713492 seconds)
  done (took 8.779579812 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.841758008 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.841536699 seconds)
  done (took 5.489486295 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.840628516 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.841152021 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.841750948 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.841713065 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.841677987 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.841242759 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.841731048 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.841089442 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.84132238 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.84217716 seconds)
  done (took 20.186263009 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.841455515 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.841257808 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.838814537 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.843098493 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.840943139 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.838542728 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.841643646 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.842459298 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.841862682 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.84100304 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.84190924 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.838767797 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.841979397 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.839848391 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.843568878 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.840049477 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.839227863 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.839068756 seconds)
  done (took 34.908407821 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.842676207 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.843190966 seconds)
  done (took 5.458431996 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.839547666 seconds)
    (2/7) benchmarking "second"...
    done (took 1.840822816 seconds)
    (3/7) benchmarking "month"...
    done (took 1.84049438 seconds)
    (4/7) benchmarking "year"...
    done (took 1.840693229 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.839522037 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.838869421 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.8394954 seconds)
  done (took 14.653229826 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.842951797 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.008401875 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.079206743 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.476172138 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.843056467 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.846997868 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.757853303 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.845235691 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.847422244 seconds)
  done (took 20.320492401 seconds)
done (took 111.567950083 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.658694215 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.837809856 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.181085575 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.882662751 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.894949053 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.178175071 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.858237287 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.147016792 seconds)
done (took 43.412719224 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.910733562 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.391580518 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.424451349 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.215452672 seconds)
  done (took 12.80558948 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.82186158 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.360688672 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.872245842 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.422190272 seconds)
  done (took 20.270277353 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.204469872 seconds)
    (2/2) benchmarking "read"...
    done (took 2.181532413 seconds)
  done (took 6.164335832 seconds)
done (took 47.926478995 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843110028 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.842709933 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.840312026 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.843619978 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.840236617 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.839759743 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.843456509 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.84302675 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.843656464 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.844659455 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843840034 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.841603445 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842131275 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841503311 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.844798903 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845901368 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.84227761 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84109768 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84142524 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.841394255 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.844974881 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.840827232 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.842194464 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.845426375 seconds)
  done (took 45.999024348 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.844613243 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.84297043 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.844351563 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.845842601 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.843166823 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.845327927 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.845185022 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.841660038 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.845271983 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.845072968 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842186466 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.842173077 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.845229603 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.842049242 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8449299 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.843257139 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.846676908 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843289532 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845062049 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.84339223 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.845117136 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843701328 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.842632305 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846183874 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.843007142 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844139896 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.845642445 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.843611572 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846165372 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.843916051 seconds)
  done (took 57.102941803 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.850863568 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.855292605 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.845672389 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.846149998 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.846179523 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.845818714 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.846615731 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.847126997 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.846206398 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.846349134 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.846173526 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.846607484 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.846658132 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.847042086 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.845967534 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.846848838 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.847091413 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.847513601 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.846870719 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.847678028 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.846886592 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.8469025 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.847892992 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.847768926 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.847580513 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.847587813 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.848157282 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.847025348 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.847493151 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.847869335 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.848357907 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.848639655 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.848626092 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.848835866 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.848195944 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.848627809 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.853554775 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.855558964 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.84790613 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.848144934 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.848063158 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.84764037 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.847758231 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.847953988 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.848270582 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.847945258 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.847891011 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.848054893 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.848905365 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.848923289 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.849028899 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.848288214 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.848611276 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.849012472 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.848513558 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.849174153 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.848883593 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.849409612 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.84968846 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.849407697 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.850369359 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.849582956 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.849321303 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.849464813 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.84987339 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.849567891 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.849606467 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.849272706 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.848888337 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.850082531 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.850824832 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.850806937 seconds)
  done (took 134.86472301 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.849795036 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.848830169 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.847732778 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.846837148 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847768589 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.852102419 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.846955347 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84918221 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846346751 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.850028127 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849681653 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.849493219 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845972493 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849603296 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849882059 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.847103769 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.850649053 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846801151 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.849382843 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.85020224 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849886039 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.847323993 seconds)
  done (took 42.452086717 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850641113 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.849490472 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.846813851 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.850377673 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.8477878 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849373114 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.850005114 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.849615644 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850671525 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849579337 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846550217 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84951281 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.847327573 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84733149 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.846578232 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.847889143 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849829472 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.846198075 seconds)
  done (took 35.056615294 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.84786556 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.847565373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.849459639 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.846670012 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.847410143 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.850611103 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846473158 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.850404338 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.847229489 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.843423546 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.846664524 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84635733 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.847930802 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843816318 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847233489 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.844309719 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.84576023 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846319491 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8462214 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.843187663 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.843252443 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846685878 seconds)
  done (took 42.406029618 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846053157 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.844252491 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.842077156 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.842070962 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.840928679 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.847266436 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.840428097 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.837063724 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.839800302 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.840254654 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837833547 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.843410674 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.837146929 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.837434784 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.837041939 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83761796 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839741658 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.838068978 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840442377 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.836360388 seconds)
  done (took 38.582989191 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841279124 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841204153 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.840902791 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840775609 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840762346 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.841429353 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841597884 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.841118417 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840197076 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.841561603 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840683239 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.841113378 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841845034 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842243983 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840867817 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841536525 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.841146069 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.841911577 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.842064618 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840333593 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.841497572 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841497837 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.841540975 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.842032295 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.842585825 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842796014 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842033064 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.842322754 seconds)
  done (took 53.332290855 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840825341 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.840948926 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.838386892 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.839159684 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.838908822 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.837824621 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.837846991 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.838311925 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.84078628 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.838430307 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.844091593 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.841662644 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.841606815 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.841465088 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.842002685 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.842954643 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841761898 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.839183086 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839368488 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838955681 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.842489409 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84351324 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.841751851 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.839308964 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839284936 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.842767232 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840934171 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.840122217 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842429719 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.838996787 seconds)
  done (took 56.988677783 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.86008542 seconds)
    (2/2) benchmarking "in"...
    done (took 1.862889257 seconds)
  done (took 5.495037013 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.83915763 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841559111 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.843046566 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.842303081 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.839011605 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.843060373 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.8439834 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84231919 seconds)
  done (took 16.507376854 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.845229717 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.845877553 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.845870504 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.844003024 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.846211279 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.841701689 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.845607134 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.842087564 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.842016222 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.8428607 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.852805985 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.849529529 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.84334522 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841314279 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.840995557 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.843736149 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.842394749 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.841950188 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.841525124 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.84024233 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842504189 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.843051318 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.842566756 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.838384563 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.842403806 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.849678281 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.844002306 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.842619549 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.840339982 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.84379899 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.839938854 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.837677265 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.841908373 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.841916125 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.84098807 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.841698503 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.847008115 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.841322091 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.84458487 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.841041465 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.841254923 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.8384413 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.841730871 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.842309412 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.841237701 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.840638269 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.840484182 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.838392499 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.842670477 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.843928047 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.845935016 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.83953102 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.837750898 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.844179872 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.842055997 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.845699818 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.841536529 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.844001574 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.849686462 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.850249303 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.852714969 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.848386646 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.84178483 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.841166709 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.850949012 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.864830139 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.846883876 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.838295124 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.838823122 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.842306623 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.848076009 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.854621335 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.851080659 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.842889984 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.843245706 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.843345867 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841173263 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.841600301 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.846702817 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.843512321 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.842265887 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.844169494 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.85062959 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.862955638 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.841601159 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.840935723 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.843547783 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.841012244 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.841483147 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.84880473 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.841791357 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.840476059 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.84135427 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.841073945 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.841820842 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.841459152 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.8396836 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.843293828 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.83975391 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.840807329 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.840318571 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843715904 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.850342763 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.843877109 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.842711571 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.847155586 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.842374698 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841151386 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.848224492 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.840907586 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.842492966 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.841916266 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.846753412 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.839914674 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.841330635 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.848205354 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.838802756 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.838303641 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.839578754 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.839971412 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.845894149 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.862758225 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.837214856 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.836581813 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.843644834 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.848255415 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.83839309 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.838382457 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.836857527 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.834268381 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.836311467 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.838640229 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.83625742 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.837288538 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.83738134 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.840468693 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.833594463 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.835951564 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.838293702 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.836250363 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.837720925 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.838335264 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.83689589 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.838143883 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.838004691 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.838318203 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.84240543 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.836396641 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.837127791 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.838175896 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.833377001 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.837760413 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.837169882 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.836749949 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.835824344 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.83623734 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.8354554 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.838167786 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.834629124 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.835869883 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.836149426 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.834969269 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841296035 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.835626048 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.83885573 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.834537197 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.833052074 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.836348233 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.835355499 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.834904091 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.835699305 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.83314124 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.836559259 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.845205657 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.835050436 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.835696141 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.838090151 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837141085 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.835546167 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.837090878 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.837855462 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.843705698 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.835468616 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.842217273 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.837083581 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.835880056 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.833908709 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.835630825 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.833860163 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.837191924 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.838530193 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.843173048 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.845670504 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.841381509 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.83384813 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.837088163 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.833383282 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.837062526 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.836492918 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.833223911 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.834355026 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834414162 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.832654395 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.834666278 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.833662737 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.834366447 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.832801696 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.833482721 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.834586972 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.835367204 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.834228896 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.834677794 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.833905449 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.830226603 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.833728247 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.835796357 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.833536314 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.833652657 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.835900755 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.835391554 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.835713786 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.835340635 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.841615822 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.832650913 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.835692457 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.835243919 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.836011163 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.833900785 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.8363246 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.837228095 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.834127433 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.841540099 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.835802396 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.838759371 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.840520537 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.836115707 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.834728682 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.837399446 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.835274842 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.835270096 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.837588106 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.842739966 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.836355061 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.835783989 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.838179611 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.836593733 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.837136984 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.84169404 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.83348719 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.837929909 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.835142018 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.83879162 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.836653145 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.838202451 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.836488162 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.836848698 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.837474531 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.837769945 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.836330521 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.837359132 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.837866113 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.83511165 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.836163956 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838499654 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.844071187 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.841434806 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.837772965 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.83688637 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.838106373 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.840083632 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.8386311 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.836718821 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.833769303 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.846557936 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.843475314 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843893861 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.839391272 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.835712444 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839796163 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.835756563 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.840202138 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.838685557 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.838347535 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.836653749 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.835429612 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.835399373 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836662561 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.835676615 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.838535025 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.835611375 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.838028564 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.836720978 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.836972146 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.837751564 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.836967319 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.834991777 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.835112985 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.835095126 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.838706178 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.837788943 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.835807306 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.837389391 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.842070629 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.835769789 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.837660188 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.83517816 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.834729493 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.834537165 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.836854803 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.837081255 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.837052148 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.840677652 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.836396549 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.841941865 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.835913457 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.846415348 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.836915472 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.837613879 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.842337583 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.832583726 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.836260541 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.835859509 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.836336653 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.840899906 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.837009256 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.836166324 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.841869122 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.836797908 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.836923517 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.836620396 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.837435786 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.838523097 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.837502181 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.843600251 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.83718702 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.839537292 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.83812317 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.835390206 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.838349396 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.837377555 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.836310969 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.839412863 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.83931102 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.837906059 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.837133396 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.837014427 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.836900431 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.840243395 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.837385256 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.834555129 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.837874251 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.843010424 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.837079461 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842368171 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.837383345 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.844319844 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.839704663 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.843187781 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.841793351 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.839224373 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.840150915 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.839895821 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.840266605 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.837851158 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.841145145 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.839637844 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.839475772 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.841444089 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.839166503 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.841630324 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.838947798 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.839254173 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.838246375 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.846344851 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.858004717 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.840524098 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.842180213 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.83689676 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.839848437 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.843513665 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.841695578 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.83819652 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.841544989 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.847868137 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.845889524 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.840453289 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.840158772 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.839237641 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.841144442 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.840581708 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.840091103 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.840867238 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.840284484 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.839993421 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.839909842 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.843170637 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.841446473 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.840790109 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841021226 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.841583928 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.848543663 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.840958198 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.842989591 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.842668913 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.840185934 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.840847158 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.840823103 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.842793232 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.841818778 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.841164792 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.842109025 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.845486886 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.844585736 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.845751987 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.840786615 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.842519426 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.84239202 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.841191781 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844033956 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.842772624 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.84199221 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.842918395 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.843553596 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.843103332 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.840583406 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.841917611 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.842449381 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.841635013 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.844179512 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.84847826 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.842236404 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.840280898 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.843236036 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.842674512 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.841798604 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.842940465 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.848777988 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.844894414 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.850475728 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.848482892 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.846272239 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.84184181 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.844432203 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.848492759 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.842261987 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.842683176 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.84321272 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.844506335 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.842612426 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.844293193 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.843863362 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.850081414 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.843776976 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.841867475 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.851501338 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.844351421 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.846242234 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.844532702 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.846207232 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.845047685 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.841608916 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.845720073 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.843187403 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.849103993 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.84480156 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.845207459 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844955621 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.84255695 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.844261886 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.846993171 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.844164103 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.845053154 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.843632658 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.844583308 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.843864425 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.844088852 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.84160513 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.843404035 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.845430056 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.845929193 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.849366606 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.84300223 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.846321129 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.845856169 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.84526378 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.845023018 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.845230548 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.841952997 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.842763111 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.847128887 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.845651951 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.844697829 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.846941223 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.844170346 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.846538641 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.845796671 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.847515682 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.847528627 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.853831685 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.851878588 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.844057148 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.844871599 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.845168983 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.848809589 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.846841197 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.847677967 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845736117 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.846480919 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.846323601 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.846897466 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.846760877 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.847455104 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.859118243 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.847326726 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.845911391 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.846849342 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.852014378 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.847792549 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.845875518 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.847397315 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.848136549 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.851926925 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.853477007 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.84839124 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.853609095 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.846852551 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.849079822 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.850450787 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.849077662 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.85334165 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.850247801 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.847752356 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.848954201 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.851123154 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.86045977 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.84842124 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.856421344 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.870596929 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.847860936 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.84939538 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.848920712 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.847857136 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.848303793 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.848833917 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.84853183 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.848818935 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.848985606 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.849417048 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.848473749 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.8536967 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.850057243 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.849117247 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.848832841 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.849026789 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.849519556 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.846344735 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.850280816 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.849051242 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.849923418 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.8500122 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.850692031 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.849736529 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.860604754 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.858409658 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.850750613 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.851076011 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.847852104 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.852489983 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.851217648 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.858051743 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.856333811 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.851052928 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.85145878 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.851684085 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.850330447 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.848219811 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.851620169 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.849811074 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.849896553 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.848280183 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.859927771 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.856859965 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.854271556 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.850202831 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.851125482 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.850793659 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.850672072 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.851190751 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.850932874 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.852441643 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.851127547 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.85434366 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.851206891 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.850403325 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.853846716 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.857048114 seconds)
  done (took 1099.768126146 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.849005089 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.848993278 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.848317729 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.849462874 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.847851042 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84791144 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848616914 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.848059326 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.849288129 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.849210596 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.848369755 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849152898 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.849039348 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.849522951 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848646654 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.850563958 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.850491204 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.850414533 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.849372779 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.849799639 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.850744676 seconds)
  done (took 40.614732327 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.852483395 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.849482162 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.849514428 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.852485315 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849149416 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.851152001 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.85027198 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851388712 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.851975573 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849859899 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.85128726 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852498429 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.849915262 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.849130296 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849047564 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852344508 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.852929682 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.850082918 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.853782383 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.850815988 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.852426875 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.850376622 seconds)
  done (took 42.505127464 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.853626807 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.853035819 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.852889971 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.851330208 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.85314625 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.851253314 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.854073807 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.852989887 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.854226511 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.853516672 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.852597901 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.853994956 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.859556741 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.856342402 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.856708608 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.856476057 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.003635206 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.855176045 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.85595561 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.853921157 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.851736976 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.857946968 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.851042412 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.85042977 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.85250046 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.854193583 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.855889798 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.854254339 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.855483022 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.854999896 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.858606846 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.854769546 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.854660239 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.857235132 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.854414171 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.855807886 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.858169511 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.857673458 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.853611519 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.85563332 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.862536606 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.870658361 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.857123454 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.86148589 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.854743854 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.855384798 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.857005614 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.861101846 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.853425077 seconds)
  done (took 92.852291743 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.855728455 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.855998809 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.85303471 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.856488846 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.855899745 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.856150347 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.856367827 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.856278241 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.853338981 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.8539981 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.856838195 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.853070844 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.853523267 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.855710387 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.857404513 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.854933071 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.85406113 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.854977546 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.854202803 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.855561826 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.85472004 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.856815368 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.857155602 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.853623942 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.856845714 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.854069763 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.854116641 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.857080267 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.8554313 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.854178207 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.856697763 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.857376068 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.857578315 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.856340878 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.855390745 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.857665643 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.85779133 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.856510237 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.858272654 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.855083259 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.857384441 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.8590525 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.858085703 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.858638371 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.854545741 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.85549326 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.855126249 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.856007004 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.856239772 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.858511596 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.859751216 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.856509151 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.858456234 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.856668662 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.858655533 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.859136371 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.854940771 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.856607518 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.858502171 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.856698102 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.856205863 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.858562953 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.856640853 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.857810108 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.858974148 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.85673516 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.85666989 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.859819668 seconds)
  done (took 128.022198672 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.859859597 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.860131611 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.860079485 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.860277379 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.860358009 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.860087682 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.86020663 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.860996917 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.859655377 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.860393641 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.860352064 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.860520643 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.860349551 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.860468533 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.86038637 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.859636531 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.860407804 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.861078778 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.861020046 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.860204848 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.861604792 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.861747993 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.861029073 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.861258718 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.862243692 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.861391612 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.861414169 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.862007442 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.861518687 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.862220486 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.861404262 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.862276965 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.861432671 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.861981521 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.861964299 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.861277549 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.861691694 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.862535548 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.861969747 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.861980365 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.861364344 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.861633626 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.861963554 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.864033601 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.862966823 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.862577427 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.862657054 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.862441446 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.862476511 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.863412785 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.862308669 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.861870314 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.863441223 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.862458893 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.863060911 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.862849656 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.863900377 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.862671576 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863767736 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.862743182 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.863105143 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.863075111 seconds)
  done (took 117.213442769 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861628079 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.862341754 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.860139169 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.86003598 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.86447387 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.860522734 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.862937226 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.863410162 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.863034656 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.862641002 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863841763 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.861152641 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.862999406 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863997449 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.860501644 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.861794005 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.860693079 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.862433087 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.864149896 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.86127937 seconds)
  done (took 39.036685548 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.860935772 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.864671846 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.860858433 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.86161307 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.863143291 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.861351674 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.863495389 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864423167 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860827021 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864574337 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.86419531 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.864548147 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.861054121 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.861016395 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.864085909 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.8635364 seconds)
  done (took 31.598296842 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.862820278 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.865341917 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.864666134 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.865554013 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.86122385 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.861836939 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.864905084 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.861666926 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.862433088 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.86535005 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.865603707 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.86482036 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.864417773 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.866162637 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.861324849 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.864923688 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.86208423 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.862887367 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.864120676 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.866318222 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.864039167 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.863433745 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.866130822 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.866151628 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.863287597 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.864158495 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.863795075 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.867243603 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.867129815 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.870149166 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.867953694 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.866775974 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.865273963 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.863959762 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.866965243 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.861842119 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.865344122 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.8655412 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.864986273 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.866707953 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.866803642 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.864456737 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.865662948 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.868808432 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.865787659 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.868893285 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.863338177 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.864290623 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.86441937 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.864556435 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.866959453 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.86783658 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.867822358 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.867388512 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.867054651 seconds)
  done (took 104.380261643 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.866539067 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.86795906 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.864505313 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.868156789 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.867214399 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.865198951 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.868779722 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.865330097 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.864782767 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.867369052 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.86549672 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.867457602 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.864870976 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.86739885 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.865376576 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.868372404 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.865690247 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.865520452 seconds)
  done (took 35.3933711 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.866096182 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.865824304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.868820696 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.865148461 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.86585791 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.868967182 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865791107 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.868605795 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869941278 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.866044628 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865416166 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.869233156 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86986667 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.868816911 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.86701635 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866607644 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.869343972 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.868781793 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.867270631 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.86622995 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.868859868 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.868602672 seconds)
  done (took 42.885412411 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.868989432 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.868457076 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.883999501 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.884208971 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.88876412 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.895103979 seconds)
  done (took 13.088040112 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867139609 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870744665 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.866534924 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869705114 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86995412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867706975 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867003546 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867100653 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87003437 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866574015 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867662224 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869439868 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87023945 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867546002 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869722528 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871209929 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868791334 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867830234 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868680115 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870202035 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867911048 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869901702 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868103385 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867263387 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867792107 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867086436 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870411406 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867804838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867668039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871749035 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871627021 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869542796 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871295171 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869173032 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871617203 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871530747 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868787618 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872224787 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872177411 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870490997 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.871041167 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871019822 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87195506 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868456628 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871064515 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868145528 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86933938 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869096009 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869776374 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872091308 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872520681 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870026781 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872042639 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872037513 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872011541 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873628946 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869272228 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86970902 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873180647 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869673852 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870021186 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872427869 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870073265 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87085889 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873340798 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870400657 seconds)
  done (took 125.212839446 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870392661 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.869498445 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87093679 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870607144 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869824974 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869981127 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870044563 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870923961 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870690835 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872103834 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873510745 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870272576 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870939762 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871127185 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871573418 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87134927 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870950216 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870825497 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871857839 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874542767 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871241682 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871700362 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872410091 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871492273 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872080579 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873510664 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871499168 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870932296 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871706967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871995663 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871942178 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87207542 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8719083 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.871554435 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871671287 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871890101 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87215297 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872172162 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872169727 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874672167 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872417823 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873940899 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871709123 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872134101 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872224162 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872481894 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872394778 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872377346 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872151946 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873104045 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872837796 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872479211 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872703736 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872846572 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873136729 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872550936 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873449427 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872480937 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872632581 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875077699 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874050992 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873935669 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876777493 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873732562 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873255911 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873812145 seconds)
  done (took 125.368672701 seconds)
done (took 2568.5013617 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.94294056 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.950374668 seconds)
  done (took 15.698266734 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.0406349 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.991080347 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.874276279 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.889703395 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.874976914 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.894059051 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.898993597 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.876294094 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.875548246 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.875245063 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.875725486 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.062665466 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.871259965 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.875428408 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.874945221 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.969093329 seconds)
  done (took 52.434313673 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.878953109 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.880224763 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.890108787 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.88138868 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.880406226 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.890691695 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.913390588 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.882316705 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.912829019 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.890486205 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.947371458 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.892366404 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.878245752 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.928574013 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.892145493 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.89462299 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.975657369 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.953576082 seconds)
  done (took 36.071481436 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.955024648 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.892458704 seconds)
  done (took 10.661230916 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.903703855 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.872005441 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.889457728 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.887184885 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.89976438 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.918899727 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.877223996 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.888303121 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.878393629 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.901401158 seconds)
  done (took 70.728112469 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.885106268 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.880674861 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.881881879 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.878994102 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.872075829 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.878185839 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.879507375 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.873510741 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.553165637 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.91983951 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.890915732 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.888199485 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.883248414 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.888268764 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.881943513 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.90843675 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.02492696 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.878047548 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.877937013 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.884610121 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.880710143 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.94573423 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.892277142 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.880352066 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.909178612 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.558715974 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.890503667 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.887300795 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.991553884 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.878377617 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.880483888 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.881688383 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.883026979 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.258608302 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.150518015 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.880646063 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.889623701 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.887797645 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.881940119 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.013003366 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.881187876 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.886243134 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.790452248 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.128968504 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.992568448 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.922906725 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.243787995 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.884052132 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.883892829 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.911343129 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.88478264 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.883449974 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.895670556 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.389026959 seconds)
  done (took 133.222760012 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.877888419 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.139365468 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.034269501 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.87715355 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.165964372 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084076956 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.878506423 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927543476 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.877659858 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.107738082 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.041165909 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.98546758 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.877775234 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.877191352 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.878896379 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.877010283 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.037511462 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.95109049 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.879204025 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.875466267 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911210586 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121243896 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.004540014 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.880721045 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.899388407 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.09011518 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.003745613 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.985121516 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.156623084 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.875563716 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.943550643 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.879378754 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.881423884 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.87753533 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.034775458 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.974991841 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967318774 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.880247099 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.878282758 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.878051481 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.555864317 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073898778 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.974961139 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.021851793 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.125790677 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.083902287 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.667473938 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.878267318 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.613314171 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.040664706 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.113044484 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.110835517 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.004481753 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.880345697 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.124155209 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.878203796 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.877535897 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.119891777 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107699826 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.982922276 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.881211044 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.878125805 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.882569265 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.124932096 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.884108265 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.974663542 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.881068674 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.879194891 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.976948802 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.985069443 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.11074003 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093130727 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.918763243 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.17852299 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.364476635 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.12838552 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.948260763 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114678139 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.881656449 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.878558516 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.965982109 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.72956586 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.037113173 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.129190338 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.14035195 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.917187184 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.608929094 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.878021926 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.110816887 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.10551744 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.183726229 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.127792863 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.033605993 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.086656852 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.886500589 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.879234044 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.126801337 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.016738264 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.88544228 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.242688162 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122714984 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.456161803 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.915177827 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.196638354 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.023236681 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.889936796 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.532333975 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.887255695 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.114336137 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.931670183 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.886549328 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.886691333 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.11085689 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.964435572 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.890971577 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.516155368 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.949681779 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.888202303 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.124822855 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.891372774 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.154893517 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.891609823 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.129404249 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.049051457 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.924091299 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.061864819 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.131339251 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.891200938 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.152802163 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.134527003 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.007448572 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109062275 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.509091517 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.888492947 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.181775532 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.89188139 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.888733928 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.062974938 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.892509404 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.039121035 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.897557662 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.223147336 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.917024217 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.048474839 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.894479732 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.150345285 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.928585126 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.946221902 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.894953149 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020431542 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.894754743 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.803976505 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.046703658 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.893315076 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.891010515 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.4267546 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.892231925 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049033328 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.125431904 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.916753609 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.966014594 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.564288734 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.892258649 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980085406 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.919101995 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.242163357 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.891732136 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.048953388 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.89443997 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.425398486 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.891425716 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.136156331 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.075922527 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.896306376 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.892538635 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.800456622 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.893027741 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.891933484 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.05536738 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.932337356 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.893915078 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096995119 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.89549209 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.025131012 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.895369871 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.978838813 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.248623185 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.891274303 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.892576396 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.89007483 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.893545682 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.892601901 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.102562546 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.924084518 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.4183073 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.032411023 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.163871402 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.214702985 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.145419825 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.938997594 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.89564075 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.144853411 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.894779557 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.961896103 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.89306883 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.916976178 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127541521 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.896522655 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.105745983 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.175930308 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.83472138 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.945134363 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.894934486 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.89534319 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.84824471 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.049496615 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.989941016 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.89781384 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.900044605 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.016453198 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.023316451 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.114044078 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.899462661 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.032224796 seconds)
  done (took 906.602071433 seconds)
done (took 1227.223519768 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.900331321 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.901981876 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.88824005 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.901999305 seconds)
  done (took 29.428575748 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.909984183 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.904787535 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.911060897 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.90567501 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.908264045 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.90543285 seconds)
  done (took 13.279550483 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.933520108 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.902859263 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.903243803 seconds)
  done (took 21.574639309 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.974308209 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.31036064 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.01777656 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.341390363 seconds)
  done (took 10.481261546 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.909344315 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.908656375 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.908023515 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.909719384 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.91207449 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.91320644 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.910678524 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.911620919 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.911781757 seconds)
  done (took 19.032386722 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.372595142 seconds)
done (took 100.003802503 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.4903699 seconds)
    (2/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.075683651 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.910751533 seconds)
    (4/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 4.099763099 seconds)
    (5/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.103244718 seconds)
    (6/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.490349173 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.859102604 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.062890924 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.252595287 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.246131381 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.913581966 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.9600224 seconds)
    (13/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.907177299 seconds)
    (14/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.06343053 seconds)
    (15/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.997141958 seconds)
    (16/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.431722588 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.042836625 seconds)
    (18/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.394427839 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.942866479 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.027537053 seconds)
    (21/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.937462424 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.238930043 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.336322352 seconds)
    (24/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.43245901 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.901246861 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.971795887 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.850189143 seconds)
    (28/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.081427451 seconds)
    (29/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.921902305 seconds)
    (30/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.386606243 seconds)
    (31/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.92975344 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.999230639 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.687953073 seconds)
    (34/309) benchmarking ("sort", BigInt, false)...
    done (took 6.993261942 seconds)
    (35/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.180827619 seconds)
    (36/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.114829549 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.017950829 seconds)
    (38/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.001709285 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.265559442 seconds)
    (40/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.921706715 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.655196288 seconds)
    (42/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.268750925 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.033292056 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.989161445 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.469951922 seconds)
    (46/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.981998876 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.298036334 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.2967195 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.564848067 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.924923169 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.015084859 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.028161772 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.177659323 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.917216404 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.384011561 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.89932848 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.992077829 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.161351219 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.014145159 seconds)
    (60/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.133910324 seconds)
    (61/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.062983097 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.155591147 seconds)
    (63/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.051324284 seconds)
    (64/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.287969512 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.993266897 seconds)
    (66/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.030734118 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.996693096 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.90342987 seconds)
    (69/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.572886522 seconds)
    (70/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.106902877 seconds)
    (71/309) benchmarking ("sort", Float32, false)...
    done (took 5.704199513 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.926257516 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.961374212 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.110939324 seconds)
    (75/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.953719094 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.017533864 seconds)
    (77/309) benchmarking ("sort", Float64, false)...
    done (took 5.701819594 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.993977459 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.437777228 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.31553577 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.586110552 seconds)
    (82/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.008880443 seconds)
    (83/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.112569782 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.937455395 seconds)
    (85/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.381581394 seconds)
    (86/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.992467137 seconds)
    (87/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.195762416 seconds)
    (88/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.904040773 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.020570717 seconds)
    (90/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.006378433 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.913761159 seconds)
    (92/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.262400626 seconds)
    (93/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.179571066 seconds)
    (94/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.769421191 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.029769611 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.931542203 seconds)
    (97/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.157163204 seconds)
    (98/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.027896467 seconds)
    (99/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.43988312 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.030763628 seconds)
    (101/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.920879325 seconds)
    (102/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.947671689 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.275343325 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.090762242 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.92174289 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.280452009 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.074815982 seconds)
    (108/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.946574107 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.131095417 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.922407256 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.291490085 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.259383402 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.82968643 seconds)
    (114/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.569208051 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.213357227 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.924263964 seconds)
    (117/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.497618626 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.901056268 seconds)
    (119/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.548898798 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.573297015 seconds)
    (121/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.632957872 seconds)
    (122/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.169767814 seconds)
    (123/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.618548455 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 2.380379706 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.946080252 seconds)
    (126/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.843660187 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.186691171 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.115393129 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.864135385 seconds)
    (130/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.096621485 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.85196094 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.275068487 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.143133485 seconds)
    (134/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.060616367 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.194206148 seconds)
    (136/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.12637861 seconds)
    (137/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.941696868 seconds)
    (138/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.551345687 seconds)
    (139/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.939018031 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.973924294 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.034216907 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.907157824 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.987907415 seconds)
    (144/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.047197638 seconds)
    (145/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.407867813 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.155396134 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.954772071 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.436244147 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.943352865 seconds)
    (150/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.12944216 seconds)
    (151/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.046466209 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.353082429 seconds)
    (153/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.164159187 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.953164265 seconds)
    (155/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.032137596 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.944597212 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.566851965 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.209979148 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.237892222 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.927707765 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 3.405034906 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.988607025 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.108856794 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.182849131 seconds)
    (165/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.2730243 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.017201032 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.013202342 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.02759651 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.909428095 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.821385625 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.316513519 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.23827207 seconds)
    (173/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.063045462 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.633131586 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.737919229 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.045866405 seconds)
    (177/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.095251431 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.958976781 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.219588252 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.0483411 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.958529889 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.924673199 seconds)
    (183/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.304197221 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.255197974 seconds)
    (185/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.208588609 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.110887935 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.23325483 seconds)
    (188/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.948679522 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.859137245 seconds)
    (190/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.04793274 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.165531643 seconds)
    (192/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.953721419 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.985048667 seconds)
    (194/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.493320734 seconds)
    (195/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.779372011 seconds)
    (196/309) benchmarking ("sort", Int8, false)...
    done (took 4.941941599 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.861479356 seconds)
    (198/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.947236412 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.924542749 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.729724515 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.023656086 seconds)
    (202/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.957519247 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.149935053 seconds)
    (204/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.873055017 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.91477437 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.310181058 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.012837648 seconds)
    (208/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.2472989 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.230863392 seconds)
    (210/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.233459803 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.743389669 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.944974504 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.129818646 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.62027137 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.270213806 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.958067938 seconds)
    (217/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.133290734 seconds)
    (218/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.06466293 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.926582203 seconds)
    (220/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.961666807 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.911726007 seconds)
    (222/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.436768028 seconds)
    (223/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.600465348 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.141441345 seconds)
    (225/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.05758964 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.321440018 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.952265262 seconds)
    (228/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.056468829 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.084595666 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.222265476 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.975701532 seconds)
    (232/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.308296926 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.399256941 seconds)
    (234/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.080955763 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.320749847 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.103876498 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.250998896 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.309701492 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.62125883 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.135772553 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.933794715 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.036821799 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.268803294 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.956693857 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.175147395 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.036577514 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.337332196 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.915263348 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.956198828 seconds)
    (250/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.12858489 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.976515135 seconds)
    (252/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.083976379 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.311760901 seconds)
    (254/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.017818571 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.502251109 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.024012924 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.933110403 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.57517598 seconds)
    (259/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.265422641 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.933762694 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.962425472 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.95595015 seconds)
    (263/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.929060499 seconds)
    (264/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.949583674 seconds)
    (265/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.155976436 seconds)
    (266/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.272535658 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.301130306 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.101576813 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.12331079 seconds)
    (270/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.741212472 seconds)
    (271/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.175157366 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.045668842 seconds)
    (273/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.955651957 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.612825779 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.154817356 seconds)
    (276/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.021499828 seconds)
    (277/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.91282241 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 8.441720075 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.035637049 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.127370671 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.934638773 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.074621424 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.220326878 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.029208748 seconds)
    (285/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.91776646 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.035682211 seconds)
    (287/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.958555928 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.071483434 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.052129108 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.921999506 seconds)
    (291/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.055815305 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.696239818 seconds)
    (293/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.035537252 seconds)
    (294/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.932787698 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.092335277 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.244933836 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.436786398 seconds)
    (298/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.919725406 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.166676419 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.212087373 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.179080258 seconds)
    (302/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.417292878 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.232645644 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.935619098 seconds)
    (305/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.937326433 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.912846664 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.953153401 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.933738351 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.065068936 seconds)
  done (took 1037.824269374 seconds)
done (took 1039.954835015 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.967219927 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.961248399 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.944241509 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.966166368 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.056311554 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.975405742 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.955465511 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.946815764 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.991591395 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.993596864 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.944253645 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.974518706 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.946822747 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.944287577 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.941725131 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.959335794 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.256139366 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.973639557 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.961028789 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.952415247 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.962430346 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.94547046 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.994118318 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.974877044 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.947662646 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.94486704 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.949113263 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.966222326 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.060170348 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.948830142 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.948695045 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.958255821 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.259164832 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.976129872 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.940121346 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.965958971 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.956966101 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.955767161 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.949852503 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.980175635 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.403064345 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.954676014 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.950226662 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.946329854 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.94642809 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.951747146 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.94817696 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.951912302 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.962847656 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.961176565 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.398116035 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.969649815 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.951916649 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.947503859 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.956447711 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.949113089 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.952652623 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.965420928 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.967889005 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.963829909 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.25094041 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.98116019 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.951285766 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.966069751 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.956578297 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.436432746 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.950324285 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.951119622 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.40417441 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.959444149 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.435260065 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.964242253 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.948215243 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.963198036 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.980519582 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.259453518 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.974099481 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.948245311 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.957424987 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.947750655 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.957353587 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.963609351 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.954219553 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.948673347 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.964634685 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.979133514 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.95819947 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.951558749 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.958570808 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.969701872 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.95838978 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.960287308 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.95128091 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.944361028 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.959377961 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.956243546 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.9527675 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.952756958 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.954012425 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.959244682 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.40241802 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.973644293 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.947214431 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.945739727 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.948767997 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.964805858 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.401947647 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.959335883 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.970715996 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.996886897 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.951511385 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.2534281 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.987003044 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.96732234 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.95752087 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.953850695 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.944475782 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.251705731 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.434736788 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.970555133 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.952535399 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.950981645 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.968003969 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.954372909 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.946594317 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.262726566 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.980618625 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.966178182 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.072668642 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.96038645 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.982866963 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.948947989 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.954606763 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.985057322 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.969426559 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.982802249 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.95392088 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.968633457 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.9683854 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.948751088 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.964104889 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.962560345 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.952707142 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.959173992 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.946010476 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.98296842 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.964384032 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.967377906 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.974243975 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.073860164 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.950596675 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.253845138 seconds)
done (took 306.224904095 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.021230018 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.948708494 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.04804129 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.950423679 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.031356006 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.036534167 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.945996221 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.948346452 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.94704003 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.320891284 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.946281766 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.947124381 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.948803982 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.946340278 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.031289444 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.94832182 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.947104084 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.283864802 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.950636261 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.020808529 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.943728213 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.947771813 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.951337278 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.323935373 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.947482195 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.947940801 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.020996508 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.950565363 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.287954682 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.945260478 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.943953333 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.288238755 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.040451678 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.968950063 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.960171548 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.95772473 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.033877098 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.954782293 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.031182601 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.032945955 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.050190494 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.990847111 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.945634254 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.942096576 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.954618956 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.953556404 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.94796644 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.988701805 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.944822977 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.948748481 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.285870418 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.961438174 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.950182946 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.948868155 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.949450888 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.983550274 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.949372795 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.951542741 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.041140046 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.952485436 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.013298351 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.326967636 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.324729153 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.950497136 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.946646961 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.948692171 seconds)
  done (took 189.678012383 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.01905034 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.02516149 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.019380025 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.954605773 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.000204175 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.018371998 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.954424196 seconds)
  done (took 15.868285304 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.958231134 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.952307155 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.001254969 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.00143027 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.953136438 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.101422873 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.953082037 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.963530168 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.949041094 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.004518002 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.954145162 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.953136293 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.960907694 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.95227094 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.00241427 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.964683666 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.069635602 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.954864359 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.954516055 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.105272387 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.950707253 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.961263941 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.006541211 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.964764752 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.95490041 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.960289043 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.541748056 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.953417187 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.951719418 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.954176489 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.951449547 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.995214462 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.955419528 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.953787272 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.953022474 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.069516653 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.956374176 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.952403254 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.95466316 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.94980132 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.95421272 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.954836994 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.954952812 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.952293956 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.953728885 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.97821779 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.954423901 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.955542918 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.955247463 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.953859509 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.004762202 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.956110356 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.951741011 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.953721842 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.009634604 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.963437384 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.955577555 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.95300051 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.956312276 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.952619753 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.107091398 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.003891588 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.954763687 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.004677065 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.958216588 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.956280127 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.957806202 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.957301278 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.051078496 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.956095739 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.004054322 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.954517892 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.113973578 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.980894918 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.959429054 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.959721485 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.959107959 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.95532602 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.954062145 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.96213669 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.954645051 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.958185246 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.964020954 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.954343384 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.954197981 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.068404485 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.066102033 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.954730577 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.968659172 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.965183592 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.954903785 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.008007437 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.955925165 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.953814107 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.01166558 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.074990003 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.014231834 seconds)
  done (took 214.200106198 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.960558091 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.964981989 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.958243248 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.973979992 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.957974212 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.956580847 seconds)
  done (took 13.654143042 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.95928604 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.957410274 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.958569508 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.957453871 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.95826819 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.959903177 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.958499916 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.958434685 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.960742647 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.959031125 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.959663273 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.960507312 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.958981374 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.959919704 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.958010537 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.958982492 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.959937263 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.954232261 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.957343902 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.957308141 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.109000697 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.957839618 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.9593459 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.958023628 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.965113136 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.958814497 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.967129966 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.958635053 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.958505173 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.967186673 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.96295637 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.959051871 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.960006053 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.965095848 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.962209686 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.961045658 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.962198452 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.960997319 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.958366793 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.960633211 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.961289415 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.958835757 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.960388473 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.959858166 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.961029009 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.963943541 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.961323968 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.965570027 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.960697563 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.960586097 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.960597995 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.960790215 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.960647073 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.962706212 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.961902738 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.965907288 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.964549812 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.959014528 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.960447387 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.961455439 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.963963064 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.962405558 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.963167291 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.966119581 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.964858669 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.96287298 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.962235919 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.966270507 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.961842086 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.960480767 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.962647587 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.958518457 seconds)
  done (took 144.219120952 seconds)
done (took 579.51204866 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.06677042 seconds)
  done (took 8.952964683 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.142611951 seconds)
  done (took 9.121543415 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.477915326 seconds)
  done (took 10.362160609 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.957967368 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.963276354 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.968587472 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.954376698 seconds)
  done (took 29.739200492 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.017345245 seconds)
  done (took 8.900960744 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.967535288 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.951225626 seconds)
  done (took 15.834388778 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.020220033 seconds)
  done (took 8.911302292 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.064168061 seconds)
  done (took 8.951739768 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.964375345 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.991807797 seconds)
  done (took 15.853024434 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.937856226 seconds)
  done (took 8.821682702 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.707784772 seconds)
  done (took 11.597537599 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.955288241 seconds)
  done (took 8.854689333 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.02955592 seconds)
  done (took 8.914500742 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.253291365 seconds)
  done (took 10.138881659 seconds)
done (took 166.841239956 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.958006713 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.95312752 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.952176072 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.954043219 seconds)
  done (took 29.706375134 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.994542122 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.994034261 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.993420246 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.004802743 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.997945808 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.993230842 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.986410105 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.984912864 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.005566505 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.996390861 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.995404622 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.996575764 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.994745832 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.986349916 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.994952113 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.995695072 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.005026153 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.994742984 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.985982956 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.996672443 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.961125904 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.004338299 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.996546423 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.960246968 seconds)
  done (took 49.705485134 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.161553164 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.031705028 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.113205859 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.014418884 seconds)
  done (took 10.20657786 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.010506946 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.01506633 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.02640613 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.064658308 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.08775523 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.024010017 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.987246552 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.984620803 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.969430245 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.014618468 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.090391378 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.007800319 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.102672692 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.961625519 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.144826404 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.962653881 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.961086303 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.014389232 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.065025969 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.078186168 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.961596048 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.011472287 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.016995025 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.011236142 seconds)
  done (took 50.461524139 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.959124189 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.969216385 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.968457627 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.960840048 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.962172396 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.962112035 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.967963006 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.963321036 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.980926591 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.961135269 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.960310106 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.962147981 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.960848986 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.961991037 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.960709528 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.972965406 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.975011232 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.960616466 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.964450221 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.967234217 seconds)
  done (took 41.189336622 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.953311159 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.810262619 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.307721934 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.212047842 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.956257999 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.957336058 seconds)
  done (took 32.085103148 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.976323261 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.96789366 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.960308121 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.019272037 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.103851078 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.97082589 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.962276221 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.974209772 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.010958696 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.027697907 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.98259383 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.991027228 seconds)
  done (took 25.836777028 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.958065546 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.960468163 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.957380721 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.97642852 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.973230484 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.968352461 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.97013208 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.957344077 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.97615014 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.983420656 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.969799951 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.975250831 seconds)
  done (took 45.51885034 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046823661 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.846880596 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.996220416 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.671400072 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431348628 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168813554 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.487225554 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297838628 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.963071469 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23167559 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01088909 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069008982 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.212654292 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960168213 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.975362209 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.449539424 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24848734 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182559273 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.981688004 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75993608 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006455087 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.552273097 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.82916581 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.016478119 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170999795 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.090966248 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.219033904 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.914322328 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089027433 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992625897 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970868037 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959589377 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233780293 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33199672 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05770888 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970000053 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.612489428 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.676758808 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.952236516 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.727877385 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.745739336 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.07774095 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969239774 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960270319 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.895747419 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.552635593 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344573371 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.967246211 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.671809648 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.961674733 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971632153 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050818733 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.965333323 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.780670642 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911595453 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.240412349 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.95958242 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968578736 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.53210186 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.051017249 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.587729959 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.941795167 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.156178118 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.753548086 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352939251 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.108069876 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.966413477 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965268406 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896367487 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.702080372 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011587498 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559770865 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.983233478 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.613202205 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26211005 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.060364741 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906232861 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242990079 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.825545671 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.942004137 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191308732 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.918945556 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893914634 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.830991169 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.896865224 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21964534 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993838708 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.606779711 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996967655 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.298198272 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.974986222 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981354259 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969853662 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.188172279 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.526594713 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.965794886 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.779799535 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.110010103 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983477582 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301666735 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89804752 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.968837656 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217272965 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.174593021 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282758204 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.488259121 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115561082 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.964917315 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.043150267 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.968529861 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.020859646 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.23539959 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021299809 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.063644941 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018832271 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.916138449 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255297018 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.988163407 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.133814535 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.023877805 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092012337 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.29285431 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24955026 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027931343 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.966340115 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.965970125 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.719836943 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.51534256 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.232040722 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.966911611 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.532831301 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018751298 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.963150285 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.899096736 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.592023297 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055611432 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.944342506 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191928132 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.966962483 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278918067 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.899457338 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.111661319 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.079189856 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.190665133 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.608513937 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.031577184 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225404061 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.595842079 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.327090861 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021606707 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988039838 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057643579 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989265932 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.476746346 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.264917103 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.970674411 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.972028791 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.729262785 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.965984888 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966967335 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.973859087 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.763553052 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251396678 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989868129 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.971471555 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.856761848 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.980877148 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033514152 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969720397 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978054863 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.525289825 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.729457178 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.977421655 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.598106592 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192343749 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978126051 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.724909019 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07810195 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.051510473 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242708815 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024748219 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.905144164 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.679953453 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.662883664 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969541819 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.902886951 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.969888159 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980143752 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981721311 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.349432001 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.245579077 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.012835725 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.821331761 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.007781012 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98191341 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.975987344 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969421045 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.51464452 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.0701448 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.612409629 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.023417573 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108330993 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.984038234 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.904831906 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.971206342 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97680966 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.972617151 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.937103703 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024701004 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.740597262 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342156974 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228070995 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.617668302 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987287129 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.869589259 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.02567512 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.992899316 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.810295635 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985958899 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.01669731 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987586814 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.982050948 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.730389231 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.675778237 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.536776602 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275919737 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.281704692 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405828991 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.537088354 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.280828596 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311529597 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208843766 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501527824 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033354283 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31630045 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.918023695 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056430831 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.610994871 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.312124624 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9902419 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199861727 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354216626 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.728134403 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111449383 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182559192 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008772789 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.974026708 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.941594335 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.179542704 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113801895 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.725068067 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169450255 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305799254 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.670533891 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.065238221 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.97163889 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.656041823 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051881226 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.684567015 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.335905195 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.571189205 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.943001072 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44038757 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.979826408 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.420886262 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322601562 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365121387 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.101801222 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908041856 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.98468573 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.984200609 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.974339982 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.97117292 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.852909012 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.228375182 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985866407 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206915552 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32074077 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.27175643 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.875111523 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.979602275 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975913485 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27569115 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.837193505 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144831101 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.504565788 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.516706043 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.97696341 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.910501482 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907503503 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.669625778 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.983040206 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951152953 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193834129 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.154610165 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.963245233 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.557261412 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227620579 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.228044228 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.99028154 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.250833627 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246847881 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.709818353 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004536626 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.075527855 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.664680129 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.075795955 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.241469338 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.211801776 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771773066 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.205618949 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.019855663 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.783382071 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.976384892 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191243291 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.247136235 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.896513774 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201514619 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.696694198 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.990416187 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281308595 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029965416 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.901856296 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.121927242 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.170657805 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986395791 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057942184 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987107716 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.989306429 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.988819569 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022396215 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.902123328 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.094444798 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.989683016 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062578507 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.079183157 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.51172193 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.982028638 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255968041 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327363802 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296484703 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031016613 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.980129373 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978076461 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.909671963 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113310148 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.424143003 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252149201 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.105758515 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.277918941 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004409085 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.713336276 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425389088 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226724829 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253084159 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.873808742 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975409843 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.996696425 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.243015108 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990554232 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.186323877 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213951894 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307385342 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.446699856 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.302122132 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350150532 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250634022 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349433231 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.980230427 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.567305368 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.992817933 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.669871304 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.013660523 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905366014 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23783445 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991995666 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352232958 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.001460556 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.179711886 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.49520284 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.736336568 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265789824 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.953530763 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.031714854 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258295007 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362096416 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28612916 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051615824 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992803265 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.682783076 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118722443 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.867736351 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.261255373 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.988029012 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193192692 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.685841497 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.988872239 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258398686 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28598853 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.977241675 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.879249131 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985529886 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.990610074 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.20418939 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236517396 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221902753 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990666294 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.98981637 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.798398813 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254557201 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03629044 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.914414088 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.985223228 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075617421 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.230899243 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000756326 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.497292441 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.692007356 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273481875 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.89272879 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001955279 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.57558148 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358432611 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304862498 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.525253003 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205420148 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.535294931 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.982394278 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282423442 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.988358147 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.579307407 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293125734 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.982293202 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.674509894 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027332347 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.254440182 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299139008 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.000811219 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756936783 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.946597997 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203529138 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644795793 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.922318913 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.984046468 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.040197993 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.980313831 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.10795598 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993602805 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.884456052 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980436708 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.734400324 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.47062589 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.99076985 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.971813901 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.711672916 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.703097978 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02358548 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125687309 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994086904 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.706503459 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.281192161 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236441141 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.681810843 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.997027588 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.987457002 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983899336 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908848152 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.180130081 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.360084023 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280364292 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.514861785 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.025955894 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.989113545 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.196450313 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193067018 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.886622414 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113693799 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.559103988 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023341784 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.754346912 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.660362565 seconds)
  done (took 1737.162577529 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.016060397 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.024918165 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.011792934 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.052803457 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.033554467 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.050269829 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.066232862 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.074240885 seconds)
  done (took 58.246322757 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.982283119 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.176166943 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.990911791 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.983698511 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.991380528 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.989787456 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.155635212 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.995883587 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.990832174 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.990906162 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.981600029 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.984217959 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.321065978 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.008807366 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.988072579 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.982996863 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.990402185 seconds)
  done (took 76.450169314 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.982656628 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.212783455 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.014761615 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.006207049 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.950517018 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.990662044 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.057400839 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.006580181 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.987396608 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.212927751 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.317029536 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.012773645 seconds)
  done (took 91.667650265 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.995267707 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.990687654 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.992467848 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.9895302 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.991278247 seconds)
  done (took 11.878897948 seconds)
done (took 2262.027913575 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.234610979 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.214718619 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.221710328 seconds)
  done (took 6.354238142 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.127924294 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.179467181 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.296953319 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.31760116 seconds)
  done (took 10.837419932 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.271624823 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.351192457 seconds)
  done (took 6.532538328 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.395079808 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.990406459 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.383110342 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.976044483 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.980976772 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.978023692 seconds)
  done (took 22.849200468 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.981377986 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.986475925 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.984164589 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.982697425 seconds)
  done (took 9.846733014 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.964234186 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.710261524 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.96796775 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.980974994 seconds)
  done (took 21.534235181 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.732437917 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.382250144 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.728863809 seconds)
  done (took 9.753225607 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.439512723 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.87150973 seconds)
  done (took 9.222063161 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.261548078 seconds)
  done (took 4.175311566 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.012272033 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.255228189 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.505615596 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.502282968 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.59893275 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.853055229 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.313119422 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.236394545 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.400586885 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.420780744 seconds)
  done (took 26.013580985 seconds)
done (took 143.036244388 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.370069857 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.229650246 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.185783209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.333803471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.204445601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.18593357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.190271553 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.323597463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.831932097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.828940445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.334566708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.205909806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.148770248 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.218062233 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.151544015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.223289371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.209769938 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.386926818 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.036609985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.230568566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.194772625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.968914465 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.174717586 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.985680511 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.209063027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.143843709 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.556732489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.226827926 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.190442397 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.564094002 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.144888728 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.384514326 seconds)
  done (took 176.488581763 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.734798316 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.986676701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.985404989 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.988253725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.213426541 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.989106364 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.990504637 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.983727347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.229268966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.224897715 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.998198823 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.266259645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.005094424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.989441122 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.993070787 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.988352331 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.327241522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.794723493 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.992427457 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.000139569 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.997809236 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.107076122 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.008424293 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.152986093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.354266791 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.003998708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.977946014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.005204973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.986244875 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.950120166 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.996138418 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.98503941 seconds)
  done (took 211.126189403 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.987627524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.991890017 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.988238902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.987356642 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.988384756 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.986257896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.989849568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.985295919 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.563611516 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.564755055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.988443108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.009447732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.995916936 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.987798086 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.999263352 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.981777124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.997223993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.995520707 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.995994401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.995019562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.999235591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.803334937 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.993994746 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.810264211 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.995271954 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.995926934 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.988350893 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.00302608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.005187945 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.007146346 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.007237887 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.985583242 seconds)
  done (took 224.502626678 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.189708051 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.997352556 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.995936544 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.929437021 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.998534427 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.000154837 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.933984161 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.183637787 seconds)
  done (took 20.173827875 seconds)
done (took 634.216981909 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.469148235 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.314777883 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.1710654 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.019163212 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.260846899 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.055482406 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.010834576 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.078128511 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.741625755 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.089090346 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.703700143 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.030270861 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.797029997 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.035437168 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.132215357 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.07120643 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.557977763 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.649139046 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.195246053 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.091085994 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.191141197 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.950718316 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.092214122 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.767602423 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.817051594 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.995998462 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.190896416 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.563110956 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.02151825 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.175748365 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.761581612 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.409333055 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.02481372 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.010945527 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.069497748 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.046638774 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.365161318 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.020473661 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.137319547 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.757503857 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.08602258 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.636541478 seconds)
  done (took 108.488708255 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.982600028 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.982187216 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.981817219 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.983694404 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.982696146 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.979428284 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.978383593 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.980840742 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.981270098 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.980401437 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.979578197 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.98228959 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.982120512 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.983367326 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.981510156 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.98045899 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.98198409 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.982882937 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.978951489 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.981848094 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.979133442 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.979315993 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.996388216 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.98034502 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.983006342 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.982559629 seconds)
  done (took 53.458235358 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.995496029 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.160992267 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.255110461 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.014079639 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.996142993 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.999983729 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.017101536 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.007602725 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.001651714 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.002693494 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.109941857 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.004210582 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.013165629 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.254438885 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.009771298 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.996483783 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.996998321 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.997776991 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.168845092 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.011175361 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.015844623 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.003408591 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.014580166 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.011106624 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.998693778 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.997068412 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.997357614 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.457082258 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.003977953 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.103904248 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.04076713 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.019672387 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.414757078 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.265946907 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.051067112 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.002983658 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.996333569 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.104026883 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.004980955 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.9970645 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.015657656 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.00765922 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.262312513 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.496802658 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.011354532 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.998297368 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.466645394 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.116301246 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.040357267 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.008759735 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.258018929 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.012823261 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.998622896 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.997290313 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.034494146 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.007459913 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.998590652 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.325589809 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.007036489 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.014817063 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.005639074 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.99874427 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.178476432 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.006280379 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.163637532 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.008461405 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.003974743 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.996433483 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.256368484 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.013076147 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.50435129 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.013266933 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.000070193 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.105088093 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.170899626 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.496354011 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.012877117 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.181360549 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.427538571 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.026736294 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.008979805 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.448002186 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.027565246 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.009427876 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.001388855 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.001494483 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.000185359 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.045907667 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.0163996 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.433717926 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.505885202 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.340709839 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.025378193 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.015936508 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.995905657 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.321647791 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.010499227 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.001040152 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.250254757 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.511775564 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.013165655 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.004913145 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.491957459 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.015516475 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.019883118 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.009231879 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.262235665 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.016250776 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.046601971 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.997609356 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.0065097 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.002616906 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.018428483 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.008668677 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.000578508 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.481758745 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.124597315 seconds)
  done (took 247.579998755 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.996830256 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.992874459 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.993069178 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.994022126 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.990502176 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.999627118 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.99220257 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.992763508 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.998762829 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.994085467 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.992771358 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.994176196 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.995721383 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.991834179 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.033832035 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.00046922 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.607665815 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.996332642 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.993503596 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.9975256 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.646976389 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.999369248 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.992937207 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.001895052 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.995733493 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.994746782 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.004087486 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.02676436 seconds)
  done (took 171.138626677 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.000651266 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.118906154 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.018058149 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.02859233 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.011804344 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.999784519 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.024909199 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.015480973 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.010244116 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.997915185 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.998754976 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.061532575 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.011373812 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.101305472 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.030811957 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.033209786 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.105944281 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.007122338 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.998236038 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.999422287 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.030809546 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.996538597 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.060974769 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.128030762 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.01990612 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.115770241 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.006721305 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.001267503 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.002163305 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.119988385 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.017095085 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.062415973 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.031614982 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.020817153 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.12410356 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.120142731 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.111518818 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.030537779 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.004962907 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.001284838 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.000804204 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.988159999 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.118645227 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.020553824 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.002621046 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.107735284 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.018274384 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.004317798 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.010230941 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.000449246 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.016315464 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.019431309 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.071201557 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.137455964 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.033289115 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.032194384 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.029403753 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.28654906 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.014245444 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.106518682 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.998193534 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.119947669 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.021572615 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.989617096 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.005090693 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.008943752 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.033898825 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.033603239 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.11204543 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.011283917 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.103944259 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.037817675 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.011357058 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.005084456 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.00580383 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.120879574 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.122779142 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.039061629 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.043057604 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.036894348 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.997882755 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.001721147 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.991794158 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.024462799 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.010317185 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.123626604 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.12401458 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.01554442 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.004554321 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.006526928 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.0072919 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.02989105 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.130961119 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.039164673 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.104306381 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.07405563 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.079088598 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.019656262 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.017148416 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.008289433 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.069667093 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.019841896 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.017566237 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.33943228 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.078379045 seconds)
  done (took 216.724661093 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.4693978 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.064538788 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.0652846 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.336685824 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.428357058 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.843395625 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.053453497 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.057535592 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.082036818 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.2411687 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.1268791 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.076087036 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.039953687 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.028763932 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.054366309 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.077439258 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.065407003 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.37962538 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.175480243 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.166598541 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.029844718 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.33214082 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.380275583 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.485732162 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.089710637 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.394259445 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.741205707 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.197555166 seconds)
  done (took 65.419726474 seconds)
done (took 864.733322035 seconds)
SAVING RESULT...
DONE!
