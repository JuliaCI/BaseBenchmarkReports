cset: moving following pidspec: 27235
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.347579875 seconds)
loading group "string"... done (took 0.551586202 seconds)
loading group "linalg"... done (took 7.005653774 seconds)
loading group "parallel"... done (took 0.15758799 seconds)
loading group "find"... done (took 1.108063797 seconds)
loading group "tuple"... done (took 1.745399526 seconds)
loading group "dates"... done (took 1.242868711 seconds)
loading group "micro"... done (took 0.221386617 seconds)
loading group "io"... done (took 0.899126109 seconds)
loading group "scalar"... done (took 36.110381589 seconds)
loading group "sparse"... done (took 11.307514191 seconds)
loading group "broadcast"... done (took 0.904430618 seconds)
loading group "union"... done (took 11.784337382 seconds)
loading group "simd"... done (took 4.287101038 seconds)
loading group "random"... done (took 8.369546163 seconds)
loading group "problem"... done (took 1.859845506 seconds)
loading group "array"... done (took 19.440415104 seconds)
loading group "misc"... done (took 1.863950921 seconds)
loading group "sort"... done (took 3.229124895 seconds)
loading group "collection"... done (took 16.478322616 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479193373 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121077513 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112718599 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116708304 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.130408526 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113771744 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121593274 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082834401 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.834947087 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143350807 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118689971 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409492723 seconds)
done (took 5.139332079 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173429609 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.0826911 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080836796 seconds)
  done (took 1.340664286 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065089076 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120784431 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06550194 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066276191 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066195888 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06554732 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065008571 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065219644 seconds)
  done (took 1.693049923 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072810964 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067415573 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068426079 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067101876 seconds)
  done (took 1.454826061 seconds)
done (took 5.914868203 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.755919188 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200261419 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181128497 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.400668216 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127916404 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152731309 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641402776 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312276607 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180992933 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080441727 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103603344 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315113944 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106669217 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.631359431 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073302498 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.0893532 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137558359 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424677604 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067179352 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081636154 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.0882722 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127501399 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084460781 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073703639 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143083996 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06716099 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128844949 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079324984 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065964579 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205528871 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171542148 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.645300572 seconds)
  done (took 10.161952531 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095470508 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096232058 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068021852 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13588689 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094991884 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068657196 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070545617 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066712421 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086281204 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126816612 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087987772 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100663437 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064613401 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068051031 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083873128 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202938875 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079233931 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080866749 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069929687 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074424607 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115487709 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077377595 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077070013 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076874547 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128013048 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179001166 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095294796 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097121566 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066237926 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079764411 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114463408 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125203913 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0647678 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065376563 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123379279 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093699832 seconds)
  done (took 4.614630164 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.270961707 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109886665 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138550944 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08945563 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130832969 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064807711 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106470932 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065451381 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08251336 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198315257 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288822123 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.573077949 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110569069 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102889007 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067001984 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067444512 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066470471 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.328787515 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106760598 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102564874 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080446539 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068944039 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06800158 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340714923 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066736885 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063309136 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067200378 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057513215 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122161015 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067001188 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.917336771 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125089694 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066790835 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101009998 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161848568 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063921531 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.219104158 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141495268 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068198886 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064113516 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149963212 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069541778 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068600917 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083074906 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102913484 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112533498 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065608333 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06677709 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161749792 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064276778 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078558772 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.979830023 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151854994 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076502074 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0634886 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244434001 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084814118 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069105166 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064275259 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.208935196 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133242592 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067218941 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066113835 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067723656 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068765441 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.35166011 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065630123 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.986768984 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067044428 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075540636 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068796262 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069234309 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072514637 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071793172 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085264817 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065671007 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074850444 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065564194 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065220587 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065869111 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063111373 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083436892 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356212912 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065908178 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067990067 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064277241 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085376309 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096303531 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065802383 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06465317 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099416951 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063164343 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.174857796 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066194927 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104771692 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067207921 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083541692 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069295649 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115443108 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066280373 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.10877331 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066030954 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096030579 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069009441 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09874471 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080081688 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068351028 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.396768628 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065375835 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065257714 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068469735 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064895916 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067344869 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065476653 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078810395 seconds)
  done (took 21.087067838 seconds)
done (took 38.312992608 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269467661 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075075516 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074678828 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07439986 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074722934 seconds)
  done (took 1.839411695 seconds)
done (took 3.092098211 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118445477 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098046981 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063982161 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094364241 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063264521 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098713708 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098111788 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080754967 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098662758 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063563319 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095676194 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063942332 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063871363 seconds)
  done (took 2.369302473 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082277973 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082795502 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069733281 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08163293 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063323285 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08113001 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080213916 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087553779 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080430212 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07114752 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063044006 seconds)
  done (took 2.086229677 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081037762 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083266541 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068749026 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080796328 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063056237 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080181676 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079801436 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084806493 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081004937 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072848366 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063378421 seconds)
  done (took 2.076499052 seconds)
done (took 7.769201956 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.0770563 seconds)
  done (took 1.308224492 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.584792165 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.007524543 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08066616 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111036327 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182637712 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118339806 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276877516 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085855931 seconds)
  done (took 8.859614299 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088489457 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067611444 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08215563 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071943567 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069389895 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067828248 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070847951 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068434565 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068668333 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071192388 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070382025 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07158416 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067950315 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070213579 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070144244 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067590582 seconds)
  done (took 2.446587645 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091961603 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090179592 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072969685 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074934889 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071623101 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071489722 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074091066 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072512804 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070180643 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071978414 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074095824 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073053755 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071051332 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064426336 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073715807 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075044639 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070402561 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073574678 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074039654 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074246931 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074062597 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063811836 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071243364 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073434675 seconds)
  done (took 3.109000276 seconds)
done (took 16.962723001 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111505082 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071561148 seconds)
  done (took 1.424711709 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080938954 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082359813 seconds)
  done (took 1.4109116 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081859799 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065210421 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089834531 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077359286 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066153146 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065027095 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086719452 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066031908 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066043441 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065981679 seconds)
  done (took 1.978359678 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068618015 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077299831 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070528337 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079804204 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07305895 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063605196 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072165862 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066918222 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076686077 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062096996 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070849121 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081236645 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070265736 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082903162 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071910452 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067623731 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069638579 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06676937 seconds)
  done (took 2.542712986 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065283505 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065833987 seconds)
  done (took 1.385727248 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066353903 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062755191 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066325267 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065930791 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063000141 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061737207 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062865948 seconds)
  done (took 1.699698987 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383328695 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109602128 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292823398 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069945064 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080965864 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246879275 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064552517 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069913148 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069848358 seconds)
  done (took 2.68113294 seconds)
done (took 14.378300843 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078193804 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084384739 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093593519 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36206594 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091062959 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06525787 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113160467 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188470584 seconds)
done (took 2.338843762 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210446996 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611914194 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.378372124 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194554729 seconds)
  done (took 2.442874305 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322711054 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085829389 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058602036 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06655113 seconds)
  done (took 1.799994607 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065209597 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068462515 seconds)
  done (took 1.396396987 seconds)
done (took 7.112735272 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066108166 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081679264 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06508343 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062752875 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065676799 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065383208 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062835352 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063127582 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065156462 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065307212 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067700553 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065154741 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065032129 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070708245 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062698311 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062602053 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065139228 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065794717 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062935591 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063104438 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062923496 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065126464 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062780926 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062958631 seconds)
  done (took 2.865796642 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082501736 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065672319 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07180148 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070646703 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069228473 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070580355 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070633269 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065614334 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070466896 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067472552 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069158037 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069331361 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067333058 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069165645 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067564484 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069625306 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070332427 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066183272 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067499205 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069088701 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070098009 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065557357 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069200933 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070523636 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069093085 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068754043 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067361404 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066406527 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070292584 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068838401 seconds)
  done (took 3.349214866 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070166847 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063754029 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063681288 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07042048 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06266239 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064247173 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062670986 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063298475 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063839065 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063059565 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064444003 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06268547 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063117789 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063587363 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063798371 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066358316 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078458535 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063428193 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063178162 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063391573 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066337274 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063039418 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063286736 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062752226 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062786011 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0626831 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063585714 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062939816 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063487011 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.175125562 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065659103 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066324896 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06260781 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07014591 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066191497 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062625867 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06640968 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062716897 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06356132 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062398548 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062556808 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062520265 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062541694 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069995787 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06315795 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064495239 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06337785 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064238967 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063163127 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065113113 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062439312 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062684597 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065054096 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064335814 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066892694 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062101547 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063819049 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062314128 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063520742 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062434775 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062462845 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062281172 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065115084 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062905089 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077508158 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069272925 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062229376 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065888976 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064178429 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065173293 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064556814 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075941428 seconds)
  done (took 6.043777726 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087050919 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086497795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064829659 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06453876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06156431 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063101893 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066729045 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063548825 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065138288 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068984778 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06377245 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064471645 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06443255 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075855448 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063633509 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064406601 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069200398 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061377755 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063359936 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066491956 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063427237 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067098363 seconds)
  done (took 2.767810892 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15346304 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069518478 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104917709 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072466062 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066985784 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071845971 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068965347 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069300564 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069310071 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067737568 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067404588 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069140465 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066727499 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067215336 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067217826 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067350138 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069064063 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067417502 seconds)
  done (took 2.637788731 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076917305 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066099794 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085384532 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065108233 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066048261 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067686113 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069588946 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07327566 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067551966 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06517005 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073330062 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067681748 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067471798 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065331089 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067671465 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065313612 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067299485 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065392001 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07356708 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069663451 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069723874 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073393532 seconds)
  done (took 2.81144246 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079039808 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06779532 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081362911 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068270482 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06186919 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063852063 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069279486 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065321961 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069132996 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067016217 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06536023 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063609489 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068724153 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06511972 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068217803 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064902217 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066692787 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064968966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066555609 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061358879 seconds)
  done (took 2.633433705 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086877764 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067259529 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067001596 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075692881 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06683609 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06666728 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074226615 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067148593 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067141719 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086241161 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06680713 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066236511 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074061357 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0711053 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066363316 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073776116 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07372451 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073987926 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066244265 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066570276 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086518916 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066943166 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074111108 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066702539 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066730739 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066498217 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066743236 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071003259 seconds)
  done (took 3.273413634 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066047646 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066055228 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062575441 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063404318 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063575005 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062639867 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062559352 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062996752 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065076772 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062911917 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065255725 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065410313 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065469174 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065129357 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065754008 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065272085 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065012638 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063695652 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062940543 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062939082 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06512391 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065348627 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065368532 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062844736 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062990343 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064829793 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06259806 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06266867 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065068001 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062592829 seconds)
  done (took 3.213101479 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074802245 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072056254 seconds)
  done (took 1.436694542 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062488115 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079366742 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062979726 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069775998 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069663508 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06570408 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072134513 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068953387 seconds)
  done (took 1.835835913 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080837893 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076362498 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066914041 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079454424 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076081324 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082160974 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130988909 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066515381 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073024134 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063784343 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079111306 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065216881 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072109989 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066376871 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071018557 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071894057 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063735649 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071449486 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068154002 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064043895 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067063436 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073953071 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06791532 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061136863 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066807778 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087118379 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076440438 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065086696 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068368005 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073070787 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071589673 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059440051 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06547011 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066111779 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063214717 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075406633 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080382923 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068310458 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074307058 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066188807 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07629416 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06091463 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070308839 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.0719851 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075654302 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065681785 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065839961 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060482787 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063314103 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067717767 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060797995 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065713729 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060160218 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074853749 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069166988 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07588023 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064446018 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066862276 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068428594 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068417404 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072817432 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067128959 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067827671 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065115726 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072001074 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069873235 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074601747 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060630901 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062328102 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063626427 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075368166 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087582326 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072010535 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066697273 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066450101 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063412529 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068551992 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066621707 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07125497 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071640147 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065613469 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070761285 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072852338 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065696346 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067890837 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073407202 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063697493 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06832726 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06335932 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081485022 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064904363 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064214643 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063385597 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075902196 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068748016 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065406186 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063637816 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072706589 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059610028 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065625076 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066382577 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065972699 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075522671 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069733663 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069939015 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073997336 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07250566 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065875598 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068277471 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062055404 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066468503 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064179543 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071772673 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05912708 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067443114 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066718451 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065462798 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200017371 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064997491 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066065002 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073667788 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071824881 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064543748 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062758026 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069198746 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066225183 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068920908 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073573996 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064659493 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061098724 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06138157 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06941826 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066039757 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070150338 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070395968 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069034396 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061273783 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063921557 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071110676 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074921008 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066361536 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066712398 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072034227 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067598537 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065153593 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072442795 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067817109 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065823111 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07177102 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066783112 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061404582 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069343281 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068711559 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064803125 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070218349 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069191596 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068096153 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067199184 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064416314 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072909245 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067145169 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066098191 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066471497 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064850431 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075332377 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068161796 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061364395 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062758839 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074606362 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064010005 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065408526 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064736281 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068354655 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065733208 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063729941 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065271609 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068263442 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076488994 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069775458 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066706524 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07113031 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076537475 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064908921 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068805799 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064723467 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066527917 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066598299 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07433573 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07095478 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070755047 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068552247 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062275735 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071176698 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072940666 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065187696 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063633192 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065066176 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069844817 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071444335 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070035854 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066455274 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06399079 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066128881 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068997804 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068174612 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065137095 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064914008 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072008211 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063674931 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072626519 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066130819 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075076952 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068744641 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060635366 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068785128 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063516165 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07157383 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061331881 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063394623 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064901041 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066433149 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064491282 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067468397 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059557061 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072033229 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072543784 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065374856 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064294201 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064599167 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071721128 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066944841 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069032382 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068643739 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070662419 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075022519 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064498272 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068521711 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074905647 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064957768 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188918583 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072978176 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064710997 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065437102 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065491563 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06455577 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069330537 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075557282 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07305182 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06061398 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068794639 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064702993 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065386107 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06210821 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071055451 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069286451 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067363055 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072861572 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067284019 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06779024 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069676199 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066507904 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067144179 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067353326 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06912483 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067240192 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06806227 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065581785 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069239302 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065847751 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064481567 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068178842 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066297364 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066689153 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072242319 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065964443 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066239399 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068940927 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067072428 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066537183 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067097718 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06517792 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069505657 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066677613 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066680473 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068961489 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061809638 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073272512 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066069576 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073524056 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066566748 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062859445 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073517189 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068662106 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071297879 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06733893 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066637938 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067369189 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066364516 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068439328 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072957494 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064853935 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076490242 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073233496 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067205621 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069226355 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065602676 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066979277 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065299788 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067232296 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067129565 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066430785 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065578077 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071272673 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068588738 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066003075 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067361057 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066482419 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066132866 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066993064 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060581809 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065096612 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065422637 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065788823 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075920623 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066485187 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065838398 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064914867 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066775186 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065253235 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062707941 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074018001 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075194774 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066815608 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073245082 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065317224 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067710293 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0762693 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060521501 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063913119 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063857671 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064061964 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073275789 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066608601 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075702846 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066008527 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06507021 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062831373 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066814757 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06483707 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060453778 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063672795 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06922226 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064753434 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064608364 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065682676 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067872541 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066356309 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07492209 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064310531 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065894407 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065230747 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062591231 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064694296 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064336989 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.20216918 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068028525 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064752454 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064183211 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066201429 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06755773 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067951693 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066149309 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068189206 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076045392 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066381103 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069250512 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069060256 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061316232 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069659765 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06649124 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066729494 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06558937 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070103628 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070051417 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067874272 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075350589 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066219389 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067481635 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067161678 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064436476 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066219675 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066597129 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065943758 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065250228 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067914206 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074928903 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064294316 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06949516 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066910162 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06650024 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072687432 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067674138 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069317495 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073324356 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066819677 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068366525 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074966366 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070336801 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069848487 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067762614 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068225804 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071812722 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066159586 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073252784 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066931686 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067626798 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067815902 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064190211 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06633708 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066279916 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065428502 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072689232 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067190788 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065830356 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065776702 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064493913 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066796952 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070470255 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07386251 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068726892 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069196435 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061327606 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063767231 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067434117 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064543013 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067533919 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068743855 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072315595 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068418492 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066376873 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065052529 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074919869 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07205062 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069776128 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064453548 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070306485 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067019567 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068594495 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067102185 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066794269 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067070387 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070190982 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067519129 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065243534 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073576053 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069372235 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066738383 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067502851 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066973631 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06658651 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061326036 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066651238 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068051857 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071248925 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069100479 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066309669 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076609195 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064233557 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066492799 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068982128 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065353961 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07024998 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060628536 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066878917 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066122927 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066404335 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060644483 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064732914 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063771984 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067947239 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064340299 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060445258 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075366277 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073879903 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068028133 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063645078 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064279728 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060301681 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06024578 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.198372487 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068058064 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068972662 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076714272 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065556112 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064896882 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061486361 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066209356 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069633496 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069472536 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063952107 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062054118 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065019216 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069167943 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071731067 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06488036 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06629016 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069797145 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068919503 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064597648 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070622212 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063424696 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069889582 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078582318 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067379651 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067690863 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072413765 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074401492 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067349521 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06268076 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067890729 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069708556 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067241708 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06760232 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067175079 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08188708 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069538049 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065887864 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065999246 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069202604 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065623942 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074840232 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067376319 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066877231 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070554337 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068520307 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077004178 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069480173 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073211235 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06970305 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070092324 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065348405 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067145123 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065025086 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065639735 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067665564 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067442904 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071903542 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074017017 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066017123 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076666769 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076602839 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06865557 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063992623 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065616306 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065716391 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062114612 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067340151 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064741776 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064606073 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063957679 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064726944 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067034006 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071467369 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067392841 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066354296 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065401275 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06000161 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068144423 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068495042 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066914016 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062630428 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065529634 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066550789 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069763397 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068809501 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063368339 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067399656 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067400591 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066574026 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060831089 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071795442 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065024116 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067709572 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065223199 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065746201 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066488193 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069466429 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07025142 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066489525 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067865802 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069161661 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067727389 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063001315 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063242295 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071090922 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063843115 seconds)
  done (took 42.357547788 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099578889 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063432113 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061720048 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062254965 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073751496 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063090727 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061880784 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062523626 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062629246 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064717463 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061474731 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061728613 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070418436 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07719709 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073050133 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066076929 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061318302 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062404243 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061615995 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062395324 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070105913 seconds)
  done (took 2.779961815 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073581582 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069824177 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072301259 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075887642 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06686418 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069721354 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071678182 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069765094 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075369019 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066175731 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075082632 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070363373 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066536535 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066272204 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0662637 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07012384 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075281105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066842895 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.078108313 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071937629 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070758341 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071825199 seconds)
  done (took 2.916251616 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066956838 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065287808 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067492448 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061286136 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064781047 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060722714 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068661316 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063662982 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068424577 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064661148 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064591993 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064550162 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067274417 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060640645 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065501263 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063438121 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107596781 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068675309 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065427757 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065941571 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060876769 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067516865 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060840126 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061727477 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064363704 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068879534 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065987495 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063495441 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06508045 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064213952 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065231438 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.0633244 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066606464 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065681323 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064317082 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064461249 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064978276 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065106996 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060990187 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063113647 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065893068 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061151039 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065272698 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066733425 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063338489 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06310639 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06692682 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064667892 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060385042 seconds)
  done (took 4.568709632 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079954059 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108829356 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067650254 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087396619 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079051682 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074682115 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068834439 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08846335 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062951282 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063780405 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080403967 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079108828 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06502756 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069412747 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071483128 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065034285 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06618827 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064414955 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069363228 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064599288 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069252086 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07154964 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079349597 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078224562 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068824378 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064285316 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064232769 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069150516 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077536517 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069546435 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069688642 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070276745 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079708785 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070033821 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064029038 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066850603 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080237138 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065266754 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067083448 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062676126 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067281993 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069498777 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071459431 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081096606 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06538603 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070104573 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065007066 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062202037 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077696738 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067146699 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072402869 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079053077 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068557546 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06504661 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0693677 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079398165 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064736327 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063461039 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067700896 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076649004 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062607448 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068337265 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078241646 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066467437 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071612003 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078605665 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070242156 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068584041 seconds)
  done (took 6.346775743 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074395486 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072137423 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080808827 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080233058 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07147801 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071637745 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071041449 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071094509 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07118875 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07606216 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071953229 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092295766 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06722011 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074120961 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071511958 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071490056 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071779418 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071468484 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07148637 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071158867 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071739595 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078706 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07154457 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079016063 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09740344 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066959445 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071195543 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071653535 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079897419 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07143284 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078784512 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071378212 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071446253 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079152284 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078717989 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071512533 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064997182 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070950482 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071489951 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071611127 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067082024 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079569872 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071353663 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066820152 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071940572 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071631787 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079052863 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078376302 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074409147 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075950269 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071189281 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079131175 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071183561 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071459844 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079307949 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103257445 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078981535 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078700403 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071050776 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078701542 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079158406 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085198974 seconds)
  done (took 6.027714625 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081670991 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07432705 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076191212 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061344986 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063718463 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068853682 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063480148 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063311958 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073915757 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073551137 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075706395 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069229028 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072167165 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075804342 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069173912 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071855073 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068769388 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068820568 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073562973 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069101665 seconds)
  done (took 2.797378544 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073778028 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082353074 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066476659 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07180134 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068590971 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071143646 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067811076 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06821486 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066342389 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068178588 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075276789 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075313061 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066256822 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071329748 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074891184 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07085758 seconds)
  done (took 2.513558945 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.0735961 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071754206 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079035191 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065769536 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064038941 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062079065 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065401235 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061078209 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061685689 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077006802 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06520892 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067305587 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065395247 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063733585 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063035557 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068284351 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061734855 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06283656 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06493542 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077401914 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075991904 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064715886 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066099011 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065327831 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065403959 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070109859 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064696964 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062963685 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062637251 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065139639 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065631925 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06870257 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062576405 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062994032 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064243968 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06270598 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06521312 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065819814 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067872369 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064911768 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062970689 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064872114 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064896459 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066266416 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061156296 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065441315 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061855208 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067266059 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062838827 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068165582 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064845201 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06725427 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065374636 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071423554 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06751887 seconds)
  done (took 5.012301312 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079108463 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068572644 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06159116 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063618927 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068094978 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067003171 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068369617 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066398464 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066910932 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063754095 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066707158 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067815868 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066993549 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068546213 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06685442 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068857383 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061166334 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066787934 seconds)
  done (took 2.59521301 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070532682 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065413281 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07250993 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065287693 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065430155 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067154256 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06139046 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063476836 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063953672 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065340525 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06489116 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067416925 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063901927 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06720997 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065111629 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065302278 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06717746 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063745496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064913401 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061482106 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066933799 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063635146 seconds)
  done (took 2.822451568 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071798323 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091259332 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137548648 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.08352618 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080896888 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077593084 seconds)
  done (took 1.924726577 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089567474 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078530254 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066284389 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0873524 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072689778 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066981517 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066584496 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066629281 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075215258 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075311448 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067120413 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07746785 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075379782 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074065848 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072082743 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07212425 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066720595 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066799197 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06581023 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082935939 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066586518 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074933599 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066586797 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066396619 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066670844 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074274089 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075199126 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075058245 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066616301 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074707098 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071766805 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066849686 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075497237 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074950864 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068111481 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074847699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066869155 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082853015 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071973394 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074731704 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068189063 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072351867 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075088758 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072393386 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075084783 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067056352 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071308046 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066737645 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066882768 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084663718 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072088041 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074289761 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072323113 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075152277 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074892512 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085079415 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074998787 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074058398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072262752 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077525141 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074241295 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071950781 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074775719 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075461495 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072295369 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074215311 seconds)
  done (took 6.19720361 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081423132 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085776297 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067853841 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07597867 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074602748 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066798935 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066604881 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066835794 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066479125 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066381534 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106424563 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067050597 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074518212 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074612184 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067152809 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066749808 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066707588 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074568282 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066470433 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084985496 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067143388 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07446572 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074297724 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074236342 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074980471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072165479 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066743633 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067269721 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066973427 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066959362 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071580133 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066802263 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074504601 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066321222 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074392539 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066717492 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06654095 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071573641 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067399893 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072684335 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074552167 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08318298 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066726739 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066635076 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07561351 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067107574 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066539466 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066814692 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067102647 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066481627 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075333055 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075274635 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075075844 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074392527 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066794895 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066879405 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066693119 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066866071 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066987556 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072483579 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074417625 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066542584 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08513851 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067383669 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066971188 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076806742 seconds)
  done (took 6.112535214 seconds)
done (took 129.10231382 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184088281 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168434928 seconds)
  done (took 1.726953913 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068552733 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097714152 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076708334 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128362438 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066230106 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100063702 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098738496 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077798163 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065436557 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065310799 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065694171 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067695562 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130997584 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065727621 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065575096 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068371992 seconds)
  done (took 2.696552225 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095687775 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156603691 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.097897135 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064526252 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096719952 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072293029 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064199619 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074479709 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070214605 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064557673 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072641844 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070057659 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064759668 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07014073 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070593144 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072665802 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064440422 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072275901 seconds)
  done (took 2.806119623 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10036632 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090135084 seconds)
  done (took 1.584133137 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154823745 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105018715 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149041363 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345677806 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166387186 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228557885 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131609765 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128661273 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115800108 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122646221 seconds)
  done (took 3.036893438 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097195796 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149747066 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254153233 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114395901 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071983468 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093824298 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115621236 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077341447 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080060225 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079713014 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079703839 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075664295 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09777499 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072819033 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072650361 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075348027 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101856748 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071810614 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073695395 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076032216 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098203531 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065282945 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073121752 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071790144 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076620429 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076658804 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065017121 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065355389 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076426089 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.0733533 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076232005 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.0930351 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076411233 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105849599 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07001035 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106901475 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07594337 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073222636 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073205894 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073252666 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077994593 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077710823 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071282715 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07509992 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064949066 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075619216 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064680018 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065249312 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076872638 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066398005 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077168307 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076612069 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1073476 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066306546 seconds)
  done (took 5.958650986 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101287713 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104571347 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070961328 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107601768 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096618206 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070961416 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100533439 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090796111 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101764617 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092228262 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088564101 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069933086 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081671876 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082735411 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109346176 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101299768 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094952839 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070082248 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101666992 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102386423 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067953156 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093914386 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090428704 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101056851 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067156568 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070355205 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067819929 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06980632 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076413583 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077544333 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069010466 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101639668 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083641157 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077786589 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066729351 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067914173 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067597426 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078827964 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097352931 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07854408 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076994074 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067284439 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067584732 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068887413 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09026185 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067234653 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078245918 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079795354 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078681206 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069084987 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069603996 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067417588 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069152997 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078988535 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076592185 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080076473 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079542822 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067840714 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067896925 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070985167 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080258934 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078373228 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077975369 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091748452 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078189444 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067891358 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079659221 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083592888 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068530904 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069079921 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067870511 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068888454 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069098441 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077329549 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077151347 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069661099 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06913808 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068353312 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080077062 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078105079 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068025633 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076211194 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066541209 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068253018 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069390295 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069493925 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077239174 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079048789 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069784873 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06760947 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068802479 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067880771 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066602355 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075626227 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079122603 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078073463 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077874065 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068856722 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07787816 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077206087 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068774199 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078043702 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.198871674 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071235751 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070775665 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078735057 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078546476 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079490784 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070544491 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069397225 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077667752 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081325671 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06850708 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078349669 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081139162 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079045685 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068052851 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08086064 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068864295 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080075953 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070269486 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07968442 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068462444 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078608807 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068453001 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068115627 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0684728 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079325113 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070065357 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06813165 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070262619 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06932039 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08017634 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081971715 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070274333 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081401578 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078068174 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070642858 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078655949 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06929057 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079697497 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070040643 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069727264 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06847404 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082418063 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068397725 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068812697 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069455319 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080249023 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068520184 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07913204 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07878645 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068238988 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081074316 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079692188 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077616676 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08026958 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069856293 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068687411 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06830469 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069814409 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07753687 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079007129 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069791269 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068515908 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077357123 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079127015 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067054922 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07811127 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077563926 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077990538 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068389628 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069134445 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079374585 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080579621 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077511422 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077858539 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077924567 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068095055 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076617904 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077604857 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06785919 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083889638 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067951185 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082062688 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079073208 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076396812 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078407406 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08037503 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080104251 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080500008 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081847666 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067473448 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067451193 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078922628 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067293377 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068304615 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076653328 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069097614 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068937083 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081917124 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06733857 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078267411 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066359708 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076979096 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065741256 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068478524 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.215247032 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068376539 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070211323 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079262733 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069608858 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078735208 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080871674 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079035108 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06897154 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070589019 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079836904 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078692482 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069077372 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068352526 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070687202 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078465388 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078339839 seconds)
  done (took 18.733994421 seconds)
done (took 37.942190169 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207930918 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149703978 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178349691 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117504646 seconds)
  done (took 2.14430331 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121421471 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099635482 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094373949 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065029957 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102356356 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064128553 seconds)
  done (took 1.973927013 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309625742 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211873284 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181433137 seconds)
  done (took 2.127902939 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197609389 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.185807498 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392577257 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251298829 seconds)
  done (took 2.565257318 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141986953 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089577834 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067880712 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082366232 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133098904 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159833856 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10027655 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124885536 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077081831 seconds)
  done (took 2.457056277 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146430725 seconds)
done (took 12.842470105 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.200653069 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.165677162 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.193012154 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.1891658 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.099593342 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104212329 seconds)
    (7/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171795393 seconds)
    (8/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086385567 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.22091932 seconds)
    (10/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.110592647 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078769376 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070470578 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.082457585 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.190805008 seconds)
    (15/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.126361123 seconds)
    (16/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075145403 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076721745 seconds)
    (18/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074151098 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07268223 seconds)
    (20/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169522049 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.216163616 seconds)
    (22/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.151785461 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.159114748 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109393908 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120853047 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075311319 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075868424 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105243473 seconds)
    (29/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.088506393 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07622745 seconds)
    (31/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066397478 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16726836 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.108144702 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.205757067 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.081518324 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071092931 seconds)
    (37/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.167633223 seconds)
    (38/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.17421049 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169591039 seconds)
    (40/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069455884 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092991464 seconds)
    (42/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.163319117 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086066321 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129208151 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096368284 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090998549 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.19323772 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136384051 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.146846461 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.192499188 seconds)
    (51/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108666292 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094908993 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076111134 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175696536 seconds)
    (55/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.156279131 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.153495038 seconds)
    (57/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198140277 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071757353 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071551906 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086642856 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089830194 seconds)
    (62/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.156833787 seconds)
    (63/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072046723 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113480816 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184095091 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066175258 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064186364 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118585182 seconds)
    (69/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.137633372 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069888235 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081082823 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053509708 seconds)
    (73/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073955098 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.208813466 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182789654 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063176563 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.222534709 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071735505 seconds)
    (79/309) benchmarking ("sort", Float64, false)...
    done (took 0.125843404 seconds)
    (80/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073804746 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111544196 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081804814 seconds)
    (83/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.106857165 seconds)
    (84/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068822285 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074680489 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065278782 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085408361 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13505059 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068718504 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065084626 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.066122722 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097198673 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142142589 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.095067085 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064962483 seconds)
    (96/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062094215 seconds)
    (97/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.324664071 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100843129 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.176552718 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065671264 seconds)
    (101/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071227484 seconds)
    (102/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061109673 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065429234 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138612702 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086659031 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066905981 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072948745 seconds)
    (108/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193862738 seconds)
    (109/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.151511327 seconds)
    (110/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.0780845 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066743256 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.062774043 seconds)
    (113/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052053277 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065178314 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072120734 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078420885 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072926187 seconds)
    (118/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050913918 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064645514 seconds)
    (120/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107593026 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092757651 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149016337 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139182712 seconds)
    (124/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074757526 seconds)
    (125/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08079497 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051045399 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136229486 seconds)
    (128/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072652062 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099796182 seconds)
    (130/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068989799 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.131706122 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072681482 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050819997 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071136658 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085825507 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070934199 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064470715 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052454956 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131790958 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069776249 seconds)
    (141/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171219725 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071159989 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068858548 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090102047 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051273061 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071169948 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.0816515 seconds)
    (148/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107192751 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.147233377 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136898762 seconds)
    (151/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066175816 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077986091 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064339083 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050921117 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071648017 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065729541 seconds)
    (157/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051772518 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.112760028 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05097698 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064387811 seconds)
    (161/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.167353055 seconds)
    (162/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097345414 seconds)
    (163/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.154687895 seconds)
    (164/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053656157 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117934847 seconds)
    (166/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.148797332 seconds)
    (167/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052019884 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072581932 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050886764 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089050948 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071856591 seconds)
    (172/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.097588072 seconds)
    (173/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050648569 seconds)
    (174/309) benchmarking ("sort", Int8, false)...
    done (took 0.139033845 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050724202 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091994105 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064425464 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076136886 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052424037 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051721517 seconds)
    (181/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051003382 seconds)
    (182/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.182421269 seconds)
    (183/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.102085086 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065051219 seconds)
    (185/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062150289 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050786719 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065649955 seconds)
    (188/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068739951 seconds)
    (189/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060704857 seconds)
    (190/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073586146 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175857338 seconds)
    (192/309) benchmarking ("sort", BigInt, false)...
    done (took 0.180355201 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070298551 seconds)
    (194/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050164741 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.147604667 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050229647 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070723802 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065372919 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087204453 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071337917 seconds)
    (201/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05072824 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.063978629 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050116284 seconds)
    (204/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.180016913 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.050758923 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.068604942 seconds)
    (207/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.049727406 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062070144 seconds)
    (209/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069840803 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064390503 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.063707235 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.099564525 seconds)
    (213/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066117187 seconds)
    (214/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050564158 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06347769 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086490704 seconds)
    (217/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.050692511 seconds)
    (218/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.070844454 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072454334 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.070816109 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050215194 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074195003 seconds)
    (223/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070249771 seconds)
    (224/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065687182 seconds)
    (225/309) benchmarking ("sort", Float32, false)...
    done (took 0.123736158 seconds)
    (226/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085075063 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.089867228 seconds)
    (228/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.085401455 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068693292 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069982866 seconds)
    (231/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072699846 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050006667 seconds)
    (233/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064772683 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06224494 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06367683 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063525154 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051801604 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052628359 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065015735 seconds)
    (240/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.049978144 seconds)
    (241/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065921142 seconds)
    (242/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067697229 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132760126 seconds)
    (244/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051191402 seconds)
    (245/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070016624 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.098318081 seconds)
    (247/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050036232 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071710958 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052835713 seconds)
    (250/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.102781152 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063151267 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049941629 seconds)
    (253/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.049756987 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085140299 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076014246 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063094282 seconds)
    (257/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.061589044 seconds)
    (258/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070719057 seconds)
    (259/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050053623 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051115371 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062762335 seconds)
    (262/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.104561397 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068681145 seconds)
    (264/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.049959886 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06491073 seconds)
    (266/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070561249 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.082562094 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.049841504 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065730717 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07016462 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.049686554 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06164043 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.049760049 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.084559582 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.049256528 seconds)
    (276/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.050459472 seconds)
    (277/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.058558283 seconds)
    (278/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.064101657 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137977219 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.049866353 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069409603 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.085240552 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062427079 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061646695 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.083630449 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.061725254 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.091374288 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.050936536 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.086223539 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169502536 seconds)
    (291/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071211867 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.070555163 seconds)
    (293/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050558395 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051411064 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.06880779 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.062916942 seconds)
    (297/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.050615626 seconds)
    (298/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.065155285 seconds)
    (299/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06351696 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.067414116 seconds)
    (301/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.144286096 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083285966 seconds)
    (303/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.064522753 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.068728928 seconds)
    (305/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.050060661 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.049188832 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.069055149 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063037264 seconds)
    (309/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05113488 seconds)
  done (took 29.962190583 seconds)
done (took 31.401578142 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.092810148 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095192915 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076809257 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094503322 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083016056 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078925173 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075028296 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081334285 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083053577 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085340044 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081997174 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057073006 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077084333 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076974158 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077160961 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094571133 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081173055 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075018226 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075134197 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067031962 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075069033 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067961316 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069404751 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056818126 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080445792 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073983221 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074647839 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075295453 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067296094 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067556871 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070820882 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074598557 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067227829 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07906089 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073316713 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074351367 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075836419 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078411559 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069344155 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067460287 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075912349 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067559601 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074091753 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074839013 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072971626 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072051942 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07468008 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079448156 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092591351 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069493285 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075890884 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076879966 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077222145 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073127144 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07033504 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074103633 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070894737 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09230184 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074622884 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068463793 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074386994 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073714655 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071372161 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073253802 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073307266 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075773357 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075752393 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071327742 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074517077 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071208354 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066095219 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073268985 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069456709 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066313935 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075878988 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077253113 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064953587 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071759414 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072681904 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072058067 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066199031 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068312165 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067395391 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071947746 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067454711 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054930729 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069450953 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071589397 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065199017 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07394064 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072869371 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072893322 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068075373 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075741908 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06557707 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070917082 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065930164 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065603509 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068296727 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068950541 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065832921 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067863468 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074412688 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067115519 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072418482 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079850894 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065814867 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071780406 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065355632 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064999805 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079304169 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074974424 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065929807 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068255272 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064875115 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072699962 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064839414 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065608594 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065403801 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065374845 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071236102 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065658649 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067313639 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072386231 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078030678 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065359763 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068830611 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067758596 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065314726 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070681814 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065489301 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065376755 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06701501 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061959387 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067311241 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065221033 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07251879 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067338571 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072452553 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066362013 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072767355 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069560269 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071018314 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070195578 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064022098 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058550656 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067576934 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066962662 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066469746 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065469315 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066217641 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064421681 seconds)
done (took 12.650464795 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068879935 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145657018 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100218744 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095906593 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085873255 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066703725 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075932043 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102340766 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067565183 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102077613 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08717757 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084795458 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112169112 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06507392 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066335049 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069831791 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067305989 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081504209 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100815801 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087129652 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115704864 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065457221 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095404652 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089925663 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08721114 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091575404 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066761135 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069570477 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069242471 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099929888 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086179679 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069745229 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066201598 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099957091 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09223765 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08324013 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06662728 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082298257 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067159204 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06599301 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067753824 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098314545 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079643452 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080299312 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069894916 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069484973 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067188374 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083484048 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088699993 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078543503 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086706184 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10306725 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068746443 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065731069 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064626863 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085140029 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065650115 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068974522 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066276275 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069210495 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066222751 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06941383 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081370397 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081778495 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070451685 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080304127 seconds)
  done (took 6.880554753 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083301943 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090621296 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082930997 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083978292 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065982539 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.0663672 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066854109 seconds)
  done (took 2.11193004 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067220372 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08824165 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089552217 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088427271 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084488338 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087298061 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075649777 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066597034 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081028064 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068489728 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087882777 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101617677 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067154089 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073290572 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090644022 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066931093 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090101749 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066710612 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069930588 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089948587 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068382407 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082424523 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070126335 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066958488 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081177107 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066974311 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112620817 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070978192 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06812023 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069565635 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064810873 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107166204 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080851811 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075942386 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066889842 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081063838 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080664158 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06632817 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082827989 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071642055 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080894958 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067375012 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067662735 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065127886 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071120026 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076905514 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067480485 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067472179 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069502758 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086260036 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067466687 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080117222 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06972191 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068827043 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068306304 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07005263 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076471308 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067146744 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08590561 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067996328 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082773547 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082417775 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080122366 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082464943 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068662534 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079647204 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080104106 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06891459 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068027172 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069456936 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083127981 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064688994 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06769445 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076808255 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068076416 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089447245 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088749956 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067626238 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07586363 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066760094 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066553176 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066671818 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088730313 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06873224 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065906225 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070595994 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069514588 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06499987 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065996754 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06961961 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064195975 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067997205 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068827713 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068608259 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068786919 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082594966 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06837651 seconds)
  done (took 8.837980685 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068656779 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067668158 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069608026 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067470647 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068708341 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06778813 seconds)
  done (took 2.005770282 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092975255 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069243259 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081001153 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072183484 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104208677 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086949087 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08665385 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079342436 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083537128 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078842397 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086642456 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087981962 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092383399 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072660964 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086681715 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072032857 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087417949 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075598414 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078292499 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073211316 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08670482 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073729869 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073278556 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081431634 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075815952 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07230716 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067510495 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078857624 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078403174 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079433543 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072466972 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076024317 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070311199 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078375011 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086880126 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070873923 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072270007 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07762932 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072455935 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075563219 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088097929 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073189313 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074682089 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077196577 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078023695 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070390878 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076740432 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076072668 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086025757 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076676677 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076687406 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071483446 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074629556 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076694813 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069847979 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077836055 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076456034 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086212152 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071793501 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069585518 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068358451 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074623098 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077087935 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074550355 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078083532 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076798229 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069888079 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072312157 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072346886 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071462797 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076622793 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.0689216 seconds)
  done (took 7.152099069 seconds)
done (took 28.577163299 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542134531 seconds)
  done (took 2.105847041 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600176092 seconds)
  done (took 2.186534656 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.69925841 seconds)
  done (took 8.282601306 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390484147 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.477530889 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.69275878 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130535302 seconds)
  done (took 3.3255285 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.663759499 seconds)
  done (took 2.257715181 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208634659 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19774034 seconds)
  done (took 2.010371601 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374819077 seconds)
  done (took 1.961177461 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.102158607 seconds)
  done (took 2.692095979 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261058561 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167212976 seconds)
  done (took 2.019366099 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459152579 seconds)
  done (took 2.046282089 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.839422103 seconds)
  done (took 6.427993811 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214371126 seconds)
  done (took 1.850962013 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239191832 seconds)
  done (took 1.832919517 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.689885363 seconds)
  done (took 3.281737288 seconds)
done (took 43.874875694 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079000855 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080140298 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080457784 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077328734 seconds)
  done (took 1.896572967 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07606068 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072236122 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075693635 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071862281 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075298416 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071915408 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.0736062 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075960585 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071648351 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072521308 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071763882 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071899003 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074028234 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073787006 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070227959 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074037662 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075026371 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071432084 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07505558 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071721011 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070571093 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074004394 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07382389 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071256487 seconds)
  done (took 3.349347489 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077335405 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072687675 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074300058 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071016905 seconds)
  done (took 1.896027428 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076241097 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091278471 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088242681 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077408654 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091130556 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085623151 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068386583 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068611655 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072442028 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076256191 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067648741 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095097163 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086569923 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075944883 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078256808 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065402228 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067844469 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085894682 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07647164 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077286419 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069630363 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076021999 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067464919 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087291645 seconds)
  done (took 3.469289006 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07682576 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102096116 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077165822 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086334781 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088465203 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064714093 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073756474 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088296822 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121893958 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064796715 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.0694284 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06527118 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071834125 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064695674 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075576148 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103792291 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107024314 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067656944 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094851308 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064789063 seconds)
  done (took 3.235133578 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071911815 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068899221 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06558936 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068537758 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076893752 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071542808 seconds)
  done (took 2.031369874 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06773872 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067054115 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066483138 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066308283 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071227149 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066830755 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065283429 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066763267 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066124638 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066439478 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065666937 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065015844 seconds)
  done (took 2.405268465 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.418735184 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068469785 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068900696 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065512453 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069980203 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066138292 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079336984 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06734776 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089300329 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065791305 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066033567 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067792179 seconds)
  done (took 2.799310343 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204582789 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07581669 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235306943 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135774217 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110396217 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114355137 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103525989 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111392057 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141620425 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10067271 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165828953 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163933817 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105570014 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136518673 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087853568 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096824526 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1544169 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16083609 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102278926 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164322595 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14243927 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122804938 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144930704 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100169219 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10442588 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120096411 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070128462 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079289468 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169304344 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12954132 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144498941 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109433635 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09228289 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174351063 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168007851 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140603178 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133172138 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083062155 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100567007 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131906737 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197347225 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088247937 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162603825 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244278959 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081159882 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134482461 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119105498 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119673812 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106260097 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089055383 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145456455 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181855953 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13809726 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086799949 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11153758 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114707735 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115962929 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102399968 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179798456 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160201151 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126373981 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070413387 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097815667 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151107558 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130987769 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107188421 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12513065 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092481493 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132395373 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15223723 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117298142 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142892871 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126919246 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087214697 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117813998 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137941299 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126926044 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168232204 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123066995 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071693805 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123103825 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10176738 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080076198 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140367592 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074604885 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172871546 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097758936 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104988128 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111744649 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107403818 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107505242 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159895789 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142370769 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243155947 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065258449 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103661167 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.1193259 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147244057 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087063665 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108131378 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11545959 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077463032 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138684984 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074120187 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122569654 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074995663 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125007729 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130906923 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075094892 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120864367 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099835907 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099420965 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132274615 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159081105 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088222197 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081767812 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165387314 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119591561 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102986719 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142594196 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153423636 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097919809 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101487376 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147998468 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176847989 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088462179 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161127474 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105993903 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082800377 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086519004 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122325704 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110757493 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120726468 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081126959 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117210211 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166271723 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074588586 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093706272 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131327168 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077982488 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080007153 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102554861 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099036402 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09455651 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099179339 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102770528 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136097834 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121575723 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103461804 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267899291 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097618256 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168855231 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088588401 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100730909 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103059407 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069203668 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135969225 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155796968 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079266582 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163681343 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123742056 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103735222 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119033064 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082316425 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138204678 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078298231 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069452669 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143719942 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110121486 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109167399 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149953533 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103850042 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12558412 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118559972 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1335895 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132604738 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127794705 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104334826 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087224242 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110642876 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124311111 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072551117 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090308142 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07911158 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102849613 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094406097 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082068323 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141090108 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123719697 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099137829 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110724519 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095357842 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145611412 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075567003 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127223909 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117726261 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093141332 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150545775 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15032319 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129660479 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097632147 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143171447 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069304333 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073098321 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088664405 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265219528 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083055026 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083112819 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117018215 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146335946 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128159918 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138801657 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110665985 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12022641 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154050331 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068833518 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114394173 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14620874 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121441821 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102660884 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088771981 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09777381 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140681524 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107641423 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179613792 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11268698 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125301944 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151187107 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102858791 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078939559 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101959489 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134489573 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10326799 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14327318 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099005056 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087022554 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109884288 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073923699 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098564573 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125328263 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117950021 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134068268 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113037049 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131175711 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07624446 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115722207 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119306176 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121429393 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063358634 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119080202 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159474623 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092272659 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117147153 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151382018 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078648694 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122658993 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319245149 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144806334 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084093609 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10911526 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117341642 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12661556 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11883471 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139888777 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10737836 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133622802 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108183049 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084220327 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086094461 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095826398 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104054498 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094182504 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107989671 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112838131 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093796353 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131317772 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10316887 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107698119 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116936172 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095700655 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089098519 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096310843 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173292171 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118781065 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168541712 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098716674 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14378917 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163087433 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073851411 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078106522 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077231342 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138592948 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082541195 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129627621 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096664237 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104539766 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122899926 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140811214 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09385736 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067778372 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107099975 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132883695 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11076981 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097419105 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10339112 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160910147 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09887978 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078966681 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11249064 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103528721 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101147978 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170139531 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.202786528 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097605625 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075394161 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080378457 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127242272 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153191485 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079628623 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10161475 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118111127 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109966442 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12706197 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101203594 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09871272 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113334742 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149041589 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127829123 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089455797 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112203323 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127825508 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155310927 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104497505 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09481371 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170043924 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150724367 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158659358 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087479189 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129692056 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115866616 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106749274 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137463369 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083133487 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161800347 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080581064 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134604463 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103266477 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089317829 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128368778 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097965212 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086669083 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146164032 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116075344 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081663669 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076989488 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116471655 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118934787 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105559804 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074821377 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137429523 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071898305 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130358879 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166177484 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080117283 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103283751 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238905478 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079295444 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107380062 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103410473 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088519611 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096941015 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171947882 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087798105 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148365335 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140854636 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112756244 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136777688 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09884059 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634875182 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077005442 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150892706 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115820399 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17117235 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09656903 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116434667 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107414445 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122569372 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14357344 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104122436 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176034585 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131128378 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114603702 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078457122 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101719201 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101724139 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087698924 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103520089 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112330968 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114245541 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092298696 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114685819 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12174915 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080939717 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094368298 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154358511 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118327082 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14272654 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13912854 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08412906 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116419218 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137316465 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078950499 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120624096 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150172518 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104753812 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096499382 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079027299 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246013177 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168690932 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072378133 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162273194 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118958387 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108290887 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113115387 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114427249 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131317108 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106326074 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121671175 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09303161 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109114078 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111642233 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081557041 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07639036 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102463879 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1113717 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096592899 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098465416 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096129963 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149584074 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070727635 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094204108 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102731371 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143233616 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174669125 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088050707 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08264212 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118687259 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110976391 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112458926 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119380867 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078491447 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081172836 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080550522 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076910969 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107153102 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110758723 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10310619 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110031575 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162684545 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081361486 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224941709 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09415091 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103186758 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069236684 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077461412 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094520332 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096430179 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107097243 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099811676 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169013694 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093581722 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088698394 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091451332 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072062779 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082037322 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126313107 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254387085 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118217047 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097082118 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062275782 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108875459 seconds)
  done (took 58.421537125 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106801668 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081723408 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096178008 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148828561 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121710684 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210873222 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156501551 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19883047 seconds)
  done (took 2.83967105 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066855447 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092411357 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098770783 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081225668 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065969187 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068323508 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223220203 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080115716 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065667263 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087222545 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078423384 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069157559 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421276156 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06562462 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067184426 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061893377 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066554986 seconds)
  done (took 3.468897362 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.361414982 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.363792654 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.36933282 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07234481 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.816448189 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088946187 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.077512661 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095661308 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070641138 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.267425755 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.695686528 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.093006433 seconds)
  done (took 14.090351563 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075405308 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069540228 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083030649 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082740746 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071808079 seconds)
  done (took 2.096760696 seconds)
done (took 103.632400295 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078611541 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.388437335 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053398333 seconds)
  done (took 2.184124406 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08117062 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083733516 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084351656 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081995148 seconds)
  done (took 2.055163107 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.072837222 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075080507 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.082936468 seconds)
  done (took 1.949696064 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222277732 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137444248 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08554089 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08121091 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077079233 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077444295 seconds)
  done (took 1.955408271 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071039443 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074194817 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072119374 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075448696 seconds)
  done (took 2.005197438 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075189082 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051835219 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055006815 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055184183 seconds)
  done (took 1.950792066 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085654366 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077885311 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078027739 seconds)
  done (took 1.955561999 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105278194 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084267425 seconds)
  done (took 1.904202402 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080497461 seconds)
  done (took 1.79667899 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09751759 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11217033 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127662346 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107755411 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13486881 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107715798 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08485521 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086239165 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076327201 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085985732 seconds)
  done (took 2.734483649 seconds)
done (took 22.729078125 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078349059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.360056483 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359220676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089619635 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66873172 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355679676 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.001727889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091416582 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112394215 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066798346 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082921731 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6482733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.955010276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318857235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.94298811 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.313200157 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649592245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068041961 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066957287 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067407473 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985457508 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066644087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066847932 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067583532 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646644174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370140323 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067403671 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.314174558 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067494815 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069055295 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354471846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067692015 seconds)
  done (took 16.141907028 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069733743 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116414439 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073611146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083223869 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069797706 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06896496 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070571242 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068475952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118599103 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06808592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083788819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067296727 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071302856 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068117791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086177125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067159431 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068087975 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067881282 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067546551 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067407021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085306427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067055933 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067459013 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067877709 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067421891 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078825367 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067496873 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067465137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067355618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069855902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070353889 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068245355 seconds)
  done (took 4.093746096 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114270547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12416614 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073880814 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101865171 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110847678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069428302 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141564303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092017883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126304302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067584964 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084071694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067991319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099873155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068153351 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087062626 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067657398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069236949 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067944265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067995601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068050997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086117943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067313694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067755745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068367487 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068060723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080732729 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06825598 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068033586 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067654393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069569345 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071006765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068312312 seconds)
  done (took 4.348095661 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07187216 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07436112 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081689555 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082996124 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069056281 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07104488 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072318049 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068953536 seconds)
  done (took 2.323695903 seconds)
done (took 28.627577741 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078017504 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068418054 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071573844 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079673285 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072025464 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078910573 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066627606 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073887516 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071070068 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072171322 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074279535 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066862745 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070468389 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067153613 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07349279 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067059583 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078380979 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071693703 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079142162 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079217847 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069353367 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072049238 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073307296 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078296629 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078422276 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078290221 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076796878 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072003615 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068501047 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069615341 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076109006 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082798838 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068470235 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078917164 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067420318 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066903629 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071083657 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067189139 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07925977 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07560612 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068878914 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075167714 seconds)
  done (took 4.783450626 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086557837 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090370492 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083659663 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061408402 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066917959 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064227435 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087960162 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059484874 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059357263 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087088533 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05549313 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05882967 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061784191 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053684746 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058960932 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056169095 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060929482 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055610351 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05887623 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059281343 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057779006 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053881393 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059688627 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064311954 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055855318 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061351551 seconds)
  done (took 3.422305486 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.0729644 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082913588 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086842151 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125392533 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102645158 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076527916 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076871504 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091429007 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084361054 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066826593 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070599625 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092745838 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098217971 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073372245 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066846521 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084147825 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081781667 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068594721 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072546719 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089966331 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08369287 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082989668 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091660578 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080214833 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066291087 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069107068 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070617276 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080739885 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071667346 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075601662 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07061532 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070120571 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068991379 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077902684 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070908672 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068278962 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089777543 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075732897 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076954681 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066971973 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070557221 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067692657 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088300593 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.120993142 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066430136 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073284405 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074327588 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076117538 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066878474 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08496787 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077914575 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066669267 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069761849 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066069981 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06694949 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079642975 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06869364 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068980265 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075737464 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070168473 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08457811 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070767393 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082145932 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066452601 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074197379 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066179715 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067929958 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065977019 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091763719 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068137292 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107155663 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067913072 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06749498 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075352899 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074429784 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072700702 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067148564 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082892272 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077005745 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070431804 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075092991 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069801496 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070071537 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086916758 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069035588 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068088519 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067759004 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072940694 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069717202 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068415017 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079561328 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066925963 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069722805 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083398233 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06659591 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068065189 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072882042 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071632926 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066246371 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077826098 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071855404 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067828824 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075736198 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066876127 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069405594 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076662352 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072791419 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066240116 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070925275 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072889297 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067438691 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068020644 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069978806 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068328364 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074742011 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072958273 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071003317 seconds)
  done (took 10.566297576 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161640277 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151447503 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069720237 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143179772 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075318801 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07817657 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145757834 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093262579 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067647964 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067964339 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067963436 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108804394 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104934285 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114484991 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077788297 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067186498 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082477616 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112623438 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14747518 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141637165 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082790024 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075871352 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069014894 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068158286 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070446216 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077417079 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084684282 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075727923 seconds)
  done (took 4.443527609 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080313306 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096101429 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072980673 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088925684 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090553099 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066964408 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069248604 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069018027 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079810605 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07817494 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067074679 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073077867 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074687082 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07103167 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068154512 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.0738813 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074141562 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068596174 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070282436 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072144674 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077416866 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079802333 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071078183 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066698602 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073443908 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066462226 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063840878 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083594209 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067572139 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089062513 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065307577 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07431568 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081053706 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068060344 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067035288 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067374525 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067131591 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066694863 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068852633 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065689647 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065493346 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057444783 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066016915 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078580291 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07339731 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05645058 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071579266 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071920329 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071617474 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065009508 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069946767 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069965834 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070805023 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073961933 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071987419 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072276941 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068181289 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065042462 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074793245 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067022215 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064266214 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06588744 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071367117 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065229314 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074577 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071720309 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065798662 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066578051 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068969656 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073040677 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066808584 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069887869 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064650378 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068853497 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071153726 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068452169 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067792362 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06546106 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06655898 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066865891 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054847932 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066906944 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053274626 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069989308 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064862316 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065507475 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066872296 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071422635 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078826707 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068019096 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072409916 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067878405 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066170708 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069740678 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059631738 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069694806 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081958794 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081609302 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067084306 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064918252 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080873415 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07155358 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065883919 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055914612 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074484949 seconds)
  done (took 9.151577328 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093892174 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087335178 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06937197 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082692973 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.08995218 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085675587 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074005903 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075910987 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068696756 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081545766 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07325309 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075612478 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067485292 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076777225 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092168866 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076133656 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069166372 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076038488 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071151374 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099950957 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08204906 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081309002 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074738905 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067293508 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075022923 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079579868 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088173166 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079196827 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077503806 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074733395 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079144756 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088192161 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073872201 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071495475 seconds)
  done (took 4.454620658 seconds)
done (took 38.54838693 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.812970775 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.065277659 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.804522145 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.182220095 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.884023682 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.935817327 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.848445089 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.796598244 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.010335238 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.842647094 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.027956984 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.842105384 seconds)
done (took 65.795297547 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.821235421 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.93767362 seconds)
    (2/2) benchmarking "String"...
    done (took 2.067215377 seconds)
  done (took 5.742278811 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.087167757 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.328263546 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.042380565 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.794717921 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.798930248 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.104526633 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.607234842 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.319129251 seconds)
  done (took 30.732473613 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.096418107 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.004047767 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.520551226 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.569009017 seconds)
  done (took 15.980710276 seconds)
done (took 64.187677762 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.820910951 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.790388594 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.818962393 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.775073552 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.848205254 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.796283044 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.907034361 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.02653361 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.787209097 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.779215256 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.787013278 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.217102925 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.794611481 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.894626784 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.792598445 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.79792485 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.846050909 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.219497311 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.943116009 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.797601067 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.804247083 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.817571609 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.789898228 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.799026551 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.815844566 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.78719642 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.228594032 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.798774458 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.40647037 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.788834358 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.81389135 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.07785632 seconds)
  done (took 205.100700132 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.783414644 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.663843414 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.726793366 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.789133789 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.115285033 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.982083712 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.922091733 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.207754978 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.78692977 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.787752319 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.916758952 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.786160519 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.957835676 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.735358454 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.802388612 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.786724616 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.947500756 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.980642212 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.798023547 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.054315922 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.78409383 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.791344827 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.738162591 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.911715197 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.816056684 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.865368487 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.960391543 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.819932957 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.979250689 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.918792046 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.787819939 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.79841297 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.011705473 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.657217202 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.802851437 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.797134138 seconds)
  done (took 169.696975849 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.933147027 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.782477328 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.783340928 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.782620412 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.784897908 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.795560245 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.78279908 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.913838827 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.913927934 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.240490949 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.049876291 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.835553028 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629849864 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.784343644 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.853077655 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.797831967 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.785230711 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.800261294 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.810904525 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.786676254 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.78436647 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.911784504 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.796338414 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.811336838 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.791378925 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.785268463 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.790424584 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.153962979 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784169574 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79081172 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.045772522 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.785552475 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.783094747 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.684472121 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.446896004 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.793191196 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.866760475 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.786058058 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790805658 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.784223298 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.004816425 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.785662352 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.785068627 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.788296434 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.960592627 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.784304051 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.912134448 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.786208653 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.281803334 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.786074476 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784423192 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.796995615 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.475201342 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.7857862 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.78639206 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.788618724 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.78688797 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.78623806 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.792725261 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.868169591 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.860991647 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.788292541 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.790105024 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.792245345 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.786955314 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.866471341 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.786935395 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.249721626 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.845389398 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.898700512 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.908756713 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.789084982 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.853776626 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.881462465 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.787288169 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.786160571 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.786064209 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.78732592 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.867399461 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.787628986 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.78730186 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.909080542 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.794553874 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.788741826 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.838052021 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.856659908 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.788474768 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.682836602 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.787788054 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.787671292 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.094763288 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.788197057 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.855145508 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.788295486 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.788226934 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.788675849 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.910853017 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.910578641 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.568643473 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.79022925 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.899374386 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.820076558 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.923657486 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.789958389 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.974545993 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.790305149 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.870282228 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.793303199 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.790423454 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.788421063 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.820621359 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.789740945 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.850224297 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.789520371 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.15864621 seconds)
  done (took 401.397684574 seconds)
done (took 779.923511684 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.467707642 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.428777435 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.537065916 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.446640568 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.427421128 seconds)
  done (took 14.039769812 seconds)
done (took 15.771897518 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.87558568 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.881050757 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.813972696 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.878334333 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.809246533 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.878012144 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.85905442 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.815115941 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.845830003 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.814727344 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.846108875 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.813814689 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.802038614 seconds)
  done (took 25.664585061 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.025261315 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.028133659 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.861304924 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.030111281 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.83805501 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.020472779 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.953180422 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.942645645 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.941253572 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.80669994 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.802176213 seconds)
  done (took 22.981645279 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.025164964 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.026679725 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.865905444 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.026993823 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.839604357 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.024041423 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.953647337 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.943156487 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.944867984 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.80717989 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.802599218 seconds)
  done (took 22.992411469 seconds)
done (took 73.370484311 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.79870587 seconds)
  done (took 3.531176249 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.820108877 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.959240187 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.80461292 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.802280853 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.800703539 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.806093246 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.802347106 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.799417796 seconds)
  done (took 16.328932339 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.795266683 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.796053849 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.798658817 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.798321449 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.796496376 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.79560121 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.797783944 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.795552557 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.795675156 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.798172405 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.79834165 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.799110595 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.79565687 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.798367325 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.798396674 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.795681538 seconds)
  done (took 30.487249846 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.799001158 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.797510778 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.797707438 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.797684729 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.796562327 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.796609938 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.798120115 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.797039163 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.798352813 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.797565501 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.798055678 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.79618634 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.798275131 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.797965005 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.796552449 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.797857255 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.797965498 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.796191988 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.801668209 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.796664078 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.797894007 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.79786231 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.79821912 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.798050901 seconds)
  done (took 44.883345666 seconds)
done (took 96.963723372 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.506984537 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.244554576 seconds)
  done (took 8.486026745 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.800585857 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.799980688 seconds)
  done (took 5.372286067 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.800539592 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.799662481 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.800389287 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.800603061 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.800503924 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.799312512 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.801115103 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.800270859 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.800591696 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.800005098 seconds)
  done (took 19.738574901 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.801096146 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.801007292 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.798613158 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.801097803 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.801037041 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.797799818 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.801048602 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.800752424 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.800533355 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.798193791 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.801970756 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.798461509 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.799934235 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.799786418 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.801980652 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.799772127 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.798510082 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.798864401 seconds)
  done (took 34.137265116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.801797886 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.801235513 seconds)
  done (took 5.340516755 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.800366444 seconds)
    (2/7) benchmarking "second"...
    done (took 1.799124647 seconds)
    (3/7) benchmarking "month"...
    done (took 1.79889809 seconds)
    (4/7) benchmarking "year"...
    done (took 1.799290331 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.799494795 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.800361838 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.799477254 seconds)
  done (took 14.334427699 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.803422335 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.96260494 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.031059847 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.492943771 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.804017895 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.805765838 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.737339625 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.80527041 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.807284417 seconds)
  done (took 19.987746119 seconds)
done (took 109.131882475 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.613462624 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.799086907 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.169309881 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.905777791 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.815673078 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.096067208 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.842141249 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.027602889 seconds)
done (took 43.006932747 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.889209187 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.412429162 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.420077388 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.723791709 seconds)
  done (took 13.29478044 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.782975539 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.312495692 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.835009044 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.392304779 seconds)
  done (took 20.07933285 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.167091802 seconds)
    (2/2) benchmarking "read"...
    done (took 2.154919185 seconds)
  done (took 6.066013858 seconds)
done (took 48.069519471 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803465923 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.801498956 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.804340978 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.800708558 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.803540414 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.803233175 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.801483578 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.802032189 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.804225751 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.804225355 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.803360604 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.803900905 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803293218 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.803700109 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80076531 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800988734 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804031431 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.801264052 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800418381 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.801522186 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801911911 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803704718 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.801432836 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.801582661 seconds)
  done (took 45.000899204 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.803001252 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.802569719 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.803700765 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.802583938 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.802141598 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.803918325 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.804233965 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.802651589 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.804639287 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.804949391 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801729188 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.802417038 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.804883189 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.802250565 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804535582 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.802302492 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.804715688 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802819986 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804661448 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.802252399 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.804945955 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802091648 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.802847218 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805097594 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.802125128 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.802974367 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.806081799 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.803661686 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805483241 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.802637045 seconds)
  done (took 55.846281959 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.810287773 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.812408511 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.805988595 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.805290065 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.805828718 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.805242257 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.806154113 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.80567435 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.805906809 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.806474319 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.806383591 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.805862905 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.805800417 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.805289571 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.805979788 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.806966609 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.807530765 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.804719939 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.806390067 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.807108776 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.806599782 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.806370775 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.806781091 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.80711075 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.805316629 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.807074299 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.807885199 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.806056596 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.80672254 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.808134305 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.80699541 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.808212454 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.807923544 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.807554914 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.808223753 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.808762707 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.812309671 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.81302456 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.807439903 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.807752675 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.808117762 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.807326214 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.809156357 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.806666096 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.809294362 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.808531645 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.808797243 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.808237235 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.808718724 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.807685388 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.809194901 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.8086408 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.808033275 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.808771229 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.807824866 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.808456503 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.808483273 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.810203602 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.808587271 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.809241837 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.808467878 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.809194739 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.808704215 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.807119258 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.809498978 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.808885116 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.808150806 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.810270085 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.809021996 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.809187432 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.809302686 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.808704229 seconds)
  done (took 131.906588459 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.808337055 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.806379567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.806108417 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.806878744 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80638503 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.810634926 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.806452717 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809214886 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806894422 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.808639915 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809962121 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.807866403 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806819818 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809916101 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810186998 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.80604633 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.809362043 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807564783 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.810124639 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.812091431 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809894848 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.808329494 seconds)
  done (took 41.527999643 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809466961 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.812593249 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.808356737 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.809693637 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.808321826 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810156046 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.810757846 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.812461968 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810004697 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80743625 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808462942 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810421713 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.808023899 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808255518 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808353833 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.808189565 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811070052 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.809010236 seconds)
  done (took 34.31633681 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.808128482 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.809283442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.809568055 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.808730143 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.809995073 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.810983979 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80856836 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.811253164 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.811905689 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.809389037 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.811196555 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811178044 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.811986075 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808966904 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810916708 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.809662902 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.81134287 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809738702 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813859012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808629781 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.809895754 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812999595 seconds)
  done (took 41.574234539 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811633831 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.8124482 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.810175637 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.808353519 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.810083548 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.81258306 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.812085081 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.811409415 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.812549899 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.812499129 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811302534 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.813185471 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.811337057 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.811825283 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.81188373 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.811205999 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.81304488 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.812657876 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.814016256 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.811748084 seconds)
  done (took 37.983669963 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.816273532 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816169387 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.817045452 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815953345 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816339901 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.815288149 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814144264 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.816076373 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815546225 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.816343909 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816152563 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816234952 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816748231 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.816236065 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817464554 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816417767 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817450754 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816891159 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.816651012 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.817880323 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.816781344 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81507748 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.81689669 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.817773465 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.816766449 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816199172 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817576705 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.816663746 seconds)
  done (took 52.610214396 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814347181 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.814810128 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.812555299 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.813236183 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.813103495 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.812865547 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.812025569 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.812463468 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.814187968 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813334933 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.814653323 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.815848812 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.81565622 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.8134655 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.816088132 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.814627251 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816834278 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.814527155 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812769737 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812509908 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.817216575 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81570549 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.818322205 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.813171597 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811507835 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.816373444 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812750324 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.814455837 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.815917237 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.814089474 seconds)
  done (took 56.179679803 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.835305955 seconds)
    (2/2) benchmarking "in"...
    done (took 1.834393325 seconds)
  done (took 5.419631261 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.81411549 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817794699 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.81753893 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.814496667 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.813733258 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.818255945 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.817335158 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81572068 seconds)
  done (took 16.278495585 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.816806263 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.816037636 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.816489259 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.815667978 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.817886749 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.8201455 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.825016498 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.817803421 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.820521064 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.817173339 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.823522398 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.82579651 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.821604229 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820623805 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.819007105 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820163588 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.817727722 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.819108555 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.819813823 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.820847374 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.818805258 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.822433346 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818805715 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.815757175 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.820236562 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.831467942 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.824301562 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.817076136 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.820446778 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.825177993 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.82021541 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.81645158 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.820833847 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.821737749 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.816797631 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.821031192 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.828750474 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.821230748 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.825400779 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.823014057 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819394371 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.816601517 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.821598874 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.823575226 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.820612695 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.820954381 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.819925815 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.816014865 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.820305885 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.822368913 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.823593049 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819513397 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.818529561 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.826972628 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.821788274 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.828834536 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.822657879 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.821518421 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.828589467 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.831962133 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.834938364 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.8272852 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822728439 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.823798865 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.831562413 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.845061102 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829058321 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.815733995 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.8187003 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.819750153 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.829973142 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.835215289 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.828480035 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.822626024 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.823558596 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.820443674 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823270478 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.818945071 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.830228225 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.825894469 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.822594174 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.823647993 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831579302 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.843312602 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.822189645 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.823059131 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.824444236 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.825025897 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.823049428 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.833072411 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.823199776 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.819410233 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.823109435 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.824444156 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.825627805 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.823930706 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.82204686 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.824700571 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.822145769 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.820720483 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.825365191 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82504572 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.832289702 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.823565245 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.824152833 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.831194784 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.823592048 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.822554883 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.832462106 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.823079043 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.824097403 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.821834476 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.832029605 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.819023191 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827319032 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.830768594 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.823560312 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.825367914 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.825489014 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.821925332 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.832311757 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.846611709 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.822781713 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.823244268 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.830317943 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.836353812 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.825315823 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.829278426 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.823591071 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.820928215 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.821308305 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.825279849 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.82410192 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.826945518 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825813401 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.827722599 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.822686017 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.82496912 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.825249982 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.826768193 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.827798676 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.82710065 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.827044896 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.83023868 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.826800033 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.828385209 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.832551993 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.824330576 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.828589078 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.826749154 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.821913317 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.824698126 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.829604992 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.827487915 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.827542076 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.827636068 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.826046409 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.827408046 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.824026339 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.824790164 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.824989279 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.826057445 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.82953155 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.826685627 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.831207391 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.823642691 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.821747063 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.82548971 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.826326144 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.827877872 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.826311984 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.824317861 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.828946996 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.834897675 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.82705909 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.828626531 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.832053667 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828445921 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.827343057 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.828895471 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.829922174 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.833624625 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.828922636 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.835173343 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.827966806 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.826480342 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.826585054 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.827512604 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.828311524 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.831831997 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.831129511 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.834143841 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.84197381 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.836818209 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.827128952 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.830904134 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.828318175 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.831903758 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.83247039 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.829237648 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.827042459 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.829213592 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.827706029 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.828989412 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.831428825 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.830014626 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.829976401 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.82721528 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.828564029 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.83019021 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.827380532 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.828230786 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.831712979 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.824601417 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.828835902 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.829975556 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.828852335 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.825063942 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.827760614 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.828897566 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.828517209 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.831259465 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.839934519 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.825809923 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.830487045 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.831005519 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.829872002 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.82827228 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.828762409 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.832427879 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.828948212 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837413073 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.831371476 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.831597789 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.838566781 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.829962112 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.829394496 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.832687321 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.830236025 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.827085123 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.833135161 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.839620975 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.829999722 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.832196523 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.830752379 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.83330636 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.830474743 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.838676825 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.827723181 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.830464757 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.830733048 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.832408548 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.82871436 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.832458778 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.832963716 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.831139075 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.8329737 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.832326685 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.83145053 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.836284453 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.833480395 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.833138968 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.832189552 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.832811683 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.839481669 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.839054594 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.832738391 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.835109452 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.83113181 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.834250607 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.83106999 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.833508396 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.83030647 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.847799334 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.840414328 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.841479535 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.836038001 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.832209602 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.838041281 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.83416251 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.838023332 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.832947299 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.832879745 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.833175956 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.831988103 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.828809692 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.835482399 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.831615691 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834294873 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.833935997 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.834034407 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.831237098 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.833346576 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.833683105 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.83435182 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.832859415 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.832944651 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.832721195 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.838925185 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.835863405 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.832839387 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.834527073 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.841588986 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.835230093 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.835474903 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.833783461 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.832884648 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.834398186 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.835124656 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.83439785 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.835645641 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.843179134 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.836098952 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.845739432 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.833698784 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.845911915 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.834521096 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.837608997 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.840936278 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.829709813 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.832326508 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.835132282 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.834100009 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.843335173 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.834329539 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.835005653 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.839612434 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.835303069 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.835905672 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.833953229 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.834932323 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.835953228 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.835290384 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.843424358 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.834957049 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.838210786 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.838564245 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.832127378 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.835972911 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.834235176 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.835570849 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.841296412 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.835595502 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.83790905 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.835485428 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.835665955 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.83517465 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.835649311 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.835014706 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.833734924 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.835315675 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.844462837 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.834385206 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.840841279 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.834206872 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.847974434 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.837596882 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.845318806 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.83864721 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.836283601 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.837410595 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.835819571 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.841915871 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.839282254 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.838813311 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.836310275 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.838568531 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.841008057 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.836853228 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.840988591 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.83928624 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.838160155 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.836533401 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.846832981 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.859720208 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.838030886 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.840073482 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.831324808 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.838441246 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.842141235 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.837854978 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.836764628 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.839888895 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.84464214 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.845718891 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.839109754 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.838982561 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.838857898 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.839463643 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.837537437 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.837906654 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.839329668 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.838035669 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.841954353 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.838635722 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.845221162 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.83690041 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.840062643 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.840996777 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.841994297 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.849626599 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.839882809 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.840359536 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840370937 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.838308929 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.842013092 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.838878753 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.841220793 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.841851996 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.839212391 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.840478823 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.846657106 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.844344467 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.843195838 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.840391174 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.841489645 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.841100883 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.841331731 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.841657259 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.840944007 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.841765353 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.840864859 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.841510754 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.842522643 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.837751971 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.838246913 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.841072323 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.839463305 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841171182 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.846326971 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.842802671 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.83629509 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.838929757 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.840304814 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.840708655 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.840974047 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.851421042 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842839567 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.850166821 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.848741333 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.844905182 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.841622322 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.843842426 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.849097735 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.838799022 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.843265401 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.842516003 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.843983816 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.841085534 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.84493992 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.84314034 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.849251153 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.842114537 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.84233822 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.850844055 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.844091746 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.842226131 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.844669007 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.84622311 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.842697234 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.839588971 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.841206769 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.839317828 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.85010988 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.84388735 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.843130146 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844095267 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.840879189 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.844518139 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.84678282 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.841688459 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.845779488 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.839078144 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.843198145 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.843607468 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.842927843 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.838449271 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.84256779 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.843391287 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.846386326 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.849978006 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.839730306 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.845646435 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.843636707 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.844402109 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.843835543 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.842617839 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.839102184 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.83888294 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.845131426 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.844442701 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.84527675 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.84636412 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.843829267 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.844278225 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.843501465 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.844614206 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.846164577 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.853361888 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.849483754 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.840323175 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.843655852 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.843982554 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.848458693 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.845695397 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.845602938 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.846369431 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.847022098 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.842689242 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845758079 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.843619714 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.847279643 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.861213714 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.843674578 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.845480851 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.844607922 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.8514073 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.844085998 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.840886524 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.844860123 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.849699411 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.8482288 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.854302772 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.847298524 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852548492 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.845900273 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.847388381 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.848736869 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.848725658 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.854004787 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.849617185 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.84744025 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.847266781 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.851756602 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.863457471 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.845862181 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.855209547 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.879272006 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.846741453 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.847650083 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.847682467 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.845313984 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.848011265 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.84959836 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.847282499 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.846007721 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.845837892 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.847739567 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.847920583 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.852826246 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.848436131 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.846177198 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.846160093 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.847225599 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.850978895 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.843431137 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.847789821 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.845914269 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.848330041 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.848025521 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.848444653 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.847959567 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.862417623 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.858620684 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.846420187 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.847985177 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.843692846 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.85241744 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.849981911 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.857686442 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.852686716 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.848798367 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.849971056 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.849546721 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.848701133 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.845616488 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.849114168 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.848432184 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847205658 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.844401299 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.862724495 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.857110608 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.854212693 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.849474347 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.849332147 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.848879051 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.8514834 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.850125053 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.851340172 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.852951353 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.849117539 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.853105559 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.847588573 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.848584952 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.851905643 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.855191266 seconds)
  done (took 1095.719218191 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846353448 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845706872 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.84546703 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.846050778 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845918019 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846986494 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847026691 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.846471469 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.845979465 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.846302382 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.845918084 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845883068 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.846684891 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846946556 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845906262 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846543412 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846606341 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.847500699 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.84605684 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846443573 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.847341648 seconds)
  done (took 40.55711955 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.850057818 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.84650481 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846885916 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.849338725 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846664248 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.84879379 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.845714948 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849369682 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849996047 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847040101 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.850869981 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850098215 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.848253775 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.848011961 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847849825 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850703582 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.850569485 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847113868 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.850537735 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847778602 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.851006732 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.848071914 seconds)
  done (took 42.454783787 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.853495708 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.853772351 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.851718491 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.848361684 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.850681232 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.848813083 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.853421991 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.8501658 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.850398118 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.854331841 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.852004864 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.852886142 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.858125575 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.855056251 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.85771214 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.850839406 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.995385405 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.853447154 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.853194751 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.852895746 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.849576278 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.859667816 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.849534759 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.848873916 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.852159343 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.854268647 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.852636889 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.851148084 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.853493051 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.853768006 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.857786947 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.851614525 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.852136422 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.855043818 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.853506041 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.853747488 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.85627332 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.855111003 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.850141797 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.853011172 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.863353456 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.871111563 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.855194247 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.862297441 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.853660093 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.853772329 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.857531359 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.862868393 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.850297576 seconds)
  done (took 92.777010949 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.853044292 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.853393575 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.851268095 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.852795597 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.852694195 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.853011679 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.852851758 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.853142808 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.850621846 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.850197895 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.854287719 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.851266038 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.852020593 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.85400367 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.854491545 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.852345909 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.852193501 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852381316 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.850771235 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.852516476 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.851952474 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.854565978 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.855432705 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.852330754 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.855154987 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852237018 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.851505661 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.855285759 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.852015477 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.85223215 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.855598552 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.854238933 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.855621769 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.852765721 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.852558542 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.855541038 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.855309163 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.852248563 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.856007351 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.852869338 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.856023688 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.856154586 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.85586169 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.855621785 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.85334437 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.853840906 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.853241166 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.853114423 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.853508481 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.855760781 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.857248914 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.854030667 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.85731811 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.85441271 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.856724567 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.856339422 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.854252004 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.855077726 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.858629787 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.854617931 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.855033197 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.856532275 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.855359696 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.856433732 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.856829569 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.85494582 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.855079963 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.857816451 seconds)
  done (took 127.868082658 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.860038484 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.860590288 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.859533486 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.859321567 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.860821382 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.860533829 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.860264532 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.860332852 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.861082402 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.859236905 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.860521847 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.857203444 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.859569875 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.857479725 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.860352677 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.85934628 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.859686465 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.860243614 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.860150431 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.860083617 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.860101325 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.860690971 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.860846536 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.860761932 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.860878817 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.860149645 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.859483121 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.860071136 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.860280037 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.860445952 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.860115962 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.860185895 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.861309214 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.860176213 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.861561588 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.860774362 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.861648064 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.861976407 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.86223295 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.860775852 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.860864478 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.862276938 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.86135629 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.860690994 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.86168677 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.862190642 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.86158161 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.862307519 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.860501179 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.860642782 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.862637434 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.861995747 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.86152041 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.862234182 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.861804777 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.860955474 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.861474734 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.862285771 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.86187732 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.860754484 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.861761638 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.859433076 seconds)
  done (took 117.157173288 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.859806937 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.858951289 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.857233128 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.857605679 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.859656782 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.85694223 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.860086187 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.85957993 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.859825811 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.859390375 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8604436 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.857874856 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857467027 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.861605724 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.858240448 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857911107 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.85950823 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.857958328 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.861048707 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.85724836 seconds)
  done (took 38.971957731 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.858414501 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.861083914 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.860043814 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.858518207 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.861161117 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.858021032 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.862843004 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860128944 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859286294 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860106773 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.861011341 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.860993143 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.858361763 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.859496065 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.8607825 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.860187546 seconds)
  done (took 31.555614517 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.86011865 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.861510899 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.862971637 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.864177951 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.859496858 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.85870529 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.862273043 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.85976951 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.858109032 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.862303937 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.861885544 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.861948892 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.863783175 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.864942224 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.860523691 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.862121189 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.85971389 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.859116982 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.861800225 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.863635672 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.861528782 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.859302184 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.863787929 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.863352923 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.859627746 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.861167534 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.860588172 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.861051406 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.862815223 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.862978634 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.863028449 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.861893108 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.86077935 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.861112299 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.866210132 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.86193057 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.864046028 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.862148647 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.864170057 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.863757703 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.863659335 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.861502764 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.864466931 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.864401938 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.861215564 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.863118806 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.861629927 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.862392777 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.861772047 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.861934416 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.863966343 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.867684889 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.864510009 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.865067891 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.862471519 seconds)
  done (took 104.220695002 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.865521087 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.864235505 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.861946242 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.864689165 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.864956295 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.862448134 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.864624196 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.861294105 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.862284916 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.864614192 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.862984693 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.865385299 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863754264 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.865971108 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.863662328 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.865678377 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.863690374 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.863539114 seconds)
  done (took 35.349646656 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.864013966 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.865148495 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.864572777 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.863312791 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.863519077 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.865116797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.863759148 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.866289837 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866054789 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.863590212 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.862502811 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.865518505 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.865599585 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.864752037 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.864056953 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862915476 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.866583527 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.866536666 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.86275974 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.865090698 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.866751127 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.865524431 seconds)
  done (took 42.822752016 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.867291868 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.866915715 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.884620889 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.910504141 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.899720229 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.866829188 seconds)
  done (took 13.096253827 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868253704 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866828066 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.864810164 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868687312 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868297895 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865348272 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865890127 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865001838 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868004182 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866090223 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865095536 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868035716 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867186983 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864510826 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867119665 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867516436 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864257763 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864644213 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864778568 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867493195 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864718868 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868086584 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86564585 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865777265 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866061029 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866230404 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868624851 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866459656 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865646938 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867140018 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868295127 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865874088 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868383202 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865955601 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868300904 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869290236 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865953249 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869645876 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86934147 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865575567 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.869247491 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869386344 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87038809 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866769494 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869337091 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866334022 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866648925 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867443591 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867407129 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870918167 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869007452 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867732209 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870129101 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870292648 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869681559 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870494138 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867647481 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867151819 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870389239 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868444784 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867416832 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870188425 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867141541 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868099799 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871812981 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867193661 seconds)
  done (took 125.058551737 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86765919 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.869055944 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868048471 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870815227 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868600388 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868659467 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869357204 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867283917 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867959879 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868069026 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871531527 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867552157 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869491726 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867667256 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868534171 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867526919 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868699791 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868582321 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869430744 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871810422 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868524131 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868334862 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868624941 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868945707 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870184499 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871494994 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869794916 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869800181 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869165476 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869155951 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869172033 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869489347 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868809385 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.86984904 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869103008 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869862145 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870560859 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869761663 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870515581 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873430153 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870154014 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8729857 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871865786 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871571831 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871961148 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870543873 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870355268 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870599909 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871342389 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871363876 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870607197 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870250075 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871407929 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871695458 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871427276 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871295188 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867840573 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869328299 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868308694 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870727315 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868973033 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869138138 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871516491 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868339071 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870057177 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86916123 seconds)
  done (took 125.209680843 seconds)
done (took 2553.201549256 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.935161303 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.102834988 seconds)
  done (took 15.842771428 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.03877867 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.988978366 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.873851518 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.884318498 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.874511089 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.893807253 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.887378938 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.874677199 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.873640576 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.874137806 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.874304671 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.061153694 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.891877888 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.874492223 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.876200049 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.969085019 seconds)
  done (took 52.423260697 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.87750137 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.879718515 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.889596167 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.881162487 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.878393447 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.897066289 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.911526443 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.881286192 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.938270356 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.891405704 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.005047994 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.890056317 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.878426747 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.934493896 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.891722339 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.893096152 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.965925124 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.955428986 seconds)
  done (took 36.149079322 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.957526597 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.886001544 seconds)
  done (took 10.661962955 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.870731396 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.881873249 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.873143168 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.891932361 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.898671653 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.876342449 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.886428815 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.917255073 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.875318365 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.923733385 seconds)
  done (took 70.710683976 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.883178134 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.879764261 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.879360422 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.877867047 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.871155758 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.875837118 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.878363121 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.877094231 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.576323177 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.915301893 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.886702307 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.884912779 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.879401335 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.881770276 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.877009706 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.900732943 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.017136377 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.876773402 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.875613008 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.885491438 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.880075274 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.930668144 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.892579669 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.880662277 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.909146779 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.574014261 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.888832595 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.885392751 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.999000552 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.876941903 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.87977735 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.88162238 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.881682496 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.269245837 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.148377277 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.879640974 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.889594362 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.887678545 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.877683192 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.010351454 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.879992664 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.884901666 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.874054311 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.12617786 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.963482675 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.923029103 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.2556817 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.884374055 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.882163842 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.911602674 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.884271877 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.882299108 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.893308911 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.393015947 seconds)
  done (took 133.25622797 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.877355686 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.45067148 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.040708569 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.878341137 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.159534375 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12071184 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.878082273 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927385905 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.879528668 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.127280593 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.060796427 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.997193772 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.877713842 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.876731127 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.877904121 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.875364782 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.030449844 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.949374502 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.878177575 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.875486004 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.912502206 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.142605936 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.006191179 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.879111242 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.900172785 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106303525 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.005859382 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.996621552 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.463414726 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.876263097 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946142659 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.87944248 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.877591639 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.875403518 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.04367428 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.98730135 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977439878 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.87919891 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.876535964 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.875884596 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.540555175 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100990919 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.990336769 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.016948772 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.127887436 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.10843703 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.524049333 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.875845123 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.515229198 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.07470813 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.087714822 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.135126422 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.009358198 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.880019282 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.131612157 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.877306794 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.876384371 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.142623824 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10675791 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.993217344 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.880773569 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.877246348 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.877188271 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.194237012 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.880347218 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.990121105 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.881178167 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.878062197 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.992068416 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.99701328 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.109950771 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.12408581 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.910847138 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.760886748 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.391987084 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.163409449 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.952494465 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.145131751 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.880651758 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.878788115 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.974567714 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.634082426 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.052380387 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.201118356 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.147267016 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.923097892 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.514212484 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.879085098 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.128132388 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.130862001 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.122093002 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.125468408 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.047402223 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.192792783 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.879320265 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.879020862 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.09236548 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.013407746 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.883547205 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.240740387 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.129244361 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.612591536 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.911877411 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.187518749 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.020592558 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.882719147 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.506801603 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.881923672 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.084072947 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.925402884 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.882015453 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882653652 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.129551051 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.75388361 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.883019818 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.67060895 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.94820629 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.883195241 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.148137227 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.885821503 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123835668 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.883186209 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.193633005 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.389998603 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.925523353 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.07507873 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.127237646 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.676152126 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149347087 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.196812185 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.007812278 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.141924118 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.70446873 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.883211757 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.166746278 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.885825765 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.881754342 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.052586578 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.883602445 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.038505991 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.884699872 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145821267 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910216766 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054352921 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.886097854 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.157484637 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.93049115 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.936131149 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.888443927 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00145304 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.884578744 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.928872205 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.067592322 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.885626564 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.882776703 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.464094612 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.883851126 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.032199462 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.183301782 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910577808 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.956190796 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.410797437 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.883692186 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980372608 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.914205909 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.492243964 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.883643368 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.054577241 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.886583587 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.831706759 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.885369886 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.194857053 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.108029354 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.88731665 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.883569503 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.679751809 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.575283192 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.883454711 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.061482357 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.180102023 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.535261548 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.106045239 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.887067077 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018692988 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.889394418 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.96143604 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.236311872 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.884174209 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.88450641 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.88540585 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.884755533 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.885361109 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.113806474 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.914581265 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.568957518 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.02267641 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131476118 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.19957121 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.148223148 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.938911695 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.887905111 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.154211093 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.889218727 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.954740119 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.888827736 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.910849844 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.135602336 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.89140908 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.117211619 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.174515081 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.930453084 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.938119393 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.888617766 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.889190078 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.88712243 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.031083286 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.988477798 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.889417416 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.886735499 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.007082555 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.015310826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.077718684 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.479236294 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.064013687 seconds)
  done (took 907.137494581 seconds)
done (took 1227.986553216 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.886831479 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.886092634 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.876397527 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.888261902 seconds)
  done (took 29.362810732 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.894875989 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.893140548 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.894839362 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.893151082 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.893635053 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.893132535 seconds)
  done (took 13.187331704 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.954506814 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.888577055 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.893347489 seconds)
  done (took 21.56206756 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.962186021 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.310192685 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.002536725 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.342381319 seconds)
  done (took 10.442085937 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.901264056 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.895790479 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.896464224 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.896025586 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.895889137 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.896478884 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.895778002 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.895705454 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.896784371 seconds)
  done (took 18.896904124 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.023004811 seconds)
done (took 99.298991658 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.215373462 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.127133612 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.155541756 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.831709628 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.891855347 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.16015019 seconds)
    (7/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.891604306 seconds)
    (8/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.999335229 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.173045488 seconds)
    (10/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.810305545 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.560994905 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.05840815 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.159205093 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.072478924 seconds)
    (15/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.166530039 seconds)
    (16/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.949938465 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.928131924 seconds)
    (18/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.889448105 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.951498154 seconds)
    (20/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.083156236 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.877501559 seconds)
    (22/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.239394534 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.998985777 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.321564307 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.045437431 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.896891103 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.016790892 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.1601145 seconds)
    (29/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.911952645 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.975797849 seconds)
    (31/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.274176703 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.89389783 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.579941358 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.510321383 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.137075365 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.994318986 seconds)
    (37/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.231960298 seconds)
    (38/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.280755138 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.149381806 seconds)
    (40/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.906004592 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.936143429 seconds)
    (42/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.910801696 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.785566461 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.923553032 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.891608942 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.338867433 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.135185354 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.894071065 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.984169585 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.202465102 seconds)
    (51/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.203652198 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.265513762 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.880760819 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.006713119 seconds)
    (55/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.087966143 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.99100222 seconds)
    (57/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.966900452 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.0812136 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.170080988 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.906188647 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.794227425 seconds)
    (62/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.979244513 seconds)
    (63/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.990530014 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.012295165 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.876920612 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.008832297 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.275439369 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.881165335 seconds)
    (69/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.335402202 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.034184373 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.321213953 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.876606725 seconds)
    (73/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.544572958 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.78357233 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.199843415 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.982170276 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.894193384 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.138841605 seconds)
    (79/309) benchmarking ("sort", Float64, false)...
    done (took 5.724492898 seconds)
    (80/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.021682902 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.247346467 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.819483658 seconds)
    (83/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.070304185 seconds)
    (84/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.96355337 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.977082992 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.110737207 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.808740594 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.899026533 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.963111333 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.988684256 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.579058403 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.58969558 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.89322296 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.22576543 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.285252954 seconds)
    (96/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.146089104 seconds)
    (97/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.091775158 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.900013823 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.280024142 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.895841703 seconds)
    (101/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.006249619 seconds)
    (102/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.406686186 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.895562143 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.01367395 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.90881144 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.893289026 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.043549895 seconds)
    (108/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.968565204 seconds)
    (109/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.986013199 seconds)
    (110/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.570936734 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.951421168 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.418992624 seconds)
    (113/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.312590559 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.237906426 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.119231203 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.042763724 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.922732736 seconds)
    (118/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.195746634 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.320248112 seconds)
    (120/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.826439222 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.946454046 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.954433236 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.899109514 seconds)
    (124/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.911319035 seconds)
    (125/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.408447793 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.075096887 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.899183552 seconds)
    (128/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.923269365 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.969150177 seconds)
    (130/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.477194585 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.345793172 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.92135189 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.090757757 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.159581072 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.906258339 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.0785688 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.279459154 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.885241066 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.582923645 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.112862638 seconds)
    (141/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.901303507 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.176784138 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.97730896 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.683412484 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.223313341 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.00712921 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.707013955 seconds)
    (148/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.407801479 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.88299309 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.931004059 seconds)
    (151/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.014879392 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.461776464 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.151038022 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.882179181 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.927256978 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.000420349 seconds)
    (157/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.06710329 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.961429031 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.289918514 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.189281354 seconds)
    (161/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.335948114 seconds)
    (162/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.028806386 seconds)
    (163/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.408298966 seconds)
    (164/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.886411406 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.106335663 seconds)
    (166/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.097334287 seconds)
    (167/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.069178162 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.922902304 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.271902964 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.544966669 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.119986985 seconds)
    (172/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.128718187 seconds)
    (173/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.112697153 seconds)
    (174/309) benchmarking ("sort", Int8, false)...
    done (took 4.908934409 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.198092458 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.95355511 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.493994498 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.899157973 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.949993795 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.503577445 seconds)
    (181/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.031407642 seconds)
    (182/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.497831829 seconds)
    (183/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.119273302 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.278371228 seconds)
    (185/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.497260316 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.269839582 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.900853275 seconds)
    (188/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.040854238 seconds)
    (189/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.10581989 seconds)
    (190/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.99282381 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.899199306 seconds)
    (192/309) benchmarking ("sort", BigInt, false)...
    done (took 6.902558709 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.928644061 seconds)
    (194/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.785817229 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.202545944 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.988797457 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.928035909 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.899443679 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.562630774 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.943346777 seconds)
    (201/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.055791881 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.903067653 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.803576634 seconds)
    (204/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.54850781 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.960388125 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.929328325 seconds)
    (207/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.137352397 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.966723651 seconds)
    (209/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.92461126 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.313541495 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.278316444 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.8882312 seconds)
    (213/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.520836489 seconds)
    (214/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.055326612 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.201451848 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.071522949 seconds)
    (217/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.241300874 seconds)
    (218/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.930825499 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.5270028 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.115319733 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.083253267 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.92929991 seconds)
    (223/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.926538752 seconds)
    (224/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.24034634 seconds)
    (225/309) benchmarking ("sort", Float32, false)...
    done (took 5.695308456 seconds)
    (226/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.993349312 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.943212108 seconds)
    (228/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.934435137 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.923111095 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.928112983 seconds)
    (231/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.036746082 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.008789859 seconds)
    (233/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.035271762 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.94580345 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.227641406 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.243827598 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.89231564 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 8.216433389 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.90700217 seconds)
    (240/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.105141342 seconds)
    (241/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.96710766 seconds)
    (242/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.512176379 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.803481763 seconds)
    (244/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.295902505 seconds)
    (245/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.011617583 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.975458312 seconds)
    (247/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.19343054 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.187056864 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.003643272 seconds)
    (250/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.080902521 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.056563638 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.212768659 seconds)
    (253/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.266119593 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.173362922 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.417228715 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.012569029 seconds)
    (257/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.445944039 seconds)
    (258/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.009632709 seconds)
    (259/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.529453373 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.516837449 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.243332141 seconds)
    (262/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.196538516 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.934167001 seconds)
    (264/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.267888425 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.907284516 seconds)
    (266/309) benchmarking ("perf_sum", Int8, false)...
    done (took 3.259610598 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.892241658 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.066474704 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.920426724 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.422683165 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.068815378 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.995683627 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.004140956 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.913372985 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.124747362 seconds)
    (276/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.798685038 seconds)
    (277/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.077310847 seconds)
    (278/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.024464015 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.906714211 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.212868014 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.995391117 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.558687575 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.215928055 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.994386883 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.503091424 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.107484591 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.891119115 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.437814782 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.311819342 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.906960213 seconds)
    (291/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.931704086 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.103303418 seconds)
    (293/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.051410378 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.90280581 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.995202803 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.578125921 seconds)
    (297/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.892662234 seconds)
    (298/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.06913733 seconds)
    (299/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.376876375 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.032333782 seconds)
    (301/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.012368486 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.834617954 seconds)
    (303/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.044986928 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.931876342 seconds)
    (305/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.274060931 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.072520875 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.942946139 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.231500564 seconds)
    (309/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.0426869 seconds)
  done (took 1033.475813149 seconds)
done (took 1035.317660365 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.941239759 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.93524781 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.917947756 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.940055807 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.032024218 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.949405723 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.931736276 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.9216508 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.967935847 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.968467235 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.916499888 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.946683948 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.92149091 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.921743499 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.919977909 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.936258396 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.225209682 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.951276708 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.93680831 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.930322969 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.934820916 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.918992084 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.97126119 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.947612334 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.923709183 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.922195125 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.922811268 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.940544989 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.031449748 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.924383324 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.923088767 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.931907028 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.229204806 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.948302707 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.914207594 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.937807558 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.931361907 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.92768784 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.921965738 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.954615985 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.37364422 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.924565637 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.924152149 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.921035791 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.921508218 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.925419209 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.92315376 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.927230818 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.934890427 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.935421235 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.371148551 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.944782594 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.923898342 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.920633767 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.933035504 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.924407719 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.924543283 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.936059864 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.944381625 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.938113283 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.220931845 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.956421067 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.924492699 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.938558155 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.93088299 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.408596668 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.922461364 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.926437876 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.378027257 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.936316145 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.407882661 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.940530927 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.924574858 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.936961232 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.954206175 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.230417153 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.94921956 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.924106337 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.931600503 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.92052836 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.932478783 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.934482537 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.926605421 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.92490777 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.936489761 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.951877731 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.933818204 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.924949746 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.934278255 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.945274267 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.931858404 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.93423732 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.928795015 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.919194355 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.93510709 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.9292279 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.928362882 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.927434832 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.930308443 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.937660725 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.374999624 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.948568598 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.920266298 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.921458044 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.925706123 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.936872179 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.372973948 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.931609687 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.944971905 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.971620249 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.925846866 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.222546143 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.956279735 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940786412 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.933929271 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.927750774 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.921005717 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.223724708 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.407214095 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.945489461 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.926352987 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.924147351 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.943725831 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.925757927 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.921749614 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.23535341 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.956447715 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.942967287 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.048140356 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.938866578 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.959971378 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.923264638 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.928882661 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.95785497 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.94304965 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.95773904 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.930131593 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.943502324 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.942489983 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.924539609 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.935335906 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.936696201 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.926308542 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.932194334 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.920689377 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.955350761 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.93970318 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940586115 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.948188148 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.049811778 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.924846881 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.22712862 seconds)
done (took 302.270288125 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.996985296 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.917191502 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.027561416 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.924450659 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.009287277 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.009396145 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.918713802 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.920317905 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.920507805 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.303095873 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.91926539 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.920156538 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.91663693 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.920107544 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.007509182 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.922089354 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.921452753 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.266019371 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.924013436 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.995653148 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.925549499 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.918532623 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.923082446 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.306387589 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.923314158 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.917251257 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.994968037 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.923874189 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.271096761 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.918406019 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.918302563 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.270266098 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.014312591 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.943140274 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.935371082 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.934431295 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.011599399 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.929815 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.006606537 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.008128456 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.028160673 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.967167284 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.92358263 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.919592699 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.926398321 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.929198523 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.923236972 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.954485925 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.918982765 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.923229961 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.266623279 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.934441688 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.93336769 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.924910675 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.921420719 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.948870196 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.920866891 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.929140389 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.013086673 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.930196585 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.991130139 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.307476668 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.304642603 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.926554304 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.924283327 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.92465949 seconds)
  done (took 188.023481966 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.992915299 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.001991302 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.995176715 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.931822437 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.980699756 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.00087129 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.928960333 seconds)
  done (took 15.687611539 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.932358802 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.925822958 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.975897867 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.975667313 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.928429823 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.076850044 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.928736627 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.936385155 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.924996557 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.98043234 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.927076481 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.927150672 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.934141468 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.927660368 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.978944997 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.940295568 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.042017925 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.929222929 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.929064953 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.084364383 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.926887557 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.935039461 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.98405236 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.940081678 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.929624706 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.933929206 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.5169797 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932565072 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.924987014 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.929563924 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.923705684 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.97247632 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.927541625 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.922610225 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.925571872 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.044757876 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.930035837 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.924775428 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.926870539 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.928361667 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.928529037 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.927953212 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.930338496 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.925647476 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.930205363 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.95527521 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.929935613 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.930155731 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.930305811 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.928673455 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.979364584 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.926862899 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.925910582 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.366154587 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.986078007 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.93681944 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.932575106 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.926180523 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.930126068 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.925891158 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.087262304 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.979320534 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.929553427 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.979142159 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.928161568 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.928666757 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.931315158 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.9294974 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.982525519 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.927845283 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.980444333 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.928197037 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.090288768 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.954591445 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.929867103 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.932265595 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.9346909 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932518133 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.922367418 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.939380208 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.928883281 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.932530504 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.936590266 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.927194975 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.927701361 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.04300522 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.038860703 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.926026364 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.946222861 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.939689625 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.929106868 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.986777213 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.928896458 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.928440279 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.984226734 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.045323516 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.988626648 seconds)
  done (took 212.083128695 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.935498726 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.940597339 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.935129696 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.949070199 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.931461871 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.933621711 seconds)
  done (took 13.483648348 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.934783585 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.932409568 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.931448812 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.930149686 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.934263507 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.933142581 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.933036659 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.933783881 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.937649977 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.929396061 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.932421248 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.93060315 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.93335643 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.935343814 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.934015949 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.932687922 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.934340743 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.930091828 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.930824922 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.933742014 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.076467684 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.93522052 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.9342577 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.934653244 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.937994273 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.932706372 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.941175428 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.931705277 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.932643645 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.940881603 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.938415488 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.934948502 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.936280772 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.939238034 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.938103763 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.936617878 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.938233498 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.933109182 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.9303289 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.934433935 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.93314571 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.935870059 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.932889466 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.934987232 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.935938114 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.939478276 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.94046446 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.943778162 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.937051692 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.93444338 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.932751019 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.931993816 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.934019633 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.934113112 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.938378665 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.940184398 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.938629215 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.935878827 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.936631855 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.936019745 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.936645068 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.935798482 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.937763749 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.941975455 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.940307228 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.935424918 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.938501308 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.941503574 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.935121495 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.934230434 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.936711097 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.932618154 seconds)
  done (took 142.350475407 seconds)
done (took 573.497708619 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.133841631 seconds)
  done (took 8.996502007 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.124748036 seconds)
  done (took 9.062038229 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.676378253 seconds)
  done (took 10.539891718 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.945361281 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.94936848 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.942463372 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.937353026 seconds)
  done (took 29.648387542 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.211510079 seconds)
  done (took 9.07495726 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.941293216 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.926380035 seconds)
  done (took 15.788864861 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.944520094 seconds)
  done (took 8.811271501 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.03451566 seconds)
  done (took 8.929262328 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.92920553 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.946064867 seconds)
  done (took 15.752412431 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.916745792 seconds)
  done (took 8.783322996 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.533208344 seconds)
  done (took 11.405484598 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.940036557 seconds)
  done (took 8.817355113 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.952871786 seconds)
  done (took 8.818413648 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.124443558 seconds)
  done (took 9.987465472 seconds)
done (took 166.278569933 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.932672048 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.93011643 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.930709311 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.928932667 seconds)
  done (took 29.585878061 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.970555169 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.98999744 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.970739819 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.979622301 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.972439739 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.971366665 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.961262687 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.963195977 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.981682462 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.973315315 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.971778931 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.973053073 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.970097735 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.963699933 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.971138374 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.972295627 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.982383596 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.973560116 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.963248743 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.973761936 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.938757335 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.980652148 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.974154886 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.939279378 seconds)
  done (took 49.148885819 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.136491018 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.00995402 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.090086704 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.991212526 seconds)
  done (took 10.094151498 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.98841432 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.991656103 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.002321952 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.042265396 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.068722297 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.000183553 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.966781206 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.958284 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.943814226 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.990008023 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.066189839 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.008231692 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.093218366 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.936544306 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.124601803 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.936660103 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.937374547 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.989708805 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.04005209 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.063894482 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.938587765 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.989353635 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.993421252 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.005847314 seconds)
  done (took 49.94440211 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.935274138 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.946831446 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.943635316 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.936007043 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.936449454 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.937654537 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.942260275 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.937173088 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.958551262 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.939103192 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.936288305 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.937567612 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.936686919 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.936630657 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.936884835 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.950506172 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.950929081 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.936246256 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.939726771 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.944226207 seconds)
  done (took 40.686623018 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.933082721 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.785176674 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.285483743 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.188653349 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.933868196 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.935137202 seconds)
  done (took 31.9293539 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.95263201 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.004262562 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.948184692 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.9957654 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.077706139 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.949001002 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.941180451 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.008459596 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.051887018 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.014016159 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.959335501 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.967997233 seconds)
  done (took 25.740225901 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.934532751 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.935339474 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.935071241 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.952531247 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.952478602 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.94817625 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.948698437 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.934068727 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.954348802 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.959188773 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.948851527 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.953476884 seconds)
  done (took 45.230321393 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023652239 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.978617635 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.941196816 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.613403774 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.315646998 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146171025 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.58558544 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266016188 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.93770937 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207517404 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.839032358 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037419922 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190956233 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.499778798 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.971519079 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.384554781 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220061365 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133200203 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956019926 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.561845313 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992359204 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.187428945 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.639301772 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985521535 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147052659 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.069755405 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.195642063 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.93540186 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065958085 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964838694 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948576728 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935054063 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210205179 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298922229 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03534984 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94759095 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.553953867 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.653004536 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.92481345 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.619348814 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.574155315 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.044875437 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946124866 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935326708 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.871187836 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.164069884 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316920997 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.94175126 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.648378954 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.936283903 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948448443 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031887692 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.940926032 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.758486949 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853464883 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.93836322 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.935073674 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944282714 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.511043012 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.993800433 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.182029102 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.916095852 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.033064276 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.568777486 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314487741 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.075735471 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.941136812 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943284245 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872828311 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.642369298 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987804133 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28632566 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.958464288 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.587224868 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228240654 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.910827882 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.880183052 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197913266 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.53207693 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.917833943 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167597631 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939012059 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874822046 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.886043536 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.874267895 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188558248 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970479865 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.696568314 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973067301 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266467659 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.950086124 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957311492 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962659524 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.162963216 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.826700731 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939038313 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.627805005 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.092060768 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961877114 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269184872 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875015712 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.943621368 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196313877 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.151195463 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.077458915 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.429289761 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084560645 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.567413784 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.997092541 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.168831294 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993312066 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.199864605 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987612815 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006775998 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988807699 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.940809742 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220397976 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.590509842 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.081743345 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.863958378 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.067611345 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.243631645 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962008983 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023861326 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.951212408 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.940687422 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.649151842 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.4882943 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.942578662 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.943932315 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.085332414 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991926964 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.946425768 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892207738 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.586780619 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.854336662 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.956479567 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.167373779 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.58275349 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258343154 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877374541 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272127658 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.000252261 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.165860659 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.574689057 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.002797911 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204735209 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091885727 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.128529825 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99454933 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963042466 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041410761 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965571587 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.175711635 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.240660771 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.949833041 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.948281793 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.675013484 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.973614732 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947227042 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.94945713 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.697497606 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207042009 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958291762 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.95231768 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.834119898 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.959626795 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010917252 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950284421 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954822885 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.491661824 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.658840636 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.954210997 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.542932577 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170407411 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954294245 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.654931088 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0550674 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.026499469 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2066534 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996661993 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.88290835 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.658228613 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.638760314 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945179182 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.880550131 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.944736753 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954852973 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956395567 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.144767746 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210796049 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.979755646 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.572885399 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.982247009 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958688861 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.951913757 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946341401 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.463127347 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.010589349 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.204736492 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.996458475 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090206587 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.960952243 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.882081331 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.949724282 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951304628 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.946154715 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.947465003 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980104328 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.579490442 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315691074 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209706152 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.557738624 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96086568 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.665979927 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.000289992 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.949425855 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.665079464 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.194543134 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.987148559 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975618529 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.958920449 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.629338816 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.638396491 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.517610654 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247959301 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234078952 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364062397 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.221857235 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.979159382 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282646218 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881994396 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.504384126 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007061277 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287434497 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89395317 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031083196 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.580063114 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27599971 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965009365 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176558318 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322577401 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.570273482 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079719654 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159509483 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984012205 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.171379027 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.915945848 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.474144854 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090853985 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.559803168 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143914411 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281911597 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.524654736 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.059791908 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.949155974 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.600645142 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027315791 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.667156175 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.121798464 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.207574044 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.77819604 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404206581 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.955331601 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.176397612 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287491447 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.184144974 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.075042274 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885553376 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.961000296 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.961391815 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.952395342 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.955336456 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.828992593 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.204037962 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961913372 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886466025 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.14180062 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232492293 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.84386607 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.95618535 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951616603 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227414157 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.564639374 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118452459 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.113688771 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.479725742 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959912731 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.885177027 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885378203 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.644355644 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.955663264 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928075698 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154954894 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.047901396 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.870647243 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.104905695 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037339455 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208030865 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.966282427 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.209930312 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.217672791 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.652909847 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97901708 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.053227274 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.517237438 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.047067765 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.95306246 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191783102 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707082668 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181081248 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.950673126 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.895403765 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.952923099 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167467087 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.952586433 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.746292212 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163038529 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.670237183 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.957904921 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259907346 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017144276 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.744736716 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984652707 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.046023743 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967061363 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033118377 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964387808 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.965222783 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.964469213 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999734576 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.788910027 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.062876173 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.967084165 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046699636 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.021500804 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.476375839 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.96045486 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216585549 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291633475 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.259971361 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003413664 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.955303718 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955607036 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.889004243 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104442664 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.180298324 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227400819 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.084020944 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.072558841 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98008512 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.535042352 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.229481644 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19909648 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229189148 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.850340077 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.532109728 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000688112 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.957137801 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969665379 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.166950496 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157779661 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23926478 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.096831684 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.103176701 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316170919 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231639181 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.957184811 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.955264081 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544738485 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.97019035 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.619346814 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.989481664 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.760770077 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219609959 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966865113 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321640057 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.973578269 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.112857331 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.730630364 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.626719872 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241222431 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.932552585 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001316181 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.217609557 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320175421 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261114621 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023626867 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96853976 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.059825102 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104170309 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.832072749 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.959309036 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.957369564 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00720943 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.668383059 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.968537226 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220751085 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258758277 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.955063642 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.830065262 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98138254 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.968198898 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.180681665 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206141121 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204788038 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968043809 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.964007075 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.775757087 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220303134 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007418226 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892430093 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.962033359 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050708105 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201375327 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98176151 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.410804591 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.669797316 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218292706 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.953009342 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980696119 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.180927961 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314583333 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262261527 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.490880228 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157013267 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.541044266 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.601052621 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263879696 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.964712249 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.180270994 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266770749 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.963340236 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.118848185 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003422854 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.217735385 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265616502 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.032991114 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.599185941 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.924427198 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.30080756 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518865429 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898025893 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.9712801 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.020439209 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.960662567 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.090396613 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971772473 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.833237147 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.205513863 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.724888424 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233720934 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.966070092 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.95340176 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.625970805 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.306785185 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000239076 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117463031 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963018194 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.63864199 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.314049087 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.218932017 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.116739356 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.97347613 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.964688339 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962424479 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.95108464 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.158151128 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.161305003 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239267946 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.137918058 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.004087468 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965259752 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.179902483 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17488944 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.766125071 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089082655 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.116387289 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007359275 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.870251026 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.464373739 seconds)
  done (took 1710.764674238 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.985578732 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.971775013 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.022611457 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.026363784 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.024730723 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.966771477 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.1140549 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.032448553 seconds)
  done (took 58.041767121 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.963879 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.184772446 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.972938086 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.966059313 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.97327536 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.978341367 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.135164424 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.975628676 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.973424607 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.974203364 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.966414003 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.964183229 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.279765712 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.99007594 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.965399196 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.969997701 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.97181101 seconds)
  done (took 76.12089452 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.966384881 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.015137481 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.986353099 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.971954574 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.013160762 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.978578593 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.806899775 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.971462629 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.967193673 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.117273125 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.591677106 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.979156322 seconds)
  done (took 88.265362405 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.973622613 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.972627043 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.972115581 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.97078453 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.975083413 seconds)
  done (took 11.76809511 seconds)
done (took 2229.210514744 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.219828664 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.17994335 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.206587674 seconds)
  done (took 6.286625645 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.121036173 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.169423641 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.288416518 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.276681268 seconds)
  done (took 10.766266234 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.257447601 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.357287953 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.174794869 seconds)
  done (took 8.696629977 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.381353524 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.977170464 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.084206202 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.969961867 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.972267929 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.974847237 seconds)
  done (took 22.823900771 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.976321057 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.980026698 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.976345524 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.978374867 seconds)
  done (took 9.818417573 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.958147458 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.708007928 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.960232276 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.975996877 seconds)
  done (took 21.509787052 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.728407926 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.734898739 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.71905289 seconds)
  done (took 10.090330994 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.570729463 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.884081659 seconds)
  done (took 9.362793077 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.244333383 seconds)
  done (took 4.151933579 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.107528634 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.23963049 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.433516408 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.457751686 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.519935791 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.870890065 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.298367562 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.233783711 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.398510878 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.421728042 seconds)
  done (took 25.89105012 seconds)
done (took 144.959160999 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.367708911 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.983134908 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.181644708 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.318317091 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.207174571 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.177415824 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.395344171 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.303127804 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.83249208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.826185136 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.31882626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.205736558 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.127983706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.974553473 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.129119089 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.974251904 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.203734084 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.390132113 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.053615633 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.217754637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.399358068 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.957928922 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.159445118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.973389042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.204740884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.128071894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.540068947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.976675343 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.205348972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.554238772 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.130197196 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.367336516 seconds)
  done (took 171.694914017 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.899016959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.975929171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.976542823 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.977721175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.456215896 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.978277535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.9780442 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.976894292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.177016119 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.158900933 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.977887483 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.437967648 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.977587947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.978146751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.980977438 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.979597505 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.358428633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.954174977 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.983296417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.985148329 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.989535995 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.391002478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.991204351 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.42535007 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.371019238 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.996680249 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.977914981 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997397798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.980986972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.98810929 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.992081181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.977964258 seconds)
  done (took 212.159655655 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.978312951 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.97926055 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.97675344 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.979338237 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.994959126 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.982070347 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.981943168 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.979701026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.660387785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.681072317 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.011738583 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.986672365 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.008687392 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.978498993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.989272042 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.979067168 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.984353119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.98569984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.985702448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.988940684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.990552699 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.798438394 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.009121799 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.805754626 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.012776624 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.995700405 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.980594237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.998499699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.028641454 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.004626498 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.003096278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.980513627 seconds)
  done (took 224.628111836 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.17333466 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.984215134 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.98654099 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.922850108 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.986120526 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.984876262 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.981410153 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.175427502 seconds)
  done (took 20.134887215 seconds)
done (took 630.540192741 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.456100261 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.303093638 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.172851281 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.011571165 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.253561403 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.049219882 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.006163183 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.069178914 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.73423272 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.078648375 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.658245188 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.024884814 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.746490211 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.031670211 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.13215413 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.059477583 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.579244718 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.669725569 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.188533407 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.090271511 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.187157375 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.942567697 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.080683969 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.769112675 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.760359701 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.995278402 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.206390655 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.586143391 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.017291332 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.174151323 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.784721894 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.419251405 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.021434373 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.005783575 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.058385938 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.04125421 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.382506229 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.018635558 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.135035278 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.753140568 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.078351177 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.620089333 seconds)
  done (took 108.26841606 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.977264848 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.976829291 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.975725899 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.978497748 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.978749057 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.979065335 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.976313249 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.975915997 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.975979422 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.97748635 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.975878785 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.978108295 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.975942885 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.978131156 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.976587358 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.976118128 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.977728294 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.979561025 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.97634027 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.977042951 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.977469863 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.978533717 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.976714312 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.976160862 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.976992196 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.977996964 seconds)
  done (took 53.337166202 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.989801419 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.133560926 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.221028553 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.011343006 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.991423752 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.99467372 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.010637218 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.995771789 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.994413467 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.993183618 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.087596177 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.996304481 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.018124966 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.220723977 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.005389562 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.988472053 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.989252409 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.988696633 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.137146931 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.005949052 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.00919357 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.993511985 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.008725568 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.002960481 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.99202244 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.989889319 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.992596387 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.430265083 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.998378749 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.086059309 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.033156561 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.011212811 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.384432158 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.222491386 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.045121545 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.998119353 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.99006194 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.090016103 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.99556433 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.990630533 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.010938707 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.995299665 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.212385802 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.492090213 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.005114198 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.990523268 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.441284335 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.098414913 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.031958654 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.003542979 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.217864881 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.007873124 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.992269271 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.992097871 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.027716189 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.002405418 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.990580155 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.299902147 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.00373058 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.010325405 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.995132738 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.992619554 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.148056174 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.000426666 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.137276211 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.000015772 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.999669898 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.992640132 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.213668418 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.007908657 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.493726157 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.005670761 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.991603795 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.087389179 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.140750907 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.464417778 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.005940891 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.149618286 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.406675287 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.016949667 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.000399091 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.42081965 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.021008941 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.000592448 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.993625375 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.994221173 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.992449568 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.035140454 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.009225481 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.429580524 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.497034289 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.315200961 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.021465945 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.008524253 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.993211101 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.304193111 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.000580895 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.993559773 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.215766361 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.510827381 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.007565654 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.001036294 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.481196396 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.008651431 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.014639085 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.003533706 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.222190288 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.010482172 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.038185161 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.992888625 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.000914626 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.998410928 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.014113962 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.002466601 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.995212308 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.473189941 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.107458711 seconds)
  done (took 246.16762622 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.990321422 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.006871579 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.990359913 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.988829761 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.986496593 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.995955619 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.988745181 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.988885897 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.995493013 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.988348892 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.988615313 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.99220383 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.988856888 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.990943255 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.442079048 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.996949558 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.602871861 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.98946136 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.988972204 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.005199854 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.669341039 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.00090286 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.990927565 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.991215795 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.989611021 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.991527294 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.991787129 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.039349192 seconds)
  done (took 171.496954232 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.996291719 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.178352542 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.016767392 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.031671142 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.006056531 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.995166045 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.022933473 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.020156632 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.002639828 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.994157655 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.995278011 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.058122013 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.007666792 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.128132568 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.031231295 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.031978934 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.103842484 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.005807067 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.995229653 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.996140297 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.026729873 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.995569933 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.061202078 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.126481789 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.015991867 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.114547503 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.003863764 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.999227698 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.997556491 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.116576146 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.014062244 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.060124177 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.027285551 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.017862064 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.122852082 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.116662304 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.107701409 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.029347546 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.004101905 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.995351204 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.996934694 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.987422457 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.116763986 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.017405847 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.999925518 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.106997933 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.018121829 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.999962431 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.00771435 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.997248205 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.012268427 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.018062444 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.066468335 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.132599496 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.033035376 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.025621447 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.023951357 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.300875676 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.010266309 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.099604171 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.995065838 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.116599498 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.019735329 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.988071018 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.000111131 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.00263901 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.028194256 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.028531024 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.108912294 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.008843764 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.100968643 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.036716605 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.006191588 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.998459729 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.001708992 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.117447168 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.120078935 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.037232623 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.03929053 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.032144323 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.996443781 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.000056778 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.989545185 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.018105412 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.005051065 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.116842746 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.121167862 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.011060437 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.003469899 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.002206312 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.001826832 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.027460053 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.125363601 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.038368348 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.100932703 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.069112637 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.076925615 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.015200703 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.012475984 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.005525058 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.064796 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.016866147 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.011903657 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.348806604 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.073560244 seconds)
  done (took 216.511540731 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.100716512 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.498444345 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.057895799 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.058520249 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.277386221 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.423888006 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.799447597 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.051256047 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.050582347 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.077920457 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.209472211 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.109283714 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.062926669 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.038249557 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.458024795 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.042256323 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.04985352 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.073301215 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.054392056 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.62035738 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.36278706 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.173873927 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.049499764 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.178843441 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.033670125 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.364030948 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.3708999 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.439050726 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.087299903 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.392123049 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.40217296 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.737571507 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.262833727 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.296077891 seconds)
  done (took 79.203596307 seconds)
done (took 876.899280969 seconds)
SAVING RESULT...
DONE!
