cset: moving following pidspec: 25043
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.141312282 seconds)
loading group "string"... done (took 0.532424073 seconds)
loading group "linalg"... done (took 8.580519029 seconds)
loading group "parallel"... done (took 0.1635603 seconds)
loading group "find"... done (took 2.454975486 seconds)
loading group "tuple"... done (took 2.056958456 seconds)
loading group "dates"... done (took 1.370585451 seconds)
loading group "micro"... done (took 0.191747952 seconds)
loading group "io"... done (took 0.508948326 seconds)
loading group "scalar"... done (took 45.468128571 seconds)
loading group "sparse"... done (took 13.260193801 seconds)
loading group "broadcast"... done (took 1.133248168 seconds)
loading group "union"... done (took 8.934274864 seconds)
loading group "simd"... done (took 2.976434648 seconds)
loading group "random"... done (took 11.285049078 seconds)
loading group "problem"... done (took 2.181647153 seconds)
loading group "array"... done (took 23.272291516 seconds)
loading group "misc"... done (took 1.049168687 seconds)
loading group "sort"... done (took 3.706235218 seconds)
loading group "collection"... done (took 17.589467929 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.769514104 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12209739 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.202025846 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.221425152 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.272824576 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168568521 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153222766 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.165936155 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.606743332 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208008841 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156630614 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.370868621 seconds)
done (took 6.116553842 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.3644169 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.064605969 seconds)
    (2/2) benchmarking "String"...
    done (took 0.194223349 seconds)
  done (took 0.896554053 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079477107 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.163664538 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112367679 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.099766127 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098804816 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.115115614 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097542439 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.114830051 seconds)
  done (took 1.437912879 seconds)
done (took 3.42108408 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.488288927 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.878827156 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.505843112 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.189087262 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.303323515 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.309500127 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.279507102 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.233116759 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092569613 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089661501 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.261118063 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.419132048 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.428816777 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.942450353 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.074935685 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.100028111 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.166341946 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.782528395 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082903966 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127352718 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.517552526 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.22506111 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.1201874 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.110910295 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.191136445 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132993009 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.147736878 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10568273 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662860294 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134437694 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.212182106 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087677448 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.14532304 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.16715578 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.221253845 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113596219 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677772506 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.203212785 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099593771 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.105354372 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677609769 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.126247184 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.213539432 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.111436755 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.074212129 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.168429177 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117294646 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.083822664 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.099483724 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.106518024 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.173683856 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.533432149 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109651934 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.205750643 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.097101322 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.741606512 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100300984 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.279489373 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127625613 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099893187 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095908318 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.095864503 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.173390218 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098978495 seconds)
  done (took 20.506441845 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.190966381 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.210593726 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101966701 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150410784 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.146168577 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086682538 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.093556477 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100826713 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120727385 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.201409288 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.127364473 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.219224701 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079290067 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.113309185 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.189971077 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241481987 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112813768 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127715277 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095166675 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10007679 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.15009277 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099325484 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.115439524 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.102520619 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.176358186 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206981055 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111501048 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125391187 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092822871 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100473044 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147143873 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150874459 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096608712 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094632033 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.197575562 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109885196 seconds)
  done (took 5.545402172 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.212345325 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.236462218 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106529596 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246758831 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.192405362 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130649132 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182072268 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.19359036 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.303004625 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.284518146 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168965393 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133039557 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103296207 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092678783 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08413408 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.102600941 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.855504168 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156166424 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.164222392 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189570523 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102531626 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103663902 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.727548464 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108455903 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.091545749 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114623691 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.070901906 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.232206353 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100410561 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.485656069 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086021161 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119332646 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12002269 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212916648 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124491004 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122669905 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114391905 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.089725517 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.214623557 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102382694 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09955586 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085445796 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135390895 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122678065 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.113341798 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111583619 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.138434911 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090591038 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110538078 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.161768285 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198829239 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.169093749 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.108052927 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089979629 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283689356 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111966602 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12186308 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09678223 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.895751242 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125020555 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101877656 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085093673 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099417498 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101440668 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.822752762 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109882922 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.596846282 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087409194 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165258631 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102420276 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12198289 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091728942 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089981247 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.129837579 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.090721986 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.104341539 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.091760369 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.085525079 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.110860671 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085441922 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.12031697 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107777044 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086073855 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151758779 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.103244087 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102652361 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.111092887 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132000226 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.093423005 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.107056197 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117859256 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099502943 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.090516877 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.207487552 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099711938 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.139770282 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118144025 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.135071018 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.109269398 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.31260508 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.087324221 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129964474 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.105276542 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131194195 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102209499 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084634225 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104136292 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.085524604 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.086840075 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16481982 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090619297 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082809035 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.107370077 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098974144 seconds)
  done (took 28.981660715 seconds)
done (took 55.670570052 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.807695567 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087390836 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105730324 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086397142 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083385599 seconds)
  done (took 1.882008989 seconds)
done (took 2.577060284 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.185720063 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.267232482 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198742065 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.130186723 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.151913826 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.170836755 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153500196 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.172308406 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.150959633 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.175418422 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168961445 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109750438 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.175620252 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.192293933 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124400962 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.197954941 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.108131775 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.155458751 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.108172964 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183164328 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.108125379 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091708179 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092467267 seconds)
  done (took 4.285738437 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109381092 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104998633 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.107916619 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.126426584 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092668905 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107120726 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.126419535 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113401464 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107109306 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119524715 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094083102 seconds)
  done (took 1.912008992 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105692782 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102836006 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097418656 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.124101558 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092334723 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104741042 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122867272 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113396978 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104543039 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118351137 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093049594 seconds)
  done (took 1.881957079 seconds)
done (took 8.773256481 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.187324852 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.796408742 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.183363613 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245644336 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.32829978 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.295510872 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.601848664 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202959737 seconds)
  done (took 15.652202777 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.118944791 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.202124608 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09965665 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098054377 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.120041608 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10359824 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096731342 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.120562794 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097861757 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097476708 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.113967951 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098507845 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09591197 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100225502 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.120139376 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102798661 seconds)
  done (took 2.54115391 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140814848 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119073807 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.119861266 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.105189899 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099762111 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.123030683 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107598425 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101687818 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.118806582 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102139531 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107269657 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.120221484 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104564967 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098878285 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.120605863 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.123921768 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099877738 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.121827139 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.121940625 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.121120719 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106037703 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.10265732 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.119814411 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105574853 seconds)
  done (took 3.479458647 seconds)
done (took 22.375736296 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157087612 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106995681 seconds)
  done (took 0.972768783 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.171656452 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.186150952 seconds)
  done (took 1.070739744 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117048004 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095036473 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142495676 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109518921 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.095642505 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.114003933 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123603026 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.111672505 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09779611 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096982935 seconds)
  done (took 1.822142646 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.101374866 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101072656 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.127921206 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.16542 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.122689166 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099389687 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101257477 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.118301414 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103765139 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.096051473 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.119303863 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115175538 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09875419 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.131258707 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101693601 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.11737482 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107145159 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097249083 seconds)
  done (took 2.7440433 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.097042385 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098913535 seconds)
  done (took 0.915194298 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.1001136 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093754828 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096147418 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114927202 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096794571 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094452647 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.114266314 seconds)
  done (took 1.428249654 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.521050878 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.239625257 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.366684852 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076572423 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124968638 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.329922606 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.108137173 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07624261 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09474319 seconds)
  done (took 2.681674476 seconds)
done (took 12.348909462 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09525429 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.208670244 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.598489312 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.131993026 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094939958 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154144735 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.346001928 seconds)
done (took 2.347142474 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341725657 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.179959178 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087480123 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094912389 seconds)
  done (took 1.423987804 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.087098331 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102155279 seconds)
  done (took 0.913574509 seconds)
done (took 3.062122045 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.117863009 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094417179 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.11392667 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097641467 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096834997 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112260259 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.097108987 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094051513 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.11283205 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094625236 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096962996 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.113342453 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094387022 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097037597 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110874085 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.21688099 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095690381 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110760019 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094254842 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096996291 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096229005 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111151322 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.097024934 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095417481 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11359387 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096979603 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09409316 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110923464 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097576342 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097256117 seconds)
  done (took 3.892129795 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099526891 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.089342183 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091828457 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.119327754 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090900293 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.094239791 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.111438375 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096940706 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09633696 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094830284 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.116397661 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096450396 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09590845 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.115764457 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098489041 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099446754 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120998754 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096951234 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096418502 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095273837 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.117587929 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095463949 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096161482 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.113258707 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093427492 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090078508 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.110827309 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096299075 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094023784 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093534835 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.11597839 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100338476 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09312097 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.121418385 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100226265 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09552897 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.119436001 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095041684 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097986041 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090816033 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.112682687 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097093237 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.095159003 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.119935543 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097384685 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097439387 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096332896 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.116303978 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097602685 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096358727 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.112132913 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097648858 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096346939 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.1130863 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100626129 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091984763 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09458757 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.110988874 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097204948 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093306738 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.108860591 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.094006182 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097588199 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092345958 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.127118745 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100666157 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092876074 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.11498945 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098076821 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.100532651 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.117310349 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106947161 seconds)
  done (took 8.057917051 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097092085 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095031579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.093158965 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.112300334 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097332759 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096232311 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095437684 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114805904 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096966145 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095808473 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114610991 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096947885 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095150358 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110794411 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0970028 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094433915 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093602909 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112701659 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097416113 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09281087 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113822159 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097442676 seconds)
  done (took 2.94611872 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240057876 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104723282 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143031203 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.127562513 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113892091 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.127228641 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102827034 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100797074 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120260797 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107621085 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103809839 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118576903 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112219689 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121125539 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103809659 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10344179 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117586423 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105826119 seconds)
  done (took 2.909954635 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095552796 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095072415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093031268 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.113704495 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09462391 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093634621 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093130021 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112630063 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.093872048 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093889497 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113987912 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09514812 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093680752 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112496662 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097973947 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094160158 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094406827 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113378738 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098708635 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09427474 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.112157037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09403992 seconds)
  done (took 2.925768429 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11171382 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095883339 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130660536 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099876563 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094391734 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.113523015 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.102996964 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09601032 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.121843938 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097977072 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09753342 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096297091 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.130501543 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100580008 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106502853 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119972557 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100431057 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100425067 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118492365 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100710841 seconds)
  done (took 2.872392166 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191049092 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130162837 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113210114 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11902594 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129720196 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11181712 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13756202 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112470108 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111552091 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140463124 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111909145 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111868462 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136554377 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115794806 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131507506 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119661583 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120990158 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137367362 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111627022 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130182953 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122942703 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112163357 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138604035 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112587881 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.132196639 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114235256 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112878988 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136268122 seconds)
  done (took 4.247266967 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.107146944 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105636151 seconds)
  done (took 0.950874775 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100550444 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098543721 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.098137204 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.117506892 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098056379 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09694708 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116062376 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099186952 seconds)
  done (took 1.564302021 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.185988177 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.209635617 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.1189765 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106336128 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.208798926 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.191074047 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133269418 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100522799 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.115179227 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.088090955 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.202634859 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086998959 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.117616181 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094847434 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094327214 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122372163 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097619617 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105637387 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.125581244 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102326518 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105360955 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122447297 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101859788 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109599245 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.112110571 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103012082 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10236514 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.129470328 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096486774 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.100951368 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.115579044 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.10149521 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.099030701 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102342794 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.119497601 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.218335099 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107223795 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095577868 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.12256694 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106831545 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.131873177 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.121762216 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.101708995 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.097968166 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.123106168 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105160089 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101509568 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.116631277 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091854325 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.092288038 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.118317031 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095893341 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097530561 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098276359 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.120648082 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105733279 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.120507411 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.096694951 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.095760465 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09139613 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.11440473 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.095312706 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096705279 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.120142612 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096508167 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095039752 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114540727 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095882081 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095659053 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.114442962 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094209483 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109594546 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115292779 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100063503 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100576682 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.115071734 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09331301 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101018758 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113048932 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095852778 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098672395 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.143106736 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09738751 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091183501 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.110369906 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101729674 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096860308 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.116202557 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088664274 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10360425 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.11549952 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097326965 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088194511 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092467369 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.111617081 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098810571 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088592715 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114980444 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095192078 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099629643 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120231381 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09429581 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096213661 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120892841 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102954821 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093812781 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.164873038 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093128222 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.111696221 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098415404 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101299064 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.090064632 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11450341 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094714362 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092737448 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.11098116 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100815238 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095014911 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.116768067 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100575895 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097581258 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.116100853 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099242374 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095255561 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110021578 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100264582 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103839171 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.116785397 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099384446 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097245007 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09695602 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.114429425 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10179832 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092508489 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120371 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094383164 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096507844 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.1197954 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102518392 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095371777 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.110904943 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09500993 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095975578 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.114099022 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099596292 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.097205162 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.113210187 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.089432866 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.097050243 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109658294 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097934552 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104864877 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091393444 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.117986789 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092551637 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103709843 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.112520613 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102531839 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098133133 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.120565202 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101584848 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087949333 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111702016 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100276456 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096687638 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111752155 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097580343 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096141508 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.120871632 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089918935 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100165322 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088338469 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.111930951 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101643982 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097550274 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.118465006 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.093800744 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132138916 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.128304737 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103056429 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.095308979 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114709122 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101904427 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.095107472 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.121013013 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103411613 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10186326 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112588534 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095345391 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103128912 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.112552552 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098326993 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09457224 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115831714 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089892519 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097796642 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.089747034 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.122096497 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.099086362 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.100780817 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.120944473 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099100412 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094921205 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126867989 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.095936614 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101282241 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.11004105 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107481419 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106567628 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.124795809 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108449315 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09744658 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112223547 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099496248 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105563529 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098883375 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.117432067 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098460563 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.089347247 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.111885104 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103537795 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10094715 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.11170116 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097863949 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09774289 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118270436 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.094769407 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090721904 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100544023 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119712783 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.094592772 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116323339 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.099638436 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.0983421 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123351932 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.096178463 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09396011 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09726452 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.123178871 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100743627 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095152338 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.119332396 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102599261 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099918899 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.119292624 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095386738 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103987235 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.115376792 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.101922779 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.094266948 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099226371 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.109693506 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099417284 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095444323 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.11232001 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092811648 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099802354 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122400559 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102815224 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094542721 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.123282586 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10449889 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102674221 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114622312 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102793606 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092989465 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.109911562 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093583578 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089156149 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09812124 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.113413203 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103981465 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094240762 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116227183 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101781368 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099122597 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.114206188 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10283224 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106390302 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.112866845 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.091213556 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093450939 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115454696 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.093598614 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.093537721 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.118782582 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098595266 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101105373 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119822345 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.097604193 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097040566 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.124177566 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09492963 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104469171 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.121217632 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103537622 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.094328172 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100639509 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.116645237 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10501138 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.091159371 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.119963671 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098182621 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095942075 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.113924507 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.095671844 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091955903 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.109876986 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.095021799 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103671187 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.118511653 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103542535 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095839585 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.11539161 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.094921499 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093924483 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.124420127 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09783052 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103296014 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097420574 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.111151271 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.09137747 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10231343 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116434048 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103525873 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.092028813 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.123950909 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116762469 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100959014 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117127338 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108989095 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10595763 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.123229843 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103231538 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.091520185 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.115170654 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102280287 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097599901 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100720055 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11992844 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.092115508 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098603919 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.122390021 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099060231 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095180035 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.110152 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098423082 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104450487 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.120324065 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100939703 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100123084 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097527339 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.113620347 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101299524 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102541595 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11710833 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104261321 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096949776 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.121945018 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.094927054 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103319156 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.121152718 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.095630109 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.091267082 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.114877434 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104783379 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.092519854 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102109112 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.122304837 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.095257191 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.095974833 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.121786366 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09474643 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100694592 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123971697 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.0954315 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10719484 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.119296024 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106006271 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103024374 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.123836423 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09347273 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.096881744 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096000019 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.125889767 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097106313 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104498594 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117388825 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104380703 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10092527 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.123488734 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103538275 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102871251 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110879742 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105554109 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101773509 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.120446723 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.095850265 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096358615 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092008077 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.116729695 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104739893 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094004232 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125710831 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10273554 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.09621033 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.115223616 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104188331 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096583362 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127445071 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.094425622 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099446399 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.112127857 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.100414247 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096316186 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.123608646 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.094678734 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.092331188 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123654454 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103008722 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103566999 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.119432758 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104491083 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.093501806 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091361995 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.123067202 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.095860005 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107225398 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.121726492 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.096138024 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09604215 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.121198636 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100122626 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103961658 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.11198611 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.096072987 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.098738061 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121064946 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.100307564 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092611394 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101565289 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11711818 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099777591 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096265206 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112493705 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.098100809 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104995138 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.118716272 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.094352936 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.095098159 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.128229942 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.100614465 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094982366 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.114399015 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105217901 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099195359 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.127593874 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.095584572 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.098151653 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.119078266 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103601533 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104877644 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.117432376 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101495332 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09711047 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124677265 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104288853 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091448824 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095712013 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.130378153 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103121293 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098860552 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.121670535 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.097114052 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104877529 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126421631 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101382326 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.093205738 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.113116158 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096825806 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.092675962 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.122256873 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103717257 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097573985 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.116586961 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106267606 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103666831 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100707118 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.123272872 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.09403143 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105513982 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.116672601 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.101510114 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.092121925 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.113930414 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.10311983 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104182662 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11772137 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.101081817 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100709574 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101472161 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.115458381 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.097716423 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10156081 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124718261 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104769683 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09726671 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.119295627 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.104653438 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108433033 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.121799068 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.100444615 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105959607 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.127042554 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103427839 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.099028259 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.122309797 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107132417 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101942734 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.126113222 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.100828218 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.098191145 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10548049 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.127356945 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106827975 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097281194 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.114235794 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102843602 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.096274655 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.114904755 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.102386149 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106374302 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.128559176 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.098685381 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095614808 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128857514 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104104528 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099242748 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.117903964 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.096493799 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102627636 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118593603 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103363742 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.096098451 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.126380973 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108982735 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105636373 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107046916 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.11497518 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104938934 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100049829 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.128139251 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100775414 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.093553552 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.113952335 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.102096819 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105741216 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.126886723 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.107160223 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10293334 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102899466 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.12110696 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099683173 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.096850226 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.128262771 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105684569 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100589807 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.120859925 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.098212735 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09953182 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.124715806 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105661218 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109548012 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.121127642 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109815322 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104446628 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.117970053 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.096922546 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100000681 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102393087 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.12137536 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104623232 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09603415 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.115588878 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105681447 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106153272 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120545438 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107753489 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108105411 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.119433407 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.103275888 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107337998 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.123707486 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102708594 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099846516 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102647496 seconds)
  done (took 64.291278347 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154933393 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10721057 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124655654 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102362902 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118384994 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124867189 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102626985 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102358471 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12586846 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112009607 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100582853 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122394861 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11727043 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141351431 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119783956 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111102416 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121960442 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103809962 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102510042 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124251858 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117707178 seconds)
  done (took 3.251801437 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108611808 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103089817 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101759808 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124461348 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102784032 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.10147159 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100926912 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123436297 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102263987 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101176303 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125619918 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103020503 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.102147381 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.100949064 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12152474 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102422643 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101323361 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124966286 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.102066952 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102705972 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101087515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.123222455 seconds)
  done (took 3.17406315 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.138524016 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106444581 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099702929 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.126120982 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105729258 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.100935769 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.127309931 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.103012831 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110980855 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.118519052 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093427634 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.097888051 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09948174 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.124994854 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.096921614 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.102053923 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.132767832 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105335313 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106368599 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121621954 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.094026515 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.102980643 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.102393609 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.116010652 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.108203605 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106181188 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.12924051 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105950596 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.092610807 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.127350864 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.105303267 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.097591204 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092762223 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.114392906 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.094431284 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104170247 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.125945289 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.103410869 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.102661328 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092518755 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.12562536 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.106872827 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.092567627 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.124866326 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102603664 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.096313926 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.126909121 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.10339868 seconds)
  done (took 6.010108698 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132131424 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157516636 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10585045 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128885471 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137066986 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11295195 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104454193 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.154671527 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105233636 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.104595823 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.140169659 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116937073 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.129106946 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.110744608 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106681477 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127591138 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107862944 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103944665 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130950745 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10750823 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110178272 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127077917 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115546658 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134653206 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107754989 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105111209 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127168135 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109884721 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113715228 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.133743569 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113143173 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10961399 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.137349567 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105951279 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104188621 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.129014474 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.117109532 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106377628 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129370412 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103993052 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.106289531 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13236253 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108315029 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138895974 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110319225 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10736056 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.128514582 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106150332 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114910011 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.127351672 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115124679 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115445576 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.130245064 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10755252 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108308951 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.138960874 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109586309 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104073552 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.132526956 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116871264 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.126090257 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113998998 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115308122 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.127732059 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.120499764 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117227456 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.130745414 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110517088 seconds)
  done (took 8.965028985 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.144759482 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109849527 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14105404 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117685358 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.365011768 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.1345212 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109985646 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.108025226 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13191812 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114055734 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131626684 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.219677391 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.134030746 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114730936 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.1323931 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110986259 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109298403 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13118743 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110019607 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109813525 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.13311073 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118430325 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108938189 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.140982194 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122414954 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.128549587 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112523443 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110203613 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138099307 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110679674 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119038885 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.134380873 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110203658 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.137719502 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123784123 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108413977 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127807115 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110893824 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108146127 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.133146565 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108401589 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116002099 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.132743128 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107514832 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109068414 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132310946 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118415904 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.14376365 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114591192 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113734399 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.133089736 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117708772 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131728783 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112546422 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116414513 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146972124 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117239495 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141104678 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113011888 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117237182 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140950187 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.124674329 seconds)
  done (took 8.737301549 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.114627884 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.109673625 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.104356482 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.127684118 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.105409108 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105170774 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.124223375 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106278642 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10509087 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103619402 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.128046407 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105965701 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104038603 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124608071 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105864915 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105059448 seconds)
  done (took 2.592563383 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.125789673 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119989493 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.206954122 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106357691 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127177732 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112275139 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104393849 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.131758915 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104156345 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109695857 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129482215 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109709022 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.12028084 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.127310829 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106366708 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107685103 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.123916079 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109707202 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105919694 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207064685 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109415329 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.129851636 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107340318 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.111080557 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.130105679 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.109140292 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110713574 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.127967152 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.111186418 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.1062739 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106225707 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.134338623 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104816644 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.109513051 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.129644864 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.107139255 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105829829 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.128746213 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108560243 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105578401 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.12943046 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107805641 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106187696 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.12906595 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106602408 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106730768 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103357458 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.132778759 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108101851 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106256274 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.128948917 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112818712 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.110268979 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.136566476 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112885008 seconds)
  done (took 7.342512113 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.121045118 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107032943 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138642746 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10724286 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107852807 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106605768 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.132264338 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109761713 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106887664 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.128294346 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108633224 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.107332133 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.130083748 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107798609 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10723007 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.129014591 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.106447877 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106804266 seconds)
  done (took 2.887544781 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108289479 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104977637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103214951 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.128674797 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10446694 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104298687 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102867332 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.12521124 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104433056 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103262419 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127859389 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105423339 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103805915 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.104399338 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123743271 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105360607 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.103376518 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128167553 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107223835 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104696325 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103276463 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125057814 seconds)
  done (took 3.252205837 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.120020596 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.229550085 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111843302 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.239683884 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101868912 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.125810385 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111993042 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.126138809 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.118283609 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.101881661 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.126609752 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104428002 seconds)
  done (took 2.437872588 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136443513 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141870845 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130733429 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108154942 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114678589 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134100481 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110696563 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10945814 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143080534 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122438114 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133408429 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120241818 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117632 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141400689 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115042556 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139687582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112131295 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110734009 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130071107 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125701621 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110718308 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14083724 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11099356 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131971829 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113204307 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11867531 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14064029 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12308719 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110093171 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140016889 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114606769 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134839118 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122434309 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120528944 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129666971 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119499497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132967722 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130771509 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114431327 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143596737 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10945678 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114577448 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139973547 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114697268 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142394447 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112950173 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115810214 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133789465 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112088225 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153532787 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11736083 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118014446 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138503716 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11871276 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142260105 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132376336 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14362049 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11949572 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113691047 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144145301 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118853095 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138208727 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120008306 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143441769 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116481376 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119958605 seconds)
  done (took 9.119976588 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151686898 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106979341 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133752018 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12226782 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141935861 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112695611 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111100126 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134234901 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113738039 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107550428 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177839302 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112059915 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140766496 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120367637 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110831876 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135457116 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115153477 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118069654 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131916164 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131818811 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134400228 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119123888 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117226105 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142032654 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122133982 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138608773 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112743514 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111699949 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134980474 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112877809 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115634035 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132751059 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119700423 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.13162994 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12219073 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111574821 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135411017 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116717736 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111042499 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139006029 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119696025 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147176055 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112916102 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112074726 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146001974 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112172291 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110791966 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131238107 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111746544 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108005522 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145658 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12220086 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145400248 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119069155 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13269958 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113395367 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112241494 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133637639 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112569766 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115106058 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141558679 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112924951 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154372726 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112896143 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111995969 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141407226 seconds)
  done (took 9.081309065 seconds)
done (took 162.235565233 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.180197826 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.221502829 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.203065467 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159355551 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.097083052 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.16668417 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.130443847 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.202517019 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.097726752 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096882886 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.122321276 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.10036199 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181541381 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.121519656 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.097444008 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.100257187 seconds)
  done (took 3.10309186 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200935954 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.34330626 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134618289 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101248938 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103494044 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.102419247 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.125522375 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104634531 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102637156 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131420686 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102358997 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098359445 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131230885 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098366177 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10213652 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.125354539 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107714741 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102214918 seconds)
  done (took 3.155176462 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121505728 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151922864 seconds)
  done (took 1.103410918 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132092335 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.216262351 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296600313 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17449851 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122239178 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14424528 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151590208 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137751459 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192103155 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13890209 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114363271 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100290775 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.151625722 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10754142 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.143576142 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102749468 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129500693 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.142784384 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11654668 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.104378441 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.150231763 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106775345 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10698145 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.14072447 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181925972 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138845378 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108817436 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10527766 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125689117 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116216704 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.108054692 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.143044564 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.114898299 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.183009063 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105521987 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179121439 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132756712 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.103956647 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116344672 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.123987858 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.107444477 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.107055608 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138187163 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101566723 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105333652 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132511066 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105554411 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105553063 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.134462353 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109783345 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.133705835 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111894206 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176156463 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110222773 seconds)
  done (took 8.024571146 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.916356742 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150864515 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102342385 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.065839464 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150211775 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11674984 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.934447364 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130300985 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257535008 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.927553018 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118584587 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133699604 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248433135 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.284710026 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.291771025 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364972927 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.768433341 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115336721 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154592619 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147240718 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131636217 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121927138 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117667528 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.449260577 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103125631 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.128985397 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109053397 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110872854 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180303661 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103551051 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.132287635 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206834165 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.277938846 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217173906 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129365519 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102177667 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101599089 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191893402 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280327911 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.228194928 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.198408562 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099967183 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.126220792 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108219749 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117447175 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123428547 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16296037 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194712219 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.199491323 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10729317 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136949983 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111368452 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127958279 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159963908 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.125031852 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.370143398 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.369718643 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102124272 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132762413 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115636783 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275060141 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.131085252 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.245763493 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124647721 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219910318 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.126388326 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822699816 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168134786 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12457807 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1072395 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107834526 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133593632 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107565549 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.186729 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.404021377 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132029111 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108140201 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102457097 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233141309 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.129835336 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10311769 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187055482 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104947145 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109274515 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136204634 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109594302 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.197162136 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.281624991 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109782755 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131896252 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10899229 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113260432 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.125406814 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212997844 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.261161833 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162161125 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23973216 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107869213 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.188238697 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.193765773 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1072031 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196661408 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131072978 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117429412 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107767905 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.234841363 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.166524299 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106084769 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.132862984 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110171779 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.168209758 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108959763 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109500585 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192554961 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.488669187 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.19433987 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.101434969 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108155716 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132410729 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183736631 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111655611 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273591195 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111110158 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19462207 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107127333 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.124600733 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109127331 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.190807566 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112771302 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13249053 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107672323 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112454785 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.286217236 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229761557 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.139139007 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255101563 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176840077 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132727359 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175889168 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132364869 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194326332 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116769026 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106909141 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127750046 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.828030829 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115265971 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109010269 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13143177 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185399082 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126668481 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10648796 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103197612 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124635165 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814154009 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108192858 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101639456 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.128231827 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110667311 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110127523 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133320822 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108631982 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190504462 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252754504 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111968167 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133262612 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103613126 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.185841412 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.105429347 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125489882 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104787838 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104596722 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130890172 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110113496 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107182494 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19522754 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.184379776 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.241155156 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574150492 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103627115 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.128357747 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252695579 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104000526 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.338703917 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134301243 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.246498094 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.190098425 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101632149 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.371106047 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.19383205 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207742699 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.108195067 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.197241917 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10204514 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109689986 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.18499467 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103808417 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134522917 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182079022 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114694925 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111641299 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.271933806 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.129497345 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251154579 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.103444037 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.195734911 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106031602 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108063137 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.340708655 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.129815457 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116121508 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185990212 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108006349 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.128572659 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.890305204 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105367859 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112537411 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130300127 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.243543815 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.19226745 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111852098 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111310891 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137500773 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185792004 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211048365 seconds)
  done (took 47.711864882 seconds)
done (took 63.92850161 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256944017 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172064809 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.353979091 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150653789 seconds)
  done (took 1.841896364 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.258709742 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.167765536 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.243455063 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101447394 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250845408 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100443047 seconds)
  done (took 1.983794594 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.172840361 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166607125 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145642137 seconds)
  done (took 1.34840298 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210446388 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.209078405 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.34730192 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236387854 seconds)
  done (took 1.923063372 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.274748577 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119931426 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.129781126 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.228532668 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.242483116 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209297498 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126280947 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.179052514 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132399443 seconds)
  done (took 2.537052216 seconds)
done (took 10.494428125 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.40950839 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.290983139 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.432107378 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.254896062 seconds)
    (5/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.372399319 seconds)
    (6/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.272349748 seconds)
    (7/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.195724479 seconds)
    (8/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.347122726 seconds)
    (9/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.197567696 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.263231179 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.275571264 seconds)
    (12/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.287536411 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.153716894 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113492338 seconds)
    (15/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.283697969 seconds)
    (16/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121153767 seconds)
    (17/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.148458686 seconds)
    (18/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.112547122 seconds)
    (19/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.137474848 seconds)
    (20/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.34847956 seconds)
    (21/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.213267797 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.134887865 seconds)
    (23/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.230669466 seconds)
    (24/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.222785637 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109213094 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113735462 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.148278865 seconds)
    (28/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.429301606 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.155334825 seconds)
    (30/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.141838196 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129871324 seconds)
    (32/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.285925738 seconds)
    (33/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.171076035 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.140310459 seconds)
    (35/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.206992088 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.155111174 seconds)
    (37/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103234556 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113231554 seconds)
    (39/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10691178 seconds)
    (40/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090900067 seconds)
    (41/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.326768579 seconds)
    (42/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109768023 seconds)
    (43/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.21952268 seconds)
    (44/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.193488823 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.149072832 seconds)
    (46/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.16713886 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109707898 seconds)
    (48/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.081303515 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.133072633 seconds)
    (50/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113008251 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.083587441 seconds)
    (52/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.179797252 seconds)
    (53/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.085638588 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109142259 seconds)
    (55/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.165730718 seconds)
    (56/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.111965314 seconds)
    (57/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.211764981 seconds)
    (58/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.088787328 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.13210416 seconds)
    (60/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.089638865 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104667384 seconds)
    (62/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091862313 seconds)
    (63/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.198482751 seconds)
    (64/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.174762203 seconds)
    (65/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.139282667 seconds)
    (66/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.090914322 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105827774 seconds)
    (68/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.197830885 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12744009 seconds)
    (70/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.134502788 seconds)
    (71/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.140688522 seconds)
    (72/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.139323723 seconds)
    (73/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.193747632 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.132774924 seconds)
    (75/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088445659 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124692157 seconds)
    (77/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.176232138 seconds)
    (78/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131489747 seconds)
    (79/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.176227821 seconds)
    (80/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.293435274 seconds)
    (81/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.172097829 seconds)
    (82/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090333007 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.109786067 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12694797 seconds)
    (85/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.173156935 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106557967 seconds)
    (87/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090052949 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.147288836 seconds)
    (89/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114479115 seconds)
    (90/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11481408 seconds)
    (91/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.126163864 seconds)
    (92/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.151149101 seconds)
    (93/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.13944231 seconds)
    (94/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.164029966 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.105004335 seconds)
    (96/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.082680617 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112700389 seconds)
    (98/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.111230148 seconds)
    (99/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.143699548 seconds)
    (100/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.198308184 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.132001383 seconds)
    (102/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.088745426 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129128655 seconds)
    (104/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.085054468 seconds)
    (105/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.157374861 seconds)
    (106/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.089205476 seconds)
    (107/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.086294147 seconds)
    (108/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.089034718 seconds)
    (109/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.108081627 seconds)
    (110/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115124135 seconds)
    (111/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.105956535 seconds)
    (112/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.087287314 seconds)
    (113/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.226906865 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.1053588 seconds)
    (115/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.109693844 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.113912741 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.122403815 seconds)
    (118/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.167340861 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107430226 seconds)
    (120/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11455715 seconds)
    (121/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.082158024 seconds)
    (122/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.114240653 seconds)
    (123/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.113582337 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.105456555 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.111703206 seconds)
    (126/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121947175 seconds)
    (127/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.088483501 seconds)
    (128/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.081980608 seconds)
    (129/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.085240288 seconds)
    (130/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.161229608 seconds)
    (131/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115966459 seconds)
    (132/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.13859567 seconds)
    (133/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.166651868 seconds)
    (134/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155084002 seconds)
    (135/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103572167 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.152155391 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126367296 seconds)
    (138/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.097082877 seconds)
    (139/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.113143081 seconds)
    (140/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.085423011 seconds)
    (141/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.086066621 seconds)
    (142/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.088363827 seconds)
    (143/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105885576 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.132012809 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115866871 seconds)
    (146/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109968265 seconds)
    (147/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129282751 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108199129 seconds)
    (149/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083111509 seconds)
    (150/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088436247 seconds)
    (151/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.11244395 seconds)
    (152/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.086338068 seconds)
    (153/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.086342908 seconds)
    (154/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089981227 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.130298515 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108413176 seconds)
    (157/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.143799103 seconds)
    (158/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135094816 seconds)
    (159/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084155597 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083573317 seconds)
    (161/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091656458 seconds)
    (162/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089665738 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.130366112 seconds)
    (164/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090319624 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.104362407 seconds)
    (166/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089324214 seconds)
    (167/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.10909511 seconds)
    (168/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.086893301 seconds)
    (169/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084968963 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112988036 seconds)
    (171/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089610187 seconds)
    (172/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.142372538 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.135032151 seconds)
    (174/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109578961 seconds)
    (175/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.106697992 seconds)
    (176/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.086750106 seconds)
    (177/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.089279777 seconds)
    (178/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113218679 seconds)
    (179/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.088387495 seconds)
    (180/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.111981488 seconds)
    (181/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.137800238 seconds)
    (182/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.085864998 seconds)
    (183/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.128459702 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12823266 seconds)
    (185/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.08569544 seconds)
    (186/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08633658 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084607883 seconds)
    (188/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115853586 seconds)
    (189/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114716477 seconds)
    (190/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.114766342 seconds)
    (191/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.084216253 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.130967217 seconds)
  done (took 27.976080822 seconds)
done (took 28.842427971 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230098764 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133297742 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114306746 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113148124 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234180942 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120748706 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.157102299 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11564591 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123415591 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138274722 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104088411 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126020499 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.139689961 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.246007996 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.118068074 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105903058 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.130151846 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.125953937 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128720427 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.155324768 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.209333622 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.132205825 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.125250743 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104662721 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233190518 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106023419 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.140825109 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115400801 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12732518 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.138847795 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115766559 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105902231 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.154348161 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.13190643 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104872119 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.139058688 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105798527 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090307114 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.137374794 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.117186032 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126957969 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115118434 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137880322 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106517035 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115246342 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.137531404 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105691577 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118359615 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.128338915 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117401591 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10697683 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.154247423 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.114880036 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.105196048 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.128145771 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.107624158 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125196052 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127883738 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128619747 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104925371 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.128430666 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10660623 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116518975 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104640652 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.139136842 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.106702607 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115126314 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.142324295 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.114413108 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106475862 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128336415 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115357161 seconds)
done (took 10.233998876 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.113324596 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14822823 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.247384689 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.25083026 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.156454486 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.122223576 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118213967 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.153553845 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.120090036 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122247294 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.166351837 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.137596137 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.254343041 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120447803 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.149251515 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.117974012 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115653767 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137720601 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.250235696 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.130456656 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12786943 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.148765016 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.133466834 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14695016 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.110920987 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130743492 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.136732129 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118486669 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108738228 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.151036721 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130218634 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109370638 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.136037686 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127192573 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125495512 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.143137423 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.121757466 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116904452 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.134264532 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110005121 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139661205 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126499739 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.109601165 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.144742938 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118402662 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.125190861 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140811301 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123523089 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110593201 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.140165093 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111637166 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132804499 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.145712505 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125184051 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.122022736 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.145158691 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123345066 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122700126 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.135841909 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122519179 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109120795 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.132753653 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111578412 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129466572 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.137845884 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122281092 seconds)
  done (took 9.914535466 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132720596 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140014107 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144849643 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.121616826 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113840289 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.128480453 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.104267599 seconds)
  done (took 1.803902494 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108838034 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.267996211 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.258070583 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.26010871 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.247747849 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.266614055 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128407793 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104880558 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.168281606 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116683953 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.26790531 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.3219506 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.143708022 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122281314 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.262106152 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.104914955 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.261798785 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.132098127 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122949551 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262621734 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122623809 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.164621595 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118891497 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.106518314 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262140407 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.132780005 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.31135559 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125232602 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114677497 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.144705764 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1218617 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207797498 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.26325282 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120836158 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114961411 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.256938207 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.252452745 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122123265 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.338026041 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.110746443 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.24948253 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119179706 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.149487606 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.121412264 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12020632 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.244445512 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.152705466 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.122533505 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.119642696 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.271224923 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.145000555 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.264050887 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.119655367 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120012888 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.143177564 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1223043 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128260172 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.147723446 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.271851137 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126078824 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.2605602 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.261422479 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.25552553 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.262650043 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130587998 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.264949454 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.244470408 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119891377 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140108309 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.123393699 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.264727744 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120151513 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.14312572 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.224566475 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151865935 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.265023586 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.263483494 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118525876 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.118823369 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.138497378 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.119573536 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.106243219 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.252573805 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146626449 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119733604 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125330094 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144911588 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122370957 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111682871 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.1567979 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.121091709 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117363298 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.151454732 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.121152011 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121510244 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.262906154 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.145510082 seconds)
  done (took 17.943206613 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.112182553 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.108048196 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111534459 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.134540846 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109127665 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.107585327 seconds)
  done (took 1.623209798 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14957949 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121637023 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.155488162 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123942614 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.193203982 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.226339054 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259118185 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141259599 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.141905675 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132235987 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.253667239 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257100101 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256383473 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124939531 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.258317305 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12312261 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.262207431 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.147097172 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129712011 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118448078 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.147268163 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.124867137 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118166669 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.243394945 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.150094552 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.124063085 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113553992 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.1591621 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130703059 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114889659 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.153295469 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.121919959 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11256469 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.141267972 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.262139929 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.114305897 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117443431 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.151102904 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125992507 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121498917 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.257761249 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144371132 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130838357 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.124044135 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141759972 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.114937572 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123446228 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141588328 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.26030151 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124981397 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.124455086 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.147805863 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122958284 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123866673 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.14087709 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1167013 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123877124 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.258584801 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.152019987 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.114819661 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.122745886 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.14827145 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116394893 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.125306204 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.150772146 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.126033898 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112981533 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.148216627 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119948324 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.12115819 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.151866435 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.123412744 seconds)
  done (took 11.929354607 seconds)
done (took 44.12283784 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.577596236 seconds)
  done (took 2.525042347 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.083214704 seconds)
  done (took 2.032236991 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.777694127 seconds)
  done (took 18.760101139 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.418373701 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.349091558 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.985070328 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.175711287 seconds)
  done (took 2.8770889 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.088492554 seconds)
  done (took 2.049955937 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.413891201 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.278778374 seconds)
  done (took 1.650213976 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.710407813 seconds)
  done (took 1.668392178 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.874644726 seconds)
  done (took 2.830049317 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.277782346 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.248047448 seconds)
  done (took 1.490440885 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.671558227 seconds)
  done (took 1.635642557 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.936219665 seconds)
  done (took 17.906876764 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259541931 seconds)
  done (took 1.23080861 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29908981 seconds)
  done (took 1.270907137 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.563531117 seconds)
  done (took 4.534848686 seconds)
done (took 63.421348654 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.126044186 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12547238 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.148654791 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12401218 seconds)
  done (took 1.485432072 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.130386795 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120996924 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124418727 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.146170141 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126814022 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120631523 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.145869432 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.124693064 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119567337 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148040968 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12327066 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120680695 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14851816 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121327344 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118885119 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149152857 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12567623 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120488382 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146596133 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122174767 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121436821 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146433511 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125255666 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124295622 seconds)
  done (took 4.091411868 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.142334661 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.112637939 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113771781 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136920099 seconds)
  done (took 1.480363482 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.134108433 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133363379 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155270898 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129513711 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13393993 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15721899 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120882159 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118073904 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.147184645 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.130628203 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135578047 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159683045 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132194069 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.122282495 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.158387052 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116984634 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.122028036 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.159187425 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12820335 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.153622077 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.124186143 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127900872 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150588347 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.131677627 seconds)
  done (took 4.253620005 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.202022108 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132576532 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175059597 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166361062 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176522287 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119670805 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148407661 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1539066 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.128466323 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.128908515 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14829849 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.168431337 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152737032 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.125054147 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.122902013 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152812127 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130663274 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125718621 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.189777529 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12480807 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12554427 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.159677914 seconds)
  done (took 4.232094215 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12983346 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.112388637 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.135207204 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111973385 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12415091 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.160632217 seconds)
  done (took 1.74972047 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.115848895 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.106552103 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106603569 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.133116962 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.111433972 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.107008761 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.129530917 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.108251088 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106711532 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.106372398 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132341949 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106816004 seconds)
  done (took 2.344497193 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211760137 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150637394 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254978506 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390106414 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190539985 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160637525 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.314684048 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18957408 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178036763 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167362493 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207798415 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167908795 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155451602 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216905262 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173206869 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.164153958 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20055831 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213487875 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1709419 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241597706 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159612279 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207327473 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217836312 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152231964 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141805892 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197766388 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122714437 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158620222 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16960573 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195196068 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203132101 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153523356 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14344942 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213744797 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265398779 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208467256 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296267811 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138946438 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.20197418 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.221665827 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232935905 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169329903 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219806555 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15495371 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131185976 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220195478 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180926839 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189084541 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.163325215 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148611641 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211620906 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180602684 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198569496 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139620108 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.328222424 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163443956 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143665177 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207396225 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188722263 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232279763 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211788588 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125902331 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199646553 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218722541 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21774542 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173462 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.168605432 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155598661 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165533591 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.237542687 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215791063 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160496004 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223762735 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134006192 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20275514 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194759737 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158027382 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237490457 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173886123 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.151738472 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15388865 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164887936 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129872817 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189570681 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154516188 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244929142 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136111417 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.211470761 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179188012 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182364256 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163542178 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191046263 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162569713 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178379165 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.106090486 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144568538 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.191247238 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159398907 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161268582 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152433853 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171527614 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129613568 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15289264 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.155305579 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170571409 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.165916458 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159515559 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200896518 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.133686138 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209896294 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148604782 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.19193151 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169037426 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224644826 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158952446 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136612442 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252912977 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172314108 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.167004646 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172557291 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227266116 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.155113613 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168035177 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167087104 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221554056 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172109371 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201671644 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171802176 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138095842 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170332347 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174875674 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191027843 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161994363 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157642221 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.168036741 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217509932 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12824008 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17031646 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184596045 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165953415 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128325329 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138243378 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169094407 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.144019433 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.183878455 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.141538781 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183444341 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169848537 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197504056 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159352619 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16532638 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175097533 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164155895 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.172278286 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178841132 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121857584 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204128307 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197623618 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162322638 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180986242 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.191337912 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207923999 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178261035 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158495639 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184247937 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129351525 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.153477002 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1646108 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201634312 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191879884 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189997851 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207882385 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.193994503 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.165161329 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180033067 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17006084 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.216140954 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185761575 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14272355 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172804742 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203715888 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123227882 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.155543241 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.130040856 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138251951 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16188499 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138663875 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212002534 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192962486 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177627446 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195962489 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14012222 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224280845 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127503347 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19171889 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176975273 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17235868 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188507165 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222931779 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213439489 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142174777 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19714502 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123151762 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127579125 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.166115257 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16092389 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171712446 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13814163 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172557642 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191672772 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199982883 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150087313 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220363228 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195056445 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230645805 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.124901498 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162878088 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196876718 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169166452 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.21451838 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136289623 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.188743548 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193934272 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175028062 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192155952 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199709347 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210902314 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196883561 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.196911068 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133707043 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176909989 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161752006 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169586702 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162265938 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142888292 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163151226 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149410886 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.171259316 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143345612 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21715658 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145349356 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207077197 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.1843718 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171372328 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155647974 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145892508 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203037604 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149976313 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108533451 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19838548 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221543458 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154396897 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181572504 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171450041 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131630079 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.351673823 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211234005 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172700356 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169277105 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142505984 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202245505 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160471473 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191310803 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186282442 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175790061 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2097217 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204001662 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141296162 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165132101 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149071375 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182510311 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.142202715 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.185954939 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.165449021 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.176056756 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189147008 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170078909 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171794451 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211406925 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147339017 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.183595048 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142489593 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257071372 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200718664 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177058716 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.200681233 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164428584 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215739974 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127952181 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128360785 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.16661398 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186015293 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163852274 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179416587 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19775887 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209923724 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203947045 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164592229 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171849754 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.133945353 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166983019 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183844577 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211374064 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143014338 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.168644712 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189446924 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159930501 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134258752 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160654432 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32383291 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181627323 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17080712 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.11000923 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.314631204 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135229772 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16151119 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158710259 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200823921 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134378712 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.215149832 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177627091 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172242804 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160813388 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166369866 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177489791 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210682226 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199258957 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176359404 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.178121915 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162614336 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189234543 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170805991 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179165606 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.148832934 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193162093 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194684243 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205749549 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133183641 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202332604 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171466793 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205167281 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203649899 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14466693 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214073073 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133460717 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166780976 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173052391 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125628778 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193271447 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193411104 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136343935 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17269857 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207960654 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132780842 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161700838 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148945154 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199944523 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143556652 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.162110425 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189376258 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.163666207 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183876452 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246890164 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132332685 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201265628 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144156665 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163188143 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142052099 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146191864 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168266405 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175310058 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208832444 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133264956 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208047658 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167186798 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196731349 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154052599 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176045941 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.267147532 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.163344213 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192091584 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183552914 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196802297 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182711692 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17620805 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204793257 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150433108 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201905835 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179007851 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226075434 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197042025 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176687736 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163637971 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150086631 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139713822 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.169301362 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152789177 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202907803 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144249253 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.167561262 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.171103854 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176527342 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.149704742 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143653682 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233082148 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151664721 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220856472 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220247263 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139527067 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211540317 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205424377 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135139004 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165407149 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2041174 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145938611 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186895323 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135757257 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.172063669 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216898022 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.160823875 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16222217 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207650901 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170405909 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205105045 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136869552 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212914338 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142827085 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210797935 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129250276 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.185600355 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171900893 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168984756 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130880679 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200576568 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1671933 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.197826932 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146281494 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178980214 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227436281 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125894973 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167553974 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289883837 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195265845 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225926431 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138899952 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13763487 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180361407 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161220027 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.199932115 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172933205 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.164157945 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132571706 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.175483156 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160892942 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141997926 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199169638 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212960828 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159458258 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216019901 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137419974 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286521741 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145410413 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172162257 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.151912434 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131575486 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171594382 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138203903 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143712828 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210849554 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249413293 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165228889 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.180329895 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13656638 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.158896368 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133879036 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161043668 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185041226 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169588527 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181420805 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107658536 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172064339 seconds)
  done (took 86.622231916 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181754482 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.178727651 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.189716441 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.239479163 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214358539 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.309352264 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.251775168 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267528587 seconds)
  done (took 2.888549074 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.128272982 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162285554 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143994023 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14652213 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.1132099 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.507818927 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162983082 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124802455 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162745391 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157267529 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13954941 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.569442096 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119992703 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14802983 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125806775 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.139160145 seconds)
  done (took 4.109323359 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.091325374 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.540545378 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.973639078 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.307005508 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.244464355 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.236081177 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.784142763 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.200659373 seconds)
  done (took 12.436503467 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.178373735 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.694536407 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.464079355 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.341782189 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.217521972 seconds)
  done (took 2.964340265 seconds)
done (took 129.622521959 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.131100447 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127274895 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126437121 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.158468263 seconds)
  done (took 1.603145536 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.204393831 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096101992 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.127927161 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.096106201 seconds)
  done (took 1.593912198 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.397819328 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.096059876 seconds)
  done (took 1.58240431 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153292308 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137035368 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.172548688 seconds)
  done (took 1.541597158 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.145406145 seconds)
  done (took 1.216264357 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124692822 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119974357 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.280114436 seconds)
  done (took 1.596663002 seconds)
done (took 10.202453895 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152136239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.933297063 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.453759565 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137870304 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.744485799 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404297478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.465537676 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.181322794 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187108046 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.144794816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147337873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694287991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.484267862 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.882616813 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.437001878 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.915249909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.700213379 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114926231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.151006518 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115359618 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.445005519 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.143716441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116083241 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11613914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.726829997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424304066 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113086002 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.925030614 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114034094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118858059 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.434481431 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114803437 seconds)
  done (took 21.303321511 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160104663 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170131743 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.165116747 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11603741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117020815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.148211535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126348466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155902322 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189879465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113867574 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.167783103 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113182295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118551659 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.146302611 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139167998 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11387996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.150016296 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117104377 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120903063 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.147780082 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137139699 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112364215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.14638119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117867879 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113796256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.167324451 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115066581 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.153936812 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117065532 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120939235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119645861 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.146080929 seconds)
  done (took 5.449797659 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.169357534 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179859876 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.167165708 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152818226 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193529232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116918297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.230013967 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155222904 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.222361625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115823317 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135467181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.145507731 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155252116 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115183254 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.173151035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114249821 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145010175 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122530449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122088817 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144819213 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138546086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11327096 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.145347534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119776476 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1145198 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.166486509 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115808816 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12679421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.144692377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12024336 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120677433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.145089649 seconds)
  done (took 5.730746616 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.136392561 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131425437 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.138418286 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.169021205 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.124992246 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128681034 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.160733284 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124994238 seconds)
  done (took 2.196972413 seconds)
done (took 35.757678786 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.143954768 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.13106394 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135097212 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.160179659 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.27786709 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122615033 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.132485242 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.153404424 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.130808972 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136262182 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.114892027 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.15617492 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135324092 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.125608253 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.274162609 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.161969807 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.280444537 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.246395924 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.157691417 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.130948061 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124150389 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.280531295 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.161173429 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.125126081 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.273929946 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119002158 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.269650139 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127323971 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.157047171 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.116346533 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.28321495 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.126275534 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.123534031 seconds)
  done (took 6.668515606 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.236972058 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.157207223 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.125666545 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.124115811 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.125581394 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.153925026 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.232224233 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.158568267 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.125290388 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.122911669 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.155011344 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.215518656 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.163564659 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.120906147 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.126367132 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114624817 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.266575511 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.155764255 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.117466008 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.098748986 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.119457358 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.154813542 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.245739114 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.154079187 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.126359964 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.123614026 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.155120892 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.130388941 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.126143596 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.124781493 seconds)
  done (took 5.652871197 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.135638728 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13727174 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.142397589 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.222000898 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152239527 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.167406097 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140303813 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135070976 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.177832497 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118426096 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.133751123 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183276405 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135133524 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127283667 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147778418 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133094545 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133924487 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147612616 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126861814 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135484135 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166426999 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134372425 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13862809 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154579332 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117631869 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124003239 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.156069127 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128919353 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124060751 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.159509699 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.120754313 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119598191 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.118976799 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.183495142 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.118333559 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159542654 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138664433 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130575167 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159795475 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150940468 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118796686 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147540178 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144997867 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.174028558 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.148801638 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129065034 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.119523052 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131492148 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.145882264 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13835913 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.188397997 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.118537861 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136925612 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.145141284 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.116669736 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125185038 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.116382256 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.150849564 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131976058 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117649012 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.168113594 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126701857 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127840137 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.147154769 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130499409 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115889852 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.116028999 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.15086582 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143553219 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124473547 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.187357181 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.116954498 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127922228 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.160670758 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12913548 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129184778 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.147387166 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128897918 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127906485 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.151278093 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129891353 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.121340124 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.147599243 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.134348792 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136558983 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.161270832 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.129396578 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126951551 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.149058927 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.120080327 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134441192 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.147839411 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121886459 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129794509 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117239318 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.151862687 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12832739 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125977194 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.145465891 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.144238756 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119692882 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.146708723 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.144813227 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120008157 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.149805355 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12804132 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.158767301 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.146731823 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126932522 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127965799 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.116950965 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.155224002 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118850862 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.116656865 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163449953 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.133661757 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124077829 seconds)
  done (took 17.349700442 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.381032362 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.362641544 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.213852327 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.411738918 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.162819597 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.251983872 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.394611173 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.367568555 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.117324023 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182275916 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172892102 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.327867861 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.150997187 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.145340538 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.368359629 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.44409132 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.14647211 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.186637069 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.1517686 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.16379926 seconds)
  done (took 6.211381306 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132506917 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152141718 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169608152 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.136676052 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.128223188 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162145383 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119826561 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139516015 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158870339 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126779071 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.120710199 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.125243939 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.160912261 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133720869 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13258452 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.182924637 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126848609 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121547617 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.169668928 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121982133 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.105760623 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.172663521 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127387456 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.139256846 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.169265603 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.128621755 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11632422 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.153879247 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124786189 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.125850031 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.151108877 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.127690374 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.124903189 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108320544 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.160178772 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.132867341 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.123716162 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.151753009 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.1240556 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.119073256 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.161655083 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.130892186 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125228965 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103122585 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.166653355 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114695694 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.131271366 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158708712 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.111151803 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.137982044 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128348057 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.163207632 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126085048 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137954974 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.155136115 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.135055952 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127053704 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.162558275 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122638594 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115749805 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.146768761 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.121471985 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.125587787 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.162058252 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133168588 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.125741132 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.125359292 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.148598104 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121696316 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119240261 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.150516742 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130869891 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137384695 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.158032618 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.12485339 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127016672 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.15675728 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.099291044 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125992839 seconds)
  done (took 11.882095615 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.148532561 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128562186 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13408114 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.184205227 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128640894 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.122991044 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.158034426 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137918191 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130891323 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.167688862 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132200163 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130689952 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171090198 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.1283037 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12688587 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165396391 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13124527 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.154545861 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160856492 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144046407 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162445348 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123951241 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130235471 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.128449102 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.177474785 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.129233223 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173995136 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130854086 seconds)
  done (took 5.165922758 seconds)
done (took 54.017240084 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.282978689 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.458907709 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.232471267 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.233493985 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.268133882 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.238635698 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.231264644 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.233213752 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.705701908 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.204017271 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.234077888 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.228091838 seconds)
done (took 28.669689584 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.349420706 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.368127102 seconds)
    (2/2) benchmarking "String"...
    done (took 1.543688888 seconds)
  done (took 4.031155905 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.223256292 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.223231685 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.465853147 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.22353471 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.223948558 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.223998567 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.224301061 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.225546119 seconds)
  done (took 15.92303308 seconds)
done (took 25.640365654 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.249522812 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.516804935 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.493669837 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.201750868 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.223061884 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.222459742 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.221606949 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.267652126 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.229011971 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.199292689 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.657413316 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.507769571 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.224612021 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.630887882 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.198734125 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.227727606 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.244559681 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.56108793 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.221405994 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.252862827 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.199499888 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.198151918 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.237859469 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.226136961 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.241851052 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.230404156 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.268399953 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.231223823 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.498104288 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.222897523 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.212340006 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.241567798 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.270014576 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.234965702 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.225879239 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.237883227 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.514708181 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.241108442 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.203963367 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.225915097 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.504233361 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.239041833 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.231863254 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.222527814 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.202952602 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.234628518 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.204043225 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.3387868 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.24720069 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.239333652 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.273506424 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.646317632 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.234827033 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.248539005 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.230053255 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.548557245 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.247341823 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.310212136 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.24156571 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.265132494 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.23446302 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.224253029 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.236866794 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.226290176 seconds)
  done (took 145.659631555 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.22697933 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.228367586 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.227040438 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.252698923 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.223048276 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.222395829 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.229447613 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.226145096 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.222999767 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.248290955 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.226807562 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.226089466 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.230730923 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.250790508 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.238288775 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.246672658 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.224282223 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.225402382 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.250184636 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.226749164 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.255352829 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.223595177 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.231240074 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.230743702 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.262727238 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.298142467 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.232341608 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.256286361 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.235438205 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.230223595 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.224389266 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.273762205 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.877265727 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.09959602 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.234205083 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.251261063 seconds)
  done (took 81.18362301 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.230753651 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.229870649 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.230882783 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.230380704 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.266090075 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.231458742 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.841612558 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.842531164 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.2916624 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.493354729 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.634880385 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.473175159 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.226402301 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327442033 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.242594281 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.227638998 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.326875721 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.253070031 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.234645712 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.23304623 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.842816203 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.244481863 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.238836226 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.414811179 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.24618968 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266892221 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.624671555 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228667198 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.269125942 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.570115261 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.277670614 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226075752 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.61137806 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.319358434 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340706711 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.231438924 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266244026 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.234399852 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.518760364 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.230382833 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.234980029 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.236883034 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.865100007 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.229286876 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.847169278 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.233922938 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.20806793 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.230478752 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232309458 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.674954833 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.906476396 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.228630121 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.232642053 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.233858923 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.236470351 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.234575716 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.234809064 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.270268093 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.637133431 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.112630807 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.22929875 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.238118819 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269266907 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.234309358 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.816683756 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.231132242 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.265923421 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.289299223 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.375265233 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.845584067 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.236973506 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33155814 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.353818135 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.229560494 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.235820668 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.236022615 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.234054183 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.347484933 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.229355676 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2337317 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.035488595 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.414617332 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.247586734 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.719432526 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.237098929 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.338935823 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.233365129 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.582518934 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.229776615 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.234228045 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.972369482 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327596259 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.23234279 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.23728518 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.235939415 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.039412858 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.845836121 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.536615254 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.237889067 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.911126577 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.238657234 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.174083477 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.818010623 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.870665918 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.23400561 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349171708 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.413394538 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.248634757 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.234963534 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.673278185 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.2344623 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.297761689 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.23331466 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.637757071 seconds)
  done (took 382.681633166 seconds)
done (took 610.636543135 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.216434463 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.211978079 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.211635145 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.216699665 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.213676903 seconds)
  done (took 12.192522186 seconds)
done (took 13.311335442 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.454376419 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.445077231 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.441438973 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302824252 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.454948463 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.459832614 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.360877924 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.307978524 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.432319612 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.459749612 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.449644569 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273375062 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.459405548 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428663453 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.255851084 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.35579131 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.3872437 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.385904929 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.326256239 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.354128552 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.481370376 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276578765 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272940238 seconds)
  done (took 32.948157472 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531917615 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.249350192 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.304037545 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516680722 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.281669558 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530783635 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.576461408 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.249708289 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408640245 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2629769 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261403506 seconds)
  done (took 18.299937628 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536522897 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.248658808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.321982223 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524526048 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.282736943 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.52926519 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.565007132 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.249510962 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433102551 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263434758 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261885022 seconds)
  done (took 18.339110914 seconds)
done (took 70.705507288 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.284261387 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.346008621 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.275970058 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.262985452 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.259297137 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.257657889 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.26399026 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.258557845 seconds)
  done (took 11.333337876 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.257368258 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.258797455 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.255219176 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.257059654 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.256170222 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.258182339 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.256844975 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.257837402 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.258385809 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.258190986 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.257017011 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.25962172 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.259701855 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.258385643 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.260143003 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.257600469 seconds)
  done (took 21.258692686 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.261388714 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.258766182 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.257935946 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.256360754 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.254973257 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.258758306 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.258832894 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.258886862 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.259591523 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.257108289 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.259076938 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.257753725 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.260333649 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.259325073 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.258199185 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.260335049 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.258199021 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.259690434 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.261698098 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.260624978 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.259345383 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.259892388 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.262219177 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.259704298 seconds)
  done (took 31.347941852 seconds)
done (took 65.062338619 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.250304586 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.247111152 seconds)
  done (took 5.626683675 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.318020458 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.32081911 seconds)
  done (took 3.767262008 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.260110737 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.260442541 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.260031181 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.261024484 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.259423958 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.261910866 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.258510916 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.260497595 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.26053658 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.259676367 seconds)
  done (took 13.733124366 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.264183476 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.262113377 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.261040648 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.262100663 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.26285807 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.258598477 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.261184546 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.261691861 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.262574878 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.26168031 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.260548424 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.262663105 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.260523438 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.262828195 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.260481156 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.261756578 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.263139716 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.260757103 seconds)
  done (took 23.842935119 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.277374405 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.282641282 seconds)
  done (took 3.688294371 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.391826905 seconds)
    (2/7) benchmarking "second"...
    done (took 1.304814038 seconds)
    (3/7) benchmarking "month"...
    done (took 1.36732059 seconds)
    (4/7) benchmarking "year"...
    done (took 1.358203519 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.301706276 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.283345806 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.304718772 seconds)
  done (took 10.442246341 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.252089136 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.546754805 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.734780295 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.411016548 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.239767539 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.271252787 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.226782289 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.286587642 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.273338587 seconds)
  done (took 14.371656738 seconds)
done (took 76.599006733 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.247360249 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.276204292 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.279293434 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.260645782 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.605959401 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.290276074 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.250394576 seconds)
done (took 16.341391724 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.238204298 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.241825252 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.240739914 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.259614707 seconds)
  done (took 10.111431409 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.258485013 seconds)
    (2/2) benchmarking "read"...
    done (took 1.574658431 seconds)
  done (took 4.967505512 seconds)
done (took 16.211108459 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.268777219 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.262384634 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.263354624 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.264946363 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.262561047 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.261789339 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.264978554 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.264041426 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.265441199 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.265810807 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264340856 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.263947232 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.265243275 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.265380883 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263961808 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.265077668 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.263088546 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264383397 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266239946 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.264996678 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.265658081 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265194539 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.263813812 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264509645 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.264698678 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265441802 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.263097847 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.265048717 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265912287 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.266948297 seconds)
  done (took 39.074265343 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.273435709 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.270449004 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.263669763 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.270095292 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.265205073 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.266365093 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.265950714 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.265168053 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.265878152 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.266563173 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.265978231 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.266370086 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.266478693 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.265902679 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.267245633 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.2681708 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.266609995 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.269264928 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.266543796 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.269544119 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.267162987 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.267662711 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.266416746 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.267006378 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.264672053 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.266151143 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.268184176 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.267896535 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.2666901 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.26729677 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.268504171 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.268206778 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.268906613 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.272198308 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.267365078 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.269277356 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.273204617 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.276982804 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.267053959 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.267607244 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.270352915 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.267402614 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.269342585 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.267417406 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.269641713 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.269171488 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.268086703 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.269929084 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.268308339 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.269678145 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.266153203 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.270374072 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.270237158 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.268134947 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.269068771 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.270241538 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.270161366 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.270218627 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.269218133 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.270293164 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.26933412 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.269250844 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.270862207 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.269108699 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.270405061 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.272157844 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.269842849 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.271251976 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.270655606 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.270779601 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.267942574 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.270111878 seconds)
  done (took 92.476078866 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.269597863 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271585143 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.268060322 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.270634353 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269618415 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.271778665 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271503968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271426609 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272192815 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.271262081 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270992087 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271285749 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27126591 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273266734 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269959372 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.271633795 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.272602325 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270611251 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.269602893 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.272333033 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273775116 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272989103 seconds)
  done (took 29.105102902 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275745175 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272137683 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.271271409 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.274760201 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.272350606 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.271326254 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.272489114 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.274819145 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27415286 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274588041 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273969846 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274112328 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279232835 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273490353 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274134869 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278922243 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274488566 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.275147804 seconds)
  done (took 24.074106292 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.273570873 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.274870148 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.272252779 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.270406245 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.273556833 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.27388849 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27394763 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.272486952 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.273138387 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.274508118 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.272779054 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27110622 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.273676021 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273748366 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272832902 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.276361121 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.274826161 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274171055 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274125729 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272987644 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.274844655 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276243923 seconds)
  done (took 29.158755024 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275724775 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27611027 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.27600669 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.274478315 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.274988954 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272099619 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.275591282 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.276844911 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.277238471 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.27506501 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27612973 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.276020201 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.276889876 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27482037 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.277179573 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276306048 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274646513 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274603886 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275379661 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.276793853 seconds)
  done (took 26.65373894 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278238776 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27995541 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278551857 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277601178 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277598345 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28042586 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278368517 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279836968 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280120365 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28617855 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275281072 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280038388 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278122848 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279959206 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2781354 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278764161 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281297128 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279560523 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276786721 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277343579 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277044478 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28045383 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278048581 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280817147 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281115999 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278074866 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27989699 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282011987 seconds)
  done (took 36.962453885 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.298475937 seconds)
    (2/2) benchmarking "in"...
    done (took 1.296682049 seconds)
  done (took 3.735838573 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.278524046 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278187146 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.28075626 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.278348626 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.27922422 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.277984799 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.277803703 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277294287 seconds)
  done (took 11.375792681 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.272613266 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.28053177 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.278654237 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.276466563 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.280077221 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.274450772 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27902191 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.285020464 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.270343161 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.272771827 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.277014531 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.280152949 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.275680978 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271284863 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.275734198 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273507497 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.278466776 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.282406195 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.281622438 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.282839782 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280903054 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278162346 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276451406 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.283421788 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.270503156 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.285052324 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.279647241 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.283884827 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27379442 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.278486193 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.275378045 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.284043561 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.281732703 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.28428119 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.281779637 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.283819276 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283631348 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278263972 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.283174907 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285296263 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281793372 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.282849538 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.274061623 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.280489012 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280932928 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.285599069 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.281227253 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.281725335 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.272828169 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.27929481 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.290418246 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27272323 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.286999222 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278641857 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.282010226 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284657681 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.286592116 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.275399017 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.281694577 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.284113486 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.293526995 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.291048929 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280113623 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.286152272 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287806698 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.300139499 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285791903 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.288767626 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.28096663 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.279587638 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.280068577 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295497096 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.294951371 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.289092805 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284011054 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.28488696 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274882944 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29079034 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.286055637 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.287907121 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.287732339 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.282822211 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287612059 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299452184 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.280792169 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.287876325 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.28381474 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.283306167 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.276810722 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290283048 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.293889872 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.285638691 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.276961766 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.28154339 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.283887955 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.287314178 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.277146287 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280677942 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.288620834 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.285237154 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283555855 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281322097 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.288949727 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288221841 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286713343 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.287233631 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.289836832 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279256119 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.293123113 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.292781637 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.286108653 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.278312679 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.284074068 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.290449943 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280312878 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.287166649 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.290279928 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.284466066 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.292319243 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.286559601 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287237365 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.308380883 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.291076341 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.285916586 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.280316536 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.295313497 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28594714 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.284217337 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.294665468 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.287344858 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.285385009 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.285226377 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.291245692 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.280312818 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.29158834 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.281307004 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.290686987 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.288578909 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.284829549 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.284669563 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.291718005 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.286957483 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.289178632 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.293604653 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.297166866 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.28913158 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.295286033 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.288487592 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.289122927 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.291826967 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.293162817 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289562019 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.282637926 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.294687472 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.283103317 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.293997818 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.285810777 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.291771205 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291548711 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.290565873 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290337281 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.2828914 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.291125707 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.294143409 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.287982118 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.289159726 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.29767179 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.291006528 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.290691718 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.285138061 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.293692227 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.282852985 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.287653696 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.298948955 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.292843502 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.292694259 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.289449566 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.299552105 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293338931 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.29254811 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.287973988 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.295325403 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.299215464 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.297181554 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.298121272 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293775978 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.295123777 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.284716663 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.290694932 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.296979958 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.288211059 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.301725243 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.298335783 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.305703814 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.288585624 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.297402425 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.285698626 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.297652045 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.291082481 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.299915357 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.296090551 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294618885 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288159706 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.300004517 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.291462087 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.301051627 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.288150241 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.299067342 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.294840862 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.294662528 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295075865 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.287106858 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293404836 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.29845566 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294095509 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294438999 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.287351664 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.299815402 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.287986535 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.292017173 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.299537007 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.296021496 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.300482135 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.302490872 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292883389 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.302501397 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.296448459 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.292200797 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.301430021 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292545306 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.297958065 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.301524028 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.298835661 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.2936148 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.302705299 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.299473099 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.291391737 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.298871772 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.306207146 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.296023862 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.288562329 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.304992312 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.299583226 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.296948063 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.296878942 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.29375208 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.301054201 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.299823739 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.30757875 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.292211661 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.302579836 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.293461891 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.303321161 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.294242097 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.302067631 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.295623387 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.302523796 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.306706814 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.295670795 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293085451 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.302399383 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.300687547 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.297492431 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292033067 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.302466433 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.298410896 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.302003842 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.299716419 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.297146389 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.302822838 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.292465151 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.302032017 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.293625661 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.309295317 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.320078457 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299941273 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.304169539 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.30373826 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.303172321 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.301322401 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.298431144 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296770933 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295555534 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.295425913 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.295174339 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.30443362 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293384469 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.304112471 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297595993 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.301527462 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.303498387 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.296718254 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.292516164 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.304136659 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.300553782 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.301385039 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.28942227 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.304726705 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.296797871 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.302242096 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.301134747 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.297748643 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.307362506 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304608762 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.299352909 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.29765884 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.297839521 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.298074324 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.299943284 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.308557787 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.299022576 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.307974163 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.294873295 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.303142424 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.297730593 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.307454843 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.309674 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.299795048 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.311013566 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.305694 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.295044806 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.298457896 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.306850181 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.308257485 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.313993394 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.296570925 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.308314959 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.300884389 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.301885177 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.302652828 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.301725449 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.305587861 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.302576112 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.309239793 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.308067816 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.301497547 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.305574174 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.313446138 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.301588615 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.304330977 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.293253874 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.306835223 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.312786833 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.301567008 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.304716543 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.299886848 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.307937403 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.304091326 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.304867579 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.304330574 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.30429947 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30820521 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.310023042 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.307728266 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.306721335 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.307757496 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.316500284 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309969777 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.319837483 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.302427048 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.315366808 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.306716809 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.29816309 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.302133208 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.300849357 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.309165915 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.298166583 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.311177745 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.305629195 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.302620588 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.307184466 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.313946791 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.300396638 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.311173164 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.327199744 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.299149503 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.308060646 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.305821733 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.30135148 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.308486583 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.307261048 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.299316381 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.302959139 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.30841154 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.314951128 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.302385752 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.310583141 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.302269984 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310575057 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.308535768 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.307032381 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.309834241 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.308426694 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.301216561 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.309897797 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311813236 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.31849054 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.304254322 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.31017326 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.30236101 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.316752118 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.319211543 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.304181765 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316573774 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.31006766 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.304702185 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.306912179 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.315473345 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.304227519 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.310556687 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.301271688 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30504863 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.307902798 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.313462949 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.312220013 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.312745768 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.304362378 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.305704128 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311286244 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.310334085 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309517294 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.308494149 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.316487803 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.302780066 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.304420164 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.31345988 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.303857887 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.3151008 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30413882 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.310547772 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.309712203 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.313049786 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.309625779 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.309669372 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.301322259 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.303807856 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.316203069 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.316206663 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.313968849 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.310390281 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.316474178 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.304826177 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307054502 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.311629103 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.307468289 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.307852152 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.315314805 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.305209277 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.307462475 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.305048318 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.313647786 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.316928112 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.313540398 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.305989971 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.318995543 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.32204947 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.316915065 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.304822703 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.310667602 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.30955726 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.313697446 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.31216277 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.306359686 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.321607146 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.320179926 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317370489 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.31463242 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.315252869 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.307782763 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.317934517 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.312810176 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.309990909 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.322256926 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.3077257 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.319314255 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.312459428 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.311910048 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.305236997 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.309822254 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.312762624 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.313680468 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.318615459 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312111441 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.318193905 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.314148597 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319845794 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.315325086 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.315793763 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.312436237 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.304608636 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.315695786 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.306825237 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.317034927 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.3181163 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.312481274 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.318527432 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.315705963 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.309418621 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.317043296 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.322769058 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.315325101 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.307967 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.316547714 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.32226984 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326971618 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.315473601 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31058443 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.314364308 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.321261697 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.314979381 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.313847645 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.307684069 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.328252021 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.326980379 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.309520192 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.31559093 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.320307025 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.325997542 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.31571377 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.313767056 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.31163547 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.316383378 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.322952901 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.318756217 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.320165976 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323661157 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.314405224 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.3211234 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.311356584 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.317188655 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.319388539 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.328938363 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.318461443 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.314626794 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.333126726 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.329569631 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321381335 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.34633061 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.326573544 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.319246082 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.324144893 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.3104031 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.320009568 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.315092123 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.324178096 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.319295481 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.317831706 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.32013565 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.311021309 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.324508101 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.328724436 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.328767946 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.3173112 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.310859092 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.315976015 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.323767381 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.319630172 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.320126769 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.316253522 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.317809848 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.318406905 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.314369221 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.331758848 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.337994498 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.325376952 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.320934965 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.320534505 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.320518202 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.32573657 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32111925 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.327155805 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.32206098 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.321444562 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.318529818 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.330569167 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.321402489 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.314314232 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.315324931 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.317650053 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.324481764 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.329418691 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344052434 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.323116788 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.324908323 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.325190002 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.321980038 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.31409935 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.324665311 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.323111059 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.316530929 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.319103044 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.326489609 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.323307863 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.323922387 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.315242757 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.330795552 seconds)
  done (took 776.764364685 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.322471391 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.323396207 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.322084775 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.321962128 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321224711 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320917553 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322733625 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.320724099 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.32097211 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.321596797 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.322369529 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322463665 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.323265436 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.323036738 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.323043411 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.321281573 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.324810156 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.321239757 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.324336889 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.323503317 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.323963782 seconds)
  done (took 28.95122864 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.323892853 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.325691464 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.323039435 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.323646158 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324308424 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.324100419 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.323729676 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324714887 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.32494657 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323227796 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.324355503 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324934255 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.322952814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.322403268 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322718663 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320869613 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.322576121 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.32428275 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.32259555 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.324132443 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.323346552 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.324860147 seconds)
  done (took 30.306446689 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.327036985 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.324957986 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.320115787 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.330179982 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.325416755 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.324778073 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.327224366 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.325207753 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.323757796 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.317234778 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.319605289 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.320044442 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.325061252 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.331100824 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.322090051 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.332971506 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.323478536 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.327979793 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.325311484 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.327721035 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.329078284 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.338213912 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.329822201 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.316045373 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.329590369 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.328078299 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.328372193 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.325537026 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.320159209 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.331061822 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.326446809 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.318898654 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.332542882 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.32936495 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.321853731 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.332423008 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.325676974 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.33007611 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.326781911 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.330362738 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.35136677 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.32895983 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.33226317 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.342740943 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.329007736 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.320188557 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.334147172 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.329460614 seconds)
  done (took 64.9080692 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.327973493 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.327776884 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.32548262 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.326411372 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.32798293 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.326298625 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.327535143 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.328228577 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.328817276 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.327931463 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.328378661 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.327256509 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.33003701 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.329105784 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.328991371 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.328618191 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.3295117 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.329854143 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.33035845 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.329267247 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.329302221 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.330990177 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.328706668 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.330320649 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.328645935 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.330613852 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.329358088 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.328986315 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.328539313 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.329526986 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.331559917 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.330046762 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.33140706 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.329801631 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.328349518 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.327246603 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.332408526 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.330450082 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.331625559 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.330724545 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.331266934 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.330461546 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.330374742 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.333365394 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.330059194 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.331850442 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.332533817 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.331821372 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.331882599 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.331333734 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.330653528 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.334346053 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.331120426 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.330519915 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.333123761 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.330800976 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.333435138 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.332704893 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.331342798 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.332578752 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.331514309 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.331074575 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.333459133 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.332006313 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.332505831 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.333328529 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.333924902 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.334415418 seconds)
  done (took 91.648682176 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.331804168 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.333481225 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331901271 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333475164 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.333641246 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.335721691 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.334994091 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.333703317 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.333050308 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.332986076 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.335292432 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.332980218 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.332409847 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.335421063 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.332912221 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.333511553 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.336503599 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.335023454 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.334128175 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332356932 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.335023904 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.333793632 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.336857518 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.334722827 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.335759937 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.33614075 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.335444092 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.335403006 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336748192 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.336919563 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.335239063 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.336371757 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.335115622 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.335846337 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.336676706 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.335175987 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.336689738 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.336691821 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.336004683 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.336586785 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.334437785 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.33770192 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.336525471 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.336580498 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335954378 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.336541987 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.335476739 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.338359069 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.338572119 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.339292786 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.337052913 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.337939764 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336897558 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.337099621 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.335937316 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.338135458 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335519317 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339733646 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339183069 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.33963387 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.338053728 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.337694005 seconds)
  done (took 84.008066042 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.336924474 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.339542522 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.335663561 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.339064243 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.33935017 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.337172624 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.337092761 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336052786 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336266078 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336989561 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.339823262 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.338089246 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33697687 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.338897945 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.341137372 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.340978388 seconds)
  done (took 22.601726368 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.343883409 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.338188448 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.336064572 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.340344636 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.338049834 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.337670867 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.337018983 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.339030242 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.339569823 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.339192108 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.339330864 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.337449382 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.337847572 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.339076432 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.337650539 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.338904625 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.338279685 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.340504909 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.343497613 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.339268947 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.341956472 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.337354716 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.336819871 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.339332714 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.340588353 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.33896063 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.341359379 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.339268197 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.336903402 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.340014117 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.34097182 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.340611531 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.340820173 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.33877465 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.34001299 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.338596887 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.34107845 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.34035545 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.34163743 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.339555493 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.340729023 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.338401105 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.341537783 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.341286967 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.33930706 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.338726487 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.341168037 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.340068144 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.341263518 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.341853154 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.340585157 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.341235664 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.339316434 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.342348128 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.339580096 seconds)
  done (took 74.881709939 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341538654 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.340357072 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.340546799 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.340390868 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.341886832 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.340584247 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.342964541 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.342199267 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342341959 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.344767548 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342048018 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.343110923 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342086028 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.340788506 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.342587011 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.342927676 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.33986291 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.343038081 seconds)
  done (took 25.351325363 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.342232198 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.342383127 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.342913204 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.343236075 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.342131347 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.344400799 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341304412 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.341783997 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342765271 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.344121875 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342122243 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.342380057 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342507258 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.344303265 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.342982602 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340638641 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.342896656 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.342935056 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.345595709 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344639951 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.344956424 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344470439 seconds)
  done (took 30.746518262 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.333194938 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.334875152 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.336343714 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.352672056 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.355073557 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.333591408 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.334266968 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.334728134 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.36237126 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.390129934 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.38131427 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.354774951 seconds)
  done (took 17.405348291 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348031594 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345145235 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.345028665 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345531219 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346267697 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344639531 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345589264 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34702501 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343014931 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348616088 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345401023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346132749 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346358665 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348502085 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347359917 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345933194 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346924085 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346686461 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34562291 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346761567 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346049688 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345126694 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348767386 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349001382 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347913976 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344995874 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345918566 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347365342 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346105873 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346507356 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347299432 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348975356 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347745595 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349484035 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346401102 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347654612 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348246582 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348536351 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349238444 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348793249 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350351238 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348462947 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349702502 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346154634 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347517039 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34754497 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347786316 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347220776 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349654649 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34941932 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34938429 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349292456 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348335952 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34913819 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348744862 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347610591 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350210017 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350733372 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350116006 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35281209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350162902 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348018653 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349690248 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347660615 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349646422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350002394 seconds)
  done (took 90.151487379 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352781755 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.351603715 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350876299 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353444865 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34903569 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351624901 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349357183 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349147755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354508587 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350826492 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35076916 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350160587 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351295116 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349532166 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351873156 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349063259 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352892873 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352835937 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351175784 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349742617 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351863601 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35104724 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351319106 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349012468 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351868737 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351629176 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354259073 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353280671 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349886402 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350382935 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351303775 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350901502 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352045388 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.35234624 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351943841 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352103928 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352931188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352650388 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352454689 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351446092 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355669645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349358083 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351510209 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352088049 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354970599 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35243261 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354903949 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353811742 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354761797 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353925999 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355013815 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354005937 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355196683 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353075155 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352874929 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353542859 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351114916 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354397362 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352352899 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354647999 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351662468 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352754029 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352537897 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354113743 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352639512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354133155 seconds)
  done (took 90.453731538 seconds)
done (took 1721.926921089 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.510338629 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.466730359 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.344046803 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.35591569 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.340651804 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.350065909 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.349050233 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.339517764 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.346757397 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.345064986 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.344119756 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.54557914 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.410629659 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.339800999 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.345510736 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.443645967 seconds)
  done (took 27.386361966 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.375575958 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.353364242 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.478679355 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.352122368 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.377688358 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.556053907 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.415370874 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.35120296 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.552212391 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.373056776 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.360204189 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.369033261 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.351640256 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.356274179 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.367686504 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.556633735 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.641172201 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.358564486 seconds)
  done (took 29.755516786 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.875970551 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.386470789 seconds)
  done (took 5.472214446 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.371471016 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.353090082 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.352278697 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.350272328 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.342418617 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.341298313 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.351905053 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.344028908 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.350489696 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.494253593 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.354383076 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.368349906 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.352727055 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.350823957 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.359680611 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.399662376 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.51016812 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.361931832 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.359382614 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.359238454 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.353789121 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.448846161 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.399205711 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.364295215 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.495708993 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.366366911 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.357571267 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.359595457 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.483274327 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.363145744 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.354230921 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.353042918 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.354663869 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.359041092 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.926758078 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.353662619 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.377583145 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.365254057 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.363819159 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.512313408 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.356831803 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.362550195 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.348086748 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.925959382 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.47090868 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.484987099 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.360329912 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.355856982 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.357308488 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.427915323 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.357628776 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.35792159 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.419381591 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.224058759 seconds)
  done (took 86.773772849 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.402451015 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.349666755 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535888639 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.370394412 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.348045073 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.346953619 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.360955618 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.685777241 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.358891518 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.350864053 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.708897508 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.045073715 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.363577518 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.404919445 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.405801834 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.402983008 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.351794073 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.351098542 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.35162943 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.348895621 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.952623537 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.364356071 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.348195017 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.507283808 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.390611516 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.965152617 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.368148687 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.351432593 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.351279585 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.348562955 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.001615675 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.353412717 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.419446521 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.351452117 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.668217603 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.815599444 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774430807 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.354835922 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.375263179 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.350309253 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.353634779 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.962680235 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.796824076 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.354917352 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.351138758 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.96589096 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.351612104 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.363643404 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.356528594 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.628690463 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.351336472 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.354144339 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.353980433 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.374669577 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.354930781 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.425587534 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.405926469 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.966364774 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.355377247 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.346896577 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.372932233 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.349251067 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.357149144 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.352587127 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.358592358 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.794258474 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.561873977 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.355714128 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.79817984 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.999039325 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.354687491 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093626026 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.354929464 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.361486875 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.429624216 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.354462773 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.354691048 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964586774 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.360230234 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.350567014 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.775653596 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.354849073 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.696556585 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.374284545 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.348112325 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.992027778 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.360458664 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.426258286 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.350965546 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.361634006 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.348670605 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.358064801 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.672622367 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.397051886 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.354281964 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.35327898 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.359238674 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.355795108 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.356631883 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.359684203 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082594249 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.361019571 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.354928478 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.357311194 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353734757 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.354761617 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.356667582 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.355826606 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.642288249 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.355598125 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.376298252 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.357215573 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.354194649 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.358779841 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.506442533 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.3620193 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.730224242 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.363223598 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.369170183 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.35162402 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.353333688 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.384715702 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.360026226 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.35094005 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.320594814 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.676048376 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.376274892 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.377763255 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.357247952 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.358764846 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.351804661 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.354936407 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.399572845 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.357259702 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.235981624 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.387118495 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.384645354 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.355281932 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.367851821 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.355703049 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.358666893 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.358854287 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.693536088 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.675648934 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.595732933 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.354855782 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.360320697 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.224230747 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.357026254 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538785316 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.378991928 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.354107895 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.659759538 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.571595641 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.357486403 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.35293724 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.358248866 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.64561498 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.35818851 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.710950021 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.030955028 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.358036322 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.363708475 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.226336243 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.11342815 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.357569921 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.36058968 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.690482768 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.378116931 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.356489016 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.359432746 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.35690157 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.354642217 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.362035564 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.357538463 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.35640802 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.356600412 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.425293928 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.558712812 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.374353766 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.363718876 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.966046685 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.38396277 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.357407794 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.367049284 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.358334292 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.360045515 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.391808728 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.359191798 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.399597981 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.35871308 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.367572242 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.004987883 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.362125354 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.357815388 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.556695366 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.178723318 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.35966582 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.360435122 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.357428263 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.411345612 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.99720302 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.36694026 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.734997925 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.366106813 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.402047671 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.36087007 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.4318762 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.99623446 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.372139843 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.358147472 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.149495311 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.360055669 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.055288258 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.358608009 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.360721081 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.081411942 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.362217723 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.359874932 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.359057848 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.359379208 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.701652475 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.356397111 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.383877445 seconds)
  done (took 505.642207823 seconds)
done (took 656.235884526 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.360059162 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.365617387 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.361166349 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.358692097 seconds)
  done (took 10.67317871 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.381064352 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.369202438 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.381395992 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.368036739 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.3766619 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.367158751 seconds)
  done (took 9.472032765 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.35998011 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.365793396 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.364644053 seconds)
  done (took 8.320741592 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.603227777 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.394911119 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.767094754 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.374582796 seconds)
  done (took 9.371488934 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.380285885 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.380227924 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.380914925 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.379884407 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.379320685 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.378745137 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.380667482 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.381322465 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.379801759 seconds)
  done (took 13.649603946 seconds)
done (took 52.717051963 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.924377788 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.53461493 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.666802409 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.364702286 seconds)
    (5/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.357638256 seconds)
    (6/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.751242394 seconds)
    (7/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.451454847 seconds)
    (8/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.687097974 seconds)
    (9/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.434071119 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.439084274 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.001580763 seconds)
    (12/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.365542852 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.488856257 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.402004224 seconds)
    (15/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.583217708 seconds)
    (16/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.380653712 seconds)
    (17/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.675204073 seconds)
    (18/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.360711589 seconds)
    (19/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.523961686 seconds)
    (20/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.342812581 seconds)
    (21/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.344212133 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.488124432 seconds)
    (23/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.345530756 seconds)
    (24/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.749335338 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.495262008 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.397730581 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.471633935 seconds)
    (28/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.882742252 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.447805621 seconds)
    (30/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.673180416 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.476995941 seconds)
    (32/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.679637196 seconds)
    (33/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.453374613 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.398661648 seconds)
    (35/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.648247531 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.447826821 seconds)
    (37/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.483309441 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.43766055 seconds)
    (39/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.481134399 seconds)
    (40/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.347739131 seconds)
    (41/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.577690163 seconds)
    (42/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.577870791 seconds)
    (43/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.189443886 seconds)
    (44/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.919402594 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.386783764 seconds)
    (46/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.348671003 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.496370284 seconds)
    (48/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.460313842 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.369634328 seconds)
    (50/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.420614597 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.540349266 seconds)
    (52/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.506383006 seconds)
    (53/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.508867759 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.493357251 seconds)
    (55/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.345655419 seconds)
    (56/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.821924663 seconds)
    (57/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.373603876 seconds)
    (58/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.706517681 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.369244683 seconds)
    (60/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.366636598 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.462007389 seconds)
    (62/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.346375715 seconds)
    (63/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.546691872 seconds)
    (64/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.477404625 seconds)
    (65/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.408307355 seconds)
    (66/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.345355203 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.55122889 seconds)
    (68/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.64832633 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.457760484 seconds)
    (70/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.542052752 seconds)
    (71/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.437137312 seconds)
    (72/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.405437702 seconds)
    (73/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.451463326 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.369723548 seconds)
    (75/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.690125364 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.454134793 seconds)
    (77/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.518375768 seconds)
    (78/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.459870897 seconds)
    (79/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.367701666 seconds)
    (80/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.597974495 seconds)
    (81/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.399481934 seconds)
    (82/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.777406966 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.494620755 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.453042042 seconds)
    (85/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.636317202 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.493624137 seconds)
    (87/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.018924668 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.649166224 seconds)
    (89/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.405798365 seconds)
    (90/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.441658079 seconds)
    (91/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.502773835 seconds)
    (92/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.480649939 seconds)
    (93/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.381820308 seconds)
    (94/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.347894356 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.519004935 seconds)
    (96/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.350253433 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.408023761 seconds)
    (98/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.798252861 seconds)
    (99/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.399014741 seconds)
    (100/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.349609509 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.47686358 seconds)
    (102/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.583631812 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.45294449 seconds)
    (104/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.492549415 seconds)
    (105/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.456049081 seconds)
    (106/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.643299192 seconds)
    (107/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.350058124 seconds)
    (108/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.89473222 seconds)
    (109/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.45945385 seconds)
    (110/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.401531428 seconds)
    (111/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.372789808 seconds)
    (112/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.70968278 seconds)
    (113/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.35215513 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.559443607 seconds)
    (115/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.352114283 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.40946703 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.534146911 seconds)
    (118/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.397294742 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.652403268 seconds)
    (120/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.447068548 seconds)
    (121/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.349623685 seconds)
    (122/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.354040829 seconds)
    (123/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.421278817 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.477224328 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.688484618 seconds)
    (126/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.374286546 seconds)
    (127/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.54525963 seconds)
    (128/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.352534011 seconds)
    (129/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.79621059 seconds)
    (130/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.655916278 seconds)
    (131/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.4443788 seconds)
    (132/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.552701784 seconds)
    (133/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.405253434 seconds)
    (134/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.606621017 seconds)
    (135/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.586305742 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.504348614 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.462968087 seconds)
    (138/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.811820074 seconds)
    (139/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.183834082 seconds)
    (140/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.354481319 seconds)
    (141/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.675445145 seconds)
    (142/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.586238276 seconds)
    (143/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.407999549 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.543760857 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.442811396 seconds)
    (146/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.462458074 seconds)
    (147/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.50174582 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.648970869 seconds)
    (149/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.36243217 seconds)
    (150/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.687611552 seconds)
    (151/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.882607953 seconds)
    (152/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.768690148 seconds)
    (153/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.49856174 seconds)
    (154/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.729762117 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.552229415 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.379667932 seconds)
    (157/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.350145159 seconds)
    (158/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.418778735 seconds)
    (159/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.358358094 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.388329033 seconds)
    (161/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.350385441 seconds)
    (162/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.939718438 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.4911589 seconds)
    (164/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.009527102 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.442415996 seconds)
    (166/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.993693137 seconds)
    (167/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.360142678 seconds)
    (168/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.354197236 seconds)
    (169/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.358621162 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.421962249 seconds)
    (171/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.37662235 seconds)
    (172/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.551107969 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.486757764 seconds)
    (174/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.439361756 seconds)
    (175/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.467786167 seconds)
    (176/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.515319278 seconds)
    (177/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.527290412 seconds)
    (178/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.408635546 seconds)
    (179/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.52679431 seconds)
    (180/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.768382294 seconds)
    (181/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.483449256 seconds)
    (182/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.764714038 seconds)
    (183/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.449613913 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.578423909 seconds)
    (185/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.36616907 seconds)
    (186/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.466349179 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.364934742 seconds)
    (188/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.354284372 seconds)
    (189/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.469511267 seconds)
    (190/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.426060315 seconds)
    (191/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.408025531 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.484943532 seconds)
  done (took 340.730641439 seconds)
done (took 341.960563728 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404694735 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.472801679 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.38390488 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.384751641 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386859991 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.385143284 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.40390521 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.387532414 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.401452047 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.399298666 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.384410147 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.391911011 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.399219054 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.397767985 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.418750949 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.389406534 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.385668002 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.397450551 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.399945401 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.405178818 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387967067 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387163296 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.414302013 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.385304279 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394882011 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396059647 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.390541369 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.39138062 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.391339771 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.399469212 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.375499898 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.408515755 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.406283469 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.399080011 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38684616 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.400075941 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388030273 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.472500758 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.405832922 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.397931412 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.396300943 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.405547232 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.389592535 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.391813286 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.401927202 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.415169545 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395310334 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.405383733 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.378822792 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.376061449 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406746202 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.399938908 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.397115967 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.380580284 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.394727798 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.401268189 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.399669175 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.411639374 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.39481994 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392989323 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.422550886 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.409485091 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.39990877 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.398501559 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.397377499 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.405137851 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.400610352 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.404730241 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.398542198 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39137201 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390972173 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.397409813 seconds)
done (took 109.955965574 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.514975461 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.386442388 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.548614557 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.399218419 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.558072647 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.51314389 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.398170131 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.402489643 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.399013626 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.193030604 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.398677569 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.400495673 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.387819325 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.397955933 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.508616069 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.40191932 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.398501629 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.091504263 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.400669504 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.525694782 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.392789894 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.399319552 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.400424569 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.197600566 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.38735462 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.384998844 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.52733705 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.403004248 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.090856703 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.382875625 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.386606354 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.091047909 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.527182654 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.420670471 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.408812802 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.41212939 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.563201351 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.404191059 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.516626222 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.519456144 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.549608883 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.436292335 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.38670955 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.391870088 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.402097191 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.400769068 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.398863393 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.428952591 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.388142068 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.400270804 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.092546777 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.41070824 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.400185381 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.400273404 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.399232764 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.431361537 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.399601055 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.400780905 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.529107472 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.402489709 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.518244639 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.195754553 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.196356593 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.403506346 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.388438381 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.401299863 seconds)
  done (took 112.442931553 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.465047636 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.470461611 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.520078521 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.392905305 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.444780817 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.517420766 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.395453573 seconds)
  done (took 11.457340183 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.398943659 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403257373 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.441496388 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.44424593 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.406496952 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.567768629 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.400930835 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.404982662 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.402833901 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.448003214 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.404297563 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.403406594 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.410526866 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.394777952 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.442849185 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.403819393 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.514610655 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.395098563 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.403530625 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.546896611 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.404177589 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.411850765 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.445638784 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.406788407 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.406431888 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.400275484 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.151527165 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403401296 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.406562343 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.40326388 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.405116324 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.461150349 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.40344146 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.393929497 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.403687595 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.509474146 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.404707762 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.402143263 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.404788144 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.39447709 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.406038947 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.404603356 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.404185795 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.400636929 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.406676116 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.417735695 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.404630836 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.403233554 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.405498468 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.400765202 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.448911173 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.406201425 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.404667984 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.402719265 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.448477499 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.414202168 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.401080003 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.40369171 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405994201 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.402749798 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.547436298 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.442766889 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.403713178 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.444070527 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.405814518 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.403748195 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.404825477 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.402427291 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.485849597 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.405260637 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.44117494 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.408691927 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.5787337 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.419264477 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.40578984 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.400511492 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.398841728 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408738079 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.392956984 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.4046356 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.407343964 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.400699111 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.40374288 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.405897446 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.407767188 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.55420971 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.50574829 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.403395527 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.413068814 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.404710046 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.40637578 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.446234356 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.408558084 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.405434414 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.44418825 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.514453945 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.44767672 seconds)
  done (took 144.095709568 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.410465563 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.410798783 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.399910982 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.421337896 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.401567253 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.399513321 seconds)
  done (took 9.700418125 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.400790575 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.411031905 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.408968238 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.407190291 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.407349361 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.41067493 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.408027816 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.398982977 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.414492078 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.410957688 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.411641145 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.411342857 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.414317379 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.412002509 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.410327877 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.410237292 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.407643325 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.412686629 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.408730022 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410176689 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.394591921 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.409738365 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.413135876 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.405016117 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.41535292 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.412220164 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.423768141 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.414149885 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.412287221 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.409790236 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.412092477 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.413705268 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.40445541 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.409887012 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.415843847 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.404347837 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.415996814 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.410071475 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.414799411 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.413242351 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.412840938 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.411793967 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.414125713 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.413648542 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.403971397 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.410303445 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.416916971 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.42861276 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.414251945 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.417032809 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.414355205 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.414103623 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.413572588 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.414798005 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.408909966 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.409611741 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.416776047 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.416805408 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.410750701 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.407517974 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.416738994 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.41240833 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.40828318 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.418972143 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.414957509 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.41432236 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.407012658 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.419993365 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.417514144 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.416460225 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.414646849 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.41452884 seconds)
  done (took 103.920653491 seconds)
done (took 382.862100209 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.870567806 seconds)
  done (took 4.127051296 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.513090542 seconds)
  done (took 3.770878437 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.878969698 seconds)
  done (took 25.14522903 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.420725172 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.403632855 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.432550025 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.402799222 seconds)
  done (took 10.91705327 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.948412963 seconds)
  done (took 4.211785811 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.407511817 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.427315721 seconds)
  done (took 6.098024975 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.677210093 seconds)
  done (took 3.938356237 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.218650191 seconds)
  done (took 4.487127848 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.422544583 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.412845618 seconds)
  done (took 6.101073667 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.377616284 seconds)
  done (took 3.639030217 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.136672632 seconds)
  done (took 20.396424083 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.429160753 seconds)
  done (took 3.692244866 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.435103553 seconds)
  done (took 3.700149411 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.561112008 seconds)
  done (took 6.824518669 seconds)
done (took 108.310566899 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.401413789 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.404061327 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.404732463 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.403998276 seconds)
  done (took 10.877491524 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.48091725 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.479921611 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.486693155 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.470419975 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.46945953 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.483349409 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.449360417 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.441517569 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.472134233 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.467404512 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.486082414 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.475619649 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.48207206 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.443077567 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.468695436 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.488112526 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.471524954 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.487100375 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.445966676 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.475707393 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.421478821 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.476405435 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.469179279 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.420671179 seconds)
  done (took 36.48029273 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.926917429 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.481724553 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.56705414 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.463725384 seconds)
  done (took 7.704069171 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.522018147 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.524467685 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.544821359 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.57849754 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.626164036 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.538765986 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.442904711 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.437822334 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.427126939 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.526338149 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.607273913 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.523972521 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.741545382 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.419910153 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.735605917 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.415649945 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.420404286 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.522924695 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.570385549 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.603166094 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.417083742 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.524946616 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.526233775 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.521307824 seconds)
  done (took 37.98673778 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.423739843 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.43550417 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.418452331 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.434473738 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.419505482 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.4232101 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.422488914 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.426743358 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.419665462 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.419383925 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.421681181 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.434640211 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.418830971 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.421490292 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.42678691 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.422576 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.422095796 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.426159382 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.428871301 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.420340005 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.420960198 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.425873105 seconds)
  done (took 32.604485791 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.405349771 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.40729268 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.757843141 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.661083906 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.405952573 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.403479761 seconds)
  done (took 14.311191899 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.489900133 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.65419696 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.415014768 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.834742903 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.914616532 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.411169054 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.413629207 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.692870329 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.039910081 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.068347671 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.481437675 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.492970498 seconds)
  done (took 21.177550771 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500244458 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41701273 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.42876425 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506011156 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414065416 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414773472 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482911167 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.9262276 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.419451567 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69499277 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416381626 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498606725 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.666050935 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417363826 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421516469 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.392495609 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647029945 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975706156 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418217677 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425118266 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449520116 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.438195049 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.419798792 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671257104 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418361876 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417257936 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.716624329 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.419774628 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756086586 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731004249 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734493036 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426924225 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696527063 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88975127 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521742251 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652846366 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416709142 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.445061501 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.407889221 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.424851855 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429666803 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421157096 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732442106 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425641168 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420658134 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421158635 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955079283 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.426681607 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.418870852 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42065924 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732437377 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505480475 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.425172287 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419482338 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516503389 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418281767 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.426601667 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541814963 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061559299 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420002877 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437774122 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.421850152 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432791584 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425924997 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169399753 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.425196177 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.426542678 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.428507131 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420354842 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423788787 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439953182 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415768567 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.438988079 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4217894 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367423189 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425938082 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418211073 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019551778 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436598278 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.418371219 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650795977 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425831053 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422046462 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.423081007 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421103338 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272835965 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430970612 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.393616657 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453034718 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.937754189 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654848282 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442591102 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452128367 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.645220022 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.391473917 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425982338 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.42280196 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423516249 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441331966 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940213759 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420056387 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.425613143 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671828919 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.634980417 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42676929 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.407614957 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946888131 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431045755 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.445470524 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.427088796 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.661073454 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.150403203 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743256475 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430341799 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458352375 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425359223 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336778789 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428043905 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.436815049 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.430592749 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.743686175 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.3482216 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428596883 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500338668 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426773168 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423248364 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43703527 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427039609 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429731613 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.640384833 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426033193 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.739002518 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.433791728 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428627837 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.438463875 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436983348 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.425024505 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.650313446 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425437801 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704612224 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425670154 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426375693 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42570939 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.641994928 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.436945307 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.438385052 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.765637593 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426535212 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430739372 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.743134066 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468317686 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541184775 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46270264 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.4276793 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.682318442 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.431976888 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.435655885 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427665737 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.445318828 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435997579 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.436551792 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419273418 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158943518 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415061212 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.435153788 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428711184 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.444169645 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502546234 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436552419 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.666161427 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.427205383 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440321601 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.438337436 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.443541714 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653614697 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.74120718 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.434035476 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609276089 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.950604619 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.154442568 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447631337 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.430400723 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.428808702 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.431012958 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428983049 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431082579 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.431282201 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.670732835 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74597803 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.441905488 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.164317964 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435872002 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441155502 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.438017276 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743088442 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.444062086 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43203824 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.431630911 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432260406 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434900284 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.750861637 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656093674 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.448602487 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.433954986 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.950235502 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44253332 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.435070752 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4332825 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457248646 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.442058453 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03891122 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771668049 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434975179 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747232445 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.444638547 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.451933528 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.431091749 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439592041 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4319023 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.481260857 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445400802 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.673273528 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.438999088 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438144243 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065865089 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356327374 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093171432 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450920883 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.447555973 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434224446 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.957753066 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429262936 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434613532 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719772194 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956868067 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433401075 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949665277 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.440557658 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.341918481 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75179597 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665584234 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446332714 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.440525761 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.749281927 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648976986 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464768843 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434284402 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439488441 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.401131321 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041257119 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432168253 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612112968 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954819818 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441670645 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432146877 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.47453494 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.432185747 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881201837 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433733952 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438791602 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.440547244 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.444120207 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043333687 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439019689 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437939228 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165268727 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.44345195 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.960755788 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432925255 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.675329804 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.751758189 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.733162925 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.440836346 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.437184724 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.6820937 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.750711148 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440989323 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44375925 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104330128 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.29605236 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.443127658 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437328308 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.356207872 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439195788 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78456101 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.455113994 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.440317406 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442354321 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438328094 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437737966 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.440625903 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.443170663 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41911986 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010018999 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.463056023 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44114491 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457677201 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441445797 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.688722894 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.451642901 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171140026 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671340473 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431507787 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476887653 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.440747443 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440754028 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.40555029 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.441303538 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440011643 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444132811 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.658984298 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.457386232 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.404249351 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.508698126 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648469545 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439568915 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.452300372 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685325306 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.437827159 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.439413599 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367020419 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4687487 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.454834158 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436254977 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.429375096 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493209144 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514365021 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681469459 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.753141523 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764954322 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893547103 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450221039 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439289169 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.457032566 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52143857 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439195584 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.447653089 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.442698746 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175226719 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358610732 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166206277 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75722467 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.446646401 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438868583 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440832448 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680263116 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439504726 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712947231 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443106455 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.456922932 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467393036 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442743445 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460961541 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653857696 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716383874 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439059665 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444354793 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441012662 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.44527173 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763966373 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.65907838 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020619956 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084660549 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446130239 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.445196957 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97142055 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714832637 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445531568 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441451678 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444889127 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.456523166 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.452521473 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.448598486 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44580354 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665491516 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760914534 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923552207 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.755482654 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.463626767 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.311761942 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441632182 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685464915 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277204517 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.682390347 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15485299 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.302113701 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699163039 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516570075 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683749761 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.442377819 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679737038 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.450217637 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.445025643 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440884959 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443698381 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.439925284 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.763374621 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165673436 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694977188 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.449847149 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.44937039 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47660651 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.686925286 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.668508532 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.308696934 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.66677138 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769002882 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.453057601 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.444474393 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163138849 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.765768979 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447586798 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.447873066 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694752776 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.445509382 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475587624 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.316485492 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.443910853 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06702475 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.655427967 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468998589 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447357725 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312936889 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169154846 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.455664562 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029200865 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450241563 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441411594 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725981928 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.451128163 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.449789599 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737098339 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.45147825 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466524098 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693362185 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.180768623 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.361853241 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.461346508 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470445517 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.447243355 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448519014 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499626456 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446402642 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447936306 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.881719487 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.444004042 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447281049 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458845044 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.462530691 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454959538 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.449810803 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448707115 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.453486336 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.428923891 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.438821404 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.453474613 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567592097 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058475933 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450661345 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.064580011 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.785874523 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.697667451 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45442595 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.420268388 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.452852897 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445694904 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447029765 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447232112 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.455980705 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072734727 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.451123725 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.773655352 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.461537095 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.659795019 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659966621 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.465346643 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690791615 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45179218 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471149015 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.414672736 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449467514 seconds)
  done (took 1014.801914583 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.498180533 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.481893137 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.452316847 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.511720473 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.452423102 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.573197967 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.530473776 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.540472528 seconds)
  done (took 21.33644274 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.447661299 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.447538455 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.443019676 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.446229465 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.455802793 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.00872425 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.442802195 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.44557422 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.465770263 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.446163352 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.441573752 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.174739567 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.453765324 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.44349299 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.464421671 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.447961117 seconds)
  done (took 33.782475247 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.71373929 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.618804905 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.043802142 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.510096118 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.460196262 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.446124616 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.859150618 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.469840699 seconds)
  done (took 28.421324783 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.458148577 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.456787566 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.455364796 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.454560813 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.454673725 seconds)
  done (took 8.579098304 seconds)
done (took 1269.326172527 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.454641351 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.456704775 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.457254553 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.457809031 seconds)
  done (took 7.127815788 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.420418266 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.418891677 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.418838167 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.431077971 seconds)
  done (took 9.989902686 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.857414535 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.074403962 seconds)
  done (took 5.227130822 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.451896405 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.212510503 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.207892244 seconds)
  done (took 8.174130683 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.750762608 seconds)
  done (took 3.04837578 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.896726777 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.970529108 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.443649962 seconds)
  done (took 7.609086687 seconds)
done (took 42.474568173 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.445313209 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.207901789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.631483455 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.443464003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.600694731 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.597506243 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.751681739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.440587676 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.463482116 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.442390048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.439942145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.604855005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.743878834 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.209646582 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.742556671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.210761108 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.60573547 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.451160259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.456268273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.441227119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.753756525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.439946974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.444698678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.442608937 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.682169287 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.617406652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.438754197 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.211866713 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.448747868 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.441938017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.589129863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.455400347 seconds)
  done (took 85.200374966 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.45220037 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.443484406 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.442161145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.462962334 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.462384814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.463795821 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.462449196 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.440522173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.443289763 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.440554008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.455770387 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.441383269 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.442357823 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.455325666 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.444827642 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.44315067 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.463343787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.44154602 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.471010956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.443001625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.464998454 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.452891638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.44589207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.458665816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.463990763 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.44552676 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.463288765 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.442928322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.458622977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.443424765 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.443187518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.462899256 seconds)
  done (took 79.761217029 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.443985085 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.442894077 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.445937288 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.461658387 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.444888075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.447857357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.468086188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.444212213 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.446219695 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.444912135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.444056059 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.446001247 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.451472818 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.445016126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.44807505 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.444944351 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.450059821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.458300457 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.448462552 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.445778258 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.448765733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.443251868 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.446462276 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.448607066 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.467905031 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.446588445 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.474509511 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.450470011 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.456825038 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.455466975 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.451986763 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.4499391 seconds)
  done (took 79.714943497 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.690598208 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.463994842 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.469361935 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.459906683 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.473245346 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.463839039 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.461670229 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.697237105 seconds)
  done (took 15.483419591 seconds)
done (took 261.460101269 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.459415875 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.469455484 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.488752895 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.465482518 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.479701823 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.486351654 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.696224171 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.485398926 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.679125672 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.461648012 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.472235746 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.462645365 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.414757549 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.609191985 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.456588735 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.468707814 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.470842371 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.45378908 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.468637825 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.720530404 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.487099379 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.462125655 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.455862561 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.477977599 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.431801875 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.539995174 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.545030502 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.632212379 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.587948649 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.534408931 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.455588392 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.466033419 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.456922974 seconds)
  done (took 69.011230887 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.459377302 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.468455614 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.465018694 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.470374247 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.469630412 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.467922552 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.460525985 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.470337197 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.469883179 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.471194658 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.466568712 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.468927743 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.465472121 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.471570033 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.467638931 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.442278996 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.454951809 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.466102795 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.460747009 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.441245128 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.469731582 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.472043701 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.474268944 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.471310979 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.472171304 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.472799358 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.472096953 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.469108627 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.469457815 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.473104435 seconds)
  done (took 45.305757038 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.472603106 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.454339771 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.481530961 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.47392945 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.462996004 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.468560567 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.825451406 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.475612995 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.464522181 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.467932219 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.460228022 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.476291353 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.520030001 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.458215607 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.489071367 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.47309886 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.472939134 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.467570316 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.458050034 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.480365924 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.835112771 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.474315639 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.825998487 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.480884344 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.471215265 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.466482255 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.474369839 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.459866874 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.469663736 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.460788467 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.419872628 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.821234557 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.460756974 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.464879024 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.420158648 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.477251187 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.478200729 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.459983479 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.464248296 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.463095754 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.815999751 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.466547561 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.458621788 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.486550027 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.47328354 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.478454295 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.461097825 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.465033089 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.763905966 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.471306678 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.474136808 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.474360988 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.477289525 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.471631235 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.768240981 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.470028237 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.467910695 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.463944279 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.477255218 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.829111884 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.476820289 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.469767419 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.463478923 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.472061413 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.463392831 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.472449197 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.481135912 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.46989037 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.463723794 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.476235035 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.46437669 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.473933407 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.477444484 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.465001539 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.464911468 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.467830219 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.471305613 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.463563203 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.464692583 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.830124361 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.475210244 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.466441485 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.842689418 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.477302311 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.479250326 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.483469724 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.481878841 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.551125518 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.828477477 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.443858035 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.486646792 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.469065649 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.859489998 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.483187596 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.473703198 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.463372067 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.483110071 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.482788555 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.465370192 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.467281368 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.476755425 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.48326423 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.469408815 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.47807204 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.835236659 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.482420766 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.484658601 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.475893483 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.593607978 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.483046626 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.484194792 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.477500785 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.842957672 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.478405894 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.481575414 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.466697216 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.486329705 seconds)
  done (took 216.581476113 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.467258494 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.483812565 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.486458214 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.463040858 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.466439106 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.475627164 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.465789144 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.469879836 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.47481696 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.469930641 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.469125929 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.478896341 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.475604032 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.465602439 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.46692263 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.465209687 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.471679807 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.473253242 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.466841713 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.470952762 seconds)
  done (took 46.748603487 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.48572088 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.186962767 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.139137812 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.487997688 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.482796632 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.475266953 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.545657629 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.489530323 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.482690058 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.857710456 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.683463371 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.485486948 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.483369143 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.482413728 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.133072968 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.459383867 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.854893777 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.185559397 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.487824601 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.150770564 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.455789447 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.484945274 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.473836792 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.181904918 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.855957233 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.828680988 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.54928606 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.19146544 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.486014742 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.484893109 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.187750447 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.484553921 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.47566182 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.17272381 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.486936735 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.494178617 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.481307891 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.546746644 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.54804162 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.861601272 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.196061219 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.844581333 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.497617072 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.654100435 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.488962206 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.459884496 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.199744594 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.487963496 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.462320731 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.488303776 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.489639218 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.151910366 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.479207023 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.151014115 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.490498753 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.483141266 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.19181235 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.151592118 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.142160125 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.692820289 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.479744513 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.837787978 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.488565172 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.200448114 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.488153434 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.486776879 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.486281012 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.697069608 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.194881916 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.841643498 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.865266846 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.867179741 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.489520431 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.562662826 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.489571815 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.863384235 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.564308879 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.897943264 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.865919267 seconds)
  done (took 136.96485886 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.794436434 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.612691122 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.949238296 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.141654832 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.078768279 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.632273101 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.614178871 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.7609271 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.484935181 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.59408094 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.294832751 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.589784325 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.343189723 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.563381328 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.599638689 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.620515689 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.97171018 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.477953729 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.259711916 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.263559582 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.488289995 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.620295843 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.306140932 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.906603614 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.492350755 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.266298916 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.498329333 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.093831445 seconds)
  done (took 57.649920577 seconds)
done (took 573.568910347 seconds)
SAVING RESULT...
DONE!
