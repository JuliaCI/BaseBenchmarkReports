cset: moving following pidspec: 18668
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.289798876 seconds)
loading group "string"... done (took 0.58335722 seconds)
loading group "linalg"... done (took 7.133080403 seconds)
loading group "parallel"... done (took 0.165320246 seconds)
loading group "find"... done (took 1.128350347 seconds)
loading group "tuple"... done (took 1.983981618 seconds)
loading group "dates"... done (took 1.269240356 seconds)
loading group "micro"... done (took 0.235327722 seconds)
loading group "io"... done (took 0.965137806 seconds)
loading group "scalar"... done (took 38.445316898 seconds)
loading group "sparse"... done (took 12.338001681 seconds)
loading group "broadcast"... done (took 0.96722944 seconds)
loading group "union"... done (took 13.102560494 seconds)
loading group "simd"... done (took 4.414182572 seconds)
loading group "random"... done (took 8.941380761 seconds)
loading group "problem"... done (took 1.977222787 seconds)
loading group "array"... done (took 21.130588283 seconds)
loading group "misc"... done (took 1.915942268 seconds)
loading group "sort"... done (took 3.202499632 seconds)
loading group "collection"... done (took 17.92892916 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532021309 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140639762 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116512026 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13748052 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18325228 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131070813 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144336918 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084700892 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.038394687 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160190752 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138643666 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475797282 seconds)
done (took 5.04098821 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203354739 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085735723 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096037174 seconds)
  done (took 0.885008927 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066205501 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12652229 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079298185 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067222445 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06654218 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080607658 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066351125 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06550282 seconds)
  done (took 1.263085516 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073403684 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067613654 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083572833 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067634855 seconds)
  done (took 1.002615928 seconds)
done (took 4.140162824 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.894039577 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.234192253 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188492745 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453345832 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.14797581 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.186414169 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.663120464 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319109511 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209049587 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099211943 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103700747 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.377881785 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10558304 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.655018907 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076380949 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104984248 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.157293477 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437167652 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080859747 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082102305 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103206532 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140618377 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100430225 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076833227 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168759789 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068785876 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146369309 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094434276 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067908948 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.240912511 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18861147 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669080505 seconds)
  done (took 10.38782367 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099489703 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115570556 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06850438 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138352652 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100644457 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084973948 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070596864 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082625108 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091186701 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156562527 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113269246 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1045409 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080938267 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06893205 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099116106 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209575535 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106276459 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083754058 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085092514 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075084904 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12144022 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081563982 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092829937 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077088495 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15073366 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193181288 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109716253 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110144307 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067949446 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080263436 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130223848 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140545842 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066074221 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080735053 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137575 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108706833 seconds)
  done (took 4.50432222 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.029692285 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160163165 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091007884 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151096116 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085009762 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109897752 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082925404 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099375793 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246754699 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.149706906 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.455767661 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127849454 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101320165 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067674993 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083061297 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067751227 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.518402476 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145164065 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102160283 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103286749 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089284476 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070193188 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101165909 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067152843 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065939404 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086060488 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.103093394 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.320621545 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145055764 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067637134 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.214432949 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088364151 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087230766 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100358729 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196470147 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095269367 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121203414 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081631441 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066524743 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168148987 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108003811 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074454989 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065688023 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105810043 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116797149 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104486311 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083659298 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067124322 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180661027 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066264219 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09859126 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.861896352 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164447316 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078892236 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065668085 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286696243 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083453494 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083996572 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063581486 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.085365642 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.229483446 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166095562 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06776721 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065530235 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08284198 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067398013 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365715283 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081785527 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.870060429 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068368235 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077592573 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085463161 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066418483 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088521804 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07174829 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100802709 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066998085 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067248217 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083011385 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065626531 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083491771 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084169798 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201414369 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082566882 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067132853 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064553669 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10205738 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109833783 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069419018 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064756059 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11575921 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068486474 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082962795 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100640358 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084117208 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099191683 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069656902 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127502996 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068224286 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.124363948 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067691907 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111841345 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071393461 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116844648 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092636533 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067052032 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152089003 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064152905 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081134887 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063737961 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064397705 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083176901 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067577737 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082726334 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081520374 seconds)
  done (took 20.974297506 seconds)
done (took 37.605344792 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.289017259 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089868834 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091144982 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073830612 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090238977 seconds)
  done (took 1.420404337 seconds)
done (took 2.181778485 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119463726 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116056923 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06312618 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111063134 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062820393 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116280865 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113023988 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080819924 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117356316 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06380888 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111139859 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064294889 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063002126 seconds)
  done (took 1.987301297 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082838404 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084153275 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084794072 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08144805 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077731832 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081987681 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07918536 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104068329 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080913717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086916866 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063662175 seconds)
  done (took 1.663658443 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081921768 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082751389 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084550069 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080155849 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077545174 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080768479 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079640124 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100858094 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080172553 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088197238 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063049946 seconds)
  done (took 1.656164196 seconds)
done (took 6.055722885 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077461527 seconds)
  done (took 0.826092708 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.692226414 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.636202677 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083172539 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132986037 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221171012 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153797442 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.441187157 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108185698 seconds)
  done (took 10.390331322 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.089333021 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084818759 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06856298 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083704475 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081965884 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086937836 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068520144 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071401438 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084355933 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071670368 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086308076 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068120118 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084943491 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06988512 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071428143 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084973335 seconds)
  done (took 2.073704916 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09266463 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091636663 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090304343 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075304744 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088543899 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072199705 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09125393 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073602789 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085937359 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072319053 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.0901364 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073859169 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087125861 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065211868 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089272234 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075847879 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086545387 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074652854 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090520975 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075250421 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090535045 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065284543 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087443113 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074613402 seconds)
  done (took 2.821413063 seconds)
done (took 16.866603697 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130238997 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075850729 seconds)
  done (took 0.963435732 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080863867 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096541398 seconds)
  done (took 0.944069052 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082666544 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080380372 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088950102 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092428146 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065693753 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.081247103 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101663417 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065494585 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080045811 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065945643 seconds)
  done (took 1.57107738 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068324767 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091879238 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070432548 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097134769 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073366747 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0796661 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072139123 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083520674 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077934683 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078748737 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070538996 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098504854 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071056647 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100184106 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072675769 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083487896 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08678189 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06723894 seconds)
  done (took 2.212262175 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065859484 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066907794 seconds)
  done (took 0.901369836 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067545135 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063133963 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081448368 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066511961 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07811844 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062718697 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079007703 seconds)
  done (took 1.26728771 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397763382 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107580665 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241346638 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087520886 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102429537 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260928222 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.081967042 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070269318 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086916285 seconds)
  done (took 2.242363948 seconds)
done (took 10.864569758 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079101145 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084358968 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109549611 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416552219 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105943561 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065369091 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131094631 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.219498131 seconds)
done (took 1.979886465 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124415337 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.604213251 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.395923213 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210407403 seconds)
  done (took 1.984335211 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.369182457 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091200419 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073236493 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066769729 seconds)
  done (took 1.376544214 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066708495 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068878086 seconds)
  done (took 0.912688341 seconds)
done (took 5.172960494 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06619328 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066125158 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079343566 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06597176 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062870182 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07890984 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065304179 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065945149 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083935955 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065671785 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.083133244 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068999669 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079974462 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063579272 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065599653 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082978228 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063292129 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063204015 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081652932 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063482134 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063387397 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081106144 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063208642 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063468659 seconds)
  done (took 2.514694378 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085334394 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082520641 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071403374 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087020807 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070057565 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086903924 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071908281 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06608084 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086812627 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071159328 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084869488 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069775771 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083581246 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069974755 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084521153 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070510281 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086646413 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066449508 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06790671 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086434021 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071033711 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082182417 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070088078 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087193791 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070454375 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08504844 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068179691 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082204704 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071370061 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085277379 seconds)
  done (took 3.102580317 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07052777 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063576989 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079954006 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07031752 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064212489 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080956587 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063508931 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080515946 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064909185 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063440058 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081101148 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062813561 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063663458 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08050967 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064511549 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082479824 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080104163 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064303862 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079460385 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06396847 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066781851 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079953109 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063683589 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07949429 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063450883 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063286912 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079646995 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063390717 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064458691 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079221598 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066108408 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066703173 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079441251 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070189493 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08317321 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063479646 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068721913 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079109556 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064352373 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063283741 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078913173 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06362522 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062898962 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085774302 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064028975 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081884226 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063771854 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064441469 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080299365 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066404296 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079144975 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06302748 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065620724 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080554631 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067500763 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063058427 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080788906 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063184745 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079673184 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063594178 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062906712 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079123036 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065785674 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06488727 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095055815 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070074164 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079121305 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065320832 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064632038 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082111106 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065417585 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076727299 seconds)
  done (took 5.902953134 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11640314 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090743498 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082054623 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065417527 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077914366 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064041691 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067170557 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079980181 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065686392 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085558698 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064112363 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06521534 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081320591 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076218389 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081076585 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066287759 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085183815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062487629 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06409703 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083647458 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064258039 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083497992 seconds)
  done (took 2.459376293 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.185373111 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086560551 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108869566 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089078896 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084085207 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073982678 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069931802 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086204757 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069966097 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084851026 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068349145 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086725037 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067379046 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084693186 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068877544 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084275628 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070977194 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084275005 seconds)
  done (took 2.339512691 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077217543 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065509285 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105209883 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065476643 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083233258 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068734895 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088001173 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074075051 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084410433 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065977872 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090555932 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068029474 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085044275 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06717224 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06831243 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082248668 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068578344 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081858516 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074062205 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087040944 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070955144 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090819959 seconds)
  done (took 2.498546355 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080887094 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067578823 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101022616 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084519638 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062772949 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064099307 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088262274 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066164341 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088060725 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067913125 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066856902 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080980879 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0713533 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082204415 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071073412 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082265171 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067560424 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065859183 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084369822 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062684528 seconds)
  done (took 2.293979168 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085878171 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082866 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067797716 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091786937 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067189179 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083770321 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075266335 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083066961 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067456706 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107214401 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068234749 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085110981 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075425098 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088709168 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067551745 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090851106 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075760499 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091587212 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067495509 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083916592 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.2174827 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06771664 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091421575 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067619399 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083571404 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06818012 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067266165 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088585925 seconds)
  done (took 3.151482259 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066544231 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0661742 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079781374 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064315686 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063408381 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080261126 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06373043 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063411433 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082927727 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064248428 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06606628 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082039632 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066437801 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081848588 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06660169 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065911657 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082507851 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.0633515 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063585706 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080237913 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065482608 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065849439 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082321118 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063777438 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079318647 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066273933 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06360589 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080068981 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065882179 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063075524 seconds)
  done (took 2.900274657 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076836315 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089710439 seconds)
  done (took 0.961061295 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063661149 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079921711 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080453566 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069740556 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087069282 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066771039 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090503652 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070617064 seconds)
  done (took 1.401005195 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08218785 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076636136 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084561559 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077386699 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093136836 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082701517 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153437416 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08451704 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072473999 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080951053 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079918368 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065424707 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089439221 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066548215 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08881765 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072662458 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064233781 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08767906 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068334449 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081733413 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067506892 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091109511 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069539408 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06289208 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085477473 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.07568457 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094253652 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06742986 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08722437 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074460347 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071602262 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077148299 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066858544 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083007246 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06480723 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092195314 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081007544 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085888141 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075542851 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06827243 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092747292 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061494542 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087979962 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07329986 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093165237 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067065935 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067348487 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078939263 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064291753 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085042924 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061920885 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065756356 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077828155 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073696156 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086276159 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076954376 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067378862 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084008266 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06956414 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086966526 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073082581 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084209378 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069259797 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066451565 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092711356 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070658777 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09156194 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062262849 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060952371 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081210123 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075542612 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105377004 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072918437 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083525867 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067610588 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080504688 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070612121 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067256741 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088359272 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072593982 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08266376 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072373676 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089491475 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06710883 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067866328 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090693587 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065192103 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085434057 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064489742 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098539598 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06523803 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080796225 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064857505 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075695814 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086806285 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066349486 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080572759 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073200486 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060574 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084013991 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067404538 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083740363 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076581247 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08747144 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072110155 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09106605 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074624854 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066803069 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086688793 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063625301 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084166064 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065488462 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072866883 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077758359 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069705495 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083202173 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067139423 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074436102 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081650955 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066778067 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090559372 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072038846 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08179038 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063164026 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069566866 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083129516 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069904773 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091150285 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065635476 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061171613 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07891644 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069555041 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08289496 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070042027 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087387943 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069305437 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061980667 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081698459 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07092006 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092215409 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066581521 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066616109 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089332586 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067491071 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082244841 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072377059 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085781499 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065899095 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071487104 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083737427 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061970465 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086839819 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068535969 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064593064 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086976555 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070518675 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085456924 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067282197 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081496255 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071482354 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067071699 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082622164 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066326512 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081516181 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076476242 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068090077 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078955555 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06438052 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089997893 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064724193 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065862658 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082350169 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068352331 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083833079 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064351107 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065088321 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084937307 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077549332 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087430546 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067676926 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088825259 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077973505 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083233914 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069058339 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066338618 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084344031 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066850784 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091785269 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071342919 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088203644 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069052828 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062978192 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088424674 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073639819 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082915687 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064544734 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065352495 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086591822 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071999507 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087521953 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067483406 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081035174 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067412175 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069221405 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086030267 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066011752 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082342031 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071174091 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081961227 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073581073 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067026536 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092378619 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069500888 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079376494 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069501791 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081209762 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072584778 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061837737 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081881718 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065807806 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084337541 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065672875 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069506425 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078136154 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074022021 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09032533 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068055717 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066063238 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083614015 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073367056 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085077263 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071216383 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069889851 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089757114 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077572008 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083696009 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070330068 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093433811 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067792934 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060574017 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089116735 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065793033 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082529024 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066115497 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0647276 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086340926 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074685246 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091248188 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061035422 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086096091 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065145315 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065407641 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079324227 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071302901 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085792651 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067946127 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07320889 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084693377 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067266963 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087172233 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066088693 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066455757 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084178393 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069111611 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083430342 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070027486 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065742852 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086998932 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065659927 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08130418 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068676712 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066297577 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084590758 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071924539 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083232239 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067064551 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085418388 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067190322 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067291169 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08410443 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065451569 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085931219 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067710389 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066753471 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085830715 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061728025 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090655883 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066751971 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073501472 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084199365 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063516266 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088034031 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069001359 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070551798 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084661066 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067832646 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085660744 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066684685 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08540872 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073278462 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064658211 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094113194 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074180053 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084662182 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069258356 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066702669 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085110513 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066002692 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084295422 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067783462 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066437758 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083572204 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071116294 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086645426 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067028707 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067850504 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085186268 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066937884 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08483499 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061349394 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065274824 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083733424 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066346657 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093341294 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067597167 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082995684 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065737515 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067060401 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082343384 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06320861 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090720057 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075599354 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085164717 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074105601 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065021294 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085735471 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076317438 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078747366 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065207083 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080885637 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064845607 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07391386 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084869457 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075791743 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08309679 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065986557 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063333217 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084780024 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065714578 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060429609 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0819649 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069854399 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083159807 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066298953 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066159859 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086723928 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068026482 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093060099 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065987964 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084775412 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066801999 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063558257 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083500689 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065341219 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085829672 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068246984 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064643774 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081301806 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066470642 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066939579 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085624178 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066307226 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085144742 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07319266 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066353283 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087762941 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069523009 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081733578 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069779099 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083437857 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067004804 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066126119 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087991457 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070271608 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085715399 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075157407 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06610005 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085176679 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067205101 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081805259 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066936547 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065407283 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084050514 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065552636 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085164432 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074395573 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081416033 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069976985 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066045719 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084607419 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07355992 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08492646 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069391278 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090060792 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067571506 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067804853 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091917979 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070486895 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086502914 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068097719 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067314714 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089694331 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065896225 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090256464 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067473452 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084269165 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06802616 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064280356 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084002912 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066553234 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064705093 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089890813 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066872816 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083619601 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066132903 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063627542 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086657278 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069735983 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091002101 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068967438 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086098402 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062516099 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063769316 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085143644 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065027597 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085206204 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070003992 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071832892 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087446992 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067843246 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082739436 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07561497 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088977803 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071097174 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064689367 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08836105 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067750861 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086135639 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068323123 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067495315 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085464854 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07072455 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085930523 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067193142 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074259418 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088022352 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067711222 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086075686 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067988484 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066839706 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079420313 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067267112 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086624301 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072134572 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068650424 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084791459 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076649729 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082005869 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066905614 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086381156 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066501145 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070755971 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079560602 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068356218 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085026871 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067650094 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061826506 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084012895 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065341011 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085634062 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066387536 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062191749 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094379764 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075459304 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087315178 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065992455 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065191703 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079056564 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062068238 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082931081 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068279734 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069055591 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094739051 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065652475 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083867315 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062757338 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066814256 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086755872 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069450644 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081498599 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061844458 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065534703 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088282002 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07209318 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08261216 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066818564 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069056524 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086140823 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064583261 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087369226 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06355528 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069341327 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097063833 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066709647 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085519712 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072801489 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092282706 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067666048 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079452525 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067525741 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069573582 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084508668 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068124267 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08536583 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081599179 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087350557 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066189895 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065280037 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086858347 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066159557 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091922627 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068301585 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067140446 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089093387 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067884595 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093279257 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069527896 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091561165 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069656988 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087142213 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066234501 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06668365 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082715455 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065497269 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067190592 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086125408 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070373149 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091722297 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06583062 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095958319 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075216943 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086194106 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063744562 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065991849 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084134197 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062969685 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084804299 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065153475 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065195313 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082527458 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065578472 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066878288 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090649126 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067478503 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085696412 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066812526 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060687037 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086821131 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068968925 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085484587 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064084238 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066442691 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085608773 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070510002 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087617989 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064846212 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067808798 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086893812 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067615287 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080171972 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073602026 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064984721 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087614074 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066190244 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084283893 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067925666 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069780496 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091118532 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067905155 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087104415 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075804394 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087601436 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064648948 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063696156 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090417193 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065429266 seconds)
  done (took 45.922162416 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106540306 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082325721 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062143836 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08035202 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074339797 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08182038 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062123545 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063072852 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081104374 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065248055 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080161404 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062852124 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089432952 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0857984 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092847807 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066993292 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080081812 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063463351 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079915783 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063357773 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089169695 seconds)
  done (took 2.454890887 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075607029 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089338788 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073451215 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093924233 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067654603 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089048919 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072954766 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089323332 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0935957 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067300558 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093859202 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070952793 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085072844 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068244353 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084828696 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071135514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094295218 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067907184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088914124 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072522581 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089252239 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073201059 seconds)
  done (took 2.609950942 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067088311 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065112788 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085313211 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062019135 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065520123 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079981697 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06960535 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081097088 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069532107 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064996033 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083340365 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.074284528 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085489371 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062202437 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066046946 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081610869 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131812027 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070169733 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065154871 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085759399 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061404763 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086142987 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061813974 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062038012 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084303424 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069699963 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084845488 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064663093 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065710259 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08392751 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06580755 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081055211 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068673264 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066018687 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082936877 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065574805 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065485274 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084033685 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062449806 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081207092 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067171084 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062368457 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084889593 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06747636 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063642594 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082666787 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067532626 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083427149 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061950051 seconds)
  done (took 4.448848376 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084053646 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129252877 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086699864 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089674224 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101612725 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09324401 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070009359 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110854084 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063396425 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083747139 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082107243 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102171489 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084840774 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070631393 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090221399 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0663248 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067240725 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083446289 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070573419 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084039362 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069379503 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091565777 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098080758 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08031512 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088007317 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065880668 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083809247 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070454202 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097766436 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072175811 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089333175 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072356034 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.09983521 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071760658 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085027254 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068431307 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101400164 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083983201 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068612011 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063361895 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086422341 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070533404 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090821341 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082643212 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08570237 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070655628 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084685912 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063469225 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098124821 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067267363 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092049436 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.098752763 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070202861 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084177302 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070594784 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099559505 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066989937 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082770707 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06992156 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096681515 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063832109 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08778156 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08109286 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086171559 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073725924 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099629748 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071122525 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08820488 seconds)
  done (took 6.586514931 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075260224 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090785662 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080941416 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099691516 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090961595 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073604773 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090827165 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073911321 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090012489 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07780819 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091670944 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113417254 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068479025 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094490371 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073497194 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091479443 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072306402 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09246343 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090784295 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073234885 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090625451 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081658146 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091507996 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098354842 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10300437 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086414862 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072450144 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090976687 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080400865 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092062005 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103145661 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07277105 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091039645 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099028379 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084955479 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090447971 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065654383 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090722924 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073137817 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091684573 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068200298 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099421156 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072041108 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087293041 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073057882 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092164415 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099576983 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084887838 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094180578 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096332776 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073796829 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099187102 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071983962 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091799204 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099427029 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105137711 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100186617 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099078395 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073016844 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099511728 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098168451 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107041042 seconds)
  done (took 6.293881375 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088324179 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093843671 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095902645 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062186989 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064329174 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089467163 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065007074 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082356845 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075314441 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093169775 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077719041 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088916027 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072559031 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095948578 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088871098 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074105269 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089331881 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070156478 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093988742 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069699428 seconds)
  done (took 2.483982163 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076377977 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102180776 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06722526 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071294032 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088936108 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072189843 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088019254 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068951279 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08601429 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069541515 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095272338 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076726155 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085843608 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072781231 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094770041 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072546926 seconds)
  done (took 2.146542318 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078164012 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095490981 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081156771 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085927525 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065174386 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082007602 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066732164 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06166629 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081389625 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08049275 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08659378 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068226718 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085015283 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065442424 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063672012 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088978096 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063015199 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082698563 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066592559 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099706382 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078167581 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083703534 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068308154 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067658127 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086427457 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071022848 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085913364 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06412521 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083479105 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067136012 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08501727 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074722693 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081585869 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065841211 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06448515 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082635834 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067051707 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08555569 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069755602 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065417612 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084646433 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065858206 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08538417 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067393807 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080857532 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067690118 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062411564 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090877654 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06427453 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08578474 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06633465 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086759621 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06855422 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075824598 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089241689 seconds)
  done (took 5.048640827 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080554628 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069081745 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081532159 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064603378 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088112624 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068695773 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068930907 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087660216 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067693251 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082617565 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06798417 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087070474 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069211413 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069965631 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087047271 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070290571 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08128273 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068495808 seconds)
  done (took 2.223105905 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072037645 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065967057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092655986 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066433808 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084288686 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069523423 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06201237 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084211285 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064968419 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08443298 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066811558 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068430132 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083552166 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069640713 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084472 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067586472 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068023159 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083823823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066357896 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080226396 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069595069 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065150427 seconds)
  done (took 2.485081905 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072278383 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092604284 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.161863867 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107065136 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082778565 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.09958947 seconds)
  done (took 1.481741349 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091925233 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098915097 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06751009 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106841978 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074994882 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087381018 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069155042 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086660044 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077540901 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101225974 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068289194 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09696978 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09522587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077423212 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093609807 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074176999 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088199549 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068925657 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085372795 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105566887 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06956724 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095551051 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069663515 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086684643 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069216639 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095306562 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076183063 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101383062 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086742025 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078059562 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092983418 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068440778 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096712505 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101397566 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070709672 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096040084 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069754731 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106425939 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073633211 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09616014 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069260219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094066805 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095524432 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073029438 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097103727 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06878864 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092896575 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068897447 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088917798 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112179987 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07479959 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096143537 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093551786 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077808198 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096581885 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112433227 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082242205 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096484596 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092850874 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082461353 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096339886 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073525678 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0965251 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100563485 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074472861 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095713221 seconds)
  done (took 6.587085485 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085149814 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10541403 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069878467 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101542074 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096279186 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069310111 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087536458 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069526613 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087316909 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068635454 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12898367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069290123 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096391317 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096211448 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069017859 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088472795 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069326464 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09617447 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068665301 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112352342 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086656156 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077256685 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096343748 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095248903 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083285601 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093991085 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068687218 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087441577 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068948751 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088582599 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072913423 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088150857 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095949714 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068187585 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095602522 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069072348 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087383086 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074292742 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088312911 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073640322 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097352628 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105415035 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06932046 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087721039 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081058644 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088166799 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068009468 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088097327 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068298641 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087437574 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08172403 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10197773 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100823776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09604574 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069956875 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087810865 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069545851 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087728281 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069168605 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093324679 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078134962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087770931 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11282666 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069393817 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088025919 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077110401 seconds)
  done (took 6.478765102 seconds)
done (took 127.55257753 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201904513 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185412618 seconds)
  done (took 1.25401707 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068917683 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095449292 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098228214 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128217504 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086841204 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100413654 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118193511 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079474899 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066187146 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086282375 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067322479 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087035544 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132966753 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067107771 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086410755 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068875418 seconds)
  done (took 2.310950542 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103691569 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.194555076 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108896635 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065668266 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099093036 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078609047 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084993892 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076921483 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093967518 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066302171 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077919129 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095260747 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065350661 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095768285 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074633377 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097633247 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065286989 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09780041 seconds)
  done (took 2.519775558 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104386436 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140816401 seconds)
  done (took 1.120451947 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.199676594 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122797187 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201203176 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.415634852 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205705782 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277230794 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173591933 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171273253 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158645607 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170378802 seconds)
  done (took 2.967886443 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099271023 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.16951169 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309516365 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136721319 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085921527 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116177141 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138331497 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089111268 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101193437 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099478382 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080091675 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097833445 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097031084 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095450873 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074215196 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096895691 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121173727 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074575481 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09652956 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076461979 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117386027 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.0673933 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074822875 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093796769 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076672986 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098157457 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06606961 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086455999 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075788356 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094254062 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078472497 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114112618 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096493155 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130231313 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081183861 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130052504 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096677392 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071538069 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095021957 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072541387 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097674125 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076082892 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102699297 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075654462 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085934498 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077235934 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085567243 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06658013 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098266396 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076771778 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098205766 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078612961 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128454906 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096231442 seconds)
  done (took 6.191053243 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.742806463 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109556002 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093518264 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.805063796 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087927095 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104436744 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.710088621 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116152237 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208181672 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762685881 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088772255 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097447051 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179857094 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.212376926 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.896228355 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.281872803 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.632740761 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103989121 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108051669 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131505351 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138411714 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175178845 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149796182 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407841192 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074404159 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092799359 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136825077 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074170639 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159007151 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083804072 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092976072 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154719771 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223203276 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155549457 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096369494 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069929013 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091327024 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148365302 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217122252 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190619382 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157783744 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06720913 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090457174 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140014759 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131386997 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068087124 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139820576 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152074496 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169882227 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073333805 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094924436 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140834737 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138618786 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143016038 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099699518 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.261307704 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287618608 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069470029 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119189819 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103305275 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212276436 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103498813 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198610492 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138714762 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166991836 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090720329 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73211783 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145894324 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091079674 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074899172 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119919149 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094013183 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138399645 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143678958 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.362071535 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.160682087 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073705887 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06963814 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20459897 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08222952 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090697299 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141607228 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075121211 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122242465 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.161869723 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141758076 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146318093 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207101124 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141771773 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137371938 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094671555 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123192049 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074262441 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.191676787 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193509647 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139946355 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.188580123 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.158793862 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141114594 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147241224 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075557192 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170390523 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097678322 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100341714 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1381762 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190686353 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121536823 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082493294 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093772031 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139734756 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124731515 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085721825 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137878681 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169807671 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.432245563 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146854713 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067290772 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107885354 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138164536 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140421937 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096683044 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214040389 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122277892 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.144847455 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120531402 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088353828 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118751421 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140024955 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077724118 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121194509 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136739135 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097756014 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.209718869 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189886141 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077894548 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.192775751 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.1606499 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095183685 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149634965 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117439643 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146117254 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076523302 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156964353 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076057992 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.744927824 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144023479 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120556739 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072521489 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165283665 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069658209 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103954258 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102388659 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067959768 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.749399065 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106356357 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099290398 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083060813 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095427175 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120360771 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136807499 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073086161 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138324323 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203458237 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095732873 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097705865 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105281271 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140049407 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095674579 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083431357 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103788865 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082828202 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122156823 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094283794 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082281227 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145202796 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161911451 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.172559008 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57210503 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070879562 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103163127 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.180122517 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0914106 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.242300209 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.156622037 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.17832919 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139345489 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101117881 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289547049 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143727588 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.164195476 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085488678 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150125643 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089529658 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13734431 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.14312198 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069840963 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096403379 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.14162662 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.145135996 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.162768883 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.906290374 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091043056 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204644342 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067795545 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.149622417 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096065189 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075648915 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259462046 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070815147 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.165297854 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142991991 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073687707 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102321854 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.819418969 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103354034 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139105281 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074671408 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.194622992 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.142008677 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135823247 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135213922 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096348087 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138011245 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.186206538 seconds)
  done (took 40.261049204 seconds)
done (took 57.498842097 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256350264 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176590055 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.239793669 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142629546 seconds)
  done (took 1.78755108 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142763887 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10383318 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116753737 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085264177 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102864623 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085742338 seconds)
  done (took 1.534268159 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.399837496 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264059596 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229824531 seconds)
  done (took 1.793593743 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260370755 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210766515 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.446052941 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.294537195 seconds)
  done (took 2.238170001 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.173939745 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11251635 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066363758 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106066305 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156399514 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250911645 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125882905 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.185686592 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078393158 seconds)
  done (took 2.20216792 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194746936 seconds)
done (took 10.65210654 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.109601546 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103342765 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075647622 seconds)
    (4/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.179265356 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.198430442 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.143518302 seconds)
    (7/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.207025972 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083047031 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.234768801 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138509867 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078707378 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.111187157 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074018802 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.156433814 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.127226666 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072312551 seconds)
    (17/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.177434398 seconds)
    (18/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090785575 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.185731908 seconds)
    (20/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.215871392 seconds)
    (21/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.218298946 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.116905455 seconds)
    (23/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.19384001 seconds)
    (24/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099543218 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.099489667 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.223141826 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.169930981 seconds)
    (28/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077820356 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.221799594 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184397175 seconds)
    (31/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075080823 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093831052 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079264828 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.246055922 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094493537 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109938536 seconds)
    (37/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.129964497 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08954521 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.175796599 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095321543 seconds)
    (41/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.253434943 seconds)
    (42/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077815215 seconds)
    (43/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095954871 seconds)
    (44/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052490911 seconds)
    (45/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.167373058 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.168769532 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.171894253 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09394177 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100247799 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084557246 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052251617 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072871021 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11268259 seconds)
    (54/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074489826 seconds)
    (55/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086094654 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073733071 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.173290075 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051989592 seconds)
    (59/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080904842 seconds)
    (60/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.176346577 seconds)
    (61/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.118521467 seconds)
    (62/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053080003 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094113747 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087170896 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072198108 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052289921 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087799943 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067880356 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.124486442 seconds)
    (70/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075200962 seconds)
    (71/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099469814 seconds)
    (72/309) benchmarking ("sort", Int8, false)...
    done (took 0.162793737 seconds)
    (73/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108313473 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107812852 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069757416 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155800293 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170708647 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102108565 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09522299 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.17723998 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099401567 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.141848475 seconds)
    (83/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071334481 seconds)
    (84/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.161961049 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067126475 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.115287492 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067198839 seconds)
    (88/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.216337239 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.067400159 seconds)
    (90/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094048552 seconds)
    (91/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082316837 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09759933 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.136443511 seconds)
    (94/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07237261 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.083997585 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052558323 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168367291 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113624838 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158340816 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.134643952 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.135389994 seconds)
    (102/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.072708889 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157416243 seconds)
    (104/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096240081 seconds)
    (105/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.158297431 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.11672917 seconds)
    (107/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074749993 seconds)
    (108/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07342743 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.204796031 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113633436 seconds)
    (111/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.113197448 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.203513548 seconds)
    (113/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069410244 seconds)
    (114/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07192466 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.114020818 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064726955 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.167332129 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05197153 seconds)
    (119/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.128343977 seconds)
    (120/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067423809 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051063394 seconds)
    (122/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075697225 seconds)
    (123/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072546166 seconds)
    (124/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.133444572 seconds)
    (125/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077394877 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.12248756 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.136088198 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096608595 seconds)
    (129/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209450133 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073279265 seconds)
    (131/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095034037 seconds)
    (132/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.133807878 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092867495 seconds)
    (134/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.167318519 seconds)
    (135/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098767337 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073375962 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09307392 seconds)
    (138/309) benchmarking ("sort", Float32, false)...
    done (took 0.128219292 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.07290371 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073925837 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115601188 seconds)
    (142/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066318816 seconds)
    (143/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079258223 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087642551 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074621629 seconds)
    (146/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053458194 seconds)
    (147/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095560026 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077626096 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065167736 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.199462681 seconds)
    (151/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.082674803 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074466565 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.130617654 seconds)
    (154/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109057564 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074846679 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.090220109 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200621399 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066900409 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.120095562 seconds)
    (160/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070554112 seconds)
    (161/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.189889214 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066516715 seconds)
    (163/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051360907 seconds)
    (164/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.072416614 seconds)
    (165/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072732483 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162394091 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073620588 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117268991 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096033674 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101260677 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091295778 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053029452 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112189291 seconds)
    (174/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052811066 seconds)
    (175/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141360583 seconds)
    (176/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.169553819 seconds)
    (177/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.074997657 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.115914582 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.089071464 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073525481 seconds)
    (181/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158534592 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090526844 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072559581 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.076146399 seconds)
    (185/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.110330242 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092008975 seconds)
    (187/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074412387 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053755632 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096448614 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068045644 seconds)
    (191/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069165383 seconds)
    (192/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091612952 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192261088 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053058058 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06567024 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096152016 seconds)
    (197/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.135683831 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088368654 seconds)
    (199/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053448149 seconds)
    (200/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051852294 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085934343 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066424363 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.28335209 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.171146516 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067836498 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076928397 seconds)
    (207/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051416811 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066339443 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.074201646 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115234283 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156711479 seconds)
    (212/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053486187 seconds)
    (213/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051944144 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191494472 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095434699 seconds)
    (216/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051659945 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096729176 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09749674 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069762939 seconds)
    (220/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071019264 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110997855 seconds)
    (222/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051949821 seconds)
    (223/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103350267 seconds)
    (224/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077570809 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087191543 seconds)
    (226/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082034827 seconds)
    (227/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063236283 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074360019 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072352141 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053099626 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074193098 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173530651 seconds)
    (233/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089097589 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091990973 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063319182 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091087131 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052946158 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060108373 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.074878139 seconds)
    (240/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07320141 seconds)
    (241/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052041069 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087630618 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190249632 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140706496 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.073907722 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066317029 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066073985 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110614227 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129894918 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.074119721 seconds)
    (251/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068653958 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064791737 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.090228959 seconds)
    (254/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053292953 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100994264 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066131307 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054475213 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.072639244 seconds)
    (259/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.09664542 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051854617 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093639476 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068132447 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112200319 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051859572 seconds)
    (265/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066638197 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095459482 seconds)
    (267/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053456537 seconds)
    (268/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108447272 seconds)
    (269/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.074185554 seconds)
    (270/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052630885 seconds)
    (271/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09081966 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151144365 seconds)
    (273/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109618633 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120532511 seconds)
    (275/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.083554477 seconds)
    (276/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061139087 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091182435 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.115787408 seconds)
    (279/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067438224 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088248215 seconds)
    (281/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073618691 seconds)
    (282/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070189555 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095130351 seconds)
    (284/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05188156 seconds)
    (285/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065766491 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156268269 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064462125 seconds)
    (288/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.074217288 seconds)
    (289/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067053064 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064462712 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108547764 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054159054 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095508209 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067202907 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052258826 seconds)
    (296/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.081680171 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052985203 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071637987 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05089988 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111776562 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.134581493 seconds)
    (302/309) benchmarking ("sort", Float64, false)...
    done (took 0.125314945 seconds)
    (303/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.090298359 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051585305 seconds)
    (305/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051315229 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09437288 seconds)
    (307/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051581083 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066204866 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075849547 seconds)
  done (took 32.925548708 seconds)
done (took 33.834742143 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081842488 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113223803 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074803911 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114506087 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081502843 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098948428 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07303291 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078644322 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102665252 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081396706 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101092282 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05443959 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097198279 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075240604 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096474135 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09245429 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100423702 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072236139 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073333826 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086939471 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074161262 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087847547 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066996719 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055180593 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099170716 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072943271 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072224588 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.09737847 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066194714 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087852046 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069325523 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072831939 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087430043 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078537931 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094437418 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07440468 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075661111 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098273332 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067420778 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087416713 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074070777 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06540534 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094575155 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073581653 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071369838 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092738755 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074879712 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101382186 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092107799 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089769442 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074138749 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098513141 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07767115 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072022218 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09170061 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074617288 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092044234 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092424345 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096352299 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068490049 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073996629 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096329438 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071238281 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094851076 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073647173 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076374158 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098012952 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071097405 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09698051 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071225407 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065467146 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095936932 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068628987 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064947697 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098346249 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076827694 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086438339 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071386618 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.0729111 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09409182 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065444388 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088887643 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067862642 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071982675 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089572837 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055728566 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070115651 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093594126 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06523764 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074467741 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09432701 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073711757 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088255624 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077094647 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065421079 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092854483 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066080964 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.0659436 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089363327 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069570848 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065377005 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090158568 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074690482 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088759998 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072331573 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081007259 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088453649 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072867883 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086123229 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065359146 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081910994 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097580082 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.0664509 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089632229 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065555955 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073543412 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087745252 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066128125 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065668622 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087795129 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071772582 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065215639 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090877188 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073272886 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10125121 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066181454 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069035885 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090664003 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065797864 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070924197 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088655181 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066170241 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067553691 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086539203 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068159464 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087668178 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073491406 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068233582 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096612783 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067435248 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095993005 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071134566 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071932579 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092734075 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065223293 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059028499 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090638222 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068313728 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067696906 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088704673 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06721576 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06556258 seconds)
done (took 13.118014575 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066345733 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167809951 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124517743 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096234749 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109737137 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066178843 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099076443 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102720923 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090632358 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126384112 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08830539 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.10665836 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114716051 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087685294 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066272422 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069547074 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089892257 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08797194 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124059052 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085796188 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139259217 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087181807 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119617016 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090981675 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111219771 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10275193 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.089232878 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07016132 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069267761 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115579935 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107993856 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069825338 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067028433 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122446876 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116191896 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085076974 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08843152 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084514086 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088090523 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066533601 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113857781 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100285285 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104604123 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081875139 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094385973 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069335385 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089416399 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085767045 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11359988 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080455802 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110494669 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.1328907 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069190415 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105330807 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066317484 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109742834 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081383829 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091264301 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067078325 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090189086 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066670356 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069675999 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110608074 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114206355 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069881929 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103819665 seconds)
  done (took 7.217231381 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08509194 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115784412 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08500477 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107273046 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066887533 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066496851 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089635283 seconds)
  done (took 1.58666285 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06776511 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08850631 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11219894 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089846221 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108274622 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087502281 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098848032 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067242371 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10698531 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068331415 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110758121 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104517121 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090703557 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073711442 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091130121 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090478912 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090568762 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089889874 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070899067 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112978503 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069922 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.109760982 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068967594 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06780099 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103788033 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067336315 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138138945 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071813776 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091001354 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071252977 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065503639 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139332663 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103918747 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077762584 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066712372 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104634971 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082544225 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087933371 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083859396 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094074403 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081540795 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06786928 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091161071 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065623262 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071536582 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100583152 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06912962 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09035154 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070055542 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08699003 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090975467 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080838068 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090021414 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071894764 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068935756 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095207617 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077076961 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090159572 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087346244 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067991722 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107350419 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083244635 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105041591 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083968607 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092312472 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080816857 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104097586 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069829744 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069363021 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093205075 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084007492 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087564149 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068707199 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078234229 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091747871 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090744891 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113324895 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068585519 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099992783 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067655008 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067521029 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090356319 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090672996 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093327613 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067641666 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072158228 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093746138 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065848729 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066806614 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094063999 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066427458 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09064457 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070676788 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06843564 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092209599 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08433613 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067445081 seconds)
  done (took 9.258821322 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068899692 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068621952 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091912772 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06873672 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068743185 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091366188 seconds)
  done (took 1.444975878 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098673372 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092096815 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08157918 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095058963 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106558465 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104439357 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08264418 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105591137 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085045431 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102452034 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082839656 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105546332 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087667276 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096109946 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082357456 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095214021 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082244668 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099847159 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079208284 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097095666 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088335221 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095689798 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073668447 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106057674 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071127394 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073466689 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100652393 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080398448 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102435733 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082789704 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095411497 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.0711876 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094815685 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083841852 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104670173 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072454228 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095989405 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071946955 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099320849 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070933144 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105287123 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073952093 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077968751 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095191258 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105042985 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072148658 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072134892 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099743928 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08125178 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094860518 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072083855 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094636419 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070828286 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093935608 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072966838 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106448171 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071551513 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105114697 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073558465 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072126943 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093130918 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070948382 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104779875 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070825881 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103270281 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071454187 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094805409 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073717443 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096760862 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072726195 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071530526 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092788651 seconds)
  done (took 7.309331811 seconds)
done (took 27.78583052 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.649479537 seconds)
  done (took 1.630018834 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.760739496 seconds)
  done (took 1.744140096 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.55458741 seconds)
  done (took 15.542775605 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.611732971 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.759153113 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.792993556 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154589273 seconds)
  done (took 3.301501315 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.88052952 seconds)
  done (took 1.888667606 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234092802 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223856435 seconds)
  done (took 1.447254338 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.730084401 seconds)
  done (took 1.730618604 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.282648755 seconds)
  done (took 2.271430265 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.318776511 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179714557 seconds)
  done (took 1.494036219 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.519322004 seconds)
  done (took 1.515852628 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.560367011 seconds)
  done (took 7.560825665 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231019357 seconds)
  done (took 1.242208822 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267723626 seconds)
  done (took 1.268485587 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.144664118 seconds)
  done (took 4.147407633 seconds)
done (took 47.7721517 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.0787011 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082014919 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104181038 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078814114 seconds)
  done (took 1.340924878 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077610556 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07318612 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100452746 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073275877 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100857905 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072979798 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098133253 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077467672 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072426153 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09730454 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074095666 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096188298 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075694162 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098617913 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070457432 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076617149 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098955164 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072992298 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100234693 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074470568 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071211361 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097947715 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076472106 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095380649 seconds)
  done (took 3.033499882 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077902261 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073329781 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098667579 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072619686 seconds)
  done (took 1.327925235 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077612528 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115170645 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089310852 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077195422 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.11599415 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109907759 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06956842 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069246681 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094747751 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077408687 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091028946 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097417977 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111082964 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076829401 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102681632 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06632344 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069002672 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110890466 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077914057 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100826329 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070332134 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079394172 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092189697 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090578379 seconds)
  done (took 3.144657163 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077296121 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127258786 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07931206 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.114285865 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091959054 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065368911 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.09922035 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114883393 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124932524 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089481301 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069852153 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066021807 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096067317 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066381867 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076555321 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132427593 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135505521 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068843184 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.121329978 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066203493 seconds)
  done (took 2.897585461 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075290984 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070649956 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089033884 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068960373 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076710465 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096889204 seconds)
  done (took 1.493678505 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068712593 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067748707 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090626852 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067154979 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071999352 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091095829 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065840178 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067058627 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091503101 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067943439 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066858303 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089791577 seconds)
  done (took 1.917890581 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.381916508 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093195967 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068602861 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088414383 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070815457 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089682244 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080663589 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068235346 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114542596 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066979344 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090800356 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068811467 seconds)
  done (took 2.298352692 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258808594 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077629495 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322880161 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168696002 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140332421 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155873534 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106043261 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140217858 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197745795 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138363277 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200728215 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223358646 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134043862 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168460054 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11548856 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132289237 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186847826 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22207306 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105097015 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224654343 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207580376 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155818693 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179188596 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129099081 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135492506 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150465327 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071961705 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10559755 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232178642 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160915072 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20170853 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138728477 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0976935 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230567328 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224399457 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194646905 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163371337 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085127973 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157458855 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163748683 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256718782 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114476494 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19332402 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134133194 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106015867 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173023379 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146436126 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146204268 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137800613 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11545846 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172826715 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24033148 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165082965 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112342715 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136532802 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141088399 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142884462 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127373541 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243737578 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192927932 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180553725 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072017611 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125303819 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185748925 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158574901 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141410777 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153496122 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118406104 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167457962 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21005732 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145185642 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173031054 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179341147 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113613186 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146469822 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169791615 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15568954 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227258562 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154410263 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072986086 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151339763 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128853334 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107884045 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144722789 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100620997 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234110359 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100046226 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139115355 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139717336 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136218604 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136866547 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194348425 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200641225 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128638231 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066236119 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130649439 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149188853 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174904817 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113254276 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134731455 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147385242 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104178825 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166153556 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075338677 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151874142 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104207738 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15209617 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162050994 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101052092 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155462052 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102637059 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128111177 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162779258 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21745171 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115572491 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083257583 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226147876 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155562988 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132245684 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174967897 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214229291 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101384684 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128828752 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204785616 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24167524 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089552316 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221468036 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134723052 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108692316 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08882418 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154739858 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139461006 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148182826 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108591641 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153854903 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227777754 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075824364 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120935731 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165756466 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107542748 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081994393 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139309812 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127320413 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120523999 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102540613 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133046429 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194183228 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153704406 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134299674 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152983936 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124019231 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1988989 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114130097 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129294099 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129600363 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071172782 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165289513 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217021823 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079701332 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223602234 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153621467 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131133394 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14715363 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084007043 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193924454 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079376642 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096093614 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173086176 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13842315 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135785575 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184102034 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129946946 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154726294 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150632717 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161370817 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184963008 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161290447 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132507203 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088020055 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13878974 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15312714 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098975109 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12069323 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083110017 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129917555 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122243464 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084362058 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196814183 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155151999 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12652759 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139721202 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098636455 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204571627 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078111596 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158789986 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.145422441 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120498967 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211116647 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185589452 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188184837 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100798432 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200640223 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071621903 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099050389 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091677571 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18090691 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083978344 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109336469 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145216281 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179867574 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156757212 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191670722 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113405636 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148986077 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212806855 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071983411 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143692802 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179716239 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176835986 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.130873567 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113252015 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100484839 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200084459 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135130667 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245187634 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143622796 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152862029 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181111603 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130250916 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106281577 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106713036 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190980306 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133391626 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181361271 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126525732 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114626756 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137326179 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081788159 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131483348 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154681762 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147836126 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187636813 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143530187 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162339503 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077552987 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169333809 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151394398 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15035882 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064918862 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148739507 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220129657 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125414305 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145526122 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185303162 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105919865 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153377604 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235752098 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176329247 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110648182 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137991882 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149495019 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157316991 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147209758 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170568181 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137606575 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163844188 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138641321 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085115367 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112856183 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125391666 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133710241 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096387106 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.164261418 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144433666 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095229498 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159091591 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138939817 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137429499 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146334619 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124638891 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092082779 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123739511 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234844351 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15052018 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234995473 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127565867 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179850745 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22684639 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075466357 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106480013 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08148707 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19415391 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085254848 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162886462 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123371941 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132862509 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155810857 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171589886 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122681487 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068806865 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136584293 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189681887 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113482297 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124729556 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133277143 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222733367 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104462158 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106400459 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152698765 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131279952 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103813331 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23266507 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.088289498 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099334862 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102723995 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081532543 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157510349 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21326587 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108970818 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.130776615 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143269357 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147813559 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182933993 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103164215 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126053523 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142335174 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205614307 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157730654 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090669598 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140505885 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184045684 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188100765 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132813176 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122592705 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204764837 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211004017 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221207379 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090748428 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143397316 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142415864 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136279508 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196592867 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084560712 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226420258 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109380022 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169562531 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13323453 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120390435 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15828152 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125652801 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0894403 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205067552 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148687562 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08298958 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122521169 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146401601 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149589766 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134533291 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07691252 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194295865 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074097579 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194127267 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202272737 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108650912 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134495748 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097507441 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109279434 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136659702 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131204008 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088562323 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.144047714 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229103719 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118849905 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181955592 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19801278 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143254949 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168335953 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126609171 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663327227 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079473613 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212883142 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148289924 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238336324 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12548315 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147930696 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112300069 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178521022 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175314943 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133152406 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203944595 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163445847 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148591137 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105350789 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104363685 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138077535 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117677636 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134327722 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14304195 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144969419 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127877624 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149789672 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157029216 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109104311 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096561593 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218043539 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145670061 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172439349 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16932342 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112161669 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148156325 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197502681 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081078676 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151566255 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21385667 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136385853 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126091508 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081835184 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133517218 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232292192 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073651713 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221618742 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153023137 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138266121 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14201452 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147047514 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188218835 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136760402 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154375406 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097160305 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165019172 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118572869 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110602331 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10437338 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10758772 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139266217 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125096732 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130185969 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122803834 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207777431 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071884917 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122981487 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13030324 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173355223 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238859235 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115875345 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083205145 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147323821 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141509094 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144276406 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179992987 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.0824054 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110804747 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083772838 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.137904221 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13756723 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141950693 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106078049 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138928599 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2269034 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111444572 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225936994 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123346599 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133413572 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070228228 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107439542 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097355025 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124090066 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135242096 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128467483 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232575719 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098661709 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.117494487 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120265045 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074511091 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10959788 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159138175 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139277519 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150465775 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125314984 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064205662 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137945414 seconds)
  done (took 71.19376002 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.132609956 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10394648 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117642618 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.175357622 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146987126 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237474902 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180399012 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224073425 seconds)
  done (took 2.410417991 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069510475 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116415599 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10213636 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115801784 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089481598 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068813599 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293270564 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110037784 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066608636 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114104119 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118741266 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.090978229 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.471099026 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065558707 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094952694 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084695416 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068335019 seconds)
  done (took 3.225122335 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.427307321 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630215149 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450859656 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072785178 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.916695053 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10636922 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.394038877 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162342853 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090872545 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430150895 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.721363368 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.150763054 seconds)
  done (took 17.648789578 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07492204 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069329868 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109407844 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084138111 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098604832 seconds)
  done (took 1.533779321 seconds)
done (took 114.461607402 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080165104 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.342542052 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053229142 seconds)
  done (took 1.525655764 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082954226 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084487303 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110174977 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082755572 seconds)
  done (took 1.465874488 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075506477 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076247227 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110354412 seconds)
  done (took 1.364892066 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278018589 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166826016 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087453591 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08353906 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077509297 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10383195 seconds)
  done (took 1.371541828 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072001807 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074460401 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099192025 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076872949 seconds)
  done (took 1.419162145 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076202883 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052219349 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055029993 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081512372 seconds)
  done (took 1.368006652 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08943924 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105167192 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080517116 seconds)
  done (took 1.376071459 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106499091 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112232622 seconds)
  done (took 1.324611515 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081458659 seconds)
  done (took 1.182076942 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094412423 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.138689193 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154300625 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136159258 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165989018 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.1364504 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.112994006 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087500125 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104347749 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115332478 seconds)
  done (took 2.353412122 seconds)
done (took 16.454891856 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078168266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.486479118 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360627511 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117050693 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668936742 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356316868 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.042223176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118501016 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120903474 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093869655 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083183254 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675393593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.966323598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.44239957 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.954023724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320708782 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676434145 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068505011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093203775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068076305 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.998919003 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093498401 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067293396 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068780034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67574997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370350469 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09434983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.316874858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06828484 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095403888 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354148642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093929192 seconds)
  done (took 16.181631451 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069734602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143277191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073066926 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08303691 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096879803 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06956753 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097958445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069059873 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152749539 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06783468 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110429466 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067802851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097624334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068348119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086536273 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094184065 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068543404 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068032924 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094334457 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06810253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11184208 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067826519 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068526426 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09437288 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067340369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105624724 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068715211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068238426 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094118017 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070266275 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09693135 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069622904 seconds)
  done (took 3.833921682 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113966558 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152132564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0740655 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128667078 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112716142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097204116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.16975049 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092891313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155286605 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067910331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110962707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068460175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.1272897 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068867317 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113431215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068672508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069454629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094559993 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068301036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095307474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086931442 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09295125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06891075 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068267748 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094232804 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081957126 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094201933 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06910835 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068239076 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096404994 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072101797 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093656926 seconds)
  done (took 4.149577093 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072763192 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074794597 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10850199 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083222543 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096192291 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072065781 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072790629 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095912832 seconds)
  done (took 1.783183002 seconds)
done (took 27.043448908 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078318765 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069523091 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099497998 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079951278 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099298869 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079158513 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066744522 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100914978 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077004662 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072725127 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102370352 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068172937 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.096583158 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067170601 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074255073 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09388416 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079971402 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097747695 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080009378 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079111284 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096887181 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076705022 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099987133 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079583623 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105528419 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079694856 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082585572 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100020254 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069515629 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096461716 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077450129 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083531624 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096467159 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079367173 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094306064 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068093748 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067548888 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094479181 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080202855 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099923846 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070987395 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100185021 seconds)
  done (took 4.663332966 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08828932 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091314962 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111729208 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064839852 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097456533 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065774262 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.114794606 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063701181 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059425678 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.115355588 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055995395 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059109053 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089341576 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054000902 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059043993 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056191565 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088595644 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056111716 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059226757 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086106212 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058776354 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054150867 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086697214 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063514732 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05614749 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087694183 seconds)
  done (took 3.055591524 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075019819 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08382234 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114483664 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127616592 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132208347 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076945069 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104776831 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087545222 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113130038 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067108263 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071268908 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.123508193 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087776094 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100857078 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067911525 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113685031 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082020188 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070040207 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100592639 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089474958 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.110739568 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077753091 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118801522 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081968007 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066964173 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09727519 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071560397 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107671135 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073332628 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076843003 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098935214 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071405558 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096022867 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079325485 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071737664 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096000318 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089222025 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10461843 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078262943 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068516348 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098387049 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068598299 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114324001 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111799196 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093994854 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074752478 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075601626 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104667488 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068110978 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111709267 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086300168 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094191349 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070913728 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06672143 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093936606 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081027202 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070048935 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097132129 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076834279 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.09718734 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080580268 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071453798 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109819632 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067153819 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102614168 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067472738 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068516347 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093654411 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090978367 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095672172 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108711665 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095647575 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068723492 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07588406 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101870941 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073710541 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095251417 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083036458 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077417473 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09789021 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076306592 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097910738 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070500469 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086580266 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096637684 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068473698 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068880329 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100637624 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069581096 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095949367 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080984681 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067755317 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097455817 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084139119 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095083319 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06946327 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074015008 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.09929696 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067221477 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106354424 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073953853 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095129344 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077117202 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06807128 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09801327 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077682313 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098915561 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066709301 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071853962 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101341193 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068694334 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068866817 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097632446 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069065942 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104244605 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073998009 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072403529 seconds)
  done (took 11.283703005 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.190899639 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.185673012 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070580095 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179087556 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076621069 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108332163 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179392553 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096325622 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096735743 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068543589 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069170681 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130550319 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125459449 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105946913 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.10633254 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067615094 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114282711 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104538741 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.18069799 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.175426139 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115241854 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076887109 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06927034 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097773483 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069904745 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078245243 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112659214 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.101464066 seconds)
  done (took 4.284957445 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081146585 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128712657 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074095527 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089067935 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118498108 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068339096 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.10150073 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069088541 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108150788 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07972982 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095217053 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074557712 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074540225 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106105512 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068049061 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10488552 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078358233 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069217857 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098645435 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072768901 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104656576 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080506341 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071654903 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.094502832 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073622281 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.095412151 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064591789 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113107426 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067847746 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117282689 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066170136 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074006317 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.109389857 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068529574 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094957194 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071590524 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070928291 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098906896 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07022947 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066783953 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.09475951 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058479711 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066923472 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108985062 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074233444 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087511449 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074234664 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073837486 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100697896 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065388945 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098679013 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070230796 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07078535 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104123044 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072344269 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072854683 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100357605 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065704028 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102733434 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072106821 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064442049 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093854204 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07248462 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066381733 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103704822 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071620838 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094415962 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071179974 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072243907 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102025665 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070780923 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070165479 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093925842 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069738225 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100189968 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072303995 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071986668 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094775685 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067810681 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068371662 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.08365091 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068365823 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054012368 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.09947415 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06604364 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066227356 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099112846 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073624533 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108340758 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068916841 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101381701 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069055622 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06657782 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099294464 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063711241 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071307876 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111480862 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112162042 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068700871 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065996128 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110167543 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072567735 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067584283 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084789961 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074852208 seconds)
  done (took 9.822691251 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09579753 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092362429 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09835716 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082677326 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123653213 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093117582 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104052049 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074155276 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070274878 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112991904 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067636981 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104240726 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068506828 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076143256 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124557796 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074823563 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098484263 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076872821 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072506198 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135014928 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08250781 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110271156 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080857645 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096423115 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073162002 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079748178 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123821599 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079394987 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106510005 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085304307 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079670776 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.123238195 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085771266 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099565846 seconds)
  done (took 4.297796575 seconds)
done (took 38.511219643 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.199172682 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.398796008 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.18621828 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.07743562 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.190153657 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.223281441 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.19713246 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.184631043 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.380539708 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.18675304 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.431238553 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.829673621 seconds)
done (took 58.61775919 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.283159386 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.324627704 seconds)
    (2/2) benchmarking "String"...
    done (took 1.455772237 seconds)
  done (took 3.917092995 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.574092741 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.062705797 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.444609432 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.186476416 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.1893997 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.492189806 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.783360086 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.012211954 seconds)
  done (took 27.3019014 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.189492861 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.543206015 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.516420353 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.514198557 seconds)
  done (took 17.897269085 seconds)
done (took 59.10487255 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.215550905 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.256484676 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.230667881 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.171911517 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293895691 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.212115311 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.48119579 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.439618669 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.1896189 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.171521428 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.209617806 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.191774748 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.191582419 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.51554223 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.196521559 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.188580755 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.243595035 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.675018478 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.563836091 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.197039235 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.195821426 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.257234056 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.189206771 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.190526168 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.252987472 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.190237699 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.187697107 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.204260945 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.40148243 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.190297149 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.277102025 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.633551297 seconds)
  done (took 191.139191463 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.187324763 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.206330021 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.319408271 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.241644886 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.616196175 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.386539132 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.343082357 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.694802332 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.206629847 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.192190546 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.518408645 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187742589 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.576726538 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.203739598 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.196283982 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.294158767 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.394107577 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.548924051 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.200708718 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.448017769 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.20483506 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.418731633 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.321996786 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.444497144 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.230028428 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.203682986 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.216020052 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.203616533 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.381698335 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.344783832 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.199068156 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.20223384 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.751863115 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.048978179 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.204302749 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.190825604 seconds)
  done (took 149.664526297 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.445914621 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.188912643 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.189565992 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189639553 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.219335264 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.189706392 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.714888759 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.717568927 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.68589907 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.555804824 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249562981 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.420109253 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.191638716 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281679293 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.202219336 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.190851419 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.204986522 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.216888839 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192475339 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19007901 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.718736264 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204744385 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190142902 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195763754 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.190518029 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219182175 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.582689505 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.209783658 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189909009 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219841184 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.505128494 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.23300689 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190504464 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.488175195 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.690923573 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299804855 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191575202 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220739809 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.190866331 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.457441622 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.189401842 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190895134 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.192096633 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.194307868 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.769001197 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.194168354 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.719775432 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193509165 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.100460454 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.193761201 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190669974 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.50501678 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.664482475 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.194560014 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.191462099 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.19470943 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.192468416 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191924576 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.192231288 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.221187395 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.516370132 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.288833096 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.192507364 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.194186078 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22144531 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.191857305 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.32653138 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193866743 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.812726309 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.251002423 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.406973074 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.721805957 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194790723 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284121837 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310758617 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.194423952 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.192790722 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193070153 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.19283226 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.298937249 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.193269936 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.583251874 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199457795 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.193942926 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251402555 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.285824158 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.192702964 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.482583613 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.196363406 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.193370897 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.920903992 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28656517 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.193102729 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.194539586 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194060527 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.586375986 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.722033889 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.367937947 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.195515188 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.550253132 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195548569 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.599678294 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.700148214 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.778117413 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.19559465 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300975384 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19901778 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.195796987 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.194002995 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.193095564 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.193706233 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222390559 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194528389 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.252933789 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.590136424 seconds)
  done (took 344.369714605 seconds)
done (took 687.750198394 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.862782226 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.843874122 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.945819101 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.839577254 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.820106666 seconds)
  done (took 10.453635371 seconds)
done (took 11.592483691 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.370548277 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.370931203 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25292225 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.374022203 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221019705 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.387890301 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.35173239 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.214299016 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.292374742 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.267673965 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.293091087 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242615421 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22147576 seconds)
  done (took 18.001078948 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501610277 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.493392819 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258525168 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.500004669 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235585737 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.504619579 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385381873 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.393893705 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.380864761 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210378044 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209836506 seconds)
  done (took 16.216356487 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501686796 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.493066533 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.2620097 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504035545 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237071893 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.504704014 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385631367 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.396266884 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.383765589 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211379452 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208995624 seconds)
  done (took 16.231508872 seconds)
done (took 51.588378264 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.204527241 seconds)
  done (took 2.346543736 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.237933365 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.402989242 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220074739 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.208321724 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.2059127 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.206125785 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.208732873 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.205558646 seconds)
  done (took 11.039018082 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.202282142 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.201765766 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.201832673 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20239507 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.204945146 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.204298789 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.202811277 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.205061446 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.203037916 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.205571254 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.20592548 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.203851107 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.205308493 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.203472023 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.205729502 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.206072505 seconds)
  done (took 20.407918251 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.206023868 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.203906659 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.203319295 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.204465283 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.204412688 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.204018317 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.204563129 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.202656947 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.203732917 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.203856976 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.204460777 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.202930053 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.204586803 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.204417374 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.204454448 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.205461534 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.204001003 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.204943956 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.209084103 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.204133225 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.205034202 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.203858494 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.204975715 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.205598436 seconds)
  done (took 30.054974198 seconds)
done (took 64.990085139 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.218236221 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.764016492 seconds)
  done (took 9.127313565 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.206600779 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.206797419 seconds)
  done (took 3.560655363 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.206652083 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.206710573 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.206741962 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.207184126 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206759945 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.207237073 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.207559922 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.207209429 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.207653046 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.207515582 seconds)
  done (took 13.21637228 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.20685835 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.206690068 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204190452 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.207576078 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.207317839 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.205282484 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207745622 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.207311724 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.207272111 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.204949538 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207827052 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.205631284 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.207743108 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.20591118 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.208485853 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205022776 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204944929 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.205975249 seconds)
  done (took 22.862683246 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.207645367 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.208146609 seconds)
  done (took 3.56188725 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.204445993 seconds)
    (2/7) benchmarking "second"...
    done (took 1.205803891 seconds)
    (3/7) benchmarking "month"...
    done (took 1.205688983 seconds)
    (4/7) benchmarking "year"...
    done (took 1.205603767 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.205626236 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.205766488 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.205893719 seconds)
  done (took 9.584261891 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.20886548 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.381964537 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.458008144 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.782697832 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.210795291 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.213546366 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.063037349 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.212225229 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.214625779 seconds)
  done (took 13.892299105 seconds)
done (took 76.948062279 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.203700862 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.201602154 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.046160994 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.209190995 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.220973164 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.545530403 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.211432022 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.324880056 seconds)
done (took 37.110165723 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.203120527 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.920328904 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.923309932 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.218439385 seconds)
  done (took 11.211014239 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.195897434 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.095951217 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.190103372 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.178148153 seconds)
  done (took 17.808885799 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.802316787 seconds)
    (2/2) benchmarking "read"...
    done (took 1.534240083 seconds)
  done (took 4.484556443 seconds)
done (took 40.854223267 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209874298 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.209501437 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.208175998 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.210575153 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.20764429 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.20730454 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.210360916 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210064054 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.207514302 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.210454681 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.211348853 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21111588 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207732337 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207447118 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.210403466 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210547049 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.207872726 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208632798 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211071953 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208033871 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209730712 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211610306 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208357418 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209354952 seconds)
  done (took 30.173404072 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210994951 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.2091933 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.211207407 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.211516993 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208755961 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.212206334 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.212505498 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.209653579 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211768876 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.210914176 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210222733 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.209834131 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212404767 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.20922933 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21222398 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209368539 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.212259801 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209120099 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211497961 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.210065762 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.211625642 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20989022 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.209710368 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212378656 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.209846998 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209289651 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.211922691 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.210970867 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212742805 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210769197 seconds)
  done (took 37.474455693 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.217345826 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220006842 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.212726031 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.212945979 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.213801927 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213197043 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.212594595 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21293609 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.21308635 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.212356103 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.212966656 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.21296425 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.212874428 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213568633 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.212824858 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.213255274 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213243074 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213562211 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.214148147 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.213586977 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.213418761 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21329747 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.213644602 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.213590426 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.21338439 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.213415817 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.213916358 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.214396702 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.213747468 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214412972 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.213065964 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.214616913 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.21471486 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213783356 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214771841 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214746051 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221121076 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221655095 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.214994404 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.214512739 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.21456608 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.215932999 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.214362792 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214710656 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.215142376 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.214527948 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.21501987 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214901006 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.215924616 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.21485824 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.216172567 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.214507314 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.214923647 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215784466 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.214922399 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215180735 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215967332 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.214818638 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.215136428 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.21529057 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.216171418 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.215005797 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215594281 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.215427348 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.216259497 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.215403924 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.215946637 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.215402312 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.216348045 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.216086746 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.215307406 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.216568975 seconds)
  done (took 88.61477018 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.215288564 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.213820541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213699764 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213256107 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212958983 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216088849 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.21302601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216620704 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213989902 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.215798215 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215776908 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213892917 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21394517 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216556022 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216533051 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214250877 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216776964 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213761022 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.218074198 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217177182 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216375407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213199138 seconds)
  done (took 27.885484684 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217721204 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217249614 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.214628909 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217047915 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215161828 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218004136 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2171299 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217661058 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217340873 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215402371 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214594892 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21880667 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215055977 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214548589 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215199925 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21452606 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217811335 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215353744 seconds)
  done (took 23.048897903 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215520484 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215705198 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.218507164 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215894232 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216629852 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218997203 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216412532 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218570045 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.218951433 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215989924 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.219200529 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217966529 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.21832502 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215588937 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219163576 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216433678 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.217624566 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216023971 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219045205 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216053103 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216664541 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21857259 seconds)
  done (took 27.93843653 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218818257 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.21900535 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217260347 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216524215 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217118661 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219604098 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.218606049 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.21621422 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.219388231 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219196841 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217013014 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.219289345 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.216634315 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217894857 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.217785609 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21734149 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219681236 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218260954 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220376844 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217182808 seconds)
  done (took 25.52102575 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220637932 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220922164 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221734965 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220747533 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221660226 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.2212342 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221534198 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221723119 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221607699 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222324374 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221553291 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.223291347 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220957881 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220826181 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22147448 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221982534 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221695137 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221545896 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221522131 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221444131 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222443469 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222351024 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221586048 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222334185 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222381494 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223014173 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223057505 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222386895 seconds)
  done (took 35.369784498 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222263812 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221552655 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219305483 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.219732407 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219341422 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.219506678 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.219685338 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220559508 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221598771 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219720255 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221696684 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.222534861 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221106952 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.222091595 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222773394 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.223547015 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222222808 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.219686353 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220163203 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220707593 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222780131 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222807007 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223358606 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220540291 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220418277 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.223043637 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220188295 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220340545 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222740364 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220914559 seconds)
  done (took 37.797225933 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.241937352 seconds)
    (2/2) benchmarking "in"...
    done (took 1.241836995 seconds)
  done (took 3.645297542 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221102083 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223704895 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.222377203 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220497084 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219909389 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223690765 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223273324 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221179545 seconds)
  done (took 10.937080664 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.223899858 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.223626822 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224079916 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.223542597 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.224338614 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224571187 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234370658 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.240357744 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.226714678 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226008904 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230806564 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.231208044 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.228882566 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225489186 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.225078069 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.226954354 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225221551 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.225017957 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.223918901 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.224939618 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22471063 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227888501 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227819342 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.221921751 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.22563265 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238098974 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.232213673 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.22490147 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225750974 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232799437 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.227183494 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.222752458 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.225947254 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.226602139 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.225700922 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226011427 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237493782 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243421268 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.235321036 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22564654 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225362558 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.223512471 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228551315 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229386851 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228887917 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.226588228 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.22597613 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.224751985 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.226911665 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.229158622 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.230873602 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226911157 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.224373227 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23383761 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.229913374 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236125414 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.242183216 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.230461878 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.236749891 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.239962323 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.242669485 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.236341166 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230311247 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.227669727 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23840753 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251093938 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237110261 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.240944611 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224655183 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.228322006 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.238287042 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244163802 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.238881287 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.228715795 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229028119 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.227221588 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228746066 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229051984 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238922431 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.248614987 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.228333885 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228277507 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238691745 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25058362 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.227285779 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.228026737 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.229020312 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228571469 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.230786028 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24100833 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.24541772 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228022948 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.229384337 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.229282176 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.233073934 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.229532654 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.228282443 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230203704 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.226982151 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.229095034 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229307833 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233606419 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.23933623 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230006388 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229490928 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239541824 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.22962565 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229445416 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.240948682 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.230047599 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229367816 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.231437551 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.238303701 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228427959 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233543122 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.239859413 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.229592006 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.231902311 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.229993206 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.229909733 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241339785 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.258152982 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.230778891 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.230025463 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.236018316 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.240807489 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230716419 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.234676643 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.231024055 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.228365985 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.22771876 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.233480901 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.230924673 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.232786224 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231392656 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233807822 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.22811496 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.230589241 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.23226912 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.233596707 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.234040407 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.23291864 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.233682992 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.237499934 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232710699 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.234901471 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242229171 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.233928904 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.233886755 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.23397699 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.229689535 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232652776 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.235767076 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.231955525 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.233930068 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232261855 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.232739566 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.232529146 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231715224 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.233377608 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233033345 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.234418536 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237216934 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.233959632 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.239848488 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.23246033 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.230284204 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.233115936 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.233288158 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.234136289 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.233086466 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.233250789 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.236471475 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.239839928 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.232405875 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.233078284 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.238782141 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232998966 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232706399 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233344849 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.237224203 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.241683728 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.233870072 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.243151725 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.235029922 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233958279 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.233545224 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.236235077 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.234447867 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233432911 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.237825415 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.241483104 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249976466 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24407281 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.236429291 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.237462768 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.235721575 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.236722406 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.242467002 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.234212358 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.234734137 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235007244 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234193383 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234437144 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.238180391 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.235169431 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.234413998 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.234262517 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.234966226 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.234529154 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234667688 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.236758718 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237198203 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.232815573 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234988294 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237018152 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.235575468 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.233416591 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.234757987 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.235255929 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.236013992 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.235089504 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.246945525 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.234034264 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238899006 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238232796 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.236843889 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.235958856 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.236306414 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240350887 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.237849575 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245491194 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.25479931 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.23861797 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245552957 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.253739189 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.237807095 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.241230936 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.236668368 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.234162582 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.239794099 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.244120332 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.236501341 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.23748063 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.23773671 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237931227 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236308626 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.246546866 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.234682671 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.23561846 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.237052626 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.239884877 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.234527759 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.239740798 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.239867914 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.239048736 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241896906 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238676223 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.23755268 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239811511 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.237027574 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.23700754 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.238018667 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24113291 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.245161066 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.245811502 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.239892029 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.241976595 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.240181974 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.241459953 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.239183396 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.237797397 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.23817011 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253053879 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.245731943 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247079531 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.241855939 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.238306473 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247487882 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.240849489 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.243425238 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239591999 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240477886 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.240078608 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.23860696 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.235001791 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.242535193 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.238867584 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241099517 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.2409742 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.243200597 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.239584333 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.237989158 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.239461587 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.240064214 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.239761843 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.240435436 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.239766044 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.244961927 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242711469 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.239415383 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.241549132 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249469958 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256871202 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.241961474 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.24096792 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.240593789 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.240702419 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.241220739 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.240756063 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.243723038 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.248096365 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.242846737 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.250688503 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.241980359 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253409155 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.242058553 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.244070544 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.247577383 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.237378902 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.241016307 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.241369061 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.240231783 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250728419 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.257792721 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.242134215 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.245435467 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241683944 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.241705598 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.242274314 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.241453722 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24095645 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.241183092 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25395928 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.258686361 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.245390618 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244732713 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.239349634 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.241518603 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.241984034 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.241963981 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249222549 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.241613715 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.243332063 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.243407663 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.243519317 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.242185924 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.242167416 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.241900297 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.240229762 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.242283778 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252174044 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.25995431 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245944936 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.243000996 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.25490022 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243308726 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25296399 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.259510641 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.244576721 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.242647189 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.242222882 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.246657384 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.243084245 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.244471215 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.243005711 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.243744235 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.246601355 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.242774224 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.24657678 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.244887092 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.243589223 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24453162 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253851061 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266790653 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.245424823 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248108913 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.24162238 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.245535133 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.248046224 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.243568911 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.242950857 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.246868067 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255399711 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251438363 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.244789039 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.244909212 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247343602 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244783662 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.245194013 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.244421509 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.24459786 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.245317126 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.249209108 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.244674942 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251141655 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.245381435 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.247217733 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246486966 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.246862891 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.259353491 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.245836428 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.247366339 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244842415 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.245363145 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.247197107 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.24551411 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.245285147 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24798488 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244969466 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.24721117 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252694917 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.25114971 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.249782085 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.244994192 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.245229915 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.247415328 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.247830612 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245623367 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.246159033 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246542028 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.248315318 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.245728923 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.249295184 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.244762301 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.245845274 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.247690788 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245701237 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249845848 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.25303787 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248050255 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.244418518 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.246556477 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246795883 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.24618778 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.24768449 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.259199012 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25077317 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.257333017 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.255002078 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.250834972 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.248680961 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250747282 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.256240058 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.246735834 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.248803641 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.24762418 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.250660826 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.247964045 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.252273941 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247627349 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.257318615 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.249159582 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.248186505 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258921716 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.26713874 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247719821 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.250991427 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.252037326 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.250202969 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.24523182 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.248518674 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.249031026 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258612811 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.268383979 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24861429 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251892801 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.247726795 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.251447999 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252678839 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248297655 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25116892 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.247109606 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.250306985 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2485452 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249127481 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.24590942 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.24950219 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.249528032 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.251883605 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.257418022 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.246398673 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253088044 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.250035907 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.250207367 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249362852 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249562593 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.246213366 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.246820449 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.250377842 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249686836 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.250084416 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.254214184 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.25034161 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.251431286 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.249609751 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250277948 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253289852 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.26098643 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.256365406 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.247588749 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.249357451 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.250945953 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.254105298 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250086226 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.250399314 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251496465 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.253768094 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.249618264 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250506539 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.250224196 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.2540009 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269912316 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.267081168 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251669809 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.251851076 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257403809 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.251220156 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.248769427 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.250218968 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.255286492 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.254699152 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.259004896 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.252196134 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260657742 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268567008 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.251912148 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.254693532 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.254792637 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.260367261 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.255606345 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251435585 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.251234688 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.257264881 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.27022893 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252309608 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26216041 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283640122 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.270639054 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.25533471 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.254095638 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251649536 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.252364111 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.255632278 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.253173522 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.2530062 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252232498 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.252937594 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.254171545 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259978909 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.25471504 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.25235958 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.252810023 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.254696382 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.25638283 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.249605319 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.252438958 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.253171695 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.252812344 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.252732279 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.253449625 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.255693537 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268880195 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.265701162 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.253584787 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.253866218 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.251338716 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.259354547 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.25690624 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264892059 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.260770041 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.253780546 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.253213624 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.255980192 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253520748 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.251253317 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.255500713 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.254671615 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25375908 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.251142841 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.26865256 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263131839 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.261841333 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.254848794 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254546778 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.255469465 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257197891 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255371821 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255520264 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.25810648 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.256838916 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258986221 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.25499325 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.255785029 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.25929809 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.261689373 seconds)
  done (took 741.769292446 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252848321 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253750115 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252069314 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252292774 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252627868 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252521016 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252814361 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.252227812 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.253365937 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.254804502 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.252678258 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2540059 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253112101 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253766078 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25277341 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25249575 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252921007 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254131991 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254526265 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253323734 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254109408 seconds)
  done (took 27.510153981 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.256660434 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.254275023 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.252632998 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.256264717 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253206959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.256801227 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.254617745 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25678327 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256190436 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254577141 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.256805544 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257531694 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.254232567 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.254949698 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25449282 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256640916 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.25761837 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255034034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.258606014 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.255255346 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257397285 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.255513412 seconds)
  done (took 28.820223863 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.257878269 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.258167121 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.257633878 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.255619627 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.258356881 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.255139875 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.257938747 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.257513146 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.257529359 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.259725362 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.257571234 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.259371526 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.265470599 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.262012508 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.261605497 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.257861037 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.402114198 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.258352226 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.258613562 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.258387309 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.255571743 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.267243153 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.256787711 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.256364365 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.258126356 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.25808218 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.258458365 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.259160765 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.25925648 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.260002075 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.262551437 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.258587981 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.259121965 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.262200573 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.259055807 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.2604057 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.262998492 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.259638333 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.25704513 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.259279533 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.270127129 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.279562918 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.260401276 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.268626341 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.259485599 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.260355281 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.264060083 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.266782513 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.258285759 seconds)
  done (took 63.090573679 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.258943989 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.259983813 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.256564146 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.260099445 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.259713712 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.260638571 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.260242083 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.259894172 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.258153118 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.258055881 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.259878731 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.258290967 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.258165508 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.261951886 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.261584447 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257555212 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.258559029 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.258979736 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.259644148 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.258388253 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.258106133 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.261247178 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.262011178 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.259186422 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.262027366 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.258612638 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.258428349 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.262215777 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.259117262 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.258895023 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.261927024 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.261969775 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.261105142 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.259169079 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.259666909 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.261337203 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.262522751 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.259510591 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262079367 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.259625587 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.262569257 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.262431673 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.262265815 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.263990857 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.260053205 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.260118458 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259870197 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.260001623 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.259840313 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.262288616 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.263215982 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.260340149 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.262379272 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.25943385 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.263002353 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.263128182 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.259621125 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.260761743 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.262405508 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.26049031 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.262032584 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.262645431 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.261295387 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.26313152 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.262778917 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.261142681 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.26004237 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26358592 seconds)
  done (took 86.918570729 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264092013 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263297106 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263197741 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263786397 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263984788 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.263900637 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26351729 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.263493703 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.263939238 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263679476 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263869419 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26379664 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.264004706 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263738963 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.264359843 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263829071 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26370875 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263715765 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264635274 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263930497 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.264365909 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264531803 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.265112795 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.264626023 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265897241 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265212215 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264852945 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264147555 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265135139 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.265261306 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265050845 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.264644734 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265223207 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.264914228 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.266128026 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.264931227 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.265759738 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265876225 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.26447799 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.265207348 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264811147 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264530467 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266400342 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.265445244 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26571046 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.265664493 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.265493773 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.266135275 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266572627 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266036394 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.265309677 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265656787 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266144948 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265019821 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.266366409 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.266447004 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266178689 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266384334 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264993271 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.266453874 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266010388 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.266676753 seconds)
  done (took 79.628579853 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266471083 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26592056 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.264274061 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.264121393 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266517874 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.264189836 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267672782 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.26752751 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.267517209 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.266842122 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267274112 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264360095 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264004764 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266387666 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.265029211 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265177763 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264670382 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264918206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267546583 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.264439947 seconds)
  done (took 26.518414398 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.265622149 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.267158676 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.265038613 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.26515936 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.268568172 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265765463 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.268651883 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268007862 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26421247 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268128679 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268430943 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268313797 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26595487 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266584032 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269031227 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.26691106 seconds)
  done (took 21.475916608 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.266116962 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.268392095 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.269210581 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.26888562 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.266904191 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.265304952 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.268878197 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.266422805 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.266847684 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.269589942 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.269453746 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.268489312 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.269416971 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.269054487 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.267293561 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.269702391 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.266856775 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.267080822 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.269447923 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.269864294 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.267793054 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.266826331 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.270024861 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.269601441 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.267035079 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.268835258 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.26669186 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.267201708 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.266734465 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.269390989 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.26717209 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.268078293 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.26738197 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.2673476 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.270823874 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.266476851 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.270271455 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.269862536 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.269760536 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.270968452 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.27042384 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.267854236 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.270991257 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.270497479 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.267645455 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.269702324 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.268261429 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.268278328 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.26809259 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.268749045 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.270598755 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.270958325 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.271055559 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.271519926 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.271319283 seconds)
  done (took 70.984512821 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271280469 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271828927 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.269210116 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.27079591 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.271698244 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.269745547 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.27124324 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26891354 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269769248 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.271595471 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27023112 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271307983 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269238482 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271790118 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269764191 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272646755 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.269780096 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.270160249 seconds)
  done (took 24.078856116 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.269867536 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.269667012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.273393688 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.269622587 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.27017975 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273940805 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26936688 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.272528793 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272312199 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.269731241 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269754206 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.272441782 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272372984 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.272246973 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271007232 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270786218 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.272844411 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272957458 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.269964438 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271547793 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273335292 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272426768 seconds)
  done (took 29.181126312 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.273063946 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.272609314 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.291233198 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.317064437 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.303546844 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.273105027 seconds)
  done (took 8.93948947 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271738263 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272870826 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271568583 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274930531 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273529326 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270798569 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270960823 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271234796 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274474264 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271545447 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271158143 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274317464 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273500692 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271580498 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275055278 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273136888 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271071856 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270894903 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271626326 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274368575 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271899857 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274170678 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272621877 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272177064 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272072341 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273289151 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275341235 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273441529 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272528002 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275056556 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275951706 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272482287 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275479493 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273363287 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275690901 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275267004 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272579699 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275143405 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27489109 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273169203 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275730798 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275753608 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275559915 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272574477 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276546138 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272060228 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272960664 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27263822 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273534584 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275565977 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275643498 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273393595 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276761818 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2765491 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276030528 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277493657 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274110448 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274134858 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276789779 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274742632 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273614002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276642459 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27459513 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274619573 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277344475 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27458077 seconds)
  done (took 85.288395125 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273883698 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274889343 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274521377 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276577021 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275100687 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274494164 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275097658 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2756781 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274973568 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275737526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276982744 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275463904 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275232408 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27501727 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274299417 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274050056 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275306887 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274977842 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274498387 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278482996 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275039772 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275542228 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275772613 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275526208 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276196086 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277814488 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276051096 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276913834 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276287364 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275888049 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276140819 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275630237 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276432518 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275489498 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275786091 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277050041 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276196386 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275806324 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275493695 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278772145 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275260397 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279220149 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276613687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275717568 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276458957 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275578335 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276095443 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276926234 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276433431 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276521913 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276147425 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276484131 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276862399 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276527341 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275734847 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276997574 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277357043 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276958692 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277060233 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279855581 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277381723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277558287 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28066749 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276943505 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277607154 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278210431 seconds)
  done (took 85.44767427 seconds)
done (took 1729.204641177 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.316603796 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.354398303 seconds)
  done (took 13.88657271 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.443722118 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.395261048 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.278003145 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.311270858 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.278266018 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.280449937 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.285086991 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.279500218 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.278457814 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.278497305 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.279224398 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.466596161 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.274692798 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.279775402 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.27867552 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.37201051 seconds)
  done (took 42.283883294 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.307093465 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.285610573 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.396852379 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.3038416 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.306898411 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.463567274 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.336909544 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.282960373 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.452124108 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.326047543 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.814980831 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.30737673 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.283759693 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.369237861 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.301076687 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.46427948 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.523524314 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.819167557 seconds)
  done (took 29.562342328 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.728773259 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.28403626 seconds)
  done (took 9.23060527 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.335664085 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.31894185 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.315250286 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.322151761 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.275806181 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.318683289 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.325419705 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.325960151 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.291507882 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.293111266 seconds)
  done (took 64.345935918 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.303810225 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.284745443 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.28410934 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.282549039 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.275929543 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.275931603 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.283094495 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.282592882 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.875023086 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.409354105 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.297831754 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.291096396 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.284505972 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.284818312 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.281010004 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.320199754 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.438636847 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.280802792 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.280148896 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.290044519 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.285143446 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.37062306 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.325561083 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.281207352 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.40924748 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.891026583 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.290616965 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.291232165 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.422176412 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.281232899 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.283728235 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.286103081 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.286204356 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.856280056 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.754952951 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.292362718 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.308173078 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.293655953 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.281097879 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.409098008 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.284911515 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.292081519 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.27805936 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.73178528 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.441909758 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.395518182 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.545797772 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.289261295 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.286943047 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.347920151 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.285435657 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.286477212 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.313331228 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.04310185 seconds)
  done (took 108.549348116 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.311304995 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.769615932 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448550372 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.299874159 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.069596352 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.964985066 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.282619231 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.567817708 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.314031898 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278867797 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.612622025 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.783088295 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.281377359 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.297184405 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.910795107 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.339935603 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.279755206 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.03971609 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.282274567 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.281910385 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.703134941 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297274165 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.27998917 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.463684048 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.31960584 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.740582957 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.756284173 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.739928058 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.283072829 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.280591374 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.747417356 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.284793906 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.359148574 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.281410629 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.55652132 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.635848015 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618429123 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.286935288 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298802308 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.282978623 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.31923266 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.746014243 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.626921689 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.29592509 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.281408722 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.759581368 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.281687099 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.281569825 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.289578384 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.482320651 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.009294089 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.281161015 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.777772994 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.282131312 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.562319655 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.280244869 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.360270826 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780539994 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.284814252 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.364869374 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.294558296 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.282466364 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.28303542 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.282682637 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.284335274 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.639621825 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.394338715 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.283082457 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.637941502 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.746918301 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.284296607 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.805181196 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.214777396 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.296628531 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.36151205 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.28252563 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.861308854 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.771514301 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.301523706 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.284201539 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.614340387 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.287203031 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.602159977 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.310286211 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.283383653 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.713597545 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.30740779 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.335983628 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.282714493 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.2832046 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.90361521 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287001973 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.55222218 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.351040426 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.283972502 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.284486119 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.329532528 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29775036 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.284637594 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.283981463 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.806949985 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.291331269 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.581874087 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302784176 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288123001 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.285383457 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.289620722 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.286072852 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.499775835 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.803897993 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.292951937 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.285166089 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.283638049 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.308147606 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.419221436 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.291322998 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.597700455 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.288405897 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286547445 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.286774625 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.015618263 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.292822155 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293144014 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.286209581 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.120148244 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.493499839 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.302349891 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.285667279 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.286652788 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303657334 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.666447299 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.284906054 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.32092721 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.290169487 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989278785 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313603657 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.306939768 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.665010622 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.297064621 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.280070857 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.308618795 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.286391357 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.593757337 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.564071702 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.327227771 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.287808879 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.304479548 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.971673553 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.331447403 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.42872759 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30490928 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.304391604 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.485868955 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.640563365 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.285822645 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.859807446 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.286889533 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.502202991 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.288913784 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618814389 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.77870654 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.289371746 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.290319372 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.990919206 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.964456814 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.928616581 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.292537783 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.620817953 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.295808792 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.739944494 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.287563298 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.302687995 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.71800993 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.290989375 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.297351309 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.288141692 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.28861898 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.431646981 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463225121 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.05523905 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.29081986 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75584481 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309069861 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296202456 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.294328437 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.292723816 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.641753427 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.372839081 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.29204143 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.313418842 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.289947505 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.295460799 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.769136263 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.219699479 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.291427142 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.443698067 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923370076 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.291570483 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.291212153 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.947807264 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.457137121 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808643151 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.331472831 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.607913052 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.294363338 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.330086514 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.01359767 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310623764 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.814398033 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294940605 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.292771386 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.887721396 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.291435508 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.639363753 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.290568839 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.291059571 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.840244935 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.292942603 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.291552692 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.659453722 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289738935 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.565054386 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.291159844 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.299258436 seconds)
  done (took 1101.257031061 seconds)
done (took 1370.33009682 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.290801172 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.290306938 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.279940906 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.293269659 seconds)
  done (took 26.387466374 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.299322074 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.296736583 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.296670568 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.297105745 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.298636838 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.297260043 seconds)
  done (took 9.019676274 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.392358645 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.294309414 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.29274456 seconds)
  done (took 19.211896579 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.526500539 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.551213659 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.674927259 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.510166782 seconds)
  done (took 10.497700315 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.298645836 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.298012933 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.299165245 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.300007381 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.299952908 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.301807178 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.299224815 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.300047454 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.301113579 seconds)
  done (took 12.930698451 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.266194684 seconds)
done (took 84.544958462 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.351356414 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.56749989 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.334383238 seconds)
    (4/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.905097249 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.320592097 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.820821225 seconds)
    (7/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.097570382 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.545221479 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.540296636 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.309925068 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.336271957 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.716756321 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.339361392 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.696686941 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.169794498 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.039301012 seconds)
    (17/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.876332554 seconds)
    (18/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.378129538 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.29364372 seconds)
    (20/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.645485859 seconds)
    (21/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.821467896 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.365905867 seconds)
    (23/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.167035872 seconds)
    (24/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.318960054 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.29089282 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.310865746 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.279900122 seconds)
    (28/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.303781504 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.285389923 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.735339867 seconds)
    (31/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.395712386 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.154048939 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.295110813 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.243793717 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.411032115 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.27840111 seconds)
    (37/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.704567124 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.310248732 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.936166157 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.320913705 seconds)
    (41/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.576678118 seconds)
    (42/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.395295185 seconds)
    (43/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.295584542 seconds)
    (44/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.911409154 seconds)
    (45/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.49265009 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.393799282 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.705738034 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.320695083 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.292243082 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.280411857 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.979529814 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.405530015 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.699830965 seconds)
    (54/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.399773919 seconds)
    (55/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.15934985 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.551013978 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.599556956 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.737690648 seconds)
    (59/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.421062627 seconds)
    (60/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.947767223 seconds)
    (61/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.486169431 seconds)
    (62/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.936035312 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.661030064 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.27828443 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.314420032 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.852689217 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.251999455 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.355963018 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.283993063 seconds)
    (70/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.425607849 seconds)
    (71/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.296766548 seconds)
    (72/309) benchmarking ("sort", Int8, false)...
    done (took 4.313878732 seconds)
    (73/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.644102991 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.861927291 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.361606408 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.298001187 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.313004952 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.606962404 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.298869593 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.341336077 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.312632099 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.418650929 seconds)
    (83/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.377822169 seconds)
    (84/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.151487537 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.338094998 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.470358603 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.316483494 seconds)
    (88/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.421834933 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.514823687 seconds)
    (90/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.324779481 seconds)
    (91/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.769333808 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.384864352 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.634709173 seconds)
    (94/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.325953222 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.284615053 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.959523798 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.30022155 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.87487448 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.624045518 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.285096832 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.463047844 seconds)
    (102/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.891667559 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.621976074 seconds)
    (104/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.359838065 seconds)
    (105/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.967919774 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.823284534 seconds)
    (107/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.33931763 seconds)
    (108/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.661800787 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.914517283 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.374538984 seconds)
    (111/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.037761473 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.689359562 seconds)
    (113/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.379242939 seconds)
    (114/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.706600286 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.511942595 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.380920638 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.298277904 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.47862088 seconds)
    (119/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.683286287 seconds)
    (120/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.406703738 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.723955712 seconds)
    (122/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.286958977 seconds)
    (123/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.4420359 seconds)
    (124/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.298732633 seconds)
    (125/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.333696417 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.348088112 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.808302423 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.324158347 seconds)
    (129/309) benchmarking ("sort", BigInt, false)...
    done (took 6.299524864 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.573668707 seconds)
    (131/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.41962124 seconds)
    (132/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.221134855 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.083569726 seconds)
    (134/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.308520946 seconds)
    (135/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.339640137 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.572025851 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.06390345 seconds)
    (138/309) benchmarking ("sort", Float32, false)...
    done (took 5.321319019 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.900507891 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.40501772 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.721578041 seconds)
    (142/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.095177192 seconds)
    (143/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.623445788 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.066852864 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.325378577 seconds)
    (146/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.289140005 seconds)
    (147/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.363082006 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.90753109 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.972902329 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.302909877 seconds)
    (151/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.675675878 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.325718088 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.287324388 seconds)
    (154/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.123123366 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.388278791 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.301968434 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.361237172 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.708054866 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.990771539 seconds)
    (160/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.365992496 seconds)
    (161/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.885440592 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.106765807 seconds)
    (163/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.793043562 seconds)
    (164/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.099383232 seconds)
    (165/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.329695478 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.300995439 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.326305749 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.220232195 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.15295794 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.406145632 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.128520291 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.786038009 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.300661617 seconds)
    (174/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.513693601 seconds)
    (175/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.304036752 seconds)
    (176/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.181310685 seconds)
    (177/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.206634962 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.161567517 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.412926734 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.326671825 seconds)
    (181/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.46595687 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.397782733 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.331672789 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.795096643 seconds)
    (185/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.103367498 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.806801488 seconds)
    (187/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.312904062 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.151155798 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.358502891 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.315245245 seconds)
    (191/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.324267887 seconds)
    (192/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.427371442 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.377270099 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.305094245 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.388674941 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.414157722 seconds)
    (197/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.439770041 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.719332377 seconds)
    (199/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.564133689 seconds)
    (200/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.556339444 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.362397254 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.518786505 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.928736387 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.287879267 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.456171772 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.289486759 seconds)
    (207/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.92755938 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.05650836 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.686816281 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.379197727 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.892123395 seconds)
    (212/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.602270343 seconds)
    (213/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.68873428 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.312462867 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.518495097 seconds)
    (216/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.501224569 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.35390621 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.862116038 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.401478232 seconds)
    (220/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.335055047 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.765611703 seconds)
    (222/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.262998676 seconds)
    (223/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.748243567 seconds)
    (224/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.306530252 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.724436141 seconds)
    (226/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.465927279 seconds)
    (227/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.601826668 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.411765174 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.330107156 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.290367373 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.261983561 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.308484058 seconds)
    (233/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.329167206 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.354671123 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.345085604 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.405326719 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.303184351 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.825817915 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.326607793 seconds)
    (240/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.333691556 seconds)
    (241/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.493802718 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.967308021 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.307233336 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.32373959 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.739652667 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.269818613 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.667009839 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.912451626 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.402998375 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.606089707 seconds)
    (251/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.372333322 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.773867544 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.417137577 seconds)
    (254/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.899163696 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.043285395 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.542197012 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.310623622 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.665693744 seconds)
    (259/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.497614651 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.733519208 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.334979906 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.311095494 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.17010879 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.162930299 seconds)
    (265/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.308913556 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.696207402 seconds)
    (267/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.217369572 seconds)
    (268/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.65738017 seconds)
    (269/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.694148657 seconds)
    (270/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.955094244 seconds)
    (271/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.335774788 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.413625391 seconds)
    (273/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.322020148 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.330068682 seconds)
    (275/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.634682807 seconds)
    (276/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.811199485 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.870837682 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.595583199 seconds)
    (279/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.394785314 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.176219933 seconds)
    (281/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.317282461 seconds)
    (282/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.391538028 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.390259373 seconds)
    (284/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.195223686 seconds)
    (285/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.726465853 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.309283883 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.392373535 seconds)
    (288/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.932565939 seconds)
    (289/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.31033476 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.421069326 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.736914693 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.341794996 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.490147745 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.320299063 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.752858782 seconds)
    (296/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.697350309 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.944613441 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.352839822 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.624692651 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.364854366 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.325429126 seconds)
    (302/309) benchmarking ("sort", Float64, false)...
    done (took 5.610177657 seconds)
    (303/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.313096491 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.169373089 seconds)
    (305/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.916155959 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.346313329 seconds)
    (307/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.627256745 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.313263506 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.297798096 seconds)
  done (took 920.406834603 seconds)
done (took 921.640562321 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.342631693 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336060204 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.321045256 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.342200344 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.431212713 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.351626734 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.331805962 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.323952547 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.36849814 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.369866126 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.318561905 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.350930746 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.321352207 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.320255812 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.319951914 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333938563 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.360407504 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.322895529 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.33742063 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.331259474 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.336863485 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.31990182 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.371106883 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.352460115 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.324203322 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.324313506 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.323704907 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.340635687 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.432137047 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.322607418 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.324322246 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.332612862 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.375030459 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.322513927 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.317331903 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.342023491 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.332601345 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.332695541 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.325703561 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.353182129 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.794751958 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.324146231 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.322958482 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.323262094 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.323464122 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.327866451 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.323884241 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.330245251 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339091758 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335667874 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.801375411 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.340481509 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.324438698 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.323831039 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.334077019 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.322469382 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.326163881 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338776396 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.342282498 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.337438359 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.367962253 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.329814089 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.325745225 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.338788583 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.331885371 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.853078045 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.322853048 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.328367088 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.798944438 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.332420067 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.773324426 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.331900038 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.325679792 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.337000441 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.355151227 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.372607009 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.32085828 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.32431106 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.331986687 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.321366591 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.334188228 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336696384 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.32868343 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.325548998 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.337551204 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.355432337 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.334908655 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.325917401 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.333592975 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.343567065 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.331936795 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.335478975 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.328458749 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.321123693 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.336388062 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.329656242 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.32842872 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.326590724 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.330290104 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.337160327 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.744814578 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341905456 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.322031107 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.32314251 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.325936339 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.339401819 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.74767408 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.327437847 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.348108017 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.374742149 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.32861437 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.374767872 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.33224394 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341810095 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.33663408 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.329623431 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.321644535 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.38217044 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.79018895 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.343893183 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.328474885 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.324739561 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.34225465 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.3285113 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.323620771 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.389277204 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.332517277 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339241439 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.447307856 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.338173942 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.357557398 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.325236619 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.330027969 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.354040071 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342442079 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.358532191 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.33021165 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342332807 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.343085168 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.323099987 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.33767746 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.337909051 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.329130334 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.333560693 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.322900386 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.356476409 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338925716 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339452162 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.348895067 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.447341062 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.325038849 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.343099639 seconds)
done (took 224.36052201 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.387026668 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.319146048 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.417854434 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.325092984 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.424802112 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.424758849 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.32250967 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.321925445 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.321863029 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.703969059 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.322502586 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.322106351 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.319600716 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.322932151 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.40793466 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.324931849 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.322892709 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.667457763 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.326942619 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.397690338 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.326230987 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.322528409 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.32611386 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.712720432 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.320169373 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.324715957 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.397634634 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.326634756 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.679218152 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.3187257 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.326589313 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.679942152 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.41680518 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.344375886 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.335625378 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.332577623 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.428523973 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.343738274 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.407678115 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.407159222 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.420553337 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.364878632 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.320854991 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.319101836 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.327385027 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.327323423 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.324617751 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.354544008 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.325424875 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.325531188 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.668236825 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.337188563 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.325029671 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.325229399 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.325100662 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.35809564 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.325706555 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.328492314 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.418266691 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.328379553 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.390855413 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.715585458 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.707672404 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.327035902 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.325091885 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.326637834 seconds)
  done (took 147.986525082 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.396151432 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.403677117 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.441352476 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.329279511 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.379408745 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.446789407 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.329264162 seconds)
  done (took 10.988555572 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.335247691 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.328580702 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.378438023 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378943367 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.329124678 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.475178309 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327996117 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.340500641 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.326772788 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.382714053 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.3295856 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.329013112 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.335980607 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.322277229 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.384727014 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.340120144 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.444130379 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.329830046 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.329504804 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.486787636 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.326326533 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.335904181 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.38066805 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.341805896 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.330435198 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.33665319 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.899347653 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329368768 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.326627811 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.329693455 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327738948 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.368744069 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.330914981 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.329876176 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328038722 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.446565404 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.330758965 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327201165 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.330541947 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.324888295 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.329970407 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.331274467 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.330009539 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.328697674 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.330187083 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.354827393 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.330786855 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.331204226 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.330412391 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.331422667 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.382082043 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.331550073 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.328449548 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.328416143 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.388388948 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337358146 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.331966681 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.328447293 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.332465654 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.329324095 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.48917564 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379159232 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.330947578 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.38007185 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.33157633 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.332370491 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.331539463 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.331751757 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387818699 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.331437751 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.38131774 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.329967108 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.488102227 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.35690456 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.333664469 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.335783042 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.33533148 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.331307844 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.330543982 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.338587444 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.330029775 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.334457188 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.338443794 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.330654336 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.330777778 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.435216323 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.442370589 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.330690129 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.347060952 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.340513971 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.330971677 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.38692863 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.332632419 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.330366314 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385081563 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.45046091 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.386968769 seconds)
  done (took 152.982342826 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.338125767 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.341049212 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.334416794 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.349279954 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.335685292 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.333486332 seconds)
  done (took 9.299575743 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.338071373 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.335070898 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.334437539 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.334904565 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.333510387 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.334519767 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.334766847 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336176291 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.33915244 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.333377242 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.33532572 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.335740092 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.335182905 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.335054077 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.335342992 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.334535816 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.336174514 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.332492005 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.335686561 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335715041 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.43023823 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.334688567 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335547386 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.337008334 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.339356611 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.335844189 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.34352202 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.335611964 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.335616425 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.34134581 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.337899158 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.336631131 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.338255899 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.342333936 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.340606017 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.33916475 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339716068 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.337031924 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.334280899 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.33669759 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.338120712 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336487954 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.337066312 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.338042997 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.338464527 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.340626971 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.341632212 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.345501553 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.336747316 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.338302026 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.337472399 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.335964626 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.336645786 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.33855961 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.341943372 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342030771 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.342439353 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.337614323 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.337159756 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.339257062 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.339143244 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.338390575 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.339853844 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.342053039 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.345585392 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.338970262 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.339621904 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.342586891 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338717646 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.338223653 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.340165142 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.336072658 seconds)
  done (took 98.686745184 seconds)
done (took 421.201022822 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.829350378 seconds)
  done (took 8.102389476 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.42778149 seconds)
  done (took 7.702476706 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.202997022 seconds)
  done (took 22.480808128 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.337916021 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.431067188 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.352301447 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.337930178 seconds)
  done (took 26.733127811 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.859109765 seconds)
  done (took 8.132586848 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.344351274 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.332965994 seconds)
  done (took 13.952507362 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.37936058 seconds)
  done (took 7.652969851 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.865618616 seconds)
  done (took 8.144830673 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.343993871 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.338135416 seconds)
  done (took 14.223509436 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.328817664 seconds)
  done (took 7.602952062 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.40999809 seconds)
  done (took 8.682115392 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.326847687 seconds)
  done (took 7.599364904 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.395987426 seconds)
  done (took 7.66787558 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.435759115 seconds)
  done (took 9.707022036 seconds)
done (took 159.655107171 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.32905828 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.332881655 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.332396327 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.332551577 seconds)
  done (took 26.598785066 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.371624315 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.37108749 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.372544793 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.3808461 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.374939817 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.370588437 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.362453586 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.365671073 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.38242584 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.375429169 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.385810041 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.377134257 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.387822068 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.363108195 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.373764301 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.373797012 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.382369697 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.373318457 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.36423728 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.374945454 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.339700796 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.383012479 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.374945662 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.339983562 seconds)
  done (took 34.194789438 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.543915425 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.414083476 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.492744444 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.391488225 seconds)
  done (took 7.116055583 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.390032293 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.391900879 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.40363212 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.442759032 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.470068634 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.401439699 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.366184222 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.360382331 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.347325165 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.392361208 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.467394279 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.407662677 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.487218225 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.33912507 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.525124135 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.339555686 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.339141252 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.391997337 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.442886819 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.463722111 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.339949392 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.390468657 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.39522291 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.407665315 seconds)
  done (took 34.978115075 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.33933474 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.347830716 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.344669888 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.339958811 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.338889407 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.339392769 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.345735879 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.340386122 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.359557272 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.341581131 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.33844624 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.339329845 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.338298037 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.339721911 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.338661649 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.351418393 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.353139462 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.341258881 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.341770374 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.345460251 seconds)
  done (took 28.140455385 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.334862496 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.232188192 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.6857581 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.590481569 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.333886817 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.33420711 seconds)
  done (took 28.786517045 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.414490997 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.541293567 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.341493791 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.709091818 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.785353202 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.342072047 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.342013026 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.579616639 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.895458837 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.908125008 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.400818978 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.40966371 seconds)
  done (took 19.946333668 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.350014762 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.337409667 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.351994634 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.35380723 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.397575057 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.347075394 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.34949492 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.337249651 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.399383882 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.403172082 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.346097787 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.399444626 seconds)
  done (took 37.65023148 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423882557 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387854554 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.417848071 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166018108 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.721216264 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549434833 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.208474836 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.776345436 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.341785771 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61063101 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336927118 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427884054 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.593500994 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339969692 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34063894 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.362738726 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564392675 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851768077 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340160342 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.391794372 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36467896 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341676632 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.573364163 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.369121907 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548738229 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.470734677 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.598540465 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337775408 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627177541 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351236256 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349838468 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337839445 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611726533 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031736672 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431606559 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347713592 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198640762 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.053704359 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.338172786 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.473872797 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344619271 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.341620499 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348834821 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34068166 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.273563284 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355218862 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780337776 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.343840423 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.049423295 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338993401 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349075441 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432791519 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.343431526 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.159674233 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420969804 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340082964 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.337017973 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345471325 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913834804 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.977570274 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356799473 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.276333592 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.504908736 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.47428714 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96752643 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.442692353 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.343617857 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343063155 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274746938 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.459724259 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358471751 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482209148 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.360554519 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006729889 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099287988 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.360003573 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.27364253 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90610555 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345163396 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.277107302 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569414417 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340945527 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280621725 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.28514892 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.274730245 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069891085 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350130356 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.759497765 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349815042 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.778203296 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.354803537 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360314698 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365065996 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.565621181 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.331012906 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341030837 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.351307413 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466496021 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363467117 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.779854546 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278246746 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.345581322 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599805465 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.555844001 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3490519 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.366978487 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549637552 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355742106 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.35993915 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.355469847 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.354141087 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.941914847 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356576516 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959728984 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361215374 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342144707 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107335759 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344499447 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.460820322 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.352878454 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596119574 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.136537641 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344200401 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425251901 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352534222 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.343168479 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.51791919 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865268058 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.343531526 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.345486971 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350004948 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.356450672 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.344400444 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301552516 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.354384854 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361409777 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.347729751 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.568219322 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359680884 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621265364 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278758155 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486177178 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.41248632 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.567295204 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.567681581 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.342917644 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604994149 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345293475 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352751751 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357394252 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363430578 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442355833 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366594208 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.349506961 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.602950688 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.349269311 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.348709547 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.507516574 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.810920833 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345248233 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.349509918 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.180483851 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944435296 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323528152 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350932618 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238997112 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.35890029 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410648004 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35063899 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.356064676 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.236905514 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302943067 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.35169737 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.356702038 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570947537 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357418555 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.493729511 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428192937 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.548301712 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.948727976 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361485076 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.279592758 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.057334539 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.03774622 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346588647 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.281665935 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345932803 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355727063 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357913911 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.668165725 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.949079309 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351469551 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.408976497 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.355305043 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357701882 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.352313143 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347274656 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.201668434 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.001492576 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351563612 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.359935825 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490558442 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.361087459 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.281961659 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.350532931 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352693816 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34687636 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347295 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380061918 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.422103146 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832373033 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606018835 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.084421406 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360918526 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.610758093 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.382421642 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.348241111 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349900144 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354540927 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.354869987 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372253745 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.358757744 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.475378504 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.020585523 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920248635 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103569169 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899908824 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311712654 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.355188695 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.350243939 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.792027387 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284475512 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.908457434 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543168172 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.789494763 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29335128 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555213032 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.604666448 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135671594 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.359726969 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578839891 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309108063 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.356858501 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362757706 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561027788 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383918504 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347978305 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.280512728 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.638121575 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585038765 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35121967 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429842429 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79233378 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367511435 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354356817 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.350079809 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.732202212 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529643403 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.06669153 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.524637651 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360374169 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352199117 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838609875 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.35789182 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.575922592 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981221301 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353174691 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.558113659 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293280915 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.361662536 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.362380542 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.352463974 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.70348729 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.359752852 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.607968159 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362831025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286586079 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35760473 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90248332 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.225999683 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.357782824 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352314383 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118968457 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35472544 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647219675 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.356428927 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.217120482 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358668873 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.287239916 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286078993 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.044603924 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358247595 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3278154 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862445849 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.462504862 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.420476387 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377226216 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320717694 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.608976989 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.366282926 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.956683288 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581149319 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.284570699 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377487445 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.453113215 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357814523 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.341708407 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353029774 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589752436 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190090637 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57947644 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.430244199 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.261834333 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.352859311 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.568956167 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354057589 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367966807 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612382728 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.066447855 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.362616892 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107599249 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380987726 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354259857 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278391232 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.518452274 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361619962 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434510029 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365606409 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.365224968 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.365256499 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533920126 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370607505 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357443402 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.368721604 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448422793 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.990100649 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.228689352 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.362281667 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965650024 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149962461 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.968651749 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370799014 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355177373 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360998014 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289268012 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504801622 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.582015085 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629015741 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477774188 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.568700915 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377971879 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355283522 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384969732 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568563989 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630229877 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.2499441 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35806295 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371799348 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.356575221 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366475454 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.567765475 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870209491 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928785134 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479997207 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369157848 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.796506657 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631677508 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35688428 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358147856 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.954415551 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.374886937 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.752620262 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.362462331 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371161028 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50653226 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366694487 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058401996 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.367825679 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.516190314 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.130049819 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.546061423 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615996557 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.850726657 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.368946509 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966624924 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092298024 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627229697 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425574872 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368707976 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.463745278 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505418575 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.357468983 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360310253 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358867498 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206540042 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.06888258 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.368568378 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974241177 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625566327 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.356953554 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.357373952 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384022653 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.368022271 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583149455 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100299285 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584950056 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370071037 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364259756 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.175799931 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969316633 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37431443 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293075555 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.362421951 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614493237 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598484317 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382154079 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.81327193 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.071072935 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932888473 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.366325757 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381638489 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36232866 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09658953 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973124449 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.239672947 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873965163 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927665233 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362085326 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636136505 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.363783894 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366194848 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637536603 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.364844506 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.366268973 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373296035 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.972158292 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169200559 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.382523817 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.476046089 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.299075906 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705552245 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056500427 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299440272 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370496259 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.553142414 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364047508 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484556941 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374414294 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.359752659 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363624182 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.118373757 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647895016 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.367960142 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.347613431 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.364366457 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366697869 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372348785 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599788856 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363397311 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.036456508 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.712733466 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.620052814 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.363416811 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.349639045 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.365229784 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363186734 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.349529856 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.561216572 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.685749681 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937471635 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.364424929 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.374384911 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367549643 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.5792333 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574928307 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363979311 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376354562 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369265002 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37986801 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.26956342 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.872318154 seconds)
  done (took 1606.82848981 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.389861873 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.387106464 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.400143582 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.447428294 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.421082456 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.496077591 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.39222892 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481610371 seconds)
  done (took 52.718164182 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.366151048 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.590062572 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.395174232 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.376975929 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.374440281 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.365001828 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.83247774 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.377938654 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.372881099 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.374048297 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.368448892 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.364447291 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.022139323 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.375998902 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.367145006 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.363426791 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.374024979 seconds)
  done (took 65.970032087 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.365409818 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.554620429 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.383402948 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.370194122 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.753815393 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.380904563 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.586947545 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.448243617 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.381466936 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.492392286 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.036166702 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.379945468 seconds)
  done (took 80.439396056 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.371707179 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.371439031 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.371795629 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.371948993 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.372519397 seconds)
  done (took 8.165581974 seconds)
done (took 2032.802783547 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.617178362 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.103821612 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.071532202 seconds)
  done (took 5.480223312 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.513384703 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.561725474 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.69183713 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.745650602 seconds)
  done (took 7.817205784 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.638120326 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.746964089 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.554373113 seconds)
  done (took 6.243680502 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.836002579 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.368195659 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.461168749 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.363956995 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.366716325 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.367735379 seconds)
  done (took 20.404645216 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.368255788 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.371852253 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.369149128 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.371482938 seconds)
  done (took 6.786185837 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.34942501 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.143928013 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.352345941 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.367522494 seconds)
  done (took 18.519074296 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.114641007 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.129122124 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.112095673 seconds)
  done (took 7.660382977 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.364702429 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.210333894 seconds)
  done (took 9.880710375 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.688034062 seconds)
  done (took 2.994059875 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.499803246 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.634660832 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.476175684 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.393123523 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.483173594 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.436596467 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.095162025 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.661530653 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.382002939 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.639163978 seconds)
  done (took 29.008166582 seconds)
done (took 128.380120074 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.302141985 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.766074259 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.571566827 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.273191833 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.601682183 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.572144346 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.872015907 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.242790463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.779122335 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.769412847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.318803405 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.604033254 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.596513009 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.766611965 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.596244318 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.38508514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.600258225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.342029211 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.002949403 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.163036857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.874011162 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.910521835 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.146780777 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.930733835 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.602208025 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.523299906 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.49044593 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.385578321 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.174054048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.505298871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.52355277 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.337284858 seconds)
  done (took 193.837389579 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.368262872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.368316999 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.369185944 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.367895544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.380220455 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.367738522 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.372380523 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.382008557 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.367709491 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.374461072 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.368569963 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.374865828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.370277388 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.368190082 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.386252365 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.36876853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.37098441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.378871743 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.368227589 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.379528596 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.370245543 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.388295594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.367936638 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.368397975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.386832185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.368228738 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.369030034 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.368327855 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.396456497 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.370513265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.400894834 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.370771335 seconds)
  done (took 205.288447697 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.370106934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.369540716 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.369995539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.384930814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.369026565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.386899265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.370929679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.384222436 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.372202842 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.371268733 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.369866685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.370470461 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.385337075 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.384651785 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.369665798 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.382880895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.379415781 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.385272227 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.370220678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.369822986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.370030837 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.370411017 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.370225598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.370338689 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.372777953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.382850482 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.370100839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.386442859 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.371701807 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.370607006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.387420563 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.370083082 seconds)
  done (took 205.320881552 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.574287426 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.37840381 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.37864149 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.330046158 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.378872635 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.378388796 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.375653772 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.577655166 seconds)
  done (took 14.683901603 seconds)
done (took 620.435972777 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.714711689 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.42979064 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.577123443 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.399233321 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.174632653 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.400333823 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.399279233 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.569609789 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.315300514 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.576419575 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.647668333 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.398777371 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.799628761 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.398221326 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.652379273 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.49615665 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.264699321 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.380544329 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.718236592 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.946032152 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.660098106 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.867043848 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.57308234 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.312507799 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.800898347 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.868220783 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.095398588 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.262368882 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.398967022 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.72099619 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.0673335 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.353452733 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.460575181 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.441451003 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.498431118 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.479839519 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.332971698 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.441753784 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.586691034 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.621295002 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.946891633 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.128908585 seconds)
  done (took 93.491528889 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.369092973 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.369892776 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.368022177 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.368767708 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.370017321 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.368859314 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.36904135 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.368108449 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.367993595 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.36852215 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.367928691 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.370283418 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.368095615 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.370115584 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.367686762 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.368414558 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.368645665 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.370560124 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.369082484 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.368429179 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.369778339 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.36866588 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.369360945 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.369630743 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.370095724 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.369062343 seconds)
  done (took 36.908906192 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.382980801 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.6203729 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.802618276 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.388831745 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.382109193 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.386984141 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.463793363 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.385486355 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.386030013 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.385308275 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.541800008 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.386564905 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.419785092 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.813802919 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.384406682 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.384043005 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.382653318 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.384133911 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.62822678 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.392974917 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.467169358 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.385224156 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.464733162 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.394445017 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.386260903 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385284221 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.388680402 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.879434961 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.387670722 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.543502471 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.197103896 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.464265915 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.834513526 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.822752884 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.199362312 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.387694924 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.385234703 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.551408547 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.387167758 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.384939585 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.466439834 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.387954835 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.832637837 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.012901363 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.401709661 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.384040472 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.902677376 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.549097989 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.639827892 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.392973205 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.869245075 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.389965668 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.386393038 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.387504452 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.64081346 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.392164126 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.385901115 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.927844973 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.39116949 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.468205332 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.387653777 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.386154189 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.644106108 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.388075891 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.629685858 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.388472707 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.394768328 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.388267472 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.817198894 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.389441227 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.030749128 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.403201258 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.386897703 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.544626953 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.626014465 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.934614866 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.389171557 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.647430682 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.857173346 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.465679602 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.391217972 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.868488655 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.470585301 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.392116109 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.390569519 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.389248038 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.387717691 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.431117511 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.466341581 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.974843131 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.031545311 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.947109189 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.471256414 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.402078874 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.388559925 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.925865038 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.405574313 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.38820892 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.833444996 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.034754557 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.4057309 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.396409756 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.02727767 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.407948997 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.470910263 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.396799499 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.82115665 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.391413088 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.430779976 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.388442107 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.396433351 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.393414208 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.470832592 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.395375543 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.390023498 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.010394301 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.575868391 seconds)
  done (took 181.989118654 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.38902076 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.382197042 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.383353435 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.382987991 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.383031452 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.388764161 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.383056884 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.381828659 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.389612462 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.382330612 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.383839495 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.3833104 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.385351451 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.400836408 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.393899467 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.390149951 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.995375116 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.384453224 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.382019492 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.384650689 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.193397917 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.385012184 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.384512888 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.398251266 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.38388519 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.385302341 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.387484407 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.385724876 seconds)
  done (took 153.557461099 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.39032845 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.97217212 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.392806377 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.528074642 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.414723947 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.388138343 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.524022656 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.45222813 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.393610362 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.388472276 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.388085728 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.700851565 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.392375379 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.921518672 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.589219229 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.528302054 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.922028548 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.391994992 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.389486208 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.389566213 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.530090158 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.401348338 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.704337752 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.973959989 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.391813386 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.975731634 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.381325686 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.391795604 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.390285367 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.977712536 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.389629373 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.704776998 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.472675487 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.456294445 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.979110171 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.938645708 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.925484804 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.54258474 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.3924312 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.389852478 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.391609595 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.381001017 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.978011002 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.393872 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.392768132 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.971062526 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.409997784 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.393476105 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.401350361 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.390674961 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.45472026 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.458492836 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.711581094 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.984229296 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.473292403 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.414281987 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.528662783 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.780016141 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.395560739 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.945494587 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.383100095 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.982306127 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.396140935 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.381681083 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.392858855 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.398203892 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.548608292 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.529205643 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.944769064 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.397112096 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.95080832 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.55278215 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.394586308 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.392406532 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.395478171 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.982387227 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.952610406 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.552704544 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.537108832 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.599757919 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.386864578 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.39411552 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.384102188 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.475649656 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.396085849 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.98423604 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.947681084 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.39685373 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.395454207 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.396874937 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.396356632 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.578812553 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.987093048 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.476728905 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.931869047 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.727551214 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.711593155 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.396010992 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.456326316 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.396399015 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.713888456 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.396554529 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.453332579 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.847234133 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.712871515 seconds)
  done (took 166.351448256 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.644469654 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.636644862 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.489799852 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.510438403 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.936032396 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.963238274 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.6173168 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.520382861 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.505512572 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.638741369 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.58724422 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.48521746 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.58340678 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.471911317 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.093660619 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.472657816 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.492575012 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.51930125 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.506701921 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.445303193 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.024403611 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.682121814 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.568217031 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.593142453 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.490918891 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.290097602 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.948485195 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.905141198 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.570891508 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.676966011 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.92818802 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.537541433 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.379153375 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.072882317 seconds)
  done (took 67.11886965 seconds)
done (took 700.727380871 seconds)
SAVING RESULT...
DONE!
