cset: moving following pidspec: 22965
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.243804241 seconds)
loading group "string"... done (took 0.55551483 seconds)
loading group "linalg"... done (took 7.599777194 seconds)
loading group "parallel"... done (took 0.167789165 seconds)
loading group "find"... done (took 1.160036261 seconds)
loading group "tuple"... done (took 2.077076545 seconds)
loading group "dates"... done (took 1.310375547 seconds)
loading group "micro"... done (took 0.24158366 seconds)
loading group "io"... done (took 0.692049827 seconds)
loading group "scalar"... done (took 40.820511478 seconds)
loading group "sparse"... done (took 12.57516811 seconds)
loading group "broadcast"... done (took 1.126518101 seconds)
loading group "union"... done (took 13.676178491 seconds)
loading group "simd"... done (took 4.750363925 seconds)
loading group "random"... done (took 9.610722791 seconds)
loading group "problem"... done (took 2.120748924 seconds)
loading group "array"... done (took 22.406480263 seconds)
loading group "misc"... done (took 2.083002374 seconds)
loading group "sort"... done (took 3.435531789 seconds)
loading group "collection"... done (took 19.371243073 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575961535 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140445567 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14853945 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146004983 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187709769 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155621533 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157528098 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097964579 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.944195252 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.173497126 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15196387 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518363163 seconds)
done (took 5.124809373 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217504773 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095074928 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103103316 seconds)
  done (took 0.866976349 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077469699 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14347997 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093703326 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076925019 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094294097 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076785257 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094202043 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079769287 seconds)
  done (took 1.335441793 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086563329 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097242262 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080800021 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095889965 seconds)
  done (took 1.035846882 seconds)
done (took 4.215748849 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732937856 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.273984117 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20308188 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462003014 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194151259 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214477369 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682029703 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.347742703 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251336718 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099259925 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141464297 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.383109366 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136702327 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675185934 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089143407 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122776289 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176664367 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448745819 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082300503 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109389388 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11613752 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142152115 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127585407 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092495276 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183827488 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081153234 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192162677 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107536193 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079365143 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285792068 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199905953 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680673559 seconds)
  done (took 10.827276628 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109643739 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132460617 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097012914 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137423454 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132957602 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099265757 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083779041 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09583334 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119901091 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17411846 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11293733 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13422755 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094119102 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082067105 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113921525 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243930109 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121371666 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102865035 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099291429 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102251196 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120603391 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111426237 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10752604 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091970395 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165491663 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22001699 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11223915 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124978461 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09492014 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110414926 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142556591 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140908705 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093277092 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080002935 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170279191 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12318225 seconds)
  done (took 5.089023726 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.069716174 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18860014 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119498075 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168408351 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079884767 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141395068 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093594592 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11187738 seconds)
    (8/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.126008899 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255803313 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.175174021 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.105662608 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178109451 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140847131 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114203299 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08061006 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096253401 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07946833 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.609549823 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.16185832 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135562991 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113136452 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086373922 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098025645 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367939151 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101745272 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078933766 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09778473 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064638179 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15900602 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098335436 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.137302162 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119440866 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081526999 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134543709 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211488356 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0788169 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123551951 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076867613 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134204544 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098030516 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079357162 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174420593 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10396933 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079125212 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120498825 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133522803 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132573524 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096982107 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080149545 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204272184 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096069408 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112262872 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.921847467 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181480969 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08874173 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09485385 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324416759 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097828088 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096961211 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076269355 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.27541945 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.17928328 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097655976 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078935758 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095951784 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07986433 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396545564 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080021157 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.85669215 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084042149 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106847119 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082045877 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094877779 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103057785 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086655249 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114748823 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078141167 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097477048 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078942003 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095845069 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080232784 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110064222 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100349574 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079195746 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16386011 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078575982 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114239891 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126408683 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082582925 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094522733 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128660453 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082123342 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096166213 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132968437 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079943707 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108387613 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098476458 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142288402 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080048803 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.154014846 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079908713 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12614177 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09833255 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113957346 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111385061 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098059006 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083287641 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094200982 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076592045 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16365261 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079808518 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096167988 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081067619 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10993196 seconds)
  done (took 22.453622125 seconds)
done (took 40.112391773 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.313486013 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101494619 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102033499 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10115614 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099220039 seconds)
  done (took 1.468134328 seconds)
done (took 2.19388381 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284481733 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171651878 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094080414 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165801415 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092809835 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170353622 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157681678 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110458387 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.197704087 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093285792 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160876874 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093489593 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076941805 seconds)
  done (took 2.620224213 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094133326 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114202248 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081876527 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110683019 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074905689 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110606362 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09133284 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114638164 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10827564 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086026554 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092290477 seconds)
  done (took 1.803381068 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092660638 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11127446 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081890165 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108850108 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075839733 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109277105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09114017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114501346 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108719436 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084820665 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091723304 seconds)
  done (took 1.790954134 seconds)
done (took 6.928550855 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089881286 seconds)
  done (took 0.807302331 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.910686229 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.79628925 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.110898955 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147120958 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297454679 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.188377228 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.466371933 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123104588 seconds)
  done (took 10.960695778 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.14273187 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084619624 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099018676 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084875703 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100251735 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081926705 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100991882 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102273023 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083932328 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098686418 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084759516 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099814816 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098479478 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085682813 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099643199 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083544864 seconds)
  done (took 2.316848495 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117644511 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116697139 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104568788 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106506007 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085867893 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103778249 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104472614 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087683873 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100525546 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102384445 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089774537 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104460779 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102055313 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078094117 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104850773 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106621831 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08393942 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104697679 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105037534 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.087412132 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104537766 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094332326 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085296238 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104425228 seconds)
  done (took 3.217369309 seconds)
done (took 18.023262063 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156119728 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107216376 seconds)
  done (took 0.990736364 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093949705 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111354224 seconds)
  done (took 0.938977085 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095544108 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094478899 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119209448 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108216397 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078843926 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094681365 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117310678 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079217288 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094902238 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078873866 seconds)
  done (took 1.698803304 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08059931 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108615308 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099902063 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093476655 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103350432 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094293382 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086329416 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098167913 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107164031 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075240495 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100417911 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111957308 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083624002 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115199371 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103278097 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082003598 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100185701 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097866948 seconds)
  done (took 2.47722306 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078277233 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095860403 seconds)
  done (took 0.908186669 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0802887 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092873939 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079212845 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095308433 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093346599 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075278006 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093432705 seconds)
  done (took 1.342694092 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.487955656 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135468924 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259098593 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10106672 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118316352 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.299254894 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096641279 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083518259 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101740505 seconds)
  done (took 2.455739379 seconds)
done (took 11.543516029 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091767599 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117018497 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111071447 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.458197896 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105926426 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097100455 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146659585 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.243913837 seconds)
done (took 2.112835757 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142511617 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324979877 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113499442 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066429627 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095151311 seconds)
  done (took 1.343091444 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078352855 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099251039 seconds)
  done (took 0.917120452 seconds)
done (took 3.14816548 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080029662 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128965761 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079329515 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095861255 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079562091 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097916537 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077097388 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09574198 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079404672 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095316621 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096529442 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079498491 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095730359 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079596241 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095809106 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078574625 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098658253 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078825317 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095979059 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077858452 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098876661 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079050709 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096635577 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078785845 seconds)
  done (took 2.914783105 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09824989 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09751626 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101775998 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084498695 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102548326 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088066183 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10398563 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098905016 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087348778 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100834524 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102347277 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084679408 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100585991 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085288286 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100702658 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102416369 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087407773 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099326107 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083624065 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102162356 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104061474 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081037619 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101860975 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104053161 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085497268 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102355071 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083316206 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099385242 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103168943 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084634311 seconds)
  done (took 3.607859879 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084003033 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093666766 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077570936 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100331905 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.0765632 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096562903 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076540321 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09539183 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077724083 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094609953 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077941445 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094106837 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077291206 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095333524 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077831089 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097675844 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106844254 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077328716 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093968947 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076979642 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098582478 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078208236 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096730761 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078271481 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096406381 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078897534 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096649829 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078603274 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09716628 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078567765 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099782372 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081710773 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097231423 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085873331 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09989519 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078514597 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099592678 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078022444 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097018519 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09508697 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078049709 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09556578 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077008049 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102267714 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076730992 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09846752 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078412577 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097826777 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078710182 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099890839 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078630365 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096622524 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080317216 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097947044 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083348778 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096101068 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097235714 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07898975 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098549136 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07884124 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096433445 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078446133 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099761855 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079703606 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112209482 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086478838 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096801558 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080948443 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097736089 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081862995 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098776336 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111436211 seconds)
  done (took 7.178298284 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082184982 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104956067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080115683 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096732251 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076304872 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09503142 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098221477 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07790833 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096193834 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083885622 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095327109 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079623322 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096001403 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107112181 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077972106 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097472649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085221486 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092437881 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079005863 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100565008 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079740521 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097994639 seconds)
  done (took 2.731335333 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206682834 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103535263 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141058253 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105996644 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08153425 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105453234 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100900349 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085050124 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101603831 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082455558 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098913898 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101491046 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082233758 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099263744 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100198423 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083711 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101443309 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084160799 seconds)
  done (took 2.619420362 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091827289 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098024243 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102254678 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097380021 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098617203 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084024104 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106157457 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108463889 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083843682 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100305269 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091427975 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100356375 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100271449 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080249494 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100512661 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080416768 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099635555 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080438933 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106685934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102549797 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103702303 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089339961 seconds)
  done (took 2.863216857 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094622072 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100535806 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116547887 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083332509 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094194952 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078535148 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106137182 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081216079 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108019816 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101952059 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082085506 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099074706 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088578127 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099544428 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106017089 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082051961 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101848009 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081787794 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103071388 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077233898 seconds)
  done (took 2.644201777 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101115296 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.208986457 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098606495 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090907806 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099676897 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081087887 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107213054 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099915312 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081561612 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12410124 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099089568 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082271155 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107587684 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104627616 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098898817 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091573491 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108114255 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108439586 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082391565 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099676772 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124930639 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081894333 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108525322 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099306074 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081816307 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099184254 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099614022 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087642266 seconds)
  done (took 3.61913993 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080507238 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098866377 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078897784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098917501 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079752115 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09859775 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079933078 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098497371 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082128479 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097525458 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082426645 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09975829 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08504285 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101257096 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082549948 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100853005 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082854951 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098649779 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079825163 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098476455 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08256145 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100821327 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082584244 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098043983 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079300986 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100663607 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080257396 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097892314 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08201846 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097669086 seconds)
  done (took 3.469238875 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089878958 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105930324 seconds)
  done (took 0.957906677 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078166242 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114392848 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077575865 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102055677 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086291499 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100641983 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110034092 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087012264 seconds)
  done (took 1.517696672 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09483212 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109245449 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081513554 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111025889 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.1090261 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094448804 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163612692 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099629915 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086675955 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097462434 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112124967 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080508249 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106916783 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08242492 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107489559 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088922143 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099855022 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089649794 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103858956 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100139026 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084842644 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112784767 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086438363 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098481172 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082654388 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109464533 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10783706 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082184746 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102233427 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108005483 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085967719 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092990349 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080925968 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100179238 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078887539 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.1079788 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110468883 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084145493 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107556576 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081810022 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110104468 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093887102 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086188437 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104563686 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091131279 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09945627 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082587587 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094257142 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.079130222 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.100594633 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094738166 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080534826 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093412454 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088032309 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103592849 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111636941 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08022734 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100392369 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0833357 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101736598 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088163979 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101003116 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083980885 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098888651 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106141586 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084856888 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105971732 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075652728 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093496838 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082516905 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108283549 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121624767 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089485586 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099946424 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081817774 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097037068 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102109664 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082963288 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106454203 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089377447 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09971893 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10571196 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08848154 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098671302 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084382113 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106698314 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097399609 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082808967 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096980197 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095956044 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097529694 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079415494 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096963552 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106897252 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08495595 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099871116 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078804944 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106927831 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075100233 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100434451 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082558027 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099645693 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108053254 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086217625 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104946382 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10641867 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088345949 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098823342 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085148499 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095654785 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081718328 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101853422 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.08845005 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092871058 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101630164 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082741663 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100149787 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088017892 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097469346 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081374486 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106969059 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107280517 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079949875 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095906124 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084646314 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099453692 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085789714 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106060784 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097940275 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07700916 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094661434 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084391957 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099569689 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085868286 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104672541 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103081964 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076293216 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097415247 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085346908 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107175945 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081131889 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.1017093 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106104219 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084279849 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102053053 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08921264 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104723388 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083013458 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106970686 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084922437 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098098926 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106226867 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085516917 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101792147 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087507837 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10670451 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085722489 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103280668 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101287914 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08970306 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10405555 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083212306 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102205405 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082739547 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109625641 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102038864 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076767581 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096489063 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088261866 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097206243 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081399797 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098795556 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084333216 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100747282 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097235712 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081554005 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100944373 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093847954 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104804517 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100738218 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086932268 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109413493 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081730719 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101842185 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080719657 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100929565 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100754053 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088627759 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104873431 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087610302 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101840584 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077936743 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105135006 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106784174 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080922473 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097541076 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0801327 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104300183 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106388538 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084976193 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101174837 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079498806 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09986533 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084959759 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102295146 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099355957 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080212024 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.1033679 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081372203 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105811011 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082542823 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10874511 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103045405 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076981367 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104010611 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079877295 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106089782 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076855226 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098085601 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098250152 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082958746 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098477253 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084119262 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09363705 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090881529 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10876413 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083079397 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102334177 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103604521 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092677 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104717173 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087327023 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106770299 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088851151 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115506172 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102317433 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087505965 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112676351 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084321788 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096981414 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090155881 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101516053 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.1022534 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083465223 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101865708 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087515472 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112989007 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107683906 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078751033 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105881539 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08294254 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102084851 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080628398 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110158778 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087985381 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105663365 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112243101 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086198775 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104556125 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088468858 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103533642 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086521781 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104825141 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107198635 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086387395 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106474091 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084807021 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105616164 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083964573 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104977917 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086812516 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103519729 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083396791 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106924583 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099502264 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081797029 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103516424 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.082726226 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100990039 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082726718 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100362925 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10352355 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082122435 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10013267 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084418083 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095443564 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088882688 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09985074 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089889714 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100322415 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096623154 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087488077 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103079123 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087039641 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101574129 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10145901 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083164887 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099811133 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084839239 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108991466 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080463092 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.10937237 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105942053 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082995695 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102818888 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082364852 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102373204 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081026282 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102268473 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082536852 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100591176 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081665312 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105102303 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103067632 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082202129 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102881257 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083512449 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100423764 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083233044 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095046132 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081758607 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10005908 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10086397 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089531997 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101435006 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084950975 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099370751 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082917391 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100194242 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078420274 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108871327 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109386383 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082998035 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108151733 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100858552 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083741104 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109736239 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076734287 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099298272 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079730094 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099246894 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108656875 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082558997 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108092569 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082488796 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100590848 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079793088 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103569341 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083408517 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098134963 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082275154 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106518787 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104548222 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081139781 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101760574 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084871671 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101667308 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08952498 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.109410178 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08334791 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101412812 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097634874 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080466504 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099317371 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085548174 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102306803 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079684189 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097834728 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081425611 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102569926 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082699795 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100552111 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102372964 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090114209 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100642555 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085613873 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104969191 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077259917 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103408979 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100646144 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082272916 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100069119 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087096075 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104889439 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083468353 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108084031 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101104539 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08320959 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101228709 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080170161 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100392137 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08273851 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101302482 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081315214 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102903593 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108709226 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080178393 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10291053 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082642346 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101872006 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.086949552 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102470092 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084863236 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10883028 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104172708 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084018681 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107043136 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085636628 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10435455 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102480529 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084180908 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107841947 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081544938 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.1096885 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.081964694 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102549379 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102292107 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079677119 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101645659 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082114588 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100634114 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087407928 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101826738 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081515498 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099824491 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080700613 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103073962 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104773138 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09012229 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103633488 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086097791 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096463968 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.07953274 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102802418 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098645115 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083994513 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103810941 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088202939 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104237777 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082482424 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100292421 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089430359 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107609346 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105574917 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079922769 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105103297 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084021152 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103656829 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083284925 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101844314 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103233307 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087775199 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102657914 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081784366 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109512576 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085742575 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102626154 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102319161 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.082687261 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10195766 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078343829 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102737629 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084975303 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107453468 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103513202 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082368344 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110613465 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081782603 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100968676 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086970275 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101560673 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107180772 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078228033 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10250605 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084635201 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102281856 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078251897 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100823169 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080561567 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104784135 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082009666 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097570223 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109891803 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090319628 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.103562142 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081636552 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101054121 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077765961 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097561641 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082549558 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10388656 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104455867 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.091669172 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101779411 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08450845 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.10112359 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085633618 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108281004 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10846594 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081746565 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100881554 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084441078 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108745765 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092227492 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104689296 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085586047 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109468958 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087978115 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.104546303 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11002018 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083055137 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107820293 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093267554 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103193026 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083413316 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107901337 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11000198 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083541393 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097694093 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084031918 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10443716 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082397774 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10287622 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103059204 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096362696 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105270387 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081557709 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100936936 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104046111 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083041974 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108515566 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084317939 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101792175 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.086570765 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103304182 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110284078 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085775975 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107570058 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08550879 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104790459 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081407179 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102757295 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100190253 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081580226 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102236897 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084427925 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106911426 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109529171 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082495233 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11165 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091460008 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106073392 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079084067 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100795192 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083079587 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09732391 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103378097 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080827291 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099433845 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080678264 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100522059 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.083452575 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108431523 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084498813 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103204639 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.081923924 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096260364 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105286424 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085290755 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102933136 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080463978 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102965024 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.083986396 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.10765937 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105503323 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083181857 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103593578 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08486321 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101843167 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.07889859 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108543852 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081885587 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104767614 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082161369 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10223795 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102815089 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086956563 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107622267 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085286733 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104992733 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.113913809 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085595109 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100208125 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079887862 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107576752 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081187046 seconds)
  done (took 57.415745916 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14548512 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080137644 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097695183 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07813216 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112068073 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09819412 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07825436 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098448946 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079133514 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101782717 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078575588 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099013013 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108000669 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12267722 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091694192 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102678673 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077882739 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099044274 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097297655 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07881449 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10765457 seconds)
  done (took 2.848423453 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102708081 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115672284 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11371795 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117578215 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088503611 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113714988 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112456885 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114527403 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098763933 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11013402 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117699105 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114882421 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090214276 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109838293 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110230125 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092127507 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118104987 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107934553 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115118296 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094352884 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112144284 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11371575 seconds)
  done (took 3.196164031 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084039791 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101767204 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084228206 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097835703 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08325123 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096857106 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086632665 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100220671 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086017412 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100935937 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080983685 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101130789 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103856778 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.077947249 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101186627 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081521327 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.14963335 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105850402 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082659387 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105040815 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.07794083 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104643259 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098892809 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079199278 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101586649 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086935284 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103722472 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08078046 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102263067 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082335381 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103170257 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08079189 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104276093 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103188647 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08193728 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101342844 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083194033 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102218584 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078489544 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100182636 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083877539 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098368662 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083619399 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104379547 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081426341 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100804575 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084717625 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102532807 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.077128496 seconds)
  done (took 5.400237025 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103391491 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161026453 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085508767 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141883764 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119069297 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112393975 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087103793 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142020377 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101770911 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082171954 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121101884 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118344853 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10331632 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089106748 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109240482 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102800285 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084957873 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10148032 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108323474 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083777591 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107768868 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.08932815 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118692647 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117180509 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107976285 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082589258 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103100899 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10802988 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09641375 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109107574 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108381995 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090349744 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119070151 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109086787 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082277989 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105965325 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120902549 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103404207 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085829216 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101072877 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086317381 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108215961 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108867325 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101318191 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103933029 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108691992 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08418184 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100499098 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117073149 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086239944 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112132197 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119245658 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107597414 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084264702 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108269358 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120007702 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084565287 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102714019 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087549254 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116085682 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100740804 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087715415 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118126553 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105244201 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111408141 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.097340353 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10780296 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10746563 seconds)
  done (took 8.067919467 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092883478 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11031909 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119102254 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119060996 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090281596 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110279029 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109890718 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089784875 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109940124 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115732805 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109266898 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133287491 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085416475 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113674705 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110651271 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090639322 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1107589 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110188331 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090493096 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109863008 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11047131 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119342548 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090191717 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120015681 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141034764 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10487712 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089818089 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110935853 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119688858 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110116738 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121961903 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091235077 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110229688 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119556009 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122571565 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090704648 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102719917 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110566525 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089821568 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110948699 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104064794 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099136712 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111169196 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105882899 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090339323 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110046085 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119566759 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123281814 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114191739 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096791785 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110624641 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120758748 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109751487 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090712053 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120303185 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147094406 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11998844 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120288204 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109612469 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0990955 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119368244 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127374551 seconds)
  done (took 7.613288037 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105773594 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113223046 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117272176 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099391247 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082169272 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108098189 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081622523 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101698427 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112962578 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093531926 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115911736 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107142908 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09158013 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116343447 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108142302 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110892623 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088132672 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108808278 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113274865 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107302372 seconds)
  done (took 2.911291178 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092465712 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123929055 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084438243 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11353811 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108055722 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090380434 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107908659 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107255664 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085096098 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107606836 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095879398 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115328788 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105329845 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090552996 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114823788 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110877198 seconds)
  done (took 2.481881647 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09462782 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116363162 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119376751 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083342521 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103755215 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080250358 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105064548 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.09965935 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080367722 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120791977 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08439337 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109980649 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104656481 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082666375 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100285517 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086607518 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099669937 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081196008 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104510636 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118915452 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095987576 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102926726 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104861432 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08651698 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104334761 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088749088 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105419986 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10164681 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082765474 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105627422 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084780274 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112016006 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100536139 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083517003 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101643366 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081635669 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104077164 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0847007 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10790305 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.1039548 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083140847 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103237032 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08471485 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10609255 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080772312 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107646595 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099815299 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089994373 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101978828 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084279042 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.1042529 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086344726 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10596507 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115560697 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087980958 seconds)
  done (took 6.194306724 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098291733 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107936972 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080021409 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10211806 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087467158 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107685023 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108110142 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086671769 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106105282 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082664172 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106790278 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088395045 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107063748 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108734963 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087037617 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108569452 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079434972 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105948328 seconds)
  done (took 2.596697039 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090444975 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10438712 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091955881 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105282658 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083762486 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107470663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079808403 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104678593 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103248442 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084461179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104967869 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086653758 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103839581 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086778558 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104552909 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083783028 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107315525 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102528979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084713057 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100594885 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086763209 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103072147 seconds)
  done (took 2.948595257 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118715273 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124755912 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09222418 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228082414 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102514218 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134191683 seconds)
  done (took 1.63860041 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10833461 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119779244 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105263187 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105863417 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114546167 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085125572 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106403236 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106429084 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117044842 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09975014 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106945486 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116835076 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117422165 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095230748 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113947095 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113398644 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106843309 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087666623 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105770315 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126944915 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086864761 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117496956 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107439198 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086767215 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107325105 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116354492 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116864399 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120354705 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086576668 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116838589 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113485351 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086906873 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117329769 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121849674 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10899577 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097403334 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107338506 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127760267 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113549495 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096889356 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108217341 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113234572 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096540681 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112640474 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116513357 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108425414 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091940933 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107299779 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107696694 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133367639 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092795522 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116090123 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114181121 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117223746 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096140365 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154873104 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100575795 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116272602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114845226 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12230643 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116513611 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093571203 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116594735 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121894934 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115129095 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116611442 seconds)
  done (took 8.076246129 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101328996 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126348315 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107962296 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121496282 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096011871 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107697552 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106966823 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087093602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107144386 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105770268 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151191571 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087235462 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116935779 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117094878 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08658393 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108572498 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107201255 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116464573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087311602 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133593283 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107673034 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116847706 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116625124 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096795237 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121661604 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114883004 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108492152 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08737599 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107938713 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107326902 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09239484 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107530188 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117139933 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08622549 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117079604 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108044751 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086313351 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112608066 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10659554 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114038733 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096676064 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128862332 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107922242 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107399452 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100549765 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108149842 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10738412 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086166127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107749784 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106348445 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101479933 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122890735 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122083724 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117726201 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107414416 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087523141 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109160025 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108429473 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087931603 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115194634 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1170157 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086571734 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154864104 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087704165 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107123812 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117018452 seconds)
  done (took 7.964254337 seconds)
done (took 154.215871291 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218434823 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.226764323 seconds)
  done (took 1.286634024 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.096712577 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135922736 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094764904 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169008097 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106062739 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11829045 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13753698 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095971037 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105784207 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084602143 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106403921 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086560399 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17103031 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084309525 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106575009 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107423254 seconds)
  done (took 2.655385963 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198600878 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253573685 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10171958 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105150869 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088047156 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11035399 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104243219 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090191514 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108263795 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084707586 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108463606 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085828689 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105483902 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085847644 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110739379 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087509362 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105999788 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087766891 seconds)
  done (took 2.872005144 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112031309 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145489064 seconds)
  done (took 1.112288312 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117279013 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179265279 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314742744 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154731804 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106430823 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.1259804 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15596357 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130590737 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196855774 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123078304 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122067074 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.0968829 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139695982 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115237934 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093595209 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117440153 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140683569 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092323944 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114792726 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114676246 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115759114 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105989162 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114777819 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092909869 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180863314 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118869001 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083974804 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106365787 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114919187 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093722169 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112853297 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124032926 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098014572 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176054813 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10061099 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174587896 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096610128 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.1115107 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114749096 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089989645 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117912074 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116975344 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103100936 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117212036 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08412574 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117395262 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105615502 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084762908 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113747611 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0970565 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114973998 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112978015 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154354422 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11840389 seconds)
  done (took 7.487910119 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793624756 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155533372 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089740775 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882671424 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138061468 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103773186 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.781085545 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134332595 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237123741 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757036793 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133522033 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121100082 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228077967 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239330847 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.977640422 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314773282 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.668522417 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101601431 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151293482 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15285732 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118296023 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137130888 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1083288 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.449371382 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094185152 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111943546 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095187726 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121265259 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158834619 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126004263 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113429983 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179630897 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249061737 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205303176 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115196109 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089744672 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111797555 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1692949 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270997371 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213434029 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179572572 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086800142 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111722826 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099623323 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132904101 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108369475 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163845312 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172823664 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192532527 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0912826 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120684391 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117717699 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098805264 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.185899043 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098141427 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.32191303 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321435913 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111255793 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098105092 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12779713 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269676202 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122595974 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224057393 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116695832 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212878734 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110462722 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81663563 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18960795 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090015004 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118065315 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096784496 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116187461 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121734914 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167090811 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391377773 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123056007 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092482261 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110600766 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213468486 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125660166 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110115112 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162790038 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093043833 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121394908 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123937697 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122161765 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170025164 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233070089 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12327357 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118861277 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093300521 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125305031 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114739641 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216625352 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22007415 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162270095 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211559547 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122254974 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162618259 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188192435 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099017107 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19370198 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097957211 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124867266 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122052296 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214851242 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144549659 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101763145 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115945544 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117202964 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147445879 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105185772 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118412372 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168464118 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.477269605 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167660906 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10764089 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104802521 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120529199 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15970241 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117066843 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260926651 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099241805 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191394839 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098072907 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108640601 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11941898 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164612139 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121801717 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099208461 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122377393 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118117222 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237873786 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215708609 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099997879 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243866961 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183229625 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117311305 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172937375 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121519608 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168433892 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118002978 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098894094 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11677222 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834574428 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10087108 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122117297 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115160617 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186937895 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089130708 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123420204 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123337854 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086348287 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831698136 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126865285 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097851452 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125296168 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118345477 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119117378 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095557674 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.1153553 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162649802 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229953334 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119924852 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097582156 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125954165 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15998439 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117173147 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124968213 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124153816 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104715449 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122106389 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113842797 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102225616 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191477743 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161916959 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219985068 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566955753 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111987436 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124163654 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204826977 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112740938 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289902938 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118483063 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202981416 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187432426 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098598996 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314383272 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187621237 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187821788 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105776584 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19549744 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087955663 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117926796 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164249324 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111163157 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095318351 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181915173 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102507218 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124029862 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.981790927 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088703674 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249916516 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086752673 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16786086 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117297076 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121005589 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295732713 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09061264 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129149017 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163684301 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114528568 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123875707 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.717399584 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125176585 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121851726 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096734935 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221760558 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162260296 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119597537 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11911933 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09806526 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185673302 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211739437 seconds)
  done (took 44.149892182 seconds)
done (took 60.41100661 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275513036 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215629737 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26740366 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168966974 seconds)
  done (took 1.883357093 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170051418 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149086771 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119679517 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107812369 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149357653 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08438111 seconds)
  done (took 1.659859172 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.355939766 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272040943 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239539477 seconds)
  done (took 1.749979796 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.315312794 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246628221 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472125917 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324196807 seconds)
  done (took 2.333793119 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208153593 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131556028 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110811177 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103893337 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196169484 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245535879 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140987739 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199666655 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099119431 seconds)
  done (took 2.360807088 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194723039 seconds)
done (took 11.067927495 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.256866385 seconds)
    (2/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.221661189 seconds)
    (3/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.17616693 seconds)
    (4/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.197826588 seconds)
    (5/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.249273395 seconds)
    (6/286) benchmarking ("sort", Int8, true)...
    done (took 0.251286229 seconds)
    (7/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.11862662 seconds)
    (8/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123369619 seconds)
    (9/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.299345271 seconds)
    (10/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117444713 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.191291436 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127095771 seconds)
    (13/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.203193159 seconds)
    (14/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.170932629 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097625592 seconds)
    (16/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120350862 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.178441204 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093581887 seconds)
    (19/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115622662 seconds)
    (20/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.148064242 seconds)
    (21/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165940778 seconds)
    (22/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.174071797 seconds)
    (23/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.169959504 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118242588 seconds)
    (25/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090628636 seconds)
    (26/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.153524643 seconds)
    (27/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.187423769 seconds)
    (28/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.095964008 seconds)
    (29/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.267804429 seconds)
    (30/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.161884855 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.221997149 seconds)
    (32/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116243159 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.115209821 seconds)
    (34/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.245098951 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116323355 seconds)
    (36/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.146463948 seconds)
    (37/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.132895574 seconds)
    (38/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.212356765 seconds)
    (39/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12428297 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.134977403 seconds)
    (41/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066084086 seconds)
    (42/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065268158 seconds)
    (43/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.185170616 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140500295 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09313368 seconds)
    (46/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.156114061 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092896915 seconds)
    (48/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.213703595 seconds)
    (49/286) benchmarking ("sort", Float64, true)...
    done (took 0.227235961 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109194446 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132497259 seconds)
    (52/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089174186 seconds)
    (53/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.121861213 seconds)
    (54/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12405361 seconds)
    (55/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.210037782 seconds)
    (56/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.162400514 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111546259 seconds)
    (58/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092445995 seconds)
    (59/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.170473582 seconds)
    (60/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067456417 seconds)
    (61/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110388791 seconds)
    (62/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.099908406 seconds)
    (63/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117198949 seconds)
    (64/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.153304763 seconds)
    (65/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.147756065 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.204666196 seconds)
    (67/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119762921 seconds)
    (68/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.14209499 seconds)
    (69/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.108370337 seconds)
    (70/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118467965 seconds)
    (71/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.08737168 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.108703784 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102714891 seconds)
    (74/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.184728981 seconds)
    (75/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.193947112 seconds)
    (76/286) benchmarking ("sort", Int8, false)...
    done (took 0.187144245 seconds)
    (77/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140829081 seconds)
    (78/286) benchmarking ("sort", BigInt, false)...
    done (took 0.218478589 seconds)
    (79/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.0657659 seconds)
    (80/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076773993 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108748549 seconds)
    (82/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077155865 seconds)
    (83/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125398944 seconds)
    (84/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.095998645 seconds)
    (85/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.089662464 seconds)
    (86/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098334295 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.137198329 seconds)
    (88/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09032775 seconds)
    (89/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08704051 seconds)
    (90/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131927334 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086204623 seconds)
    (92/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.100905433 seconds)
    (93/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094043614 seconds)
    (94/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.17479151 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133007949 seconds)
    (96/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.07671029 seconds)
    (97/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136841246 seconds)
    (98/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.228090109 seconds)
    (99/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085516225 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120343366 seconds)
    (101/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.148468878 seconds)
    (102/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.18311533 seconds)
    (103/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.08861091 seconds)
    (104/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.116959951 seconds)
    (105/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.142117333 seconds)
    (106/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.086900702 seconds)
    (107/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.12075319 seconds)
    (108/286) benchmarking ("sort", Bool, false)...
    done (took 0.182437288 seconds)
    (109/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094166644 seconds)
    (110/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117113594 seconds)
    (111/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114436006 seconds)
    (112/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.087322855 seconds)
    (113/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.13314533 seconds)
    (114/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094464648 seconds)
    (115/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136376712 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114770049 seconds)
    (117/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066431185 seconds)
    (118/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097049199 seconds)
    (119/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116189199 seconds)
    (120/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117075853 seconds)
    (121/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112336895 seconds)
    (122/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.089998245 seconds)
    (123/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067098398 seconds)
    (124/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067939896 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109170587 seconds)
    (126/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093961394 seconds)
    (127/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.116655239 seconds)
    (128/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.190558354 seconds)
    (129/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067340186 seconds)
    (130/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.185951687 seconds)
    (131/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110579989 seconds)
    (132/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.20138749 seconds)
    (133/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08926075 seconds)
    (134/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065842991 seconds)
    (135/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110262618 seconds)
    (136/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139625274 seconds)
    (137/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119009961 seconds)
    (138/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.147092007 seconds)
    (139/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089377275 seconds)
    (140/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067582783 seconds)
    (141/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119967636 seconds)
    (142/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.129653876 seconds)
    (143/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.118794817 seconds)
    (144/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081476104 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.134305443 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095618186 seconds)
    (147/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.116760442 seconds)
    (148/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120579006 seconds)
    (149/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.12425704 seconds)
    (150/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.181248501 seconds)
    (151/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075279907 seconds)
    (152/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.090786847 seconds)
    (153/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.219714204 seconds)
    (154/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067433505 seconds)
    (155/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13726236 seconds)
    (156/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077597721 seconds)
    (157/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128940616 seconds)
    (158/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091313285 seconds)
    (159/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.089109503 seconds)
    (160/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092940494 seconds)
    (161/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133538571 seconds)
    (162/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.06673798 seconds)
    (163/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.15431551 seconds)
    (164/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067215678 seconds)
    (165/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118643245 seconds)
    (166/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066654015 seconds)
    (167/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087035377 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10911991 seconds)
    (169/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108112063 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085598863 seconds)
    (171/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067691697 seconds)
    (172/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.098690586 seconds)
    (173/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085045002 seconds)
    (174/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.141186328 seconds)
    (175/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184464921 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 0.219866519 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085078261 seconds)
    (178/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.150049546 seconds)
    (179/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090808258 seconds)
    (180/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.186768676 seconds)
    (181/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.1741069 seconds)
    (182/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.156988522 seconds)
    (183/286) benchmarking ("sort", Float32, false)...
    done (took 0.396419077 seconds)
    (184/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115134179 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096142738 seconds)
    (186/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124740215 seconds)
    (187/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.066589123 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109327653 seconds)
    (189/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066786832 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118343299 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093848594 seconds)
    (192/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115038268 seconds)
    (193/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101136192 seconds)
    (194/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.089181083 seconds)
    (195/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089677433 seconds)
    (196/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.193363995 seconds)
    (197/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114998968 seconds)
    (198/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09233964 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109473543 seconds)
    (200/286) benchmarking ("sort", Float64, false)...
    done (took 0.147427564 seconds)
    (201/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108246662 seconds)
    (202/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092271898 seconds)
    (203/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116923238 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085472612 seconds)
    (205/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117058724 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107215558 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086149016 seconds)
    (208/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114876249 seconds)
    (209/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.119237139 seconds)
    (210/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108135679 seconds)
    (211/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08723967 seconds)
    (212/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.075441579 seconds)
    (213/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.089387784 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087663836 seconds)
    (215/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109775334 seconds)
    (216/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084212273 seconds)
    (217/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127163173 seconds)
    (218/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085801579 seconds)
    (219/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108873695 seconds)
    (220/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075221649 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133745952 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182227162 seconds)
    (223/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083853043 seconds)
    (224/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111708048 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066535777 seconds)
    (226/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068418599 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10934298 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085150756 seconds)
    (229/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163709345 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109091796 seconds)
    (231/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158506979 seconds)
    (232/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115562124 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085005167 seconds)
    (234/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11769144 seconds)
    (235/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075312738 seconds)
    (236/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118032295 seconds)
    (237/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06749955 seconds)
    (238/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090504694 seconds)
    (239/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085727034 seconds)
    (240/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065655032 seconds)
    (241/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089948101 seconds)
    (242/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068134039 seconds)
    (243/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13443286 seconds)
    (244/286) benchmarking ("sort", Float32, true)...
    done (took 0.227305144 seconds)
    (245/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086939863 seconds)
    (246/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118979409 seconds)
    (247/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.086200829 seconds)
    (248/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.09083292 seconds)
    (249/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06666489 seconds)
    (250/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.074477003 seconds)
    (251/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091453896 seconds)
    (252/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067785902 seconds)
    (253/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110072891 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099337082 seconds)
    (255/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.089651111 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093451379 seconds)
    (257/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.089324666 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084907941 seconds)
    (259/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115500001 seconds)
    (260/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065599307 seconds)
    (261/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076067878 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107783345 seconds)
    (263/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092520083 seconds)
    (264/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.089003602 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094712399 seconds)
    (266/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090710882 seconds)
    (267/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088723532 seconds)
    (268/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112344109 seconds)
    (269/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067204054 seconds)
    (270/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.180032868 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092166311 seconds)
    (272/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.089984319 seconds)
    (273/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.089176354 seconds)
    (274/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11431869 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086448084 seconds)
    (276/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.091081153 seconds)
    (277/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094012708 seconds)
    (278/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109277409 seconds)
    (279/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.091856112 seconds)
    (280/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108359706 seconds)
    (281/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089027148 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.114965754 seconds)
    (283/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066613397 seconds)
    (284/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.0668439 seconds)
    (285/286) benchmarking ("sort", BigInt, true)...
    done (took 0.227561669 seconds)
    (286/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117047937 seconds)
  done (took 35.883350356 seconds)
done (took 36.768233185 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09939703 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147365683 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09531779 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135126504 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122543361 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090784741 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117276331 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09724849 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12304708 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124512228 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098369666 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092514864 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095722799 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119178273 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099399917 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138799365 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123137845 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093244087 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117843283 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085979274 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11733105 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085492895 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111426552 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069365606 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120449977 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093246412 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11556128 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119238667 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085993246 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110136527 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089022256 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116835222 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086156979 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12471371 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092947119 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117382414 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096096943 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118629908 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08727611 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109350996 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11727885 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086266254 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117193885 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093819462 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115502316 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092892728 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118346514 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099327992 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138358927 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114389763 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094189868 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120786923 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094700333 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116806821 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090278327 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118251763 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091290705 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139204756 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117276854 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09133665 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.1171167 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09412233 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114882736 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094543828 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117992191 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120096468 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097164045 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114553612 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.095963363 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115023617 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086088832 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118117223 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090361017 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110212132 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095387588 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120317339 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084523233 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115479668 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092848786 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115769404 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109544036 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088490534 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111710239 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092760427 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112108883 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069161843 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090456843 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.115502345 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085577846 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.11851855 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11622762 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094012456 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110996789 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097787857 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109035231 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091483843 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110629973 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086799262 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111779676 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090458684 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110381621 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088562487 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118946726 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08854195 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116383657 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098087452 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110586747 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116139862 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085975118 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.10873254 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101005351 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119973552 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086519305 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114675828 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085672812 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117337578 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085572537 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110228571 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085806756 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109652438 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092276829 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109886662 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089028864 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.11786777 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124178475 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086075352 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113953268 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088934307 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109877839 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091285313 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1100174 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08708925 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112332931 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077977984 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112569732 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086078887 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117231852 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088804995 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117957864 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089040458 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119765927 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091426228 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115837977 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091901326 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109858817 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074056673 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116322846 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089107911 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11278135 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086038557 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111830283 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086612203 seconds)
done (took 16.797787042 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086557292 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18249611 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149398883 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141365993 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107345858 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111400831 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121327146 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116633937 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11279411 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142525899 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109527732 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131522958 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146921738 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086113571 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111160586 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090205849 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112379618 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102099258 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144198264 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132118499 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162268323 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086155818 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145581097 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133887724 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119860244 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113071321 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111402833 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090744648 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114463411 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10252594 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131541335 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089817683 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112341465 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132863945 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104082654 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119326882 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08736217 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117705909 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08721271 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111338053 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139710615 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107855255 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116522185 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11705319 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090919249 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113062727 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088456372 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11969869 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097619931 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116454668 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125140112 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154375865 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090856589 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121217354 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085415814 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121095911 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121519145 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.08925421 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111862653 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090219745 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111297933 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090237116 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126400723 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140907867 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090985219 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12070353 seconds)
  done (took 8.545368476 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105280825 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138558187 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129922495 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.104871599 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111620509 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089076747 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11157896 seconds)
  done (took 1.737805592 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087412977 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136804984 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110696244 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137062096 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133907594 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108655155 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122671615 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087528036 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130042427 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114229434 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107833741 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151500745 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089884126 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119989968 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138194563 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087813334 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136717416 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08908601 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115879543 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136787052 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091700985 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134145592 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091157223 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112769226 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102369149 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113329116 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1618282 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093213858 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114807694 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091825412 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111320922 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165342878 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101157461 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124208561 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113785555 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102712854 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127374051 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10347661 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129160707 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093110604 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126383071 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113905362 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089593108 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111326855 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.091762984 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12375915 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089390267 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11424494 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091368254 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132739616 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088942564 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126216564 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088424888 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117209334 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114303435 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094181824 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122442633 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089785369 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133130291 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089617719 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130137307 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129847086 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10253285 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130268843 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09022194 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127612932 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101733895 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115781355 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114729759 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092099804 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130673663 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087004896 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114509393 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.098591539 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115597717 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111717786 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136794716 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116401751 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098172347 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113822681 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088779291 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113536093 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111593737 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117549579 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08931935 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119951873 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090942656 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111049427 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113153504 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.091426758 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.111999255 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089648274 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117444986 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089554269 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115932839 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105510352 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115072184 seconds)
  done (took 11.772405307 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089544645 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115922085 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090820251 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11423023 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090476668 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114275188 seconds)
  done (took 1.57533854 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114149499 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116744194 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103210491 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120177218 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156062071 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128264913 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.103644591 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123654544 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107926012 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126380822 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128055681 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10460031 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135302638 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11989355 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103087457 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119441863 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128940512 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099578375 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126607203 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095703192 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136317102 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120530346 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096562316 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130745239 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118534114 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09453376 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124790269 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101716076 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126448069 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122804217 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095324366 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117235675 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094541683 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122850771 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130316182 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09522234 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120014288 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119154941 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099406802 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118024154 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104352005 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120766582 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126040904 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093496616 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123532015 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120620318 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.092741047 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124196003 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103522406 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118896189 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118235782 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094730457 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11752526 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093277388 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119399888 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122757906 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093642989 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12960732 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12055802 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094972432 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117808815 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092756589 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123657674 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118552482 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103451937 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118789286 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095320622 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121235058 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120621048 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095396452 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118918667 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092722975 seconds)
  done (took 9.159976271 seconds)
done (took 33.733858573 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691043617 seconds)
  done (took 1.648768348 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.817959012 seconds)
  done (took 1.776980217 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.066954276 seconds)
  done (took 18.053797001 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.491798912 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.575711715 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993275026 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.1776678 seconds)
  done (took 3.199707802 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.951337196 seconds)
  done (took 1.930844111 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281527006 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231466385 seconds)
  done (took 1.479239637 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.76398118 seconds)
  done (took 1.738817019 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.343733686 seconds)
  done (took 2.309384995 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325431808 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182952158 seconds)
  done (took 1.484949387 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550661017 seconds)
  done (took 1.527573679 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.798660353 seconds)
  done (took 7.779599835 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269055604 seconds)
  done (took 1.255064299 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298059084 seconds)
  done (took 1.274817012 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.526893925 seconds)
  done (took 4.508615359 seconds)
done (took 50.937747858 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098172899 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126715875 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100912805 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123484911 seconds)
  done (took 1.423760207 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100118888 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119857279 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100250829 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120109017 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125386532 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095265363 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122993938 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099961153 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119202857 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095474949 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121169769 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119967142 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097877392 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121944119 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092926704 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123167313 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098172914 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121061419 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122841777 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095236892 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117439508 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097209184 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123589302 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093792674 seconds)
  done (took 3.62868711 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099109254 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118262521 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095901017 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11765771 seconds)
  done (took 1.417484126 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09965542 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141252191 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138843649 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099251425 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141835031 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136493454 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091803569 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116230149 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094267095 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124296809 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090146776 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148576157 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136606784 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09868555 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126291525 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113810077 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091645119 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13629842 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099332248 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125301497 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091692782 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124573485 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089901823 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139273894 seconds)
  done (took 3.776876984 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169530894 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126419417 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137474207 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094506806 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160061592 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139582929 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087464673 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139506832 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087540449 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130036887 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117309945 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13246022 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127577972 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087187899 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112795676 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086887099 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127897988 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127150515 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.089706289 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126897659 seconds)
  done (took 3.396542256 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096837658 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116217206 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087948738 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115421563 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.097169022 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119380288 seconds)
  done (took 1.621473814 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089396523 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113601439 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089400503 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113034783 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093562345 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114201917 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087709361 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113760735 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089493902 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114611958 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088711173 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114965876 seconds)
  done (took 2.210999057 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.497430717 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119995186 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120338603 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088132522 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121264157 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088714441 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128357398 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091547483 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.13956646 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087912022 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115597784 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090853395 seconds)
  done (took 2.677789668 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232000586 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125055913 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284951272 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368073806 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153828106 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17606031 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279226208 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159460975 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.222221102 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164523694 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201926273 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22018299 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15048718 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187978963 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137026111 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14354039 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203482013 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245477373 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152752033 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206373282 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225213944 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165800697 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179778897 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150104899 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137874516 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170308355 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093360866 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129033022 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232966455 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175312833 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213326891 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162231842 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145574967 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208632842 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250783001 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218753861 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28198556 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134004928 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149096419 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16480217 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259529106 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136714921 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201321266 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153745217 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130032134 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216050393 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16550772 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173727279 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151636409 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137576336 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192443398 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236412904 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191101503 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137364337 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300293148 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146936684 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.199429311 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190841389 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24905601 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198471992 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210242108 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093360003 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185837365 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217445487 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183450279 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172541916 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.20568071 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146059051 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197244332 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187557044 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161680683 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217987387 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182486046 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138445 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167226277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170112733 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170584818 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254408624 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209306892 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094204141 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167051511 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148523878 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13174715 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191809258 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097507602 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236409413 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142903771 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162261194 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211574691 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158030101 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159472785 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199379544 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22801469 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147772411 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08283488 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154399388 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154528372 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189876065 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138881921 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157770638 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159666002 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129105556 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18216889 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123925965 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182732164 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117319514 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173063208 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181080405 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125674749 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158875668 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150448 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.123750696 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198554922 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196925725 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141579411 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131521337 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207669008 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176399181 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149488909 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175707921 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225589706 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116696505 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147495725 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226232875 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214454625 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139011837 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226972104 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154265475 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10716551 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132010789 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18089975 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15293073 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160841108 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133999478 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181098719 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231396028 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097520075 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137521984 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191310227 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132364345 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132030356 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16203716 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146484228 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110354539 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150191711 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15121074 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206479197 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177365485 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152668102 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165642577 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151639021 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251045517 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13986316 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123201574 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148612639 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118802104 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190860906 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196959778 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129819612 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229072308 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170821572 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201377966 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167043574 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133236959 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175694179 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129524321 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092165578 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219897127 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166468827 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15975927 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195254118 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225438651 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178030636 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181918104 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19755417 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17264051 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163588443 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156063247 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111576066 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158805501 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168912305 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122624125 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142368479 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132016155 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146091592 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114476755 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134523087 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220746715 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168867043 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187978689 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157890519 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149409595 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179987785 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127813314 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173053297 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17685913 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148939873 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196168198 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219646299 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184062569 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143078634 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198158516 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12042038 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124138878 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.114508664 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194732847 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106574336 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134545928 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162600098 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180065926 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177692807 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201814469 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209277471 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169503232 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216379016 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094182609 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167371199 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184035911 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175375666 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.191378379 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138623231 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148636305 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178485156 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156764022 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252557068 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167898139 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174205637 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232088231 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122316349 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131063824 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15104333 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191102681 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153189455 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202574261 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118888708 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141124651 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159922973 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131704377 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158990837 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181414352 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160967161 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21382005 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148819501 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183468489 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126201254 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161707003 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157920442 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163809569 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08082662 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173308586 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229833639 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147129225 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167223103 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187554063 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130688572 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306138391 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239100162 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194748527 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136988942 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154987931 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160723598 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163025389 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169905252 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177882461 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158666095 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18617152 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158106706 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136583365 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139433253 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119974108 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149830684 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.130729703 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146638142 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17625249 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138895628 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18476393 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161614303 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158907235 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170632714 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149651385 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143133683 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149117149 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213135306 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181520636 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235898725 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149929057 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179805577 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231335989 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098382184 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131456928 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131972061 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176814931 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107513916 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220106541 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187397526 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228218086 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182416234 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192016848 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139308654 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119075459 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128168193 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198580508 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205009223 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150464187 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157834224 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229305479 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118457759 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131996189 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178122438 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293366699 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141146273 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221718114 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080180185 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278271752 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124525062 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103422409 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162458323 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233883164 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136068041 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186612457 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170805825 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170316237 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163889268 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149932564 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188881876 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24016782 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200894101 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178179623 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132305516 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154271673 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175653738 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217657416 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157128028 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112119105 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22835364 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194116501 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19468095 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140734102 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167100623 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166568779 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156870826 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2129445 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106266202 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233250729 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133587091 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192762552 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152394394 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142118601 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175535215 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187058907 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139577347 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215238183 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183262602 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134030197 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104799009 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167585976 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205844388 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155314606 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099221427 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206677759 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097404842 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2186518 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228937209 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134821968 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153562671 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146738143 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106331195 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152797184 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155465193 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14054647 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163335253 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20045765 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134671952 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190194072 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229713526 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168744377 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172138333 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144033265 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691277144 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131807033 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193130232 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157928962 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233588535 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149035897 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171251367 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15727712 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166377186 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193356549 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159696743 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230537902 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218118876 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177691545 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103138676 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157107493 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19058622 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11471182 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151347932 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166683148 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158256849 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154326917 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17668411 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199087764 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105497171 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140737728 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197193452 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158935703 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208868958 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180019646 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109395611 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199974904 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186208295 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132337023 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178536418 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234545335 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113208351 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151549076 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133407792 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156428621 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261308525 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.095784136 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232632274 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184537301 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159328823 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167708955 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146758824 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220509907 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156328376 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185028907 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146491761 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158715552 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155392879 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136772636 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101917691 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156525849 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165988958 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149187307 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157817713 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162855491 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195034183 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095421802 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143060737 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313582548 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19244067 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241913386 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107348382 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135047105 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160982283 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150607561 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176080702 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17743082 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135147118 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134878093 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.10700877 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157627919 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111632221 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155252728 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193215884 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193255087 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206621366 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134926082 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276224076 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111775249 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156184451 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114184774 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.102766793 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149948254 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145012764 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157502482 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191351332 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262486278 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147471587 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131097321 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147972928 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097566971 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135361876 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163637251 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163961601 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177055362 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143013011 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079828467 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154987159 seconds)
  done (took 82.629537946 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16154915 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131165868 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146414936 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201556098 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175374438 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268139017 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209239011 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251956017 seconds)
  done (took 2.624781063 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093350739 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145020391 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156614561 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132286448 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09106903 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118463738 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.342339016 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132439768 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11670563 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11973877 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172031623 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093835162 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.546835375 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090052251 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11886244 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106263562 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.0908962 seconds)
  done (took 3.741652648 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.472364455 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.719912809 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.509587357 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097082586 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.13039637 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111965235 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.775721249 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194990736 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11399259 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.483455108 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.771778463 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.164600117 seconds)
  done (took 18.629393382 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114583627 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135539935 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122720709 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151780807 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139670886 seconds)
  done (took 1.754004787 seconds)
done (took 130.509989393 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103665196 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400623735 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070563565 seconds)
  done (took 1.59036127 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106664926 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136897302 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107523207 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136146569 seconds)
  done (took 1.583901573 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09649321 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12662266 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107343939 seconds)
  done (took 1.421755708 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321934095 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189740289 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.167701891 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105002585 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128537443 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102347284 seconds)
  done (took 1.427526619 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096834654 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12715514 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096733871 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129529395 seconds)
  done (took 1.542464385 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093872626 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070032463 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100619736 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074061389 seconds)
  done (took 1.426768355 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113527783 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130967366 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102712837 seconds)
  done (took 1.441452472 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128450752 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138327342 seconds)
  done (took 1.360954528 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104567318 seconds)
  done (took 1.193975454 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.116193622 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168457499 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187346149 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163999426 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.234396446 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165982602 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.140120003 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.141422777 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.102383658 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143402342 seconds)
  done (took 2.658426242 seconds)
done (took 17.516353221 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102092758 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418795968 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.4121492 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115712331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722428671 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379334583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.061743124 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145775586 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16352181 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092557204 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138432246 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671639102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.052751564 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377854395 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.010751268 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377137156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676685029 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121218773 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118595807 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092489501 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.048115621 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09096626 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121685031 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091223959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70123799 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425790736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094590304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374789682 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091399936 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125437421 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381887332 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122657473 seconds)
  done (took 17.004997315 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093998513 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172714497 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097614415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136685696 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122035214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093335721 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123861292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093239722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17808937 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122114946 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109497153 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120153658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124596925 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093777655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141232948 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091239456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124859516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091478665 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120144391 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120173063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111059115 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119170177 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093190132 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121327426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092308534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133910315 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093171317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119937902 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119296037 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097765065 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126243984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093461286 seconds)
  done (took 4.78939011 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139726938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181176515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12838163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125104346 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167529616 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123372583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198236077 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116582737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180308139 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121730486 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138326724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092744535 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156047831 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093395951 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141715503 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119990106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095282225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121446425 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091388668 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122029956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138990749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092870746 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121337518 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092057403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122729638 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107176557 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123669323 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119542856 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092881277 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12494588 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098680882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122566928 seconds)
  done (took 5.118092677 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096440828 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125172627 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108145709 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136792452 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094281212 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125404795 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096024311 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122852422 seconds)
  done (took 2.009103105 seconds)
done (took 30.011427647 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.10987503 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126112484 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10649434 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133704036 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101877415 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131400432 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09083628 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132922348 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132915962 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102177607 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136436974 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091701641 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12260135 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091458055 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135208256 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097013719 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132190559 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10174783 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133343519 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131120407 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093494373 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132733491 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102700902 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133066238 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103037691 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133025008 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136757746 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099535918 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122799112 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093551651 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124698568 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102993437 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123786417 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105081524 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127051408 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095870528 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123029324 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093285738 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131913028 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132170654 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100150038 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132557634 seconds)
  done (took 5.980437819 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107517079 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139480831 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104721653 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079994009 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11720681 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079635029 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.13785393 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078653444 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11028738 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107392401 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073815098 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106629744 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077834626 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101095163 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076790078 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074912823 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108074126 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074789221 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076196911 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105802624 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079111203 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072295342 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108409179 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077377249 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073987847 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110485768 seconds)
  done (took 3.56848067 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099747157 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134653609 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112472042 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184189916 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161408027 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099570734 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132120053 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110964449 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137689445 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121180287 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09585681 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149602561 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110266946 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129479 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091597465 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.1370449 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135157277 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094218229 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128312812 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111651734 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139093883 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102310078 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140811721 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132591003 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.090942369 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122553351 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095911657 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134422972 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096704438 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130733259 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096329394 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124020863 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122128952 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103809864 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125084152 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093016014 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141883987 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102139706 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130250516 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091238076 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129286206 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120815633 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114096704 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160987339 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091778702 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129138797 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094663774 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132353029 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121767482 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110402125 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130490286 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091653709 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125667792 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090341247 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121439402 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106205539 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123159851 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094925303 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131241426 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126946518 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104810656 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12456064 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107523008 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122108069 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099110052 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121597882 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091520369 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120591051 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113444583 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122789789 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16099216 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09195766 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123491209 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100105763 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129550971 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127076973 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092712433 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137298971 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101926064 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124921341 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100817205 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12529718 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09367696 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139523659 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093759398 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123353019 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092181471 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128668018 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123899939 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093524471 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135985544 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092152975 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125015888 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110076237 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121912431 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093101201 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128282252 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12626949 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092186869 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136412883 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098182436 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122544484 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101907261 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121691157 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094616714 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132231737 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126174473 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090718274 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12583795 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098361281 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122541737 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093031729 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124829838 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093558413 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132601967 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098856066 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126686106 seconds)
  done (took 14.755278928 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227163506 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212761096 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204631015 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.289853533 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134700101 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112398896 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209905123 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155150169 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123316724 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159345742 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172984408 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180390693 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167518874 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180166179 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169810384 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.091926106 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14144895 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132075625 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.242873436 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256355782 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143325235 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100004983 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159428366 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15967411 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135911808 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.100970278 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139541686 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133141836 seconds)
  done (took 5.758248301 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107662635 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155186098 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097936714 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144038045 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149343452 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093109892 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127200738 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093179647 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134750309 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135257861 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091853314 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129485452 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099495538 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131757752 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121848108 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102945565 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131070619 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094626531 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126072775 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095776583 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133124667 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101033473 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126335399 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090936118 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.131838872 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120856768 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08577116 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141990752 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091720801 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.143872341 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12007464 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101237207 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135471351 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092533488 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122572262 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094476867 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125458484 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093683839 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124612653 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091021206 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122163076 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076916421 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121264299 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105890588 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128242393 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079239602 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129578395 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098098595 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.12325145 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119468791 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096525233 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124540346 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096904396 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130743539 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095638432 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12354399 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096144881 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115448416 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099700104 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125295981 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084519149 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090777398 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127116656 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116808005 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101285851 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127355882 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091507213 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125447954 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096716761 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129355232 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094733814 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129073279 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090820468 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125657044 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095787403 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128256974 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096265131 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121759519 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092248652 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122655073 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074678169 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123487318 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073580106 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126314679 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092170699 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121270861 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094019026 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12891082 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136472415 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09503001 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131000624 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093875223 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121885786 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095679008 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11325791 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096282617 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139329145 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139870132 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093141189 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120815262 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107073158 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12590051 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092877481 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10577213 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102106043 seconds)
  done (took 12.899163392 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127098989 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15346547 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094335427 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141829892 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156881772 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156643768 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10062455 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130650309 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09471784 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14182777 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093703535 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132242616 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092797735 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13692145 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156951696 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103378855 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124166943 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108013322 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127464174 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169051545 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110780142 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142823173 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110136581 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124556569 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098331254 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140529935 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161407068 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106618498 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136805766 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141237593 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107539356 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160515017 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112883027 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127201744 seconds)
  done (took 5.464098897 seconds)
done (took 49.527769759 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.205423239 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.421099689 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198745789 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.144304439 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.217645549 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.207306248 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.227544746 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.204884946 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.796248909 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.203541681 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.44237772 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.893279231 seconds)
done (took 60.295176454 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.249029487 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.337600169 seconds)
    (2/2) benchmarking "String"...
    done (took 1.464509179 seconds)
  done (took 3.930210814 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.55388362 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.159545234 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.464886839 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.199313195 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.204403569 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.492321785 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.873546847 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.55589884 seconds)
  done (took 28.077187073 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.208115986 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.285549118 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.228236306 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.207475446 seconds)
  done (took 6.059141791 seconds)
done (took 47.999090752 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.217185836 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.269819311 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.20834531 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.19060305 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.313519823 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235508204 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.578005751 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.23113068 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.216695943 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.187478694 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.219552593 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.202218575 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.208858343 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.573641759 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.203263522 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.205512091 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.261210101 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.731935822 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.612545383 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.211145337 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.223828706 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.214127096 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.202028427 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.207695163 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.275040993 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.209463673 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.200599432 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.229569043 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.85380159 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.211491606 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.217304164 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.761530142 seconds)
  done (took 191.013451725 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.20171327 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.315047867 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.407939311 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.246766685 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.642217521 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.413181568 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.364195344 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.719948297 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.225917389 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.228060574 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.431216776 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.207854415 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.507837061 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.181442329 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.231815109 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.304760931 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.40224464 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.512532219 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.259034264 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.410701076 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.210291492 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.432712282 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.339132269 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.395494225 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.241136711 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.260277582 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.218822098 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.202490408 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.395729783 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.343454613 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.257635098 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.21359216 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.838045821 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.06629086 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.205153157 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.231479162 seconds)
  done (took 150.195998188 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.254544468 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.202163055 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.203897041 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203589372 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.236975789 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.20273017 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.794983853 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80004091 seconds)
    (8/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.208939903 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.712961947 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.646484699 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.212371528 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.613360213 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.474692519 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.203071426 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298604598 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.216834859 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.203991301 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.219604379 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247751398 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20957625 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204794797 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794338494 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.221999253 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.256861663 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381750384 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.220921904 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236465827 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.595004757 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204323591 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237475609 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537120441 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.254429605 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205204029 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.58954208 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.018380346 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204877336 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318984147 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.204405114 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206256278 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237740776 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.204605454 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.486325028 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205654887 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205761707 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208263079 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.868176991 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.205100778 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.7983598 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212061522 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.168467412 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20517166 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206989183 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.564394665 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.857529997 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.222203589 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.20614611 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.208764318 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205520126 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205564786 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.23972008 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.54863045 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.306752747 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.22439805 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.210565791 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238421163 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.20591604 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.236422636 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206098252 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.725426095 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.281823522 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.424478479 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799510884 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21385777 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306579656 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329362947 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.207537772 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.206387355 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206928965 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206464598 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.319538115 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.206763645 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.638333247 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.385810127 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.225175738 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.628713596 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.311055285 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208106088 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.612499473 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.213606299 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.208215957 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970894462 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306030623 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207684799 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20813919 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208199599 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.642494647 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.804236415 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.494234122 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.213833168 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.598801134 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.213934195 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.657066801 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.774075848 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.868819614 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208721886 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320919028 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.387501628 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.226715688 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208451344 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.631434285 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.214347689 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269056122 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209293026 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.609294434 seconds)
  done (took 367.56281386 seconds)
done (took 711.153910793 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.811195475 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.804938835 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.914068077 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.799657677 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.763173165 seconds)
  done (took 10.230742757 seconds)
done (took 11.367406163 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.401250444 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.40620152 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276646526 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.407531323 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243972236 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.424241941 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384794204 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.235198153 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.311748834 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.296240992 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.311648303 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.268236056 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.237503766 seconds)
  done (took 18.343059351 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.525148415 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517277895 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273668101 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525440264 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250377055 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.525076963 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407557808 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420727801 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423748259 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244795337 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224079351 seconds)
  done (took 16.477592329 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534481102 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.530481298 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277789784 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.541690356 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251742943 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.557182991 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413509385 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425265494 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429303647 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24383574 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224991411 seconds)
  done (took 16.569163334 seconds)
done (took 52.525870698 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.220655212 seconds)
  done (took 2.359864437 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.256582397 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.417510072 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.242612292 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.226994731 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220840352 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222496575 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227276895 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220992278 seconds)
  done (took 11.175285589 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.221152339 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220948723 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.217092444 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.22065756 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217739297 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.217906111 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.220603569 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.221032499 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.220819438 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.218325536 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.220521138 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.217861632 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219166681 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.22190048 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.218983371 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219132083 seconds)
  done (took 20.655053866 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.221711322 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.219188934 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219262689 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219775688 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218708994 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.220516223 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220186675 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.218753648 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.218887209 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.219556924 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.220093564 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219493487 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.220873221 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.218585837 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.219649775 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221185095 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.219522395 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.219347613 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225009443 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.22032613 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.220826718 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.22031567 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219751691 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220940334 seconds)
  done (took 30.426388722 seconds)
done (took 65.755634562 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.452600974 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.999342277 seconds)
  done (took 9.593992612 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.222687154 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.221856657 seconds)
  done (took 3.589994571 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.22132936 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222913336 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.221953739 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.222205593 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222665417 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.222507912 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.222234882 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.222763845 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224014949 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223314622 seconds)
  done (took 13.368924498 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.224013622 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.223291962 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221978578 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.224730096 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.222450762 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221547625 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223144918 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223028025 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223685886 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.221523723 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.224110505 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.221357643 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.223560658 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221867814 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.224497418 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.221159727 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.221710802 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.220877192 seconds)
  done (took 23.152226769 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.224153527 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.224758371 seconds)
  done (took 3.592452091 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.222243558 seconds)
    (2/7) benchmarking "second"...
    done (took 1.22311123 seconds)
    (3/7) benchmarking "month"...
    done (took 1.221606459 seconds)
    (4/7) benchmarking "year"...
    done (took 1.220853729 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.222007344 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.221058938 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.222993306 seconds)
  done (took 9.697771682 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226374898 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.399299707 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.479232751 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.84072038 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226442307 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.228999052 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.107234115 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.228463325 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.234078425 seconds)
  done (took 14.116568045 seconds)
done (took 78.253432989 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.253046225 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.23718465 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.43772523 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.230233275 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.235791767 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.520694505 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.255338898 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.353651991 seconds)
done (took 37.668956801 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.232164751 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203493917 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.004567176 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.200180126 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.26478821 seconds)
  done (took 18.818901191 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.288738338 seconds)
    (2/2) benchmarking "read"...
    done (took 1.561253533 seconds)
  done (took 4.996546742 seconds)
done (took 31.193330481 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22603287 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.223384086 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.225758976 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.22468878 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.227011915 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.226658443 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.223654809 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.224131655 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.226413962 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.227106991 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.226636675 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.227460658 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.227742939 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227461928 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224599129 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224502412 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227353806 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225902627 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224716332 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225585464 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226883485 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.225341769 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.22540245 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.225736023 seconds)
  done (took 30.566765734 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.227635694 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226153625 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.228181117 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.227950018 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.226209035 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.230102345 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.227796198 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226150736 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229051226 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.227823316 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226897941 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.225520283 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.228234988 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.227638539 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228626668 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.22546676 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.229704637 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226277596 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229288941 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.226987336 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.228927229 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22658024 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227135346 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230358675 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.226363433 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227297753 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.228805624 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.227831888 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229545959 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226694827 seconds)
  done (took 37.979566122 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.235738049 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.235364795 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.229785273 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.230114091 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.229253177 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.22942507 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.229907118 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.230603624 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.23001031 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.231356569 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.229863961 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.229502393 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.22980903 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230185664 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.228964924 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.230032556 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.230824975 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.230886134 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.230959814 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.22953802 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231007772 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231393255 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231021896 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.23090434 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.230918503 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.231694317 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.23135287 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.230733772 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.231055261 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.230639748 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.2310913 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.231901316 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.230290859 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23033101 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.232279479 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.231546437 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.236257295 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.239339523 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.231511029 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.231439497 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.231472291 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.231691229 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.232773056 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.23260643 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.232104189 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232814897 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233144616 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.232628292 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.232100528 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.232279565 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.232071993 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.232567227 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.231819465 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.232360582 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.232827264 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.232653973 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233558072 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233696542 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.232519633 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.233517365 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.232786246 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.233179424 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.233601384 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23260293 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.233556175 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.232993519 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.23247024 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.232999175 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.233409425 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.233742908 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.234458688 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.23384265 seconds)
  done (took 89.850555545 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.234534986 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.232798838 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.230757973 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232034795 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231283378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.233229352 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.230995837 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234280639 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231294228 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235060982 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234572974 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232692492 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232422807 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.234642051 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234835666 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232262645 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234009661 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23242623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235261872 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.235448692 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23557318 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232707844 seconds)
  done (took 28.286096183 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234964507 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236701028 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.233738775 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234159377 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232436026 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235524932 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.234958309 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238781821 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236289756 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232430421 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233767822 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235388708 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233680026 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233465789 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232915978 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234794155 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23680988 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235488335 seconds)
  done (took 23.380632253 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.234318845 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.235039567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.23730122 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233992112 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.234671547 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235928162 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234376319 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236953519 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.236202747 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.233988244 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.23716609 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236990135 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.237086281 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234801562 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236645557 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236376535 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.237149318 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234606972 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237885999 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234306525 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235347002 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238382817 seconds)
  done (took 28.344911667 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239255023 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23714522 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.235649179 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.235426608 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.234836111 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.237989408 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.238231675 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.235939497 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.23946519 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.238960683 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235797461 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.238283473 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.237328565 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236999231 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235742793 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234977071 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.239583788 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.236483593 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238233378 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.235459592 seconds)
  done (took 25.899377766 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239627208 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240201355 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239631184 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23912576 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239919529 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239991408 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239245651 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240235321 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240459018 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.241481191 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238914189 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240818271 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241607891 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240555391 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240351512 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24034719 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24068191 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241622749 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241312888 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24056338 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240997032 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240602469 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240029744 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2409145 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241501227 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241152086 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241400106 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241935102 seconds)
  done (took 35.894160377 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241892034 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240700388 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238637769 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239428593 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.239004383 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.23806062 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238982184 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238630566 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241581196 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.239262241 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.242660923 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.24077598 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244058672 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.242136049 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.24223268 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.2429025 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242195103 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.237457442 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241345239 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239389141 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.243679072 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242211656 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.242475201 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240986712 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240411181 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.242396627 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240069739 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240465003 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244179104 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23914089 seconds)
  done (took 38.388675796 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.26307038 seconds)
    (2/2) benchmarking "in"...
    done (took 1.261385919 seconds)
  done (took 3.686288157 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.240067602 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243926277 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.243138225 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240432672 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240683333 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244174689 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.243504195 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241647001 seconds)
  done (took 11.099021031 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.244418258 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.244702763 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.243856593 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.244752661 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244008249 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.243306955 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251114202 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.264677568 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.24472653 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.244913783 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.250929237 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.251037145 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.245924784 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244013607 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.244508193 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246997945 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.244337431 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.245890188 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.244725444 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.246377918 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244908839 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246827831 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247169263 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.242891532 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.247090795 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255267839 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.268747727 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.24567354 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244420987 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.247625666 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.245948388 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.243238347 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.246017523 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.252750956 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.246479589 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.24583661 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254367756 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265556432 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.250434132 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26700237 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247753384 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.244250663 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246236309 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.248643822 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248442955 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.2469254 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.246524166 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.244954009 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245560042 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.251239001 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.252129382 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247133437 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.244798462 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249814741 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.248612813 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253921994 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.267911385 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.251857524 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.256117386 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.258431882 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.279605723 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.272214756 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249648628 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.247375885 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259432945 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.272484587 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253364074 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.265022732 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.246901419 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.248891957 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.2542097 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280457796 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.274665269 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24886052 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247329996 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.249696132 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24855833 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249681332 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254033783 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.27096777 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.248032218 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248897528 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259607837 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271963519 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.249146216 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.249505719 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.248600041 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.249689554 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.250331251 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260720261 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.269259953 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.249841099 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.249403109 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.248835778 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.250296598 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.249826737 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249668014 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251089516 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.249571832 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.249994689 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249892681 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25388324 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.259492772 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249911136 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251061204 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.257065748 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.270572609 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25000632 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.256824211 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.250794819 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251680067 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.253618209 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256852094 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.249041138 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254118521 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.25996019 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.25079773 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.251485822 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.250781714 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.251651394 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260627262 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.276084999 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.252815095 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.251668347 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.257236433 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.263158471 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251968941 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.254544568 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.252709813 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.249466502 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.250274149 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.253485654 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.253021705 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.253120479 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252976331 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252926606 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.248800931 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.253546935 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.252615422 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.253228626 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.254397128 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.253058917 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.254040526 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.255310893 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.253363266 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.253850887 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258731545 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273190889 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.254383841 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.2541041 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.251108126 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253550332 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.254138353 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.253118296 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25366041 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253723889 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.254480202 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.25515203 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25367407 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.254890356 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253850033 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.255642146 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258888864 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.255076738 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.258053885 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.253265882 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.251520731 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.255624555 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.255403562 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.254898618 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255706309 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.253960225 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.257525755 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.263246693 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.255528688 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.255207907 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257407655 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256023743 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255407114 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255216687 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.258601559 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.263408895 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.254973025 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.260451825 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.276400421 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256807717 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.256575371 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257006786 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255752991 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256296031 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258841525 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265548778 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268901235 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281958578 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.257756207 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260105729 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.257260866 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.261697063 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.259395722 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.256875662 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.256514073 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256595676 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257461064 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256660159 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.258606087 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.257951256 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256085021 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.257875595 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.257583253 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.25715373 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25803145 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.257949618 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257560352 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.255000599 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25763371 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257692032 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.259195811 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.256892208 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.25623178 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.258005463 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.258414465 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.258266574 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263682398 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254836346 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259243254 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260095301 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.258807939 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.257647728 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259000201 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259705178 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.258247364 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265359982 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.279396717 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.259473939 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264821926 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.278908199 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.258170515 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.262535264 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.258960584 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.257873707 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.262732355 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.267661949 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.25968102 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259626155 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.259653999 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260077487 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261468616 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.265598198 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.278552771 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259335601 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260685397 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.262356816 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.258505834 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.259133571 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260800988 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.261267774 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263028434 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259625093 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.26052044 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262854437 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259414249 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.260526481 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.260967117 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263989323 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.269124892 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.264970878 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.260784292 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262869404 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.261152463 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265442804 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.261889587 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.261422825 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.2616415 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272801074 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.28760634 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2681049 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.281875607 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.261923908 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267180169 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.283458104 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265678779 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262494936 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263098118 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.261488127 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.262322085 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.259850713 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26167638 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.262877982 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262940611 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.264099337 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267442232 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.263167385 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.262631963 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.262532525 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.263750416 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.264759584 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.263158436 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.263889164 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.266161851 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265614197 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.262753969 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.264639397 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270498686 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28331376 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.26387935 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.263843747 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.26392774 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.263050531 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.265350847 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.264259814 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.266748472 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.271170776 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.266311303 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.273265036 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.266090842 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272597504 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.264313573 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.266445031 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.27203656 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.262545924 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.263612767 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.264356947 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.265985669 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269779387 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.285270709 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.264523395 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.268312759 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265383799 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.264635911 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264258226 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.265633125 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265637977 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.264875891 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273052587 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286261489 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.268639236 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266263757 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.263625951 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.266477123 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.266982952 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.265342403 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268418548 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.265766034 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.266267791 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.266305256 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.2652758 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.267474372 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.265868966 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.266979281 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.263739584 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.267215084 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272707187 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.288121317 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270192205 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267283051 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273555696 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289412213 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273169108 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.288808379 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.267396318 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266182255 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.267570351 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.269103402 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.266818556 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.267627658 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267238163 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269848337 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.272963629 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268052536 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269532776 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.269599423 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.268429246 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.267772587 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278532709 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291470602 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269476701 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273046291 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.265881476 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268926751 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.272323672 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.267482723 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.267438397 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272392848 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279836726 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276634204 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.268856806 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.270133348 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26950184 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269960219 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.270930358 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.270332017 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.269553388 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.271118281 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270693968 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.271369755 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273447014 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.271457703 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.272868028 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273366967 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.271644696 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280359567 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.291631302 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.271079928 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270643052 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.27198884 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.269839532 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271285396 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.270177201 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27116706 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270269552 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.271769554 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278064633 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.278569498 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.272811254 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.271174924 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.270976974 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.270356927 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.270587848 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272045948 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.271696559 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271577581 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.272112092 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.271346588 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.271924746 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.271876191 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.273097254 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.272208308 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271918305 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274876206 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.280084209 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273861342 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.269507831 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.272573114 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272832185 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272067957 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.272703243 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279903643 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.298415845 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.283442284 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280238526 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.276803292 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.274655179 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27719919 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.280993858 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.270971198 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273424801 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272856938 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.273519651 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.274071306 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.27686636 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274671682 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.279010711 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.294442416 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.272274602 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281667607 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.295100513 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274014834 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.27563745 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.277557846 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273909588 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.271646204 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.274150944 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273821519 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28064106 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.295607914 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27388235 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276967669 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.273681699 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.275807703 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279247912 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275224919 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.277039165 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.274258686 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.275863646 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276474259 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277068539 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.273394119 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.273930261 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.275301329 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.278430522 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27998029 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.273291096 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277087108 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.276129472 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.276337293 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274803339 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275325033 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.274334568 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.27304772 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.275715034 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276674167 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275737532 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.277721731 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275828347 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278395641 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.276675162 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277693818 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279789774 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.286790328 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.286694981 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.27465905 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276148465 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.277159294 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.278908812 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275299562 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.275661914 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27744447 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.277727619 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.278282655 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276790356 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.27724825 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.281378769 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293466642 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29600062 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27781902 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.276898877 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279872176 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.278863931 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.275760208 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.278479686 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.279546848 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.281063612 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.286403273 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.279139339 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283691251 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298255054 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.27967629 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.283496836 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.282453435 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.285732256 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.280589575 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278641751 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.2785814 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.284044383 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.296858895 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278749111 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289350366 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.308758136 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.300967218 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.280203485 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.279043699 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279924203 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.280580549 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.281513623 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.28129733 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.280048783 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280749221 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.279005503 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281108353 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284356422 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.280944101 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281951911 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.280274544 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279009525 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.280701247 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.278136802 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.280499929 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.280702603 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.280424926 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.280448099 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.280615878 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.28040213 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293017318 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.309545136 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.281534863 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.280687125 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278305867 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.2837174 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.282854825 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292043613 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288882803 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.280720648 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.281726018 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.282716849 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281298803 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.28053369 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.282755194 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.281821252 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280965603 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.279302617 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.296794451 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309397472 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.285290734 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.282224561 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283023327 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.282331576 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283438872 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283344199 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282280609 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.283402483 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.28539024 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285766536 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.283165621 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.282343512 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.286452494 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.290011211 seconds)
  done (took 755.955841813 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281687839 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280118563 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28083733 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280923409 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280537254 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280459865 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281242428 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280088789 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281543368 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281197429 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281585222 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280506441 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28133204 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281596056 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281416543 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282527726 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2812543 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281521081 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280583405 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282250431 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283371393 seconds)
  done (took 28.1053754 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.284926973 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.281410889 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282966889 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284574305 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282370093 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28478706 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282845167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28543626 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285894829 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282668415 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.285378492 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285908813 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.283363513 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283835265 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284651022 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286030391 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.285259778 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283259148 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.286355968 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284266569 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285453474 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283161387 seconds)
  done (took 29.454551528 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.287427892 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.285276161 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.285800516 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.283114307 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.286048168 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.283093953 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.285442465 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.28645986 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.286724703 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.286815381 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.285755171 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.287890739 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.293116759 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.292266214 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.288754498 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.286413678 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.431170818 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285799506 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.286588063 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.287702139 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.285237295 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.292054753 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.307180222 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.284507169 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28481025 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.28712087 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.287764393 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.28750509 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.286744838 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.288501822 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.290612751 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.287588756 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.286711847 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.289809367 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.286808379 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289483759 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.290867677 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.288418757 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.28451596 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.288130366 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.298575363 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.308928705 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.288485852 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293728179 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.310750969 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.289440846 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.294057093 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.296040935 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.287282397 seconds)
  done (took 64.52505425 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.290061876 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.289275943 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.288344332 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289367601 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.289845131 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.289534479 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289102637 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290327219 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.287321627 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287100656 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.289694923 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.287810267 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287262454 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.290770096 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289501821 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289584166 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287260595 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287668855 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.288567339 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28669133 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.287298745 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.291174819 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.290374098 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.28915987 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289226303 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288037885 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288223768 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.290622429 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.289487823 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.288825243 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.290237336 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291403528 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.291629025 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.28892158 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288799721 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.291672806 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.290185579 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28947492 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289833858 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.287623494 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292556179 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291604275 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.290975056 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.292667568 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290223384 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.28905535 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289102826 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.290206393 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.289780848 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.291891298 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.292142971 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.289263274 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.291002573 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.289648359 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292095232 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.293577294 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290403406 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.289343842 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.292102442 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.290265772 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.289655383 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292349435 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.290268155 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.292993936 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.292917346 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.291434783 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.291081548 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293371381 seconds)
  done (took 88.92521219 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292405549 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.292507708 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291857179 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292585915 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2930504 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.293935502 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29233432 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.293131626 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294242664 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293339267 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293531664 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29528561 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.294337212 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292350982 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293062517 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294241826 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29246344 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293049955 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292068718 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294445821 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.293062193 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293746612 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.293088296 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293972901 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.29451732 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293234293 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293331736 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294808127 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293912977 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292686159 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29466071 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.294746721 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293252275 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294056836 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.295503422 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.293812943 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293738272 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293922863 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.29532541 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.294573681 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293688156 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295938207 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295753491 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.295463666 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294142275 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29496695 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294079324 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.295578743 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294556077 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29470706 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.294928659 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294910892 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293934781 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29575031 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294850615 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.295343004 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296029522 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295047797 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296350899 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.295324808 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295260292 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.296576448 seconds)
  done (took 81.446770175 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296593597 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297949641 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.294536607 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.295429453 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296559855 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296199539 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297361498 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.297081384 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297686719 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.298181744 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296657492 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294682935 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294402734 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298637571 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.293833494 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294699964 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295693698 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294076418 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296729175 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294807434 seconds)
  done (took 27.13382343 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.295603443 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29757209 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.296180332 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295857102 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.297913639 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296319918 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.298329284 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298887206 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295690163 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298038378 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298246323 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298315881 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295339841 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295808475 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298172674 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295815509 seconds)
  done (took 21.963112956 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.295889211 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296993435 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296638492 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.296633931 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.295170077 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.294251185 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.298133384 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.296411057 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.292680134 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.296786424 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.294583786 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.296628558 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.295895429 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.29605165 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.293535841 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.298270255 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292857454 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.294290514 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296589045 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296965866 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.294245273 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294036014 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.296316079 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296023904 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.293277071 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.292911575 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.292871412 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.293612791 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.294912255 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.297103419 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.294284207 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292910737 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.293003555 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293479736 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.294241444 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.293516745 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.295662013 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.295800462 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.296780914 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294808589 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.29651719 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.294600668 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.29576991 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296438979 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.293009909 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.298111952 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.29376393 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.293931963 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293834246 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.294031674 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.296898344 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294736306 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295557692 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.297389014 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.295785004 seconds)
  done (took 72.449490886 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297942726 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297063691 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29505784 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297857559 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298357085 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.293468077 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297213728 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295875289 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293252792 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297168832 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295967634 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298122118 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294356895 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298565113 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296732404 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297903078 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295477355 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296924024 seconds)
  done (took 24.546531377 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295775123 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296181102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.297857297 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295117308 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.295043322 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298335005 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296491573 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.298394267 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297578033 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.296367916 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295876385 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.29941968 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29772553 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.299241962 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296078528 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296005011 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.299297236 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298129668 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296001535 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296937065 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.299213116 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298927865 seconds)
  done (took 29.750813581 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.29750226 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.296993738 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.297794562 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.314389799 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.317578095 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.320453011 seconds)
  done (took 9.0573954 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306875726 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298748806 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297092853 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299932905 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299921161 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296403326 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297927211 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297034937 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299139319 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29676141 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297667666 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299762971 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300139491 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296770268 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29866994 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30049194 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296483397 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297123019 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298655157 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299869226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297780117 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300256978 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296940202 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299028135 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297076155 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298596215 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301799224 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299499503 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297886508 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300916307 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299941432 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297832009 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300324878 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298265674 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301785938 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301260276 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298313223 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301898134 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30047139 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298267361 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301088339 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300600331 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302592448 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299529222 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301551743 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299692459 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299719855 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299418576 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300026768 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303521676 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301462699 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298549934 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302547635 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302814762 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301796018 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302711933 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30055525 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299704984 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303002569 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301847094 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299944413 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302658359 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299323432 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301187316 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302119869 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300398447 seconds)
  done (took 87.029927737 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299373007 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30054914 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302018638 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302409763 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301791752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300045116 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301823478 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301432507 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301729187 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30150731 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304602417 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301641021 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301571786 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301741781 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301197964 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302275745 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302523287 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301979208 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301488458 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304524185 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302469921 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302810998 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302687941 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302041029 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303285352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305782453 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302194909 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301873045 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303693326 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301763382 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302634876 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301079843 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303316947 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302981284 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30233715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304189898 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302570173 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30304703 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303930659 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304927582 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303304901 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306420289 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304335634 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305063817 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303215647 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303481854 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304026404 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304093995 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303593496 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305740762 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303628475 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305322108 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305763242 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304721785 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303905846 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303935409 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304015756 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304231797 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303910558 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306423515 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302661328 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304335116 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308525865 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304797626 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303534404 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304769212 seconds)
  done (took 87.23206359 seconds)
done (took 1762.09782809 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.290506512 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.331389914 seconds)
  done (took 13.841644033 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.465667279 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422098796 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303340645 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.302614654 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303834735 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.318593105 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.299475607 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303547303 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304275685 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.304256452 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304818805 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.492880091 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.358190521 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.306263129 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.304585585 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.398431389 seconds)
  done (took 42.713615945 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.334953575 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.311826499 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.429428046 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.337081475 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.333117213 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.502930094 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.369982002 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.310050327 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.491829103 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.358284104 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.941760186 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.334020293 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.31010552 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.469392253 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329133857 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.501486598 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.5702656 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.940738516 seconds)
  done (took 30.397121791 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.789550446 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.32928112 seconds)
  done (took 9.338861008 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329997453 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.310780992 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308904496 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.306999338 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.300577079 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.299814786 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.307222072 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.318240979 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.128124043 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.446036457 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.310110348 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.314524553 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.327413229 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.30919242 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.306161667 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.344906067 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.463567385 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.307352856 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.305076996 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.314544652 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.30774936 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.431061887 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350726611 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.306975343 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.441718861 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.13589977 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.317399881 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.314603885 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.444943851 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.307657103 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.309045312 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308366 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.309696587 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.92065036 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.785285149 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.317609434 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.3335166 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.318985353 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.308550585 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.500866567 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313388979 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.316351964 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.30169547 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.797979639 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.442297536 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.429350049 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.59047885 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.329133947 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.313435566 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372813052 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.310052156 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.311285933 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.339355956 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.077556547 seconds)
  done (took 110.603460988 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.351705986 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.691786265 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472834201 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324988025 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.143568065 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.107170544 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.327351988 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.605349118 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.351086446 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304025194 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.603464634 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.835603071 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.328402157 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.362955861 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.901404551 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.350427374 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30279716 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.226461798 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.326154445 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.306819193 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809219942 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317386715 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.303632386 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.420813819 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.341158405 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.76808258 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.746659869 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.865477285 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.327820439 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.302802373 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.792677763 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.331613092 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.357359297 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.304641601 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.570723708 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.670981692 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.662375695 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.329427326 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.325034719 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.310081135 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.3179482 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764111738 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.669877048 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.319749801 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.305809288 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767034068 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.322112522 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.310097821 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.305155229 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513292771 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.033006324 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.306176916 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.735669315 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.304994207 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.596923999 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.338919549 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.345254 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797736193 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323852278 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.487627816 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.35788806 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.304802743 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.315051349 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3104034 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.307009291 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.662128023 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.41247148 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.306666932 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.659118526 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.799522876 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.323778093 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.844226978 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.150616936 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.32854579 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.369681711 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.305816422 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.012709737 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809951225 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.347780895 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307072699 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.647426314 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.327388428 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.588518995 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.323804862 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307624676 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827007195 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.318889743 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.359509778 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.306489876 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.324909377 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.086634799 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311217202 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.596538981 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.34665579 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307371946 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.307330609 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.338847635 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307856116 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.3073956 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.315407504 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850420793 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.331642537 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.287964278 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.332986553 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314710281 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.308038397 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.308895283 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.308849409 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535480663 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.805561932 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.337725904 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.312454086 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.31689671 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.318028661 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.435053076 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.313265842 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.641664791 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.333589623 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308904845 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.317435111 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.113142302 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.35405296 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309443099 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.327677149 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.247350583 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.521258815 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.327372264 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.309062563 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310601305 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328797742 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.574457901 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330022116 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.382529943 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.316323271 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033849207 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.376630742 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.346799603 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.695500083 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.317403708 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.210743433 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.333771771 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31360416 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604231914 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.582615381 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.331248056 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.311833652 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.334274469 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.012724839 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.34245097 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460251202 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329022015 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.295079928 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509235478 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.914964603 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.313252731 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.900506216 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.3112702 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.531193041 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.320713764 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617779104 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.828000179 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334654008 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.312471593 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.044129504 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.020317774 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.071262235 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.316606315 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.591145292 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.283892561 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.775858255 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.312281924 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.312486691 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.913149315 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314603191 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.32188229 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.31306234 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.312353445 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.374222553 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.486741551 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.722264698 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.312523387 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.773407673 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.374315937 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313227901 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.318878741 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319183784 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.659866462 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.379435495 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.312667151 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.354693342 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.314535701 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.315204941 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79552812 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.26515181 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.320160979 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.467000435 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.963517086 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.336791007 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.315632304 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.977210867 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.697176121 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.869315872 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.370853015 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.639456748 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.335432421 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.352910849 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.039414657 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.387835701 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83697722 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.332930926 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.321726835 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927260051 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.333137567 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.398065122 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.315242907 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316489078 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872190345 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.333262595 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.315008383 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.585873351 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.333781763 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595160885 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.316807186 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.316434236 seconds)
  done (took 1107.687756007 seconds)
done (took 1315.803096562 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.317111884 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.316763204 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.312296254 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.325008513 seconds)
  done (took 26.507482573 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327098833 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.321867333 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.324724105 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.321971204 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.324141128 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.322591101 seconds)
  done (took 9.17991988 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.339639913 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.324748892 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.323118883 seconds)
  done (took 19.223303947 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.536039443 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.660082312 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.694677658 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.636312047 seconds)
  done (took 10.765310955 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.32459205 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.322942775 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.32470198 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.325599421 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.328227666 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.328573494 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.326552476 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.326510196 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.328585394 seconds)
  done (took 13.171681612 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.33006834 seconds)
done (took 81.411673736 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.301024925 seconds)
    (2/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.298186684 seconds)
    (3/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.409686044 seconds)
    (4/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.306205803 seconds)
    (5/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.301880936 seconds)
    (6/286) benchmarking ("sort", Int8, true)...
    done (took 6.32515773 seconds)
    (7/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.439884543 seconds)
    (8/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.318765525 seconds)
    (9/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.976444096 seconds)
    (10/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.345709476 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.208820406 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.597902016 seconds)
    (13/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.794284065 seconds)
    (14/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.872548301 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.367752446 seconds)
    (16/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.404173191 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.341607263 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.34656509 seconds)
    (19/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.536914544 seconds)
    (20/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.195870326 seconds)
    (21/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.338297442 seconds)
    (22/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.305134323 seconds)
    (23/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.382077985 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.368950988 seconds)
    (25/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.44488379 seconds)
    (26/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.69117728 seconds)
    (27/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.100944026 seconds)
    (28/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.339531442 seconds)
    (29/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.244581649 seconds)
    (30/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.222559812 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.331810939 seconds)
    (32/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.446029042 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.06195061 seconds)
    (34/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.852362601 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.424769261 seconds)
    (36/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.570877164 seconds)
    (37/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.435132395 seconds)
    (38/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.300866933 seconds)
    (39/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.428809939 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.261961539 seconds)
    (41/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.301052226 seconds)
    (42/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.101558245 seconds)
    (43/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.331997891 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.33698597 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.087326959 seconds)
    (46/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.892556293 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.447861797 seconds)
    (48/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.300464252 seconds)
    (49/286) benchmarking ("sort", Float64, true)...
    done (took 6.322409613 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.249849895 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.603353894 seconds)
    (52/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.385562148 seconds)
    (53/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.376768241 seconds)
    (54/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.717627259 seconds)
    (55/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.620144818 seconds)
    (56/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.302107663 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.434913205 seconds)
    (58/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.338413506 seconds)
    (59/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.302211107 seconds)
    (60/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.346787529 seconds)
    (61/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.346250572 seconds)
    (62/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.454400181 seconds)
    (63/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.322359718 seconds)
    (64/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.664823797 seconds)
    (65/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.584966104 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.82110084 seconds)
    (67/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.408231187 seconds)
    (68/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.533329433 seconds)
    (69/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.399331004 seconds)
    (70/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.328101688 seconds)
    (71/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.423375654 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 5.540579439 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.050960541 seconds)
    (74/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.134316631 seconds)
    (75/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.302664582 seconds)
    (76/286) benchmarking ("sort", Int8, false)...
    done (took 4.392867404 seconds)
    (77/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.167985718 seconds)
    (78/286) benchmarking ("sort", BigInt, false)...
    done (took 6.32394015 seconds)
    (79/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.554716309 seconds)
    (80/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.184583568 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.283405413 seconds)
    (82/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.304185802 seconds)
    (83/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.121236304 seconds)
    (84/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.449624893 seconds)
    (85/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.964929375 seconds)
    (86/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.334675938 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.323422674 seconds)
    (88/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.33726223 seconds)
    (89/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.337409 seconds)
    (90/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.34915864 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.272651527 seconds)
    (92/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.616889053 seconds)
    (93/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.368305503 seconds)
    (94/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.318949402 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.523047759 seconds)
    (96/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.55046002 seconds)
    (97/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.90834925 seconds)
    (98/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.341210543 seconds)
    (99/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.577936348 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.002660483 seconds)
    (101/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.312594009 seconds)
    (102/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.329867917 seconds)
    (103/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.312488431 seconds)
    (104/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.525985744 seconds)
    (105/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.508774698 seconds)
    (106/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.41023766 seconds)
    (107/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.365486611 seconds)
    (108/286) benchmarking ("sort", Bool, false)...
    done (took 1.857803792 seconds)
    (109/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.36882455 seconds)
    (110/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.582983322 seconds)
    (111/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.114646079 seconds)
    (112/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.453434796 seconds)
    (113/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.58201255 seconds)
    (114/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.352436889 seconds)
    (115/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.847609888 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.825399182 seconds)
    (117/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.306879026 seconds)
    (118/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.369482391 seconds)
    (119/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.345883665 seconds)
    (120/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.467578973 seconds)
    (121/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.326344848 seconds)
    (122/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.911076181 seconds)
    (123/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.86657077 seconds)
    (124/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.329607358 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.133876948 seconds)
    (126/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.353924876 seconds)
    (127/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335906246 seconds)
    (128/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.305643712 seconds)
    (129/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.338313912 seconds)
    (130/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.42159256 seconds)
    (131/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.353244469 seconds)
    (132/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.305510267 seconds)
    (133/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.333787774 seconds)
    (134/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.603188904 seconds)
    (135/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.325726216 seconds)
    (136/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.352751368 seconds)
    (137/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.368222473 seconds)
    (138/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.30703358 seconds)
    (139/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.306308958 seconds)
    (140/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.30641856 seconds)
    (141/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.345042243 seconds)
    (142/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.670374048 seconds)
    (143/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.438785439 seconds)
    (144/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.894920693 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.192122451 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.712289738 seconds)
    (147/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.369696422 seconds)
    (148/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.435751793 seconds)
    (149/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.176001918 seconds)
    (150/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.343210038 seconds)
    (151/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.830029972 seconds)
    (152/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.343833406 seconds)
    (153/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.229252212 seconds)
    (154/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.223403311 seconds)
    (155/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.333505804 seconds)
    (156/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.319363164 seconds)
    (157/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.668085102 seconds)
    (158/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.399976958 seconds)
    (159/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.558857174 seconds)
    (160/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.352797171 seconds)
    (161/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.982229526 seconds)
    (162/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.315718598 seconds)
    (163/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.725293191 seconds)
    (164/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.276949189 seconds)
    (165/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.387274474 seconds)
    (166/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.327927744 seconds)
    (167/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.496376488 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.738251899 seconds)
    (169/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.206372778 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.815084469 seconds)
    (171/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.321827742 seconds)
    (172/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.847027673 seconds)
    (173/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.43087517 seconds)
    (174/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.978168055 seconds)
    (175/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.156953414 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 5.428021123 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.402851018 seconds)
    (178/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.692958434 seconds)
    (179/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.4158184 seconds)
    (180/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.956799934 seconds)
    (181/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.319339016 seconds)
    (182/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.309935067 seconds)
    (183/286) benchmarking ("sort", Float32, false)...
    done (took 5.367865146 seconds)
    (184/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.373531621 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.736610059 seconds)
    (186/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.962757857 seconds)
    (187/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.010239093 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.002602066 seconds)
    (189/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.310031107 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.963480193 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.549046816 seconds)
    (192/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.202141397 seconds)
    (193/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.785650598 seconds)
    (194/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.523399561 seconds)
    (195/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.367261911 seconds)
    (196/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.310091703 seconds)
    (197/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.354364165 seconds)
    (198/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.356272329 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.065425224 seconds)
    (200/286) benchmarking ("sort", Float64, false)...
    done (took 5.674528154 seconds)
    (201/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.372308408 seconds)
    (202/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.797436534 seconds)
    (203/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.413088851 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.293263648 seconds)
    (205/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.357812274 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.75260025 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.025004872 seconds)
    (208/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.424535955 seconds)
    (209/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.725580782 seconds)
    (210/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.463657901 seconds)
    (211/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.339928152 seconds)
    (212/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.195390181 seconds)
    (213/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.986988024 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.437847888 seconds)
    (215/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.332098436 seconds)
    (216/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.014183333 seconds)
    (217/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.929200239 seconds)
    (218/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.809705411 seconds)
    (219/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.332319385 seconds)
    (220/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.730649694 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.016531273 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.440810466 seconds)
    (223/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.46049692 seconds)
    (224/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.424110237 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.311906861 seconds)
    (226/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.331646388 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.758143698 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.570660787 seconds)
    (229/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.372530642 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.982092675 seconds)
    (231/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.321156783 seconds)
    (232/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.366666637 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.694873808 seconds)
    (234/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.361800144 seconds)
    (235/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.705332003 seconds)
    (236/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.732042951 seconds)
    (237/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.453913291 seconds)
    (238/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.350293845 seconds)
    (239/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.174690032 seconds)
    (240/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.779033425 seconds)
    (241/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.606768959 seconds)
    (242/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.337932688 seconds)
    (243/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.359678246 seconds)
    (244/286) benchmarking ("sort", Float32, true)...
    done (took 6.333536114 seconds)
    (245/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.333755663 seconds)
    (246/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.34224547 seconds)
    (247/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.445195886 seconds)
    (248/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.313101485 seconds)
    (249/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.321534513 seconds)
    (250/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.741276081 seconds)
    (251/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.321594658 seconds)
    (252/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.998613006 seconds)
    (253/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.416752076 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.759195871 seconds)
    (255/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.991795932 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.424009947 seconds)
    (257/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.155674453 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.435601901 seconds)
    (259/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.361327734 seconds)
    (260/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.496383072 seconds)
    (261/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.707239832 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.452177424 seconds)
    (263/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.127417808 seconds)
    (264/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.18102383 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.185036856 seconds)
    (266/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.315308871 seconds)
    (267/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.389474833 seconds)
    (268/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.399816143 seconds)
    (269/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.879609466 seconds)
    (270/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.446420199 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.377183911 seconds)
    (272/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.31513573 seconds)
    (273/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.384308682 seconds)
    (274/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.338609525 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.352248151 seconds)
    (276/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.360528402 seconds)
    (277/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.45532418 seconds)
    (278/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.341055904 seconds)
    (279/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.370269015 seconds)
    (280/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.132061118 seconds)
    (281/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.400208834 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.359425184 seconds)
    (283/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.742796555 seconds)
    (284/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.724794518 seconds)
    (285/286) benchmarking ("sort", BigInt, true)...
    done (took 6.35983277 seconds)
    (286/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.363848443 seconds)
  done (took 944.236471029 seconds)
done (took 945.473971381 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.369566773 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367923726 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.348798766 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.370438842 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.461905046 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.376280095 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.358816102 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.351693415 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.39715339 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.397112297 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.34975454 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.37510474 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.352356544 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.350534655 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.350302909 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365940317 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.484679914 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.357573574 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.368079184 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.358943708 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.368201756 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.349447955 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.399655957 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.376005898 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.354444293 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353090582 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.355262868 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.370675428 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.463217118 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.355206246 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.352897321 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.362082365 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.48487172 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.35718588 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.347559439 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.371331 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.362961055 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.36013993 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.353796275 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.384816477 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.85883899 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.370298681 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.354736821 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.351596637 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.353189554 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.356237669 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.354012028 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.35921716 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367822253 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369041718 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.847879535 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.38698194 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.35685448 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.352376138 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.362963 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.354329408 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.355799958 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369798879 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.372871525 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371808815 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.470865626 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.365275053 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.354812806 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.369923083 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.361881694 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.886943613 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.365891792 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.357167295 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.860382887 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.37649322 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.887934107 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.381576681 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.35611612 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.370311978 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.385934975 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.484576034 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.355606107 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.353568885 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.363171217 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.353905605 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.364266522 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370437752 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.357423934 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.353537748 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370250171 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.381517798 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.365249118 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.357776484 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.363256109 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.375447801 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.363077131 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.366930861 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.358017037 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.3503592 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.36393677 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.359437668 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.360531823 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.359153177 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.360064101 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.367399991 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.864217123 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394621268 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35301947 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.352904122 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.354546001 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.371106481 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.867164147 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.376466891 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.377343843 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.403805249 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.357058946 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.473721175 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.367773868 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375146254 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.365858774 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.358855154 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.351915914 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.468931397 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.934739233 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.397239063 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.358636528 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.3560663 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376337974 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.359362299 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.35382018 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.487392905 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.364014824 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374417709 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.478882309 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.36766964 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.390289566 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.35696796 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.360984474 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.385287104 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376502429 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.389557593 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.360262427 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376986797 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.374480182 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.354407843 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.369825931 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.368939355 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.35904223 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.364444197 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.352559501 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.384253831 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374186191 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374025562 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.380632275 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.480904701 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.355625131 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.453136351 seconds)
done (took 230.198864325 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.419021035 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.349566307 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.438742601 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.353197761 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.455891266 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.457648276 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.351250011 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.353102849 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.351423052 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.73231992 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.352646245 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.352335936 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.353381824 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.352453135 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.438091306 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.353492651 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.351774572 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.700176143 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.353748224 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.427930529 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.353029137 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.353598554 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.355135707 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.739079928 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.348498056 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.349596209 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.432974171 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.356286043 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.702104375 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.349135435 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.349822123 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.702963826 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.452769007 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.37387937 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.364765564 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.362714289 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.458154678 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.375749124 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.436118939 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.43737947 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.441724119 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.394424366 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.3490282 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.35511585 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.358139964 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.356444364 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.35392112 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.383200614 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.35050472 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.354027139 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.697056159 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.367068878 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.364690214 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.358133085 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.3567969 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.376331912 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.355128075 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.357276647 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.447104452 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.358029636 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.427989549 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.797017963 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.736113443 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.357306454 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.352370935 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.356232714 seconds)
  done (took 149.978453444 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.423324368 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.429555087 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.472535067 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.375616505 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.40759331 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.477126484 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.375612521 seconds)
  done (took 11.227955803 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.363983662 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.359013648 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.407187186 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.407463592 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.356503312 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.504936263 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359952158 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.369314597 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.356761024 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.411371904 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.359896385 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359313475 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.365479313 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.357620076 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.406863283 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.369879595 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.472102777 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.359386156 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.359923065 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.508461269 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35696845 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.3670649 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.41073439 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.368792067 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.359857593 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.364008613 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.98297419 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359434539 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3575723 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.358923011 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358792452 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.396430503 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.359666661 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.358230649 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35683493 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.514024532 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.359411142 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357953029 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.3612185 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.35378913 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.361303965 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.359901098 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.362395886 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.359895233 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.361354446 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.383508376 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.36230041 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.362429958 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.360944606 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.362520678 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.412882093 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.360900316 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.357696671 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.359277685 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.416392337 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369524556 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.361809315 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.364653503 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360692902 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35821731 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.512239829 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.408414069 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.361062747 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.408090571 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362051585 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361113625 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.363552093 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.36311931 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.427124836 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.362807372 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.41147425 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.359944589 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.517270284 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.385925007 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.365914748 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.363849091 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.365200248 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362206152 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.363876394 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.367605661 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.359893972 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.363577408 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.368245907 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361733132 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359930125 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.494662655 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.490193194 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.361620078 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.374795832 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.368328265 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.361918172 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.417146556 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.363707652 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.362543051 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414748921 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.478118475 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.417316952 seconds)
  done (took 156.01845229 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.368138455 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.371835117 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.365384932 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.379688552 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.364534105 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.364007919 seconds)
  done (took 9.487202452 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.3677637 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.367794407 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.364660963 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.366094346 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.365116994 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.365635507 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.365203172 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366836912 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.368644065 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.366091345 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.365906124 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.366243116 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.366740511 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.36602286 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.364523951 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.36580297 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.365565655 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363575239 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.367178945 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36586324 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.462425666 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.365762286 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366124174 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.36680361 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.371304851 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.366788519 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.376011959 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.367381155 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.366480663 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.373953854 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.386730683 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.366930016 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.367386195 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.373564437 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.370490681 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.367823557 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371657509 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.367140775 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364681686 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.368690865 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.36844731 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366651347 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.367445444 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367563934 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.368800993 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372037995 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.372465954 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376722673 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.367598333 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.368653215 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.369098237 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.367527663 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.367597722 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.369279331 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.369186688 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390146818 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.373531515 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.368895037 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.36823012 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.369071043 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.370119577 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.36876355 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.37026532 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.373343961 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.376610344 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.370053933 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.369767727 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375568366 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368614834 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.369574566 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.371393551 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.367214073 seconds)
  done (took 100.944865327 seconds)
done (took 428.92339066 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.435022404 seconds)
  done (took 7.713236066 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.526728342 seconds)
  done (took 7.807088043 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.777859222 seconds)
  done (took 24.062293212 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.455028703 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.438228518 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.36230709 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.384864669 seconds)
  done (took 26.921426451 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.397157698 seconds)
  done (took 7.675938157 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.362007163 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.363123151 seconds)
  done (took 14.006764211 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.469122781 seconds)
  done (took 7.748245695 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.976721657 seconds)
  done (took 8.259996856 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.386986875 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.384566344 seconds)
  done (took 14.319225985 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.343504695 seconds)
  done (took 7.621801995 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.397299905 seconds)
  done (took 8.678875826 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.364530232 seconds)
  done (took 7.64680244 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.424663615 seconds)
  done (took 7.705779001 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.986427451 seconds)
  done (took 10.266129779 seconds)
done (took 161.712347646 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.364542026 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.365923402 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.365417759 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.366552855 seconds)
  done (took 26.743245724 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.406669253 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.406491718 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.408950526 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.416611953 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.410383989 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.407943215 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.398866268 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.399543226 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.417211294 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.410695047 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.409634497 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.409650557 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.407208258 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.400319724 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.410809067 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.409239635 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.419809932 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.408650343 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.400929534 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.410307753 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.376597783 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.417638614 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.411338739 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.376450342 seconds)
  done (took 35.033833357 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.895541664 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.444388306 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.527528075 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.425568655 seconds)
  done (took 7.576692231 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.426718983 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.427848185 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.440571102 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.477789581 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.504530575 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.437572432 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.401076674 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.395775301 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.383058584 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.428189171 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.504942882 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.444411388 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.51300875 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.374739371 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.563238352 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.375098413 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.376147599 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.427959429 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.478299535 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.492046835 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.376075056 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.427391904 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.429547021 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.445390983 seconds)
  done (took 35.835715888 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.376989438 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.394709656 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.374986147 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.375063404 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.383859494 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.375725082 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.377424617 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.375764972 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.37560817 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.382526117 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.375339299 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.390236264 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.376034499 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.377100664 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.38456614 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.377599865 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.382237014 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.377871843 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.375416973 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.383318326 seconds)
  done (took 28.876868175 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.36934172 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.223245308 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.7221139 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.625990537 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.370149059 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.371313868 seconds)
  done (took 27.96868448 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.452637922 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.620846359 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.384364475 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.77456337 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.878245586 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.40203898 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.377922966 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.640501876 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.998372068 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.98027974 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.446563403 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.450829964 seconds)
  done (took 20.694166552 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.373884836 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.378311987 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.383567585 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.396146613 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.4367189 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.401106966 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.383914859 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.370680579 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.444282547 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.459267931 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.399641982 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.43851947 seconds)
  done (took 38.153359198 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459740001 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420163929 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.427477145 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440970468 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099231293 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586222729 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.483570306 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.820885941 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.380030172 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647498292 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387799841 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470162509 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629300839 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379887228 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382535801 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.412331622 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619660832 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88134042 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376506929 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674381616 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406470023 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390079327 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.783646833 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.414482317 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586305864 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.516642352 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.635499302 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.15190017 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69600532 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393542128 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386404495 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375853254 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649974497 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081164454 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500809002 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386599433 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379427767 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.922212395 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.356551377 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.673681039 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385135869 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378251507 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386704273 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37629197 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309831476 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38228313 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828900509 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.382850746 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.08819664 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375933583 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388413143 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474076266 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.380899851 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.946602099 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459021617 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.402412631 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.375289044 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472275881 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97125622 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.140904969 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391916582 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.31897374 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375948561 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.597859256 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050161721 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.499963208 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.382226046 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382120988 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3120666 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.590782084 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401123372 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525547971 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.401330811 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027830851 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12268033 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401299459 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.31558219 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94351831 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38047958 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.338443785 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606407713 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.157339756 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313984534 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.324171903 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314485887 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108967603 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388197342 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.849018959 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408247859 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843847238 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.393713967 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39671057 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403663561 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603792009 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.257712037 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380040501 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.397161983 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511560922 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401169387 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.822019119 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322466212 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.38402908 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635835849 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.591927105 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385750596 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.428798648 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61206594 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394957961 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.40297543 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394986177 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.399133936 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.994306712 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412611987 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.146601548 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405497636 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.158655567 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157462619 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388306017 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.489360292 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.3829404 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653798227 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.16820289 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278617141 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450839019 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383890866 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381976359 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.707413748 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.981968737 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.2732943 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.378707728 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382958942 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.401361205 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.382232096 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331888001 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.386179586 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402475671 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.166525078 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606726865 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395103182 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666099106 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78164301 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530882981 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.392401844 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.604072765 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.639120406 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.399451775 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642680158 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382226397 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403104669 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40124797 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402021517 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485075882 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40477135 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.383198761 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645001527 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.38614187 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.388118339 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.705368821 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.16823804 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386114239 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.388457809 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383892051 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034266388 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37908235 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39232708 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272296422 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.397941982 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450991033 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388303982 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.394441113 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.355899558 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415826429 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.390167329 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.395576627 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615234339 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395240997 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.609640954 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469679908 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.593514376 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023870359 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417812994 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.318777428 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.096990035 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.07776315 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38593343 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.573212657 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385081045 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394016462 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395913002 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384174078 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.020765088 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404910366 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.590399629 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.397788271 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394763009 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.391337563 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385368651 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.339260365 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159154809 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394796072 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.422804363 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528482856 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.398749866 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319743929 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.903301964 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392665261 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385584467 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.163733782 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41948695 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.608184672 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88058635 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646784546 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385326818 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416329106 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.724046758 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.429798222 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.419989931 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395132938 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395714352 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.401346315 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422243791 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.398527966 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.715921268 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.757696039 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96491632 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144119853 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990405576 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375339444 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.392784285 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277060676 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.828546202 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322466091 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045360136 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590004139 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.850427557 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340992737 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602765632 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.658472781 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222651683 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399806672 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616895121 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355216333 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.392219075 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407558103 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601401324 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424401895 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397757809 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.326677009 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.668810605 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633825302 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391732107 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467082858 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833108748 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403928849 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173474745 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.412581154 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.793762124 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600981039 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.942622421 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.777739799 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403721196 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39651902 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900461552 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398661944 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.914626909 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044782928 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410090366 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.607437046 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337141567 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.402694289 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.402522513 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.386935154 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.827364435 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.398534753 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.645393602 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402346418 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325572416 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389852596 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966284791 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.263655564 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.396426344 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391724143 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156225277 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392944547 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748365336 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.403946069 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.3086886 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411812922 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325889217 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326490607 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.08552835 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394283593 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367077828 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925910233 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.419259805 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397134722 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40166641 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247126801 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64874303 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.407314429 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026706227 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633857043 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396886888 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434671489 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.493308932 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404599359 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.38113551 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.287538867 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629117332 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46262241 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637229543 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.443654629 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.300941022 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.437778805 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611574672 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.292505256 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409882478 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671753256 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.129591142 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.4051337 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132083143 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438223516 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403232217 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413646377 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397598529 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433488527 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485235728 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404504339 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.405046515 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.404309556 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580415262 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418226702 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404298001 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.408286485 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491819696 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.179013043 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.319169676 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.168281428 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033025703 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182166133 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.036425157 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427482943 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394504531 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395354477 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329500808 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547453369 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.920486627 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670800316 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52895079 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.395103735 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439069252 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399244969 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405163907 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63220773 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670533556 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366341031 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395094981 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18816901 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.279689689 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408077685 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.607088622 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941751663 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987688704 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514370281 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40294159 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.84795164 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679876752 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.48868082 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397544898 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987590039 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.413996827 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.813549364 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.431001687 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404751299 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553363151 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407438375 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112039742 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.437093617 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.558079964 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.172380723 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.744346181 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661950602 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.904850451 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.409828915 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035725423 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191122534 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669562775 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467590624 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41005261 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.502857447 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548879998 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.405324452 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.288404046 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398873837 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242427259 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.110511551 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.408866107 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031769508 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689784702 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.397678792 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.406671621 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430975625 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.409662318 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622986568 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155669105 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632854721 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410872759 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401977663 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.39096683 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031466475 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430899893 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335697405 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.405396677 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671367255 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656003279 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423858065 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.853334793 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.113605708 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992393966 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.377894193 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422745848 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400857948 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.189645079 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034647714 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.347766374 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956344395 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.066761671 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410992225 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682435912 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.407090124 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403649437 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686349514 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.405244822 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414070513 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42042464 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.039174928 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244592838 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.419900282 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.782541986 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.347788948 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.627611235 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475734041 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348532936 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411271077 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.594316797 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410910105 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532913736 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414024102 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.409040146 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4201137 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.167544572 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.757966867 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408963474 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.387830937 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.407482325 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421917696 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506453881 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649742437 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410437027 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.079031259 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.752676262 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659896934 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418460211 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.39070398 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.408210407 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403236611 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121949713 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414572988 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408265848 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012179133 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.421513625 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.423311734 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408105698 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.621104966 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615817451 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414293952 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425591611 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409176838 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427636608 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.304395605 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.170508915 seconds)
  done (took 1677.330185326 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.444152493 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.423981532 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.439539947 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.453478251 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.416240798 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.435881251 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.477349923 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.443568482 seconds)
  done (took 52.850556701 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.407908969 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.572318333 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.437831928 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.406658675 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.421959772 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.413330918 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.904793814 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.441201832 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.413953396 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.413797764 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.411653072 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.416761477 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.101604635 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.415722744 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.405552373 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.407279897 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.415652891 seconds)
  done (took 66.732364418 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.420537903 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.727724922 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.521108962 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.410797567 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.946084625 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.42510948 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.776725203 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.438190718 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.414765364 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.677954008 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.082900676 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.444724371 seconds)
  done (took 81.60426939 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.422803697 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.423886914 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.424824253 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.425680793 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.424855099 seconds)
  done (took 8.440726018 seconds)
done (took 2109.125314543 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.416467551 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.176089078 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.106104976 seconds)
  done (took 5.601521284 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.552850685 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.601242753 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.720463211 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.741483597 seconds)
  done (took 7.935559366 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.687694939 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.789544531 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.599967578 seconds)
  done (took 6.393945808 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.710153126 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.416177583 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.434812785 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.402467629 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.411789331 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.415817374 seconds)
  done (took 20.54859887 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.411364059 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.412678333 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.409466053 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.413111243 seconds)
  done (took 6.966293166 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.386261323 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.101531822 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.396001877 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.409644159 seconds)
  done (took 18.611956925 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.159190084 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.167551248 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.155543573 seconds)
  done (took 7.80026063 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.440513931 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.432801705 seconds)
  done (took 4.191162873 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.713346006 seconds)
  done (took 3.03112547 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.424722208 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.464037873 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.510195991 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.444578658 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.001718476 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.163999889 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.18605044 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.728563454 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.45066777 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.818430098 seconds)
  done (took 32.512835286 seconds)
done (took 130.889253827 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.480604169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.64954712 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.612497915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.446837291 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.639610402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.609961544 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.627523027 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.417385801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.953543922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.946851135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.447502584 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.63940399 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.573965722 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.655513034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.573213851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.655905087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.695424816 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.508987973 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.135791816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.330826553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.629926638 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.085950847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.283150238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.10030111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.642783002 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.561226013 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.68146942 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.655984191 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.309125704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.691919502 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.561337003 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.412205306 seconds)
  done (took 200.537358569 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.408833323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.416030475 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.411497273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.409811864 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.408945655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.409698713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.408500651 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.409420209 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.40870357 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.426434499 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.408886138 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.427301213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.40928315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.410168256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411647005 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.412354163 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.4151093 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.410549377 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.428571423 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414248675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.409076717 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.414522521 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.410181662 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.414079957 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.421494057 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.410340683 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.429261192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.409279344 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.41000178 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.410120958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.411100623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.432438282 seconds)
  done (took 206.569664209 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.411307245 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.412289215 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.428740523 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.42877081 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.418992222 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.411443232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.436324959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.422119323 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410602544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.410816524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.410600084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.414192709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.412173487 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.44344155 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.413320892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.430405176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.438658734 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.421486623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.412250315 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.41825002 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412222148 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.445117089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.411306744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412992229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.435244876 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.41931423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.411963028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412810412 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.412308614 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.435167763 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.414238398 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.433142327 seconds)
  done (took 206.786799686 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.606365608 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.420132051 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.422237196 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.355195319 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.421615414 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.421009143 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.413880672 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.618033462 seconds)
  done (took 15.002727664 seconds)
done (took 630.214935623 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.805882745 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.512198747 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.629668475 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.441342205 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.245804444 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.460108507 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.442178966 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.618179893 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.360801366 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.630038872 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.712750191 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.456821916 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.860734688 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.439234431 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.704498345 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.542462669 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.336180941 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.456880933 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.771337245 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.011772716 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.715203728 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.942935699 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.642710736 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.35602067 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.874067581 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.938996626 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.194846063 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.321351157 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.459380632 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.777261462 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.145414258 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.511932396 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.516597662 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.513985919 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.571312799 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.552685645 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.477332648 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.514557902 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.655914896 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.707586997 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.041719403 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.179774245 seconds)
  done (took 96.377565856 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.406697423 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.40612882 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.405095923 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.405890094 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.407012199 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.407092099 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.40636699 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.404250376 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.405370912 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.406409498 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.405201858 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.406866478 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.405594115 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.407158477 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.405874239 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.405603344 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.405757668 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.409502687 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.406953791 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.406031689 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.406795789 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.406269889 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.406653043 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.40704101 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.407757585 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.408197249 seconds)
  done (took 37.89657609 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.425981246 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.682248505 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.86901298 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439579147 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.425938366 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.430149252 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.510178161 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.430610452 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.429788728 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.428476716 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.587070281 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.432220043 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.463558079 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.885548742 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.429620192 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.425601749 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.426253951 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.427180964 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.691521004 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436484312 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.533125098 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.434398524 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.511839902 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.436926417 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.448271673 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42723532 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.432776319 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.019827695 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449056522 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.587581905 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.296398773 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.515832797 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.95224751 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.893582521 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.305645406 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.438466341 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.427363435 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.592008904 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.430170979 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.427892965 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.510808796 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.428686865 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.877884206 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.125301642 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.455973106 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.428506104 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.039221957 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.61236138 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.698823735 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.444670672 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.896485091 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.431591873 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.432198232 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.42955671 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.697869474 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.444047147 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.429275875 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.047213488 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.457319073 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.512671415 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.430560144 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427847885 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.703035121 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.429866137 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.688229465 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.430830468 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.438346041 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.450541176 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.88019937 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.440317957 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.146073611 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.457744991 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.432175915 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.596523447 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.694190056 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.076434332 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.455677735 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.706272285 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.970077078 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.531726389 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.437645307 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.008826843 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.535623739 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437264699 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.434684608 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.435581706 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.433936513 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.477125897 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.513622404 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.080496493 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.165483109 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.084461842 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.537049176 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.444668142 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.431652971 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.051419947 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.454868108 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.43383276 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.867676077 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.141146372 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.452961368 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.441007891 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.143520696 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.454911707 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.517273953 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.439498477 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.88159034 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.434633647 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.480146106 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.433747595 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.440327617 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.457807981 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.51822506 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.436736537 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.434877372 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.108110602 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.619696105 seconds)
  done (took 189.059666813 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.42894431 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.44683237 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.429129926 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.42727388 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.427677839 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.435226669 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.426545055 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.427032057 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.433158472 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.427627199 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.427943769 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.428328258 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.428540893 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.43558752 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.460949154 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.43395553 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.043677886 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.428800161 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.439458944 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.428633662 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.244530835 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.435287519 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.428065444 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.427958877 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.430009526 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.429803284 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.435278981 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.43090331 seconds)
  done (took 154.865448841 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.436667632 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.073665463 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.464167205 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.579311934 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.459055552 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.4347578 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.575541326 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.4995113 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.459161826 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.434848544 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.434375381 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.760610376 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.438611015 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.992097657 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.64651611 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.601261183 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.989437675 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.45625525 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.435560475 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.435261794 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.580479767 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.441830045 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.762121783 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.068054294 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.465487891 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.073175562 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.430767803 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.438141718 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.436197233 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.071289589 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.462577562 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.764575675 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.519774813 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.502133489 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.072492509 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.010574434 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.01113133 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.597709228 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.437934206 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.435582747 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.436594487 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.42172653 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.04630435 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.459073391 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.43859353 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.036049345 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.459971057 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.4388467 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.444762504 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.437175744 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.502164272 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.532460954 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.7924619 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.052957305 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.539164154 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.450427736 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.581277461 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.80648626 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.442487711 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.0085127 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.429833714 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.076646797 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.468162591 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.42306591 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.440467202 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.445354701 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.601320497 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.581747634 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.994536268 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.458430727 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.995459822 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.621135002 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.439545467 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.439526049 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.442715706 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.073758943 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.02359107 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.619377538 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.5861461 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.654942426 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.433419202 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.4391232 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.425162815 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.522963018 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.439365538 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.083564059 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.024107825 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.461160114 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.442095118 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.443230991 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.44250103 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.633196257 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.106486194 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.551262491 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.986169173 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.803238815 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.79116585 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.452104205 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.506921767 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.469027127 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.78484036 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.45336165 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.503597799 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.880424555 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.788320103 seconds)
  done (took 172.542648818 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.699642966 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.737704254 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.537012189 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.606454052 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.090952127 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.024876998 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.767252303 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.602557478 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.558446401 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.71745175 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.717034675 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.539468293 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.664559286 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.536727556 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.192299811 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.533653909 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.562371309 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.60300104 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.608207806 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.498958291 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.160900952 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.746237515 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.639545423 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.43951061 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.54712483 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.251503439 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.024880465 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.983229941 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.621759077 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.909581662 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.000879849 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.621728088 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.498969565 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.186356796 seconds)
  done (took 69.778469501 seconds)
done (took 721.845934705 seconds)
SAVING RESULT...
DONE!
